{"version":3,"file":"static/js/content.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","shared/Response.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/@aws-amplify/core/src/Logger/ConsoleLogger.ts","Tools/Detector.js","../node_modules/@aws-amplify/core/src/Util/Constants.ts","Config/aws-exports.js","Tools/Tools.js","shared/Request.js","../node_modules/uuid/dist/esm-browser/rng.js","shared/Messages.js","Content/URLHelper.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js","Content/Comm.js","Content/AuthHelper.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","Content/RulesEngine/Errors.js","Content/RulesEngine/DomTools.js","Content/RulesEngine/Step.js","Content/RulesEngine/Consent.js","Content/RulesEngine/CookieItem.js","Content/RulesEngine/Action.js","Content/RulesEngine/RulesEngine.js","Content/RunStatus.js","Content/Run.js","Content/Notifications.js","../node_modules/@aws-amplify/auth/src/types/Auth.ts","views/Shared/ExpirationDates.js","views/Shared/Functions/isEligible.js","Background/BackgroundTools/Theme.js","shared/BrowserHelper.js","../node_modules/@aws-amplify/core/src/Hub.ts","../node_modules/@aws-amplify/core/src/StorageHelper/index.ts","../node_modules/@aws-amplify/core/src/JS.ts","../node_modules/@aws-amplify/core/src/Util/Retry.ts","../node_modules/@aws-amplify/core/src/OAuthHelper/GoogleOAuth.ts","../node_modules/@aws-amplify/core/src/OAuthHelper/FacebookOAuth.ts","../node_modules/@aws-amplify/core/src/OAuthHelper/index.ts","../node_modules/@aws-amplify/core/src/Platform/index.ts","../node_modules/@aws-amplify/core/src/Amplify.ts","../node_modules/@aws-sdk/client-cognito-identity/node_modules/tslib/tslib.es6.js","../node_modules/@aws-sdk/client-cognito-identity/models/models_0.ts","../node_modules/@aws-sdk/protocol-http/src/httpResponse.ts","../node_modules/@aws-sdk/protocol-http/src/httpRequest.ts","../node_modules/@aws-sdk/client-cognito-identity/protocols/Aws_json1_1.ts","../node_modules/@aws-sdk/middleware-serde/src/serdePlugin.ts","../node_modules/@aws-sdk/middleware-serde/src/deserializerMiddleware.ts","../node_modules/@aws-sdk/middleware-serde/src/serializerMiddleware.ts","../node_modules/@aws-sdk/middleware-stack/src/MiddlewareStack.ts","../node_modules/@aws-sdk/smithy-client/src/client.ts","../node_modules/@aws-sdk/smithy-client/src/command.ts","../node_modules/@aws-sdk/smithy-client/src/extended-encode-uri-component.ts","../node_modules/@aws-sdk/smithy-client/src/lazy-json.ts","../node_modules/@aws-sdk/client-cognito-identity/commands/GetCredentialsForIdentityCommand.ts","../node_modules/@aws-sdk/property-provider/src/ProviderError.ts","../node_modules/@aws-sdk/credential-provider-cognito-identity/src/resolveLogins.ts","../node_modules/@aws-sdk/credential-provider-cognito-identity/src/fromCognitoIdentity.ts","../node_modules/@aws-sdk/client-cognito-identity/commands/GetIdCommand.ts","../node_modules/@aws-sdk/credential-provider-cognito-identity/src/IndexedDbStorage.ts","../node_modules/@aws-sdk/credential-provider-cognito-identity/src/InMemoryStorage.ts","../node_modules/@aws-sdk/credential-provider-cognito-identity/src/localStorage.ts","../node_modules/@aws-sdk/credential-provider-cognito-identity/src/fromCognitoIdentityPool.ts","../node_modules/@aws-sdk/util-uri-escape/src/escape-uri.ts","../node_modules/@aws-sdk/util-base64-browser/src/index.ts","../node_modules/@aws-sdk/fetch-http-handler/src/fetch-http-handler.ts","../node_modules/@aws-sdk/querystring-builder/src/index.ts","../node_modules/@aws-sdk/fetch-http-handler/src/request-timeout.ts","../node_modules/@aws-sdk/fetch-http-handler/src/stream-collector.ts","../node_modules/@aws-sdk/invalid-dependency/src/invalidProvider.ts","../node_modules/@aws-sdk/middleware-retry/src/retryMiddleware.ts","../node_modules/@aws-sdk/service-error-classification/src/constants.ts","../node_modules/@aws-sdk/service-error-classification/src/index.ts","../node_modules/@aws-sdk/middleware-retry/src/delayDecider.ts","../node_modules/@aws-sdk/middleware-retry/src/constants.ts","../node_modules/@aws-sdk/middleware-retry/src/retryDecider.ts","../node_modules/@aws-sdk/middleware-retry/src/defaultStrategy.ts","../node_modules/@aws-sdk/middleware-retry/src/defaultRetryQuota.ts","../node_modules/@aws-sdk/middleware-retry/src/configurations.ts","../node_modules/@aws-sdk/util-body-length-browser/src/index.ts","../node_modules/@aws-sdk/util-user-agent-browser/src/index.ts","../node_modules/@aws-sdk/client-cognito-identity/endpoints.ts","../node_modules/@aws-sdk/url-parser/src/index.ts","../node_modules/@aws-sdk/querystring-parser/src/index.ts","../node_modules/@aws-sdk/client-cognito-identity/runtimeConfig.shared.ts","../node_modules/@aws-sdk/client-cognito-identity/runtimeConfig.browser.ts","../node_modules/@aws-sdk/config-resolver/src/EndpointsConfig.ts","../node_modules/@aws-sdk/config-resolver/src/RegionConfig.ts","../node_modules/@aws-sdk/middleware-content-length/src/index.ts","../node_modules/@aws-sdk/util-hex-encoding/src/index.ts","../node_modules/@aws-sdk/middleware-host-header/src/index.ts","../node_modules/@aws-sdk/middleware-logger/src/loggerMiddleware.ts","../node_modules/@aws-sdk/signature-v4/src/constants.ts","../node_modules/@aws-sdk/signature-v4/src/credentialDerivation.ts","../node_modules/@aws-sdk/signature-v4/src/getCanonicalHeaders.ts","../node_modules/@aws-sdk/signature-v4/src/getPayloadHash.ts","../node_modules/@aws-sdk/is-array-buffer/src/index.ts","../node_modules/@aws-sdk/signature-v4/src/cloneRequest.ts","../node_modules/@aws-sdk/signature-v4/src/prepareRequest.ts","../node_modules/@aws-sdk/signature-v4/src/utilDate.ts","../node_modules/@aws-sdk/signature-v4/src/SignatureV4.ts","../node_modules/@aws-sdk/signature-v4/src/moveHeadersToQuery.ts","../node_modules/@aws-sdk/signature-v4/src/hasHeader.ts","../node_modules/@aws-sdk/signature-v4/src/getCanonicalQuery.ts","../node_modules/@aws-sdk/middleware-signing/src/configurations.ts","../node_modules/@aws-sdk/middleware-signing/src/middleware.ts","../node_modules/@aws-sdk/middleware-user-agent/src/configurations.ts","../node_modules/@aws-sdk/middleware-user-agent/src/constants.ts","../node_modules/@aws-sdk/middleware-user-agent/src/user-agent-middleware.ts","../node_modules/@aws-sdk/client-cognito-identity/CognitoIdentityClient.ts","../node_modules/@aws-amplify/core/src/Credentials.ts","../node_modules/@aws-amplify/core/src/Parser.ts","../node_modules/universal-cookie/es6/utils.js","../node_modules/universal-cookie/es6/Cookies.js","../node_modules/universal-cookie/es6/index.js","../node_modules/@aws-amplify/core/src/UniversalStorage/index.ts","../node_modules/@aws-amplify/auth/node_modules/amazon-cognito-identity-js/es/AuthenticationDetails.js","../node_modules/@aws-amplify/auth/node_modules/amazon-cognito-identity-js/es/utils/cryptoSecureRandomInt.web.js","../node_modules/@aws-amplify/auth/node_modules/amazon-cognito-identity-js/es/utils/WordArray.js","../node_modules/@aws-amplify/auth/node_modules/amazon-cognito-identity-js/es/BigInteger.js","../node_modules/@aws-amplify/auth/node_modules/amazon-cognito-identity-js/es/AuthenticationHelper.js","../node_modules/@aws-amplify/auth/node_modules/amazon-cognito-identity-js/es/CognitoJwtToken.js","../node_modules/@aws-amplify/auth/node_modules/amazon-cognito-identity-js/es/CognitoAccessToken.js","../node_modules/@aws-amplify/auth/node_modules/amazon-cognito-identity-js/es/CognitoIdToken.js","../node_modules/@aws-amplify/auth/node_modules/amazon-cognito-identity-js/es/CognitoRefreshToken.js","../node_modules/@aws-amplify/auth/node_modules/amazon-cognito-identity-js/es/CognitoUserSession.js","../node_modules/@aws-amplify/auth/node_modules/amazon-cognito-identity-js/es/DateHelper.js","../node_modules/@aws-amplify/auth/node_modules/amazon-cognito-identity-js/es/CognitoUserAttribute.js","../node_modules/@aws-amplify/auth/node_modules/amazon-cognito-identity-js/es/StorageHelper.js","../node_modules/@aws-amplify/auth/node_modules/amazon-cognito-identity-js/es/CognitoUser.js","../node_modules/@aws-amplify/auth/node_modules/amazon-cognito-identity-js/es/Platform/index.js","../node_modules/@aws-amplify/auth/node_modules/amazon-cognito-identity-js/es/UserAgent.js","../node_modules/@aws-amplify/auth/node_modules/amazon-cognito-identity-js/es/Client.js","../node_modules/@aws-amplify/auth/node_modules/amazon-cognito-identity-js/es/CognitoUserPool.js","../node_modules/@aws-amplify/auth/src/common/AuthErrorStrings.ts","../node_modules/@aws-amplify/auth/node_modules/amazon-cognito-identity-js/es/CookieStorage.js","../node_modules/@aws-amplify/auth/src/OAuth/urlOpener.ts","../node_modules/@aws-amplify/auth/src/OAuth/OAuth.ts","../node_modules/@aws-amplify/core/src/Util/StringUtils.ts","../node_modules/@aws-amplify/auth/src/OAuth/oauthStorage.ts","../node_modules/@aws-amplify/auth/src/Errors.ts","../node_modules/@aws-amplify/auth/src/Auth.ts","../node_modules/@aws-amplify/auth/src/urlListener.ts","../node_modules/@aws-amplify/cache/src/Utils/CacheUtils.ts","../node_modules/@aws-amplify/cache/src/StorageCache.ts","../node_modules/@aws-amplify/cache/src/BrowserStorageCache.ts","../node_modules/@aws-amplify/cache/src/index.ts","../node_modules/@aws-amplify/core/src/Util/DateUtils.ts","../node_modules/@aws-amplify/core/src/Signer.ts","../node_modules/@aws-amplify/api-rest/src/RestClient.ts","../node_modules/@aws-amplify/api-rest/src/RestAPI.ts","../node_modules/graphql/jsutils/isObjectLike.mjs","../node_modules/graphql/polyfills/symbols.mjs","../node_modules/graphql/language/location.mjs","../node_modules/graphql/language/printLocation.mjs","../node_modules/graphql/error/GraphQLError.mjs","../node_modules/graphql/error/syntaxError.mjs","../node_modules/graphql/language/kinds.mjs","../node_modules/graphql/jsutils/nodejsCustomInspectSymbol.mjs","../node_modules/graphql/jsutils/defineInspect.mjs","../node_modules/graphql/jsutils/invariant.mjs","../node_modules/graphql/language/ast.mjs","../node_modules/graphql/language/tokenKind.mjs","../node_modules/graphql/jsutils/inspect.mjs","../node_modules/graphql/jsutils/devAssert.mjs","../node_modules/graphql/jsutils/instanceOf.mjs","../node_modules/graphql/language/source.mjs","../node_modules/graphql/language/directiveLocation.mjs","../node_modules/graphql/language/blockString.mjs","../node_modules/graphql/language/lexer.mjs","../node_modules/graphql/language/parser.mjs","../node_modules/graphql/language/visitor.mjs","../node_modules/graphql/language/printer.mjs","../node_modules/@aws-amplify/core/src/I18n/I18n.ts","../node_modules/@aws-amplify/core/src/I18n/index.ts","../node_modules/@aws-amplify/core/src/index.ts","../node_modules/@aws-amplify/core/src/constants.ts","../node_modules/zen-observable-ts/src/zenObservable.ts","../node_modules/@aws-amplify/pubsub/src/Providers/PubSubProvider.ts","../node_modules/@aws-amplify/pubsub/src/Providers/MqttOverWSProvider.ts","../node_modules/@aws-amplify/pubsub/src/Providers/AWSAppSyncRealTimeProvider.ts","../node_modules/@aws-amplify/pubsub/src/Providers/AWSAppSyncProvider.ts","../node_modules/@aws-amplify/auth/src/index.ts","../node_modules/@aws-amplify/pubsub/src/index.ts","../node_modules/@aws-amplify/pubsub/src/PubSub.ts","../node_modules/@aws-amplify/api-graphql/src/types/index.ts","../node_modules/@aws-amplify/api-graphql/src/GraphQLAPI.ts","../node_modules/@aws-amplify/api/src/API.ts","Background/BackgroundTools/BrowserStorage.js","Background/BackgroundTools/StorageKeys.js","Background/graphql/queries.js","shared/NativeMessaging.js","../node_modules/jwt-decode/lib/atob.js","../node_modules/jwt-decode/lib/base64_url_decode.js","../node_modules/jwt-decode/lib/index.js","../node_modules/amazon-cognito-identity-js/es/utils/cryptoSecureRandomInt.web.js","../node_modules/amazon-cognito-identity-js/es/utils/WordArray.js","../node_modules/amazon-cognito-identity-js/es/BigInteger.js","../node_modules/amazon-cognito-identity-js/es/AuthenticationHelper.js","../node_modules/amazon-cognito-identity-js/es/CognitoJwtToken.js","../node_modules/amazon-cognito-identity-js/es/CognitoAccessToken.js","../node_modules/amazon-cognito-identity-js/es/CognitoIdToken.js","../node_modules/amazon-cognito-identity-js/es/CognitoRefreshToken.js","../node_modules/amazon-cognito-identity-js/es/CognitoUserSession.js","../node_modules/amazon-cognito-identity-js/es/DateHelper.js","../node_modules/amazon-cognito-identity-js/es/CognitoUserAttribute.js","../node_modules/amazon-cognito-identity-js/es/StorageHelper.js","../node_modules/amazon-cognito-identity-js/es/CognitoUser.js","../node_modules/amazon-cognito-identity-js/es/UserAgent.js","../node_modules/amazon-cognito-identity-js/es/Client.js","../node_modules/amazon-cognito-identity-js/es/CognitoUserPool.js","Tools/TokenStorage.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","Tools/Crypto.js","../node_modules/@babel/runtime/helpers/esm/objectSpread.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/i18next/dist/esm/i18next.js","views/Shared/DateFormat.js","Background/Logger/LoggerMessage.js","Background/Logger/Logger.js","Background/KeyManager/KMMessage.js","Background/KeyManager/KeyManager.js","../node_modules/react-i18next/dist/es/context.js","../node_modules/i18next-browser-languagedetector/dist/esm/i18nextBrowserLanguageDetector.js","i18n.js","Background/Whitelist/WhitelistMessages.js","Background/Whitelist/Whitelist.js","Background/Entitlement/EntitlementMessage.js","Background/Entitlement/Constants.js","Background/Auth/AuthMessage.js","Background/Entitlement/Entitlement.js","Background/SARefreshable/SARefreshable.js","Config/aws-exports-devtest.js","shared/OpenAccountPage.js","Background/Auth/SAAuth.js","Background/UserPreferences/UPMessage.js","../node_modules/@aws-amplify/core/src/ClientDevice/browser.ts","../node_modules/@aws-amplify/core/src/ClientDevice/index.ts","../node_modules/@aws-sdk/client-pinpoint/node_modules/tslib/tslib.es6.js","../node_modules/@aws-sdk/client-pinpoint/models/models_1.ts","../node_modules/@aws-sdk/client-pinpoint/protocols/Aws_restJson1.ts","../node_modules/@aws-sdk/client-pinpoint/commands/PutEventsCommand.ts","../node_modules/@aws-sdk/client-pinpoint/commands/UpdateEndpointCommand.ts","../node_modules/@aws-sdk/client-pinpoint/endpoints.ts","../node_modules/@aws-sdk/client-pinpoint/runtimeConfig.shared.ts","../node_modules/@aws-sdk/client-pinpoint/runtimeConfig.browser.ts","../node_modules/@aws-sdk/client-pinpoint/PinpointClient.ts","../node_modules/@aws-amplify/analytics/src/Providers/EventBuffer.ts","../node_modules/@aws-amplify/analytics/src/Providers/AWSPinpointProvider.ts","../node_modules/@aws-amplify/analytics/src/utils/MethodEmbed.ts","../node_modules/@aws-amplify/analytics/src/trackers/PageViewTracker.ts","../node_modules/@aws-amplify/analytics/src/vendor/dom-utils/matches.ts","../node_modules/@aws-amplify/analytics/src/vendor/dom-utils/delegate.ts","../node_modules/@aws-amplify/analytics/src/vendor/dom-utils/closest.ts","../node_modules/@aws-amplify/analytics/src/vendor/dom-utils/parents.ts","../node_modules/@aws-amplify/analytics/src/trackers/EventTracker.ts","../node_modules/@aws-amplify/analytics/src/trackers/SessionTracker.ts","../node_modules/@aws-amplify/analytics/src/Analytics.ts","Config/amplitude-config.js","Tools/AsyncLock.js","Tools/StorageLock.js","Background/Analytics/SAAnalytics.js","Background/UserPreferences/UserPreferences.js","Background/graphql/mutations.js","Background/BackgroundTools/BackgroundTools.js","Content/Dom/DomMessage.js","Content/content.js","../node_modules/@aws-amplify/analytics/node_modules/uuid/index.js","../node_modules/@aws-amplify/analytics/node_modules/uuid/lib/bytesToUuid.js","../node_modules/@aws-amplify/analytics/node_modules/uuid/lib/rng-browser.js","../node_modules/@aws-amplify/analytics/node_modules/uuid/v1.js","../node_modules/@aws-amplify/analytics/node_modules/uuid/v4.js","../node_modules/@aws-amplify/auth/node_modules/crypto-js/core.js","../node_modules/@aws-amplify/auth/node_modules/crypto-js/enc-base64.js","../node_modules/@aws-amplify/auth/node_modules/crypto-js/hmac-sha256.js","../node_modules/@aws-amplify/auth/node_modules/crypto-js/hmac.js","../node_modules/@aws-amplify/auth/node_modules/crypto-js/lib-typedarrays.js","../node_modules/@aws-amplify/auth/node_modules/crypto-js/sha256.js","../node_modules/@aws-amplify/pubsub/node_modules/uuid/index.js","../node_modules/@aws-amplify/pubsub/node_modules/uuid/lib/bytesToUuid.js","../node_modules/@aws-amplify/pubsub/node_modules/uuid/lib/rng-browser.js","../node_modules/@aws-amplify/pubsub/node_modules/uuid/v1.js","../node_modules/@aws-amplify/pubsub/node_modules/uuid/v4.js","../node_modules/@aws-crypto/ie11-detection/src/MsWindow.ts","../node_modules/@aws-crypto/ie11-detection/src/index.ts","../node_modules/@aws-crypto/sha256-browser/src/constants.ts","../node_modules/@aws-crypto/sha256-browser/src/crossPlatformSha256.ts","../node_modules/@aws-crypto/sha256-browser/src/ie11Sha256.ts","../node_modules/@aws-crypto/sha256-browser/src/index.ts","../node_modules/@aws-crypto/sha256-browser/src/isEmptyData.ts","../node_modules/@aws-crypto/sha256-browser/src/webCryptoSha256.ts","../node_modules/@aws-crypto/sha256-browser/node_modules/@aws-crypto/sha256-js/src/RawSha256.ts","../node_modules/@aws-crypto/sha256-browser/node_modules/@aws-crypto/sha256-js/src/constants.ts","../node_modules/@aws-crypto/sha256-browser/node_modules/@aws-crypto/sha256-js/src/index.ts","../node_modules/@aws-crypto/sha256-browser/node_modules/@aws-crypto/sha256-js/src/jsSha256.ts","../node_modules/@aws-crypto/sha256-js/src/RawSha256.ts","../node_modules/@aws-crypto/sha256-js/src/constants.ts","../node_modules/@aws-crypto/sha256-js/src/index.ts","../node_modules/@aws-crypto/sha256-js/src/jsSha256.ts","../node_modules/@aws-crypto/sha256-js/node_modules/@aws-sdk/util-utf8-browser/src/index.ts","../node_modules/@aws-crypto/sha256-js/node_modules/@aws-sdk/util-utf8-browser/src/whatwgEncodingApi.ts","../node_modules/@aws-crypto/sha256-js/node_modules/@aws-sdk/util-utf8-browser/src/pureJs.ts","../node_modules/@aws-crypto/supports-web-crypto/src/index.ts","../node_modules/@aws-crypto/supports-web-crypto/src/supportsWebCrypto.ts","../node_modules/@aws-crypto/util/src/convertToBuffer.ts","../node_modules/@aws-crypto/util/src/index.ts","../node_modules/@aws-crypto/util/src/isEmptyData.ts","../node_modules/@aws-crypto/util/src/numToUint8.ts","../node_modules/@aws-crypto/util/src/uint32ArrayFrom.ts","../node_modules/@aws-sdk/middleware-retry/node_modules/uuid/index.js","../node_modules/@aws-sdk/middleware-retry/node_modules/uuid/lib/bytesToUuid.js","../node_modules/@aws-sdk/middleware-retry/node_modules/uuid/lib/rng-browser.js","../node_modules/@aws-sdk/middleware-retry/node_modules/uuid/v1.js","../node_modules/@aws-sdk/middleware-retry/node_modules/uuid/v4.js","../node_modules/@aws-sdk/util-locate-window/dist-es/index.js","../node_modules/@aws-sdk/util-utf8-browser/src/index.ts","../node_modules/@aws-sdk/util-utf8-browser/src/whatwgEncodingApi.ts","../node_modules/@aws-sdk/util-utf8-browser/src/pureJs.ts","../node_modules/axios/index.js","../node_modules/axios/lib/adapters/xhr.js","../node_modules/axios/lib/axios.js","../node_modules/axios/lib/cancel/Cancel.js","../node_modules/axios/lib/cancel/CancelToken.js","../node_modules/axios/lib/cancel/isCancel.js","../node_modules/axios/lib/core/Axios.js","../node_modules/axios/lib/core/InterceptorManager.js","../node_modules/axios/lib/core/buildFullPath.js","../node_modules/axios/lib/core/createError.js","../node_modules/axios/lib/core/dispatchRequest.js","../node_modules/axios/lib/core/enhanceError.js","../node_modules/axios/lib/core/mergeConfig.js","../node_modules/axios/lib/core/settle.js","../node_modules/axios/lib/core/transformData.js","../node_modules/axios/lib/defaults.js","../node_modules/axios/lib/helpers/bind.js","../node_modules/axios/lib/helpers/buildURL.js","../node_modules/axios/lib/helpers/combineURLs.js","../node_modules/axios/lib/helpers/cookies.js","../node_modules/axios/lib/helpers/isAbsoluteURL.js","../node_modules/axios/lib/helpers/isAxiosError.js","../node_modules/axios/lib/helpers/isURLSameOrigin.js","../node_modules/axios/lib/helpers/normalizeHeaderName.js","../node_modules/axios/lib/helpers/parseHeaders.js","../node_modules/axios/lib/helpers/spread.js","../node_modules/axios/lib/helpers/validator.js","../node_modules/axios/lib/utils.js","../node_modules/base64-arraybuffer/lib/base64-arraybuffer.js","../node_modules/base64-js/index.js","../node_modules/bowser/es5.js","../node_modules/buffer/index.js","../node_modules/cookie/index.js","../node_modules/crypto-js/core.js","../node_modules/crypto-js/enc-base64.js","../node_modules/crypto-js/hmac-sha256.js","../node_modules/crypto-js/hmac.js","../node_modules/crypto-js/lib-typedarrays.js","../node_modules/crypto-js/sha256.js","../node_modules/ieee754/index.js","../node_modules/isarray/index.js","../node_modules/isomorphic-unfetch/browser.js","../node_modules/js-cookie/src/js.cookie.js","../node_modules/object-assign/index.js","../node_modules/paho-mqtt/paho-mqtt.js","../node_modules/querystring/decode.js","../node_modules/querystring/encode.js","../node_modules/querystring/index.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react/index.js","../node_modules/tldjs/index.js","../node_modules/tldjs/lib/clean-host.js","../node_modules/tldjs/lib/domain.js","../node_modules/tldjs/lib/from-host.js","../node_modules/tldjs/lib/is-ip.js","../node_modules/tldjs/lib/is-valid.js","../node_modules/tldjs/lib/public-suffix.js","../node_modules/tldjs/lib/subdomain.js","../node_modules/tldjs/lib/suffix-trie.js","../node_modules/tldjs/lib/tld-exists.js","../node_modules/tslib/tslib.es6.js","../node_modules/ua-parser-js/src/ua-parser.js","../node_modules/unfetch/src/index.mjs","../node_modules/url/node_modules/punycode/punycode.js","../node_modules/url/url.js","../node_modules/url/util.js","../node_modules/zen-observable/index.js","../node_modules/zen-observable/lib/Observable.js","../node_modules/@babel/runtime/helpers/regeneratorRuntime.js","../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/@babel/runtime/regenerator/index.js","../webpack/bootstrap","../webpack/runtime/compat get default export","../webpack/runtime/define property getters","../webpack/runtime/global","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/make namespace object","../webpack/runtime/node module decorator","../webpack/startup"],"sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","export default function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export const ResponseValues = {\n    Success: \"OK\",\n    Error: \"ERROR\"\n};  \n\nexport class Response {\n    constructor(status, payload) {\n        this.message = {\n            status,\n            payload\n        }\n    }\n\n    isOk() {\n        return this.message.status === ResponseValues.Success;\n    }\n\n    isError() {\n        return this.message.status === ResponseValues.Error;\n    }\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nimport { InputLogEvent } from '@aws-sdk/client-cloudwatch-logs';\nimport { LoggingProvider } from '../types';\nimport { AWS_CLOUDWATCH_CATEGORY } from '../Util/Constants';\nimport { Logger } from './logger-interface';\n\nconst LOG_LEVELS = {\n\tVERBOSE: 1,\n\tDEBUG: 2,\n\tINFO: 3,\n\tWARN: 4,\n\tERROR: 5,\n};\n\nexport enum LOG_TYPE {\n\tDEBUG = 'DEBUG',\n\tERROR = 'ERROR',\n\tINFO = 'INFO',\n\tWARN = 'WARN',\n\tVERBOSE = 'VERBOSE',\n}\n\n/**\n * Write logs\n * @class Logger\n */\nexport class ConsoleLogger implements Logger {\n\tname: string;\n\tlevel: LOG_TYPE | string;\n\tprivate _pluggables: LoggingProvider[];\n\tprivate _config: object;\n\n\t/**\n\t * @constructor\n\t * @param {string} name - Name of the logger\n\t */\n\tconstructor(name: string, level: LOG_TYPE | string = LOG_TYPE.WARN) {\n\t\tthis.name = name;\n\t\tthis.level = level;\n\t\tthis._pluggables = [];\n\t}\n\n\tstatic LOG_LEVEL = null;\n\n\t_padding(n) {\n\t\treturn n < 10 ? '0' + n : '' + n;\n\t}\n\n\t_ts() {\n\t\tconst dt = new Date();\n\t\treturn (\n\t\t\t[this._padding(dt.getMinutes()), this._padding(dt.getSeconds())].join(\n\t\t\t\t':'\n\t\t\t) +\n\t\t\t'.' +\n\t\t\tdt.getMilliseconds()\n\t\t);\n\t}\n\n\tconfigure(config?: object) {\n\t\tif (!config) return this._config;\n\n\t\tthis._config = config;\n\n\t\treturn this._config;\n\t}\n\n\t/**\n\t * Write log\n\t * @method\n\t * @memeberof Logger\n\t * @param {LOG_TYPE|string} type - log type, default INFO\n\t * @param {string|object} msg - Logging message or object\n\t */\n\t_log(type: LOG_TYPE | string, ...msg) {\n\t\tlet logger_level_name = this.level;\n\t\tif (ConsoleLogger.LOG_LEVEL) {\n\t\t\tlogger_level_name = ConsoleLogger.LOG_LEVEL;\n\t\t}\n\t\tif (typeof (<any>window) !== 'undefined' && (<any>window).LOG_LEVEL) {\n\t\t\tlogger_level_name = (<any>window).LOG_LEVEL;\n\t\t}\n\t\tconst logger_level = LOG_LEVELS[logger_level_name];\n\t\tconst type_level = LOG_LEVELS[type];\n\t\tif (!(type_level >= logger_level)) {\n\t\t\t// Do nothing if type is not greater than or equal to logger level (handle undefined)\n\t\t\treturn;\n\t\t}\n\n\t\tlet log = console.log.bind(console);\n\t\tif (type === LOG_TYPE.ERROR && console.error) {\n\t\t\tlog = console.error.bind(console);\n\t\t}\n\t\tif (type === LOG_TYPE.WARN && console.warn) {\n\t\t\tlog = console.warn.bind(console);\n\t\t}\n\n\t\tconst prefix = `[${type}] ${this._ts()} ${this.name}`;\n\t\tlet message = '';\n\n\t\tif (msg.length === 1 && typeof msg[0] === 'string') {\n\t\t\tmessage = `${prefix} - ${msg[0]}`;\n\t\t\tlog(message);\n\t\t} else if (msg.length === 1) {\n\t\t\tmessage = `${prefix} ${msg[0]}`;\n\t\t\tlog(prefix, msg[0]);\n\t\t} else if (typeof msg[0] === 'string') {\n\t\t\tlet obj = msg.slice(1);\n\t\t\tif (obj.length === 1) {\n\t\t\t\tobj = obj[0];\n\t\t\t}\n\t\t\tmessage = `${prefix} - ${msg[0]} ${obj}`;\n\t\t\tlog(`${prefix} - ${msg[0]}`, obj);\n\t\t} else {\n\t\t\tmessage = `${prefix} ${msg}`;\n\t\t\tlog(prefix, msg);\n\t\t}\n\n\t\tfor (const plugin of this._pluggables) {\n\t\t\tconst logEvent: InputLogEvent = { message, timestamp: Date.now() };\n\t\t\tplugin.pushLogs([logEvent]);\n\t\t}\n\t}\n\n\t/**\n\t * Write General log. Default to INFO\n\t * @method\n\t * @memeberof Logger\n\t * @param {string|object} msg - Logging message or object\n\t */\n\tlog(...msg) {\n\t\tthis._log(LOG_TYPE.INFO, ...msg);\n\t}\n\n\t/**\n\t * Write INFO log\n\t * @method\n\t * @memeberof Logger\n\t * @param {string|object} msg - Logging message or object\n\t */\n\tinfo(...msg) {\n\t\tthis._log(LOG_TYPE.INFO, ...msg);\n\t}\n\n\t/**\n\t * Write WARN log\n\t * @method\n\t * @memeberof Logger\n\t * @param {string|object} msg - Logging message or object\n\t */\n\twarn(...msg) {\n\t\tthis._log(LOG_TYPE.WARN, ...msg);\n\t}\n\n\t/**\n\t * Write ERROR log\n\t * @method\n\t * @memeberof Logger\n\t * @param {string|object} msg - Logging message or object\n\t */\n\terror(...msg) {\n\t\tthis._log(LOG_TYPE.ERROR, ...msg);\n\t}\n\n\t/**\n\t * Write DEBUG log\n\t * @method\n\t * @memeberof Logger\n\t * @param {string|object} msg - Logging message or object\n\t */\n\tdebug(...msg) {\n\t\tthis._log(LOG_TYPE.DEBUG, ...msg);\n\t}\n\n\t/**\n\t * Write VERBOSE log\n\t * @method\n\t * @memeberof Logger\n\t * @param {string|object} msg - Logging message or object\n\t */\n\tverbose(...msg) {\n\t\tthis._log(LOG_TYPE.VERBOSE, ...msg);\n\t}\n\n\taddPluggable(pluggable: LoggingProvider) {\n\t\tif (pluggable && pluggable.getCategoryName() === AWS_CLOUDWATCH_CATEGORY) {\n\t\t\tthis._pluggables.push(pluggable);\n\t\t\tpluggable.configure(this._config);\n\t\t}\n\t}\n\n\tlistPluggables() {\n\t\treturn this._pluggables;\n\t}\n}\n","import { Tools } from './Tools';\n\nexport class Detector {\n\n    constructor(dom, detectors) {\n        this.dom = dom;\n        this.detectors = detectors;\n    }\n\n    // Returns the first found provider\n    detectProvider(timeoutMs) {\n        return Promise.race(\n            this.detectors.map(guess => Tools.providerExists(this.dom, guess, timeoutMs))\n        );\n    }\n\n    // Returns all found providers\n    detectProviders() {\n        return Promise.all(\n            this.detectors.map(guess => Tools.providerExists(this.dom, guess, 0))\n        );\n    }\n\n    detectSelector(timeoutMs) {\n        return Promise.race(\n            this.detectors.map(guess => Tools.elementReady(this.dom, guess, timeoutMs))\n        );\n    }\n\n    detectSelectors(timeoutMs) {\n        return Promise.race(\n            this.detectors.map(guess => Tools.elementsReady(this.dom, guess, timeoutMs))\n        );\n    }\n}","/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\n// Logging constants\nconst AWS_CLOUDWATCH_BASE_BUFFER_SIZE = 26;\nconst AWS_CLOUDWATCH_MAX_BATCH_EVENT_SIZE = 1048576;\nconst AWS_CLOUDWATCH_MAX_EVENT_SIZE = 256000;\nconst AWS_CLOUDWATCH_CATEGORY = 'Logging';\nconst AWS_CLOUDWATCH_PROVIDER_NAME = 'AWSCloudWatch';\nconst NO_CREDS_ERROR_STRING = 'No credentials';\nconst RETRY_ERROR_CODES = [\n\t'ResourceNotFoundException',\n\t'InvalidSequenceTokenException',\n];\n\nexport {\n\tAWS_CLOUDWATCH_BASE_BUFFER_SIZE,\n\tAWS_CLOUDWATCH_CATEGORY,\n\tAWS_CLOUDWATCH_MAX_BATCH_EVENT_SIZE,\n\tAWS_CLOUDWATCH_MAX_EVENT_SIZE,\n\tAWS_CLOUDWATCH_PROVIDER_NAME,\n\tNO_CREDS_ERROR_STRING,\n\tRETRY_ERROR_CODES,\n};\n","const awsmobile = {\n    \"pinpoint_project_id\": \"4ace22203f35477383a799216d32a786\",\n    \"kinesis_stream_name\": \"SAAnalytics\",\n    \"aws_project_region\": \"eu-west-1\",\n    \"aws_cognito_region\": \"eu-west-1\",\n    \"aws_user_pools_id\": \"eu-west-1_GRKlTYjgb\",\n    \"aws_cognito_identity_pool_id\": \"eu-west-1:041b1b3c-c6a0-4c56-8d4d-002a45c5a57b\",\n    \"aws_user_pools_web_client_id\": \"5vjrqisbqg6edpfff4t1hlk3nr\",\n    \"aws_appsync_graphqlEndpoint\": \"https://yz5sfocrcff47nuopemljg2tdu.appsync-api.eu-west-1.amazonaws.com/graphql\",\n    \"aws_appsync_region\": \"eu-west-1\",\n    \"aws_appsync_authenticationType\": \"AMAZON_COGNITO_USER_POOLS\",\n    \"aws_user_files_s3_bucket\": \"magicmakerstack-magicstorage584335d1-1vm4ss92ry4pd\",\n    \"aws_user_files_s3_bucket_region\": \"eu-west-1\",\n    \"aws_magicmaker_distribution_url\": \"https://files-prod.super-agent.com/public\",\n    \"aws_cloud_logic_custom\": [\n        {\n            \"name\": \"magic\",\n            \"endpoint\": \"https://2or42usm9j.execute-api.eu-west-1.amazonaws.com/prod\",\n            \"region\": \"eu-west-1\"\n        },\n        {\n            \"name\": \"logger\",\n            \"endpoint\": \"https://sb36xcrwx4.execute-api.eu-west-1.amazonaws.com/prod\",\n            \"region\": \"eu-west-1\"\n        },\n        {\n            \"name\": \"keys\",\n            \"endpoint\": \"https://58nocgldz5.execute-api.eu-west-1.amazonaws.com/prod\",\n            \"region\": \"eu-west-1\"\n        },\n        {\n            \"name\": \"reporter\",\n            \"endpoint\": \"https://udpnn9eiw0.execute-api.eu-west-1.amazonaws.com/prod\",\n            \"region\": \"eu-west-1\"\n        },\n        {\n            \"name\": \"auth\",\n            \"endpoint\": \"https://4ji95obasf.execute-api.eu-west-1.amazonaws.com/prod\",\n            \"region\": \"eu-west-1\"\n        }\n    ]\n};\n\nexport default awsmobile;","import tldjs from 'tldjs';\r\nimport { Detector } from './Detector';\r\n\r\nimport { Logger } from 'aws-amplify';\r\n\r\nimport awsconfig from '../Config/aws-exports';\r\nconst env = awsconfig.aws_user_pools_id === 'eu-west-1_iv6CkI7wU' ? 'dev' : 'prod';\r\n\r\nexport class Tools {\r\n    static delay(ms) {\r\n        return new Promise(resolve => setTimeout(resolve, ms));\r\n    }\r\n\r\n    static debugLog(log, raw) {\r\n        if (env === 'dev') {\r\n            if (raw) {\r\n                console.log(log);   \r\n            } else {\r\n                console.log(window !== window.top ? \"[iFrame]\" : \"[top]\", \"[SA-DEBUG] \" + log);\r\n            }\r\n        } else {\r\n            const logger = new Logger('[SA_DEBUG]');\r\n            logger.debug(log);\r\n        }\r\n    }\r\n\r\n    static stringMatches(stringArray, stringToTest) {\r\n        return new RegExp(stringArray.join(\"|\")).test(stringToTest);\r\n    }\r\n\r\n    static guessCategory(filterWords, text) {\r\n        if (this.stringMatches(filterWords[\"advertising\"].split(','), text.toLowerCase().trim())) {\r\n            return \"advertising\";\r\n        }\r\n        if (this.stringMatches(filterWords[\"functional\"].split(','), text.toLowerCase().trim())) {\r\n            return \"functional\";\r\n        }\r\n        if (this.stringMatches(filterWords[\"performance\"].split(','), text.toLowerCase().trim())) {\r\n            return \"performance\";\r\n        }\r\n        if (this.stringMatches(filterWords[\"nonRequired\"].split(','), text.toLowerCase().trim())) {\r\n            return \"other\";\r\n        }\r\n        if (this.stringMatches(filterWords[\"required\"].split(','), text.toLowerCase().trim())) {\r\n            return \"required\";\r\n        }\r\n\r\n        return \"other\";\r\n    }\r\n\r\n    static findProvider = async (providerDetectors, detectTimeout) => {\r\n        const detector = new Detector(document, providerDetectors);\r\n        try {\r\n            const provider = await detector.detectProvider(detectTimeout);\r\n            return provider;\r\n        } catch(e) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    static findExistingProviders = async (providerDetectors) => {\r\n        const detector = new Detector(document, providerDetectors);\r\n        try {\r\n            const providers = await detector.detectProviders();\r\n            return providers;\r\n        } catch(e) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    static providerExists(root, guess, timeout) {\r\n        return new Promise((resolve, reject) => {\r\n            let timer;\r\n            let el = root.querySelector(guess.detector);\r\n\r\n            if (el) {\r\n                clearTimeout(timer);\r\n                resolve(guess);\r\n            } else if (timeout === 0) {\r\n                resolve(null);\r\n            }\r\n\r\n            let observer = new MutationObserver((mutationRecords, observer) => {\r\n                const element = root.querySelector(guess.detector);\r\n                if (element) {\r\n                    clearTimeout(timer);\r\n                    observer.disconnect();\r\n                    resolve(guess);\r\n                }\r\n            });\r\n\r\n            observer.observe(root.documentElement, {\r\n                childList: true,\r\n                subtree: true\r\n            });\r\n\r\n            timer = setTimeout(() => {\r\n                observer.disconnect();\r\n                clearTimeout(timer);\r\n                reject(new Error(\"Timeout looking for \" + guess.detector));\r\n            }, timeout)\r\n        });\r\n    }\r\n\r\n    static elementReady(root, selector, timeout) {\r\n        return new Promise((resolve, reject) => {\r\n            let timer;\r\n            let el = root.querySelector(selector);\r\n\r\n            if (el) {\r\n                clearTimeout(timer);\r\n                resolve(el);\r\n            }\r\n\r\n            let observer = new MutationObserver((mutationRecords, observer) => {\r\n                const element = root.querySelector(selector);\r\n                if (element) {\r\n                    clearTimeout(timer);\r\n                    observer.disconnect();\r\n                    resolve(element);\r\n                }\r\n            });\r\n\r\n            observer.observe(root, {\r\n                childList: true,\r\n                subtree: true\r\n            });\r\n\r\n            timer = setTimeout(() => {\r\n                observer.disconnect();\r\n                clearTimeout(timer);\r\n                reject(new Error(\"Timeout looking for \" + selector));\r\n            }, timeout);\r\n        });\r\n    }\r\n\r\n    static elementsReady(root, selector, timeout) {\r\n        return new Promise((resolve, reject) => {\r\n            let timer;\r\n            let el = root.querySelectorAll(selector);\r\n\r\n            if (el.length > 0) {\r\n                clearTimeout(timer);\r\n                resolve(el);\r\n            }\r\n\r\n            let observer = new MutationObserver((mutationRecords, observer) => {\r\n                const elements = root.querySelectorAll(selector);\r\n                if (elements.length > 0) {\r\n                    clearTimeout(timer);\r\n                    observer.disconnect();\r\n                    resolve(elements);\r\n                }\r\n            });\r\n\r\n            observer.observe(root, {\r\n                childList: true,\r\n                subtree: true\r\n            });\r\n\r\n            timer = setTimeout(() => {\r\n                observer.disconnect();\r\n                clearTimeout(timer);\r\n                reject(new Error(\"Timeout looking for \" + selector));\r\n            }, timeout);\r\n\r\n        });\r\n    }\r\n    \r\n    static hideElement(selector) {\r\n        document.querySelector(selector).style.opacity = 0;\r\n        document.querySelector(selector).style.display = \"none\";\r\n    }\r\n\r\n    static getProperty(selector, property) {\r\n        return document.querySelector(selector)[property];\r\n    }\r\n\r\n\r\n    static isHidden(provider) {\r\n        if (provider.ignoreVisibility && provider.ignoreVisibility === true) {\r\n            return false;\r\n        }\r\n        \r\n        const node = document.querySelector(provider.detector);\r\n\r\n        if (window.getComputedStyle(node).visibility === \"hidden\") {\r\n            return true;\r\n        }\r\n\r\n        if (node.style.display === \"none\") {\r\n            return true;\r\n        }\r\n\r\n        if (!provider.ignoreOffsetHeight) {\r\n            if (node.offsetHeight === 0) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    static hideBackground(userPreferences, provider) {\r\n        if (userPreferences.background) {\r\n            if (provider.hideBackground === false) {\r\n                return\r\n            }\r\n\r\n            if (provider.background) {\r\n                for (const b of provider.background.split(\",\")) {\r\n                    try {\r\n                        this.hideElement(b);\r\n                    }\r\n                    catch (e) {\r\n\r\n                    }\r\n                }\r\n            }\r\n            this.hideElement(provider.detector);\r\n        }\r\n    }\r\n\r\n    // Detects whether a given cookie is already present\r\n    static detectCookie(provider) {\r\n        if (provider.cookieName) {\r\n            for (const name of provider.cookieName.split(\",\")) {\r\n                if (document.cookie.includes(name)) {\r\n                    return true;\r\n                }\r\n            }\r\n        } else {\r\n            return false;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    static hostnameForURL(url) {\r\n        var hostname = tldjs.parse(url).hostname;\r\n        \r\n        return hostname;\r\n    }\r\n\r\n    // This version always returns the hostname presented. However, some cases, like the extension's hostnames, are not supported as regular addresses. Previously we had the validation of `contains(\".\"),` but it is a problem for working in localhost. \r\n    static rootDomainForURL(url) {\r\n        var hostname = tldjs.parse(url).hostname;\r\n        var domain = tldjs.getDomain(url);\r\n\r\n        return domain ? domain : hostname;\r\n    }\r\n\r\n    static checkAutoRefresh(executionResults, timeDiffThreshold, hostname) {\r\n        const updateTime = executionResults.updateTime;\r\n        const timeDiffInSeconds = ((new Date()).getTime() - (new Date(updateTime)).getTime()) / 1000;\r\n\r\n        if (timeDiffInSeconds < timeDiffThreshold && executionResults.hostname === hostname) {\r\n            Tools.debugLog(\"PROBABLE AUTO REFRESH DETECTED\");\r\n            return true;\r\n        }\r\n    }\r\n    \r\n}","import { Response } from './Response';\r\nimport { Tools } from '../Tools/Tools';\r\n\r\nexport class Request {\r\n    constructor(action, parameters) {\r\n        this.message = {\r\n            action,\r\n            parameters\r\n        }\r\n    }\r\n\r\n    sendRequest() {\r\n        Tools.debugLog(\"Sending message: \" + JSON.stringify(this.message));\r\n        return new Promise((resolve, reject) => {\r\n            chrome.runtime.sendMessage(this.message, (response) => {\r\n                if (response) {\r\n                    const obj = new Response(\r\n                        response.message.status, \r\n                        response.message.payload, \r\n                        response.message.code\r\n                    );\r\n\r\n                    if (obj.isOk()) {\r\n                        resolve(obj);\r\n                    }\r\n                    if (obj.isError()) {    \r\n                        Tools.debugLog(\"Error in Request from message: \");\r\n                        Tools.debugLog(this.message, true);\r\n                        Tools.debugLog(obj, true);\r\n                        reject(obj);\r\n                    }\r\n                } else {\r\n                    reject(new Error(\"No response received.\"));\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    sendRequestToTab(tabId) {\r\n        Tools.debugLog(\"Sending message: \" + JSON.stringify(this.message));\r\n        return new Promise((resolve, reject) => {\r\n            chrome.tabs.sendMessage(tabId, this.message, (response) => {\r\n                if (response) {\r\n                    const obj = new Response(\r\n                        response.message.status,\r\n                        response.message.payload,\r\n                        response.message.code\r\n                    );\r\n\r\n                    if (obj.isOk()) {\r\n                        resolve(obj);\r\n                    }\r\n                    if (obj.isError()) {\r\n                        Tools.debugLog(\"Error in Request from message: \");\r\n                        Tools.debugLog(this.message, true);\r\n                        Tools.debugLog(obj, true);\r\n                        reject(obj);\r\n                    }\r\n                } else {\r\n                    reject(new Error(\"No response received.\"));\r\n                }\r\n            });\r\n        });\r\n    }\r\n}\r\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export const Messages = {\r\n    Auth: {\r\n        OpenSignIn: 'OPEN_SIGN_IN',\r\n        OpenSignUp: 'OPEN_SIGN_UP',\r\n        OpenForgotPassword: 'OPEN_FORGOT_PASSWORD',\r\n        AuthenticateUser: 'AUTHENTICATE_USER',\r\n        SignInFromExtension: 'SIGN_IN_FROM_EXTENSION',\r\n        BuildUserSession: 'BUILD_USER_SESSION',\r\n        SignOut: 'SIGN_OUT',\r\n        CheckAuth: 'CHECK_AUTH',\r\n        ChangeUserPassword: 'CHANGE_USER_PASSWORD',\r\n        DeleteUser: 'DELETE_USER'\r\n    },\r\n    Cookies: {\r\n        GetAllCookies: 'GET_ALL_COOKIES',\r\n        DeleteCookies: 'DELETE_COOKIES'\r\n    },\r\n    DataSync: {\r\n        SetupDataSync: 'SETUP_DATA_SYNC',\r\n        StopDataSync: 'STOP_DATA_SYNC'\r\n    },\r\n    Generic: {\r\n        ContentScriptStarted: 'CONTENT_SCRIPT_STARTED',\r\n        GetVersion: 'GET_VERSION',\r\n        ExtensionIsWorking: 'EXTENSION_IS_WORKING',\r\n        AppOpen: 'APP_OPEN',\r\n        PopupOpen: 'POPUP_OPEN'\r\n    },\r\n    KeyManager: {\r\n        CheckDEK: 'CHECK_DEK',\r\n        DeleteDEK: 'DELETE_DEK',\r\n        GenerateDEK: 'GENERATE_DEK',\r\n        GetUserKeys: 'GET_USER_KEYS',\r\n        SetMasterPassword: 'SET_MASTER_PASSWORD'\r\n    },\r\n    Logger: {\r\n        GetLogs: 'GET_LOGS',\r\n        DeleteLogs: 'DELETE_LOGS',\r\n        DeleteAllLogs: 'DELETE_ALL_LOGS',\r\n        GetLoggingPreferences: 'GET_LOGGING_PREFERENCES',\r\n        UpdatePreferences: 'UPDATE_PREFERENCES',\r\n        GetUsageMetrics: 'GET_USAGE_METRICS'\r\n    },\r\n    Provider: {\r\n        GetProviderDetectors: 'GET_PROVIDER_DETECTORS',\r\n        GetProviderInfo: 'GET_PROVIDER_INFO'\r\n    },\r\n    Report: {\r\n        ReportWebsite: 'REPORT_WEBSITE',\r\n        GetReportedSites: 'GET_REPORTED_SITES'\r\n    },\r\n    Tab: {\r\n        GetCurrentTab: 'GET_CURRENT_TAB',\r\n        GetActiveTab: 'GET_ACTIVE_TAB',\r\n        TabFinished: 'TAB_FINISHED',\r\n        TabNoEntitlement: 'TAB_NO_ENTITLEMENT',\r\n        GetExecutionResults: 'GET_EXECUTION_RESULTS',\r\n        UpdateExecutionResults: 'UPDATE_EXECUTION_RESULTS',\r\n        ClearExecutionResults: 'CLEAR_EXECUTION_RESULTS',\r\n        NotifyActiveTabIsBlocked: 'NOTIFY_ACTIVE_TAB_IS_BLOCKED',\r\n    },\r\n    UserPreferences: {\r\n        GetUserPreferences: 'GET_USER_PREFERENCES',\r\n        SetUserPreferences: 'SET_USER_PREFERENCES'\r\n    },\r\n    Whitelist: {\r\n        GetDisabledHostnames: 'GET_DISABLED_HOSTNAMES',\r\n        SaveDisabledHostnames: 'SAVE_DISABLED_HOSTNAMES',\r\n        HostnameIsBlocked: 'HOSTNAME_IS_BLOCKED',\r\n        UpdateHostnameState: 'UPDATE_HOSTNAME_STATE'\r\n    },\r\n    Entitlement: {\r\n        GetUserEntitlement: 'GET_USER_ENTITLEMENT',\r\n        IncrementCounter: 'INCREMENT_COUNTER',\r\n        GetCurrentEntitlement: 'GET_CURRENT_ENTITLEMENT',\r\n        GetCounter: 'GET_COUNTER',\r\n        SubscriptionVerificationNotification: {\r\n            GetPopupShownAt: 'GET_POPUP_SHOWN_AT',\r\n            ShowPopup: 'SHOW_POPUP_SHOWN_AT'\r\n        }\r\n    },\r\n    Category: {\r\n        GetCategories: 'GET_CATEGORIES'\r\n    },\r\n    Content: {\r\n        Dom: {\r\n            GetDocument: 'CONTENT_DOM_GET_DOCUMENT',\r\n        }\r\n    }\r\n}\r\n","export class URLHelper {\n    static setup() {\n        if (window === window.top) {\n            const handleEvent = (event) => {\n                if (event.data === \"GET_URL\") {\n                    const message = {\n                        type: \"MAIN_URL\",\n                        hostname: window.location.href\n                    };\n\n                    event.source.postMessage(JSON.stringify(message), \"*\");\n                }\n            }\n        \n            window.addEventListener('message', handleEvent, true);\n        }\n    }\n\n    static getCurrentUrl = () => {\n        return new Promise((resolve, _) => {\n            setTimeout(() => {\n                resolve(undefined);\n            }, 5000);\n    \n            if (window === window.top) {\n                resolve(window.location.href);\n            } else {\n                try {\n                    const possibleUrl = document.referrer;\n    \n                    if (possibleUrl === \"\") {\n                        throw new Error(\"Undefined\");\n                    }\n    \n                    resolve(possibleUrl);\n                } catch (e) {\n                    // Couldn't get URL through referrer, need to ask for it\n                    // Adding timeout as listener isn't immediately available\n                    setTimeout(() => {\n                        window.addEventListener('message', function(m) {\n                            try {\n                                const message = JSON.parse(m.data);\n                                switch (message.type) {\n                                    case 'MAIN_URL':\n                                        resolve(message.hostname);\n                                        break;\n                                    default:\n                                        resolve(null);\n                                        break;\n                                }\n                            } catch (e) {\n                                resolve(null);\n                            }\n                        }, false);\n\n                        window.top.postMessage(\"GET_URL\", \"*\");\n                    }, 1000);\n                }\n            }\n        })\n    }\n\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import { v4 as uuidv4 } from 'uuid';\r\n\r\nexport class Comm {\r\n    constructor() {\r\n        this.channel = uuidv4();\r\n        this.script = \r\n            `function sdte(p){ var e = new CustomEvent(\"${this.channel}\",{detail:p});document.dispatchEvent(e);} var saapiloaded = new CustomEvent('saapiloaded');document.dispatchEvent(saapiloaded);`;\r\n    }\r\n\r\n    getChannel() {\r\n        return this.channel;\r\n    }\r\n\r\n    injectScript() {\r\n        var existingScript = document.querySelector(\"script[id='superagent']\");\r\n        if (existingScript != null) {\r\n            existingScript.parentNode.removeChild(existingScript);\r\n        }\r\n\r\n        var s = document.createElement('script');\r\n        s.setAttribute(\"id\", \"superagent\");\r\n        s.textContent = this.script;\r\n        document.documentElement.appendChild(s);\r\n    }\r\n}\r\n","import { Comm } from './Comm';\r\n\r\nexport class AuthHelper {\r\n    static sendCredentialsToBackground = (credentials, fromOptions, fromOnboard) => {\r\n        chrome.runtime.sendMessage({\r\n            action: \"AUTHENTICATE_USER\",\r\n            credentials: credentials,\r\n            fromOptions: fromOptions,\r\n            fromOnboard: fromOnboard\r\n        }, (response) => {\r\n    \r\n        });\r\n    }\r\n    \r\n    static sendSessionToBackground = (session, fromOptions, fromOnboard) => {\r\n        chrome.runtime.sendMessage({\r\n            action: \"BUILD_USER_SESSION\",\r\n            session: session,\r\n            fromOptions: fromOptions,\r\n            fromOnboard: fromOnboard\r\n        }, (response) => {\r\n    \r\n        });\r\n    }\r\n    \r\n    static injectAuthScript = () => {\r\n        const messageHandler = (event) => {\r\n            switch (event.detail.messageType) {\r\n                case 'CREDS':\r\n                    this.sendCredentialsToBackground(event.detail.credentials, event.detail.fromOptions, event.detail.fromOnboard);\r\n                    break;\r\n                case 'SESSION':\r\n                    this.sendSessionToBackground(event.detail.session, event.detail.fromOptions, event.detail.fromOnboard);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n\r\n        let comm = new Comm();\r\n        comm.injectScript();\r\n        document.addEventListener(comm.getChannel(), function (event) {\r\n           messageHandler(event);\r\n        });\r\n    }\r\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export const Errors = {\n    NotFound: \"NOT_FOUND\"\n}","import { Tools } from '../../Tools/Tools';\nimport { Errors } from './Errors';\n\nexport class DomTools {\n    static async findPositionFixed(root, selector, timeout, filterWords) {\n        const elements = await Tools.elementReady(root, selector, timeout);\n        let fixedElements = [];\n        for (const el of elements) {\n            let style = window.getComputedStyle(el);\n            if (style.position === \"fixed\") {\n                const elText = el.innerText;\n                const lowercasedFilterWords = filterWords.map(word => word.toLowerCase());\n\n                if (Tools.stringMatches(lowercasedFilterWords, elText.toLowerCase())) {\n                    fixedElements.push(el);\n                }\n            }\n        }\n\n        if (fixedElements[0]) {\n            return fixedElements[0];\n        } else {\n            throw new Error(Errors.NotFound);\n        }\n    }\n\n    static async findChildren(root, selector, timeout, filterWords) {\n        try {\n            const element = await Tools.elementReady(root, selector, timeout);\n            const elementsToFilter = element.children;\n\n            const lowercasedFilterWords = filterWords.map(word => word.toLowerCase());\n\n            for (const el of elementsToFilter) {\n                const buttonText = el.innerText;\n                if (Tools.stringMatches(lowercasedFilterWords, buttonText.toLowerCase())) {\n                    return el;\n                }\n            }\n        } catch (e) {\n            throw new Error(Errors.NotFound);\n        }\n    }\n\n    static async findElements(root, selector, timeout, filterWords) {\n        try {\n            const elements = await Tools.elementsReady(root, selector, timeout);\n            let elementsFound = [];\n            for (const el of elements) {\n\n                const buttonText = el.innerText;\n                const lowercasedFilterWords = filterWords.map(word => word.toLowerCase());\n                \n                Tools.debugLog(\"Button text: \" + buttonText);\n                Tools.debugLog(\"Filter words: \" + lowercasedFilterWords);\n\n                if (Tools.stringMatches(lowercasedFilterWords, buttonText.toLowerCase())) {\n                    Tools.debugLog(\"Found element: \");\n                    Tools.debugLog(el, true);\n                    elementsFound.push(el);\n                } else {\n                    Tools.debugLog(\"Couldn't find\");\n                }\n            }\n            return elementsFound;\n        } catch(e) {\n            throw new Error(Errors.NotFound);\n        }\n    }\n\n    static hideNode(node) {\n        try {\n            node.style.display = \"none\";\n            node.style.opacity = 0;\n        } catch (e) {\n            throw new Error(Errors.NotFound);\n        }\n    }\n}","import { DomTools } from './DomTools';\nimport { Detector } from '../../Tools/Detector';\nimport { Tools } from '../../Tools/Tools';\n\nconst Steps = {\n    findPositionFixed: \"FIND_POSITION_FIXED\",\n    hideCurrent: \"HIDE_CURRENT\",\n    setContext: \"SET_CONTEXT\",\n    click: \"CLICK\",\n    hideBackground: \"HIDE_BACKGROUND\",\n    hideParent: \"HIDE_PARENT\",\n    closeWindow: \"CLOSE_WINDOW\",\n    clickChildFilter: \"CLICK_CHILD_FILTER\",\n    findButtonClick: \"FIND_BUTTON_CLICK\",\n    domNavigate: \"DOM_NAVIGATE\",\n    expandElements: \"EXPAND_ELEMENTS\",\n    getCookieItems: \"GET_COOKIE_ITEMS\"\n}\n\nexport class Step {\n    constructor(step, userPreferences, currentDom) {\n        this.step = step;\n        this.userPreferences = userPreferences;\n        this.currentDom = currentDom;\n        this.clickCount = 0;\n        this.cookieItems = null;\n        this.finishExecution = false;\n    }\n\n    async executeStep() {\n        const self = this;\n\n        const steps = {\n            [Steps.findPositionFixed]: findPositionFixed,\n            [Steps.hideCurrent]: hideCurrent,\n            [Steps.setContext]: setContext,\n            [Steps.click]: click,\n            [Steps.hideBackground]: hideBackground,\n            [Steps.hideParent]: hideParent,\n            [Steps.closeWindow]: closeWindow,\n            [Steps.clickChildFilter]: clickChildFilter,\n            [Steps.findButtonClick]: findButtonClick,\n            [Steps.domNavigate]: domNavigate,\n            [Steps.expandElements]: expandElements,\n            [Steps.getCookieItems]: getCookieItems\n        }\n\n        async function findPositionFixed() {\n            try {\n                const element = \n                    await DomTools.findPositionFixed(self.currentDom, self.step.selector, self.step.timeout, self.step.filter.split(\",\"));\n\n                self.currentDom = element;\n            } catch(e) {\n                Tools.debugLog(\"Error in findPositionFixed.\");\n                Tools.debugLog(e, true);\n                throw new Error(e);\n            }\n        }\n\n        async function domNavigate() {\n            try {\n                const detector = new Detector(self.currentDom, self.step.selector.split(\",\"));\n                let newDom = await detector.detectSelector(self.step.timeout || 1000);\n\n                if (self.step.shadowRoot) {\n                    newDom = newDom.shadowRoot;\n                }\n\n                self.currentDom = newDom;\n\n                return;\n            } catch(e) {\n                Tools.debugLog(\"Error in domNavigate.\");\n                Tools.debugLog(e, true);\n                self.finishExecution = true;\n                throw new Error(e);\n            }\n        }\n\n        async function click() {\n            try {\n                const buttonClickDetector = new Detector(self.currentDom, self.step.selector.split(\",\"));\n                const buttonClick = await buttonClickDetector.detectSelector(self.step.timeout ? self.step.timeout : 1000);\n                if (self.step.eventDispatch) {\n                    buttonClick.dispatchEvent(new Event('click'));\n                } else {\n                    buttonClick.click();\n                }\n                self.clickCount++;\n                return;\n            } catch(e) {\n                Tools.debugLog(\"Error in click.\");\n                Tools.debugLog(e, true);\n                throw new Error(e);\n            }\n        }\n\n        async function hideCurrent() {\n            DomTools.hideNode(self.currentDom);\n            return;\n        }\n\n        async function setContext() {\n            self.currentDom = document.querySelector(self.step.selector);\n            return;\n        }\n\n        async function hideBackground() {\n            if (self.userPreferences.background) {\n                if (self.step.background) {\n                    for (const bg of self.step.background.split(\",\")) {\n                        try {\n                            const detector = new Detector(document, [bg]);\n                            const element = await detector.detectSelector(self.step.timeout ? self.step.timeout : 1000);\n                            DomTools.hideNode(element);\n                        } catch(e) {\n                            \n                        }\n                    }\n                }\n            }\n            return;\n        }\n\n        async function hideParent() {\n            try {\n                const element = self.currentDom.querySelector(self.step.selector).parentElement;\n                DomTools.hideNode(element);\n            } catch(e) {\n                Tools.debugLog(\"Error in hideParent.\");\n            }\n            return;\n        }\n\n        async function closeWindow() {\n            await click();\n            self.currentDom = self.currentDom.parentElement;\n            return;\n        }\n\n        async function clickChildFilter() {\n            try {\n                const button = \n                    await DomTools.findChildren(self.currentDom, self.step.selector, self.step.timeout, self.step.filter.split(\",\"));\n                button.click();\n                self.clickCount++;\n                return;\n            } catch(e) {\n                Tools.debugLog(\"Error in clickChildFilter.\");\n                Tools.debugLog(e, true);\n                throw new Error(e);\n            }\n        }\n\n        async function findButtonClick() {\n            try {\n                const elements = \n                    await DomTools.findElements(self.currentDom, self.step.selector, self.step.timeout, self.step.filter.split(\",\"));\n                for (const element of elements) {\n                    element.click();\n                    self.clickCount++;\n                }\n                return;\n            } catch(e) {\n                Tools.debugLog(\"Error in findButtonClick.\");\n                Tools.debugLog(e, true);\n                throw new Error(e);\n            }\n        }\n\n        async function expandElements() {\n            try {\n                const elements = self.currentDom.querySelectorAll(self.step.selector);\n                elements.forEach(e => {\n                    e.click();\n                });\n                return;\n            } catch(e) {\n                Tools.debugLog(\"Error in expandElements.\");\n                Tools.debugLog(e, true);\n                throw new Error(e);\n            }\n        }\n\n        async function getCookieItems() {\n            try {\n                const detector = new Detector(self.currentDom, self.step.selector.split(\",\"));\n                const cookieItems = await detector.detectSelectors(self.step.timeout ? self.step.timeout : 1000);\n                self.cookieItems = cookieItems;\n            } catch(e) {\n                Tools.debugLog(\"Error in getCookieItems.\");\n                Tools.debugLog(e, true);\n                throw new Error(e);\n            }\n            return;\n        }\n\n        Tools.debugLog(\"Running STEP \" + self.step.type);\n        if (steps[self.step.type]) {\n            if (self.step.delay) {\n                Tools.debugLog(\"Awaiting for \" + self.step.delay + \"ms\");\n                await Tools.delay(self.step.delay);\n                Tools.debugLog(\"Finished waiting.\");\n            }\n\n            try {\n                await steps[self.step.type]();\n                return self;\n            } catch(e) {\n                throw new Error(e);\n            }\n        }\n    }\n}","import { DomTools } from \"./DomTools\";\nimport { Tools } from \"../../Tools/Tools\";\nimport { Detector } from '../../Tools/Detector';\n\nconst ConsentSteps = {\n    checkedClick: \"checkedClick\",\n    dataChecked: \"data-checked\",\n    checkboxMouseClick: \"checkboxMouseClick\",\n    ariaChecked: \"ariaChecked\",\n    checkbox: \"checkbox\",\n    setSliderValue: \"setSliderValue\",\n    sliderClick: \"sliderClick\",\n    objectionButton: \"objectionButton\",\n    select: \"select\",\n    yesNo: \"yesNo\",\n    yesNoFind: \"yesNoFind\",\n    className: \"className\"\n}\n\nexport class Consent {\n    constructor(item, step, itemCategory, userPreferences) {\n        this.item = item;\n        this.step = step;\n        this.itemCategory = itemCategory;\n        this.userPreferences = userPreferences;\n        this.clickCount = 0;\n    }\n\n    async executeConsent() {\n        const self = this;\n\n        const consentSteps = {\n            [ConsentSteps.checkedClick]: checkedClick,\n            [ConsentSteps.dataChecked]: dataChecked,\n            [ConsentSteps.checkboxMouseClick]: checkboxMouseClick,\n            [ConsentSteps.ariaChecked]: ariaChecked,\n            [ConsentSteps.checkbox]: checkbox,\n            [ConsentSteps.setSliderValue]: setSliderValue,\n            [ConsentSteps.sliderClick]: sliderClick,\n            [ConsentSteps.objectionButton]: objectionButton,\n            [ConsentSteps.select]: select,\n            [ConsentSteps.yesNo]: yesNo,\n            [ConsentSteps.yesNoFind]: yesNoFind,\n            [ConsentSteps.className]: className\n        }\n\n        async function checkedClick() {\n            const itemIsChecked = self.item.getAttribute(\"checked\") === 'checked';\n\n            if (itemIsChecked !== self.userPreferences[self.itemCategory]) {\n                self.item.click();\n                self.clickCount++;\n            }\n        }\n\n        async function dataChecked() {\n            if (self.item.getAttribute('data-checked') == null) {\n                if (self.userPreferences[self.itemCategory]) {\n                    self.item.click();\n                    self.clickCount++;\n                }\n            }\n            else {\n                if (!self.userPreferences[self.itemCategory]) {\n                    self.item.click();\n                    self.clickCount++;\n                }\n            }\n        }\n\n        async function checkboxMouseClick() {\n            if (self.item.checked !== self.userPreferences[self.itemCategory]) {\n                self.item.dispatchEvent(new Event('click'));\n                self.clickCount++;\n            }\n        }\n\n        async function ariaChecked() {\n            if (self.item.getAttribute('aria-checked') !== self.userPreferences[self.itemCategory].toString()) {\n                self.item.click();\n                self.clickCount++;\n            }\n        }\n\n        async function checkbox() {\n            if (self.item.checked !== self.userPreferences[self.itemCategory]) {\n                self.item.click();\n                self.clickCount++;\n            }\n        }\n\n        async function setSliderValue() {\n            self.item[self.step.property] = 0;\n            self.clickCount++;\n        }\n\n        async function sliderClick() {\n            self.item.click();\n            self.clickCount++;\n        }\n\n        async function objectionButton() {\n            if (self.userPreferences[self.temCategory] === false) {\n                self.item.click();\n                self.clickCount++;\n            }\n        }\n\n        async function select() {\n            if (self.userPreferences[self.itemCategory] === false) {\n                self.item.selectedIndex = self.step.noIndex;\n            } else {\n                self.item.selectedIndex = self.step.yesIndex;\n            }\n            self.clickCount++;\n        }\n\n        async function yesNo() {\n            try {\n                if (self.userPreferences[self.itemCategory] === false) {\n                    const stepDetector = new Detector(self.item, self.step.no.split(','));\n                    const noItem = await stepDetector.detectSelector(self.step.timeout ? self.step.timeout : 1000);\n\n                    noItem.click();\n                } else {\n                    const stepDetector = new Detector(self.item, self.step.yes.split(','));\n                    const yesItem = await stepDetector.detectSelector(self.step.timeout ? self.step.timeout : 1000);\n\n                    yesItem.click();\n                }\n                self.clickCount++;\n            } catch (e) {\n                Tools.debugLog(\"Error in yesNo.\");\n                Tools.debugLog(e, true);\n                throw new Error(e);\n            }\n        }\n\n        async function yesNoFind() {\n            try {\n                const filter = self.userPreferences[self.itemCategory] ? self.step.filterYes : self.step.filterNo;\n                const elements = \n                    await DomTools.findElements(self.item, self.step.selector, self.step.timeout, filter.split(\",\"));\n                for (const element of elements) {\n                    element.click();\n                    self.clickCount++;\n                }\n            } catch(e) {\n                Tools.debugLog(\"Error in yesNoFind: \" );\n                Tools.debugLog(e, true);\n                throw new Error(e);\n            }\n        }\n\n        async function className() {\n            if (self.userPreferences[self.itemCategory]) {\n                if (self.item.className !== self.step.classOn) {\n                    self.item.className = self.step.classOn;\n                    self.clickCount++;\n                }\n            } else {\n                if (self.item.className !== self.step.classOff) {\n                    self.item.className = self.step.classOff;\n                    self.clickCount++;\n                }\n            }\n        }\n\n        Tools.debugLog(\"Running Consent step: \");\n        Tools.debugLog(self.step, true);\n        if (consentSteps[self.step.consentType]) {\n            try {\n                await consentSteps[self.step.consentType]();\n                return self;\n            } catch(e) {\n                Tools.debugLog(\"Error in Consent step: \");\n                Tools.debugLog(e);\n                throw new Error(e);\n            }\n        }\n    }\n}","import { Tools } from '../../Tools/Tools';\nimport { Detector } from '../../Tools/Detector';\nimport { Consent } from './Consent';\nimport { Messages, Request } from '../../shared';\n\nconst CookieItemSteps = {\n    DecideCategory: \"DECIDE_CATEGORY\",\n    GetElement: \"GET_ELEMENT\",\n    ConsentCategory: \"CONSENT_CATEGORY\",\n    GoToParent: \"GO_TO_PARENT\",\n    GoToChild: \"GO_TO_CHILD\",\n}\n\nexport class CookieItem {\n    constructor(steps, currentDom, userPreferences) {\n        this.steps = steps;\n        this.cookieItem = currentDom;\n        this.userPreferences = userPreferences;\n\n        this.clickCount = 0;\n        this.itemCategory = \"\";\n        this.itemList = [];\n    }\n\n    update(consentResults) {\n        this.clickCount += consentResults.clickCount || 0; \n    }\n\n    async consentCookieItems() {\n        for (const step of this.steps) {\n            await this.consentCookieItem(step);\n        }\n        return this;\n    }\n\n    async consentCookieItem(step) {\n        const self = this;\n\n        const steps = {\n            [CookieItemSteps.DecideCategory]: decideCategory,\n            [CookieItemSteps.GetElement]: getElement,\n            [CookieItemSteps.ConsentCategory]: consentCategory,\n            [CookieItemSteps.GoToParent]: goToParent,\n            [CookieItemSteps.GoToChild]: goToChild\n        }\n\n        async function decideCategory() {\n            const result = await new Request(Messages.Category.GetCategories).sendRequest();\n            const filterWords = result.message.payload.categories;\n\n            if (step.property === \"innerText\") {\n                self.itemCategory = Tools.guessCategory(filterWords, self.cookieItem.innerText);\n            } else if (step.property === \"name\") {\n                self.itemCategory = Tools.guessCategory(filterWords, self.cookieItem.name);\n            } else if (step.property === \"for\") {\n                self.itemCategory = Tools.guessCategory(filterWords, self.cookieItem.getAttribute(\"for\"));\n            }\n            return;\n        }\n\n        async function getElement() {\n            try {\n                Tools.debugLog(\"Cookie item: \");\n                Tools.debugLog(self.cookieItem, true);\n                const elementsDetector = new Detector(self.cookieItem, step.selector.split(\",\"));\n                const results = await elementsDetector.detectSelectors(step.timeout ? step.timeout : 1000);\n                self.itemList = results;\n                return;\n            } catch(e) {\n                Tools.debugLog(\"Error in getElement\");\n                Tools.debugLog(e);\n                throw new Error(e);\n            }\n        }\n\n        async function consentCategory() {\n            if (self.itemCategory !== \"required\") {\n                if (self.itemList && self.itemList.length > 0) {\n                    for (const item of self.itemList) {\n                        const consent = new Consent(item, step, self.itemCategory, self.userPreferences);\n                        const consentResults = await consent.executeConsent();\n                        self.update(consentResults);\n                    }\n                } else {\n                    const consent = new Consent(self.cookieItem, step, self.itemCategory, self.userPreferences);\n                    const consentResults = await consent.executeConsent();\n                    self.update(consentResults);\n                }\n            }\n            return;\n        }\n\n        async function goToParent() {\n            self.cookieItem = self.cookieItem.parentElement;\n            return;\n        }\n\n        async function goToChild() {\n            self.cookieItem = self.cookieItem.children[0];\n            return;\n        }\n\n        Tools.debugLog(\"Running for CookieItem \" + step.type);\n        if (steps[step.type]) {\n            await steps[step.type]();\n            return;\n        } \n    }\n}\n","import { Tools } from '../../Tools/Tools';\nimport { Step } from './Step';\nimport { CookieItem } from './CookieItem';\n\nconst Actions = {\n    RejectAll: \"REJECT_ALL\",\n    AcceptNecessary: \"ACCEPT_NECESSARY\",\n    AcceptDefault: \"ACCEPT\",\n    SaveSettings: \"SAVE_SETTINGS\",\n    AutoConsent: \"AUTO_CONSENT\"\n};\n\nconst Outcomes = {\n    AcceptedDefault: \"ACCEPTED_DEFAULT\",\n    AcceptedNecessary: \"ACCEPTED_NECESSARY\",\n    PreferencesApplied: \"PREFERENCES_APPLIED\",\n    RejectedAll: \"REJECTED_ALL\"\n};\n\nexport class Action {\n    constructor(action, userPreferences, currentDom, cookieItems) {\n        this.action = action;\n        this.userPreferences = userPreferences;\n        this.currentDom = currentDom;\n        this.cookieItems = cookieItems;\n        this.clickCount = 0;\n        this.finishExecution = false;\n        this.outcome = \"\";\n    }\n\n    canRejectAll() {\n        const userPreferencesEntries = Object.entries(this.userPreferences);\n        const cookieKeys = [\n            'advertising',\n            'functional',\n            'performance',\n            'other',\n        ]\n        const cookieSettings = userPreferencesEntries.filter(([key]) => cookieKeys.includes(key))\n\n        return !cookieSettings.some(([_, p]) => p === true);\n    }\n\n    update(stepResults) {\n        this.currentDom = stepResults.currentDom || this.currentDom;\n        this.cookieItems = stepResults.cookieItems || null;\n        this.clickCount += stepResults.clickCount || 0;\n        this.finishExecution = stepResults.finishExecution || false;\n    }\n\n    async executeAction() {\n        const self = this;\n\n        const actions = {\n            [Actions.RejectAll]: rejectAll,\n            [Actions.AcceptNecessary]: acceptNecessary,\n            [Actions.AcceptDefault]: acceptDefault,\n            [Actions.SaveSettings]: saveSettings,\n            [Actions.AutoConsent]: autoConsent\n        }\n\n        async function runActionSteps() {\n            for (const s of self.action.steps) {\n                const step = new Step(s, self.userPreferences, self.currentDom);\n                const stepResults = await step.executeStep();\n                self.update(stepResults);\n            }\n        }\n\n        async function rejectAll() {\n            if (self.canRejectAll()) {\n                try {\n                    await runActionSteps();\n                    self.outcome = Outcomes.RejectedAll;\n                    self.finishExecution = true;\n                } catch(e) {\n                    Tools.debugLog(\"Error in rejectAll.\");\n                    Tools.debugLog(e, true);\n                }\n            }\n        }\n\n        async function acceptNecessary() {\n            try {\n                await runActionSteps();\n                self.outcome = Outcomes.AcceptedNecessary;\n                self.finishExecution = true;\n            } catch(e) {\n                Tools.debugLog(\"Error in acceptNecessary.\");\n                Tools.debugLog(e, true);\n            }\n        }\n\n        async function acceptDefault() {\n            try {\n                await runActionSteps();\n                self.outcome = Outcomes.AcceptedDefault;\n                self.finishExecution = true;\n            } catch(e) {\n                Tools.debugLog(\"Error in acceptDefault.\");\n                Tools.debugLog(e, true);\n            }\n        }\n\n        async function saveSettings() {\n            try {\n                await runActionSteps();\n                self.outcome = Outcomes.PreferencesApplied;\n                self.finishExecution = true;\n            } catch(e) {\n                Tools.debugLog(\"Error in saveSettings.\");\n                Tools.debugLog(e, true);\n            }\n        }\n\n        async function autoConsent() {\n            const startingDom = self.currentDom;\n            for (const item of self.cookieItems) {\n                try {\n                    const cookieItem = new CookieItem(self.action.steps, item, self.userPreferences);\n                    const results = await cookieItem.consentCookieItems();\n                    self.update(results);\n                } catch(e) {\n                    Tools.debugLog(\"Couldn't auto-consent in cookie item\");\n                    Tools.debugLog(item, true);\n                }\n            }\n            self.currentDom = startingDom;\n        }\n\n        async function genericAction() {\n            await runActionSteps();\n        }\n\n        Tools.debugLog(\"Running ACTION \" + self.action.name);\n        if (actions[self.action.name]) {\n            await actions[self.action.name]();\n            return self;\n        } else {\n            await genericAction();\n            return self;\n        }\n    }\n}\n","import { Action } from './Action';\nimport { Tools } from '../../Tools/Tools';\n\nexport class RulesEngine {\n\n    constructor(userPreferences, actions) {\n        this.userPreferences = userPreferences;\n        this.actions = actions;\n        this.currentDom = document;\n        this.cookieItems = null;\n        this.outcome = \"\";\n        this.clickCount = 0;\n    }\n\n    canRejectAll() {\n        return !this.userPreferences.some(p => p === true);\n    }\n\n    update(actionResults) {\n        this.outcome = actionResults.outcome || \"\";\n        this.clickCount += actionResults.clickCount;\n        this.cookieItems = actionResults.cookieItems;\n        this.currentDom = actionResults.currentDom || this.currentDom;\n    }\n\n    async execute() {\n        for (const a of this.actions) {\n            try {\n                const action = new Action(a, this.userPreferences, this.currentDom, this.cookieItems);\n                const actionResults = await action.executeAction();\n                this.update(actionResults);\n                \n                if (actionResults.finishExecution === true) {\n                    Tools.debugLog(\"Ordered to finish execution.\");\n                    break;\n                }\n                \n            } catch(e) {\n                Tools.debugLog(\"Error running action \" + a.name);\n                Tools.debugLog(e, true);\n            }\n        }\n\n        Tools.debugLog(\"Finished actions\");\n        Tools.debugLog(this, true);\n        return {\n            totalClicks: this.clickCount,\n            outcome: this.outcome\n        };\n    }\n}","export const OUTCOMES = {\n    foundSomething: \"FOUND_SOMETHING\",\n    nothingFound: \"NOTHING_FOUND\",\n    noEntitlement: \"NO_ENTITLEMENT\"\n}\n\nexport class RunStatus {\n    constructor(outcome) {\n        this.outcome = outcome;\n    }\n}","import { RulesEngine } from './RulesEngine/RulesEngine';\r\n\r\n// Tools imports\r\nimport { Tools } from '../Tools/Tools';\r\n\r\nimport { Request, Messages } from '../shared';\r\nimport { OUTCOMES, RunStatus } from './RunStatus';\r\n\r\nexport class Run {\r\n\r\n    static run = async (actions, tabId, hostname, provider) => {\r\n        const results = await new Request(Messages.UserPreferences.GetUserPreferences).sendRequest();\r\n        const userPreferences = results.message.payload.userPreferences;\r\n    \r\n        if (provider.background) {\r\n            Tools.hideBackground(userPreferences, provider);\r\n        }\r\n        \r\n        const rulesEngine = new RulesEngine(userPreferences, actions);\r\n\r\n        return new Promise( (resolve, reject) => {\r\n            setTimeout( () => {\r\n                rulesEngine.execute()\r\n                .then(async (executionResults) => {            \r\n                    executionResults.hostname = hostname;\r\n                    await new Request(Messages.Tab.UpdateExecutionResults, { tabId, executionResults }).sendRequest();\r\n                    resolve();\r\n                })\r\n                .catch((e) => {\r\n                    Tools.debugLog(e, true);\r\n                    reject(e);\r\n                });\r\n            }, provider.delay ? provider.delay : 0);\r\n        });\r\n    }\r\n\r\n    static runForURL = async (rootDomain, hostname, tabId, isEligible) => {\r\n        try {\r\n            let provider;\r\n            let actions;\r\n            \r\n            const result = \r\n                await new Request(Messages.Provider.GetProviderInfo, { provider: rootDomain }).sendRequest();\r\n\r\n            provider = result.message.payload.provider;\r\n\r\n            if (provider && provider.actions) {\r\n                provider.main = true;\r\n                actions = provider.actions;\r\n\r\n                // If user is not eligible, return an error here.\r\n                if (isEligible) {\r\n                    await this.run(actions, tabId, hostname, provider);\r\n                    await new Request(Messages.Entitlement.IncrementCounter, { hostname: hostname }).sendRequest();\r\n\r\n                    return new RunStatus(OUTCOMES.foundSomething);\r\n                } else {\r\n                    Tools.debugLog(\"No entitlement.\");\r\n                    return new RunStatus(OUTCOMES.noEntitlement);\r\n                }\r\n            } else {\r\n                return new RunStatus(OUTCOMES.nothingFound);\r\n            }\r\n        } catch(e) {\r\n            Tools.debugLog(\"Couldn't run for URL.\");\r\n            return new RunStatus(OUTCOMES.nothingFound);\r\n        }\r\n    }\r\n\r\n    static runForProviders = async (hostname, tabId, detectTimeout, isEligible) => {\r\n            const results = await new Request(Messages.Provider.GetProviderDetectors).sendRequest();\r\n            let providerDetectors = results.message.payload.providerDetectors;\r\n            let provider = await Tools.findProvider(providerDetectors, detectTimeout);\r\n            let executedOnce = false;\r\n\r\n            // Find one provider and run for it asap\r\n            if (provider != null) {\r\n                Tools.debugLog(\"Found provider: \" + JSON.stringify(provider));\r\n\r\n                await Tools.delay(provider.delay ? provider.delay : 0);\r\n                 \r\n                // CHECK TO SEE IF ELEMENTS ARE HIDDEN\r\n                if (!Tools.isHidden(provider)) {\r\n                    try {\r\n                        if (isEligible) {\r\n                            await this.executeProviderRules(tabId, hostname, provider);\r\n                            executedOnce = true;\r\n                        } else {\r\n                            return new RunStatus(OUTCOMES.noEntitlement);\r\n                        }\r\n                    } catch(e) {\r\n                        Tools.debugLog(\"Error executing provider rules: \" + e);\r\n                    }\r\n                } else {\r\n                    Tools.debugLog(\"Not running for provider as it's hidden.\");\r\n                    // Need to implement a way of checking again during a time period\r\n                    // Banners may start hidden but then show up\r\n                }\r\n                providerDetectors = providerDetectors.filter(p => p.detector !== provider.detector);\r\n            }\r\n\r\n            // Find all potentially missing providers without a timeout; DOM should have fully loaded by now\r\n            const missingProviders = await Tools.findExistingProviders(providerDetectors);\r\n            const filteredProviders = missingProviders.filter(p => p != null);\r\n            let executedProviders;\r\n\r\n            if (filteredProviders !== null && filteredProviders.length > 0) {\r\n                if (isEligible) {\r\n                    executedProviders = await Promise.all(\r\n                        filteredProviders.map(provider => this.executeProviderRules(tabId, hostname, provider))\r\n                    );\r\n                } else {\r\n                    Tools.debugLog(\"No entitlement.\");\r\n                    return new RunStatus(OUTCOMES.noEntitlement);\r\n                }\r\n            }\r\n\r\n            let anyExecution = executedOnce || executedProviders.some(result => result === true)\r\n            \r\n            if (anyExecution) {\r\n                await new Request(Messages.Entitlement.IncrementCounter, { hostname: hostname }).sendRequest();\r\n                return new RunStatus(OUTCOMES.foundSomething);\r\n            } else {\r\n                return new RunStatus(OUTCOMES.nothingFound);\r\n            }\r\n    }\r\n\r\n    static executeProviderRules = async (tabId, hostname, providerToRun) => {\r\n        Tools.debugLog(\"Running for \" + JSON.stringify(providerToRun));\r\n        try {\r\n            const results = \r\n                await new Request(Messages.Provider.GetProviderInfo, { provider: providerToRun.name }).sendRequest();\r\n            Tools.debugLog(\"Get provider info results: \");\r\n            Tools.debugLog(results, true);\r\n            const provider = results.message.payload.provider;\r\n            let actions = provider.actions;\r\n\r\n            await this.run(actions, tabId, hostname, provider);\r\n            return true;\r\n        } catch(e) {\r\n            Tools.debugLog(\"Error inside run function.\");\r\n            return false;\r\n        }\r\n    }\r\n}\r\n","//@ts-check\nimport { Request, Messages } from '../shared';\nimport { Tools } from '../Tools/Tools';\n\nexport class Notifications {\n    static async notifyTabFinished(tabId, hostname) {\n        try {\n            const results = await new Request(Messages.Tab.TabFinished, { tabId, hostname }).sendRequest();\n            return results;\n        } catch(e) {\n            return e;\n        }\n    }\n\n    static async notifyNoEntitlement(tabId, hostname) {\n        try {\n            const results = await new Request(Messages.Tab.TabNoEntitlement, { tabId, hostname }).sendRequest();\n            return results;\n        } catch(e) {\n            return e;\n        }\n    }\n\n    static async notifyContentScriptStarted() {\n        try {\n            Tools.debugLog(\"Sending message\");\n            const results = await new Request(Messages.Generic.ContentScriptStarted).sendRequest();\n            Tools.debugLog(\"Returned from sending message\");\n            return results;\n        } catch(e) {\n            Tools.debugLog(\"Error from sending message: \" + e);\n            return e;\n        }\n    }\n}","/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nimport {\n\tICookieStorageData,\n\tICognitoStorage,\n} from 'amazon-cognito-identity-js';\n\n/**\n * Parameters for user sign up\n */\nexport interface SignUpParams {\n\tusername: string;\n\tpassword: string;\n\tattributes?: object;\n\tvalidationData?: { [key: string]: any };\n\tclientMetadata?: { [key: string]: string };\n}\n\nexport interface AuthCache {\n\tsetItem();\n\tgetItem();\n\tremoveItem();\n}\n\n/**\n * Auth instance options\n */\nexport interface AuthOptions {\n\tuserPoolId?: string;\n\tuserPoolWebClientId?: string;\n\tidentityPoolId?: string;\n\tregion?: string;\n\tmandatorySignIn?: boolean;\n\tcookieStorage?: ICookieStorageData;\n\toauth?: OAuthOpts;\n\trefreshHandlers?: object;\n\tstorage?: ICognitoStorage;\n\tauthenticationFlowType?: string;\n\tidentityPoolRegion?: string;\n\tclientMetadata?: any;\n\tendpoint?: string;\n}\n\nexport enum CognitoHostedUIIdentityProvider {\n\tCognito = 'COGNITO',\n\tGoogle = 'Google',\n\tFacebook = 'Facebook',\n\tAmazon = 'LoginWithAmazon',\n\tApple = 'SignInWithApple',\n}\n\nexport type LegacyProvider =\n\t| 'google'\n\t| 'facebook'\n\t| 'amazon'\n\t| 'developer'\n\t| string;\n\nexport type FederatedSignInOptions = {\n\tprovider: CognitoHostedUIIdentityProvider;\n\tcustomState?: string;\n};\n\nexport type FederatedSignInOptionsCustom = {\n\tcustomProvider: string;\n\tcustomState?: string;\n};\n\nexport function isFederatedSignInOptions(\n\tobj: any\n): obj is FederatedSignInOptions {\n\tconst keys: (keyof FederatedSignInOptions)[] = ['provider'];\n\treturn obj && !!keys.find(k => obj.hasOwnProperty(k));\n}\n\nexport function isFederatedSignInOptionsCustom(\n\tobj: any\n): obj is FederatedSignInOptionsCustom {\n\tconst keys: (keyof FederatedSignInOptionsCustom)[] = ['customProvider'];\n\treturn obj && !!keys.find(k => obj.hasOwnProperty(k));\n}\n\nexport function hasCustomState(obj: any): boolean {\n\tconst keys: (keyof (\n\t\t| FederatedSignInOptions\n\t\t| FederatedSignInOptionsCustom\n\t))[] = ['customState'];\n\treturn obj && !!keys.find(k => obj.hasOwnProperty(k));\n}\n\n/**\n * Details for multi-factor authentication\n */\nexport interface MfaRequiredDetails {\n\tchallengeName: any;\n\tchallengeParameters: any;\n}\n\n/**\n * interface for federatedResponse\n */\nexport interface FederatedResponse {\n\t// access token\n\ttoken: string;\n\t// identity id\n\tidentity_id?: string;\n\t// the universal time when token expired\n\texpires_at: number;\n}\n\n/**\n * interface for federatedUser\n */\nexport interface FederatedUser {\n\tname: string;\n\temail?: string;\n\tpicture?: string;\n}\n\nexport interface AwsCognitoOAuthOpts {\n\tdomain: string;\n\tscope: Array<string>;\n\tredirectSignIn: string;\n\tredirectSignOut: string;\n\tresponseType: string;\n\toptions?: object;\n\turlOpener?: (url: string, redirectUrl: string) => Promise<any>;\n}\n\nexport function isCognitoHostedOpts(\n\toauth: OAuthOpts\n): oauth is AwsCognitoOAuthOpts {\n\treturn (<AwsCognitoOAuthOpts>oauth).redirectSignIn !== undefined;\n}\n\nexport interface Auth0OAuthOpts {\n\tdomain: string;\n\tclientID: string;\n\tscope: string;\n\tredirectUri: string;\n\taudience: string;\n\tresponseType: string;\n\treturnTo: string;\n\turlOpener?: (url: string, redirectUrl: string) => Promise<any>;\n}\n\n// Replacing to fix typings\n// export interface OAuth {\n//     awsCognito?: awsCognitoOAuthOpts,\n//     auth0?: any\n// }\n\nexport type OAuthOpts = AwsCognitoOAuthOpts | Auth0OAuthOpts;\n\nexport interface ConfirmSignUpOptions {\n\tforceAliasCreation?: boolean;\n\tclientMetadata?: ClientMetaData;\n}\n\nexport interface SignOutOpts {\n\tglobal?: boolean;\n}\n\nexport interface CurrentUserOpts {\n\tbypassCache: boolean;\n}\n\nexport interface GetPreferredMFAOpts {\n\tbypassCache: boolean;\n}\n\nexport type UsernamePasswordOpts = {\n\tusername: string;\n\tpassword: string;\n\tvalidationData?: { [key: string]: any };\n};\n\nexport enum AuthErrorTypes {\n\tNoConfig = 'noConfig',\n\tMissingAuthConfig = 'missingAuthConfig',\n\tEmptyUsername = 'emptyUsername',\n\tInvalidUsername = 'invalidUsername',\n\tEmptyPassword = 'emptyPassword',\n\tEmptyCode = 'emptyCode',\n\tSignUpError = 'signUpError',\n\tNoMFA = 'noMFA',\n\tInvalidMFA = 'invalidMFA',\n\tEmptyChallengeResponse = 'emptyChallengeResponse',\n\tNoUserSession = 'noUserSession',\n\tDefault = 'default',\n\tDeviceConfig = 'deviceConfig',\n\tNetworkError = 'networkError',\n}\n\nexport type AuthErrorMessages = { [key in AuthErrorTypes]: AuthErrorMessage };\n\nexport interface AuthErrorMessage {\n\tmessage: string;\n\tlog?: string;\n}\n\n// We can extend this in the future if needed\nexport type SignInOpts = UsernamePasswordOpts;\n\nexport type ClientMetaData =\n\t| {\n\t\t\t[key: string]: string;\n\t  }\n\t| undefined;\n\nexport function isUsernamePasswordOpts(obj: any): obj is UsernamePasswordOpts {\n\treturn !!(obj as UsernamePasswordOpts).username;\n}\n\nexport interface IAuthDevice {\n\tid: string;\n\tname: string;\n}\n","//@ts-check\r\n\r\nexport const ExpirationDateOption = {\r\n    PREFERENCES: \"preferences\",\r\n    LOGS: \"logs\",\r\n    PROVIDER: \"provider\",\r\n    PROVIDER_DETECTORS: \"provider_detectors\",\r\n    RULES: \"rules\",\r\n    CATEGORIES: \"categories\",\r\n    USAGE_METRICS: \"usageMetrics\",\r\n    REPORTED_WEBSITES: \"reportedSites\",\r\n    EASYLIST_COOKIES: \"easyListCookies\",\r\n    RC_ID_INSTALLED_AT: \"RCIdInstalledAt\",\r\n}\r\n\r\nexport class ExpirationDates {\r\n\r\n    static expirationDateInStringFor(option) {\r\n        return ExpirationDates.expirationDateFor(option).toString();\r\n    }\r\n\r\n    static expirationDateFor(option, expirationDate = new Date()) {\r\n\r\n        let time = this.expirationTimeFor(option);\r\n\r\n        expirationDate.setMinutes(expirationDate.getMinutes() + time);\r\n\r\n        return expirationDate;\r\n\r\n    }\r\n\r\n    static expirationTimeFor(option) {\r\n        switch (option) {\r\n\r\n            case ExpirationDateOption.PREFERENCES:\r\n                return 5;\r\n\r\n            case ExpirationDateOption.PROVIDER:\r\n                return 2;\r\n\r\n            case ExpirationDateOption.REPORTED_WEBSITES:\r\n                return 15;\r\n\r\n            case ExpirationDateOption.PROVIDER_DETECTORS:\r\n            case ExpirationDateOption.RULES:\r\n            case ExpirationDateOption.CATEGORIES:\r\n                return 180;\r\n\r\n            case ExpirationDateOption.EASYLIST_COOKIES:\r\n                return 240;\r\n\r\n            case ExpirationDateOption.RC_ID_INSTALLED_AT:\r\n                return 7 * 24 * 60;\r\n            \r\n            default:\r\n                return 0;\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n","import { ExpirationDateOption, ExpirationDates } from '../ExpirationDates';\r\n\r\nexport const isExpired = installedAt => {\r\n    return new Date() >= ExpirationDates.expirationDateFor(ExpirationDateOption.RC_ID_INSTALLED_AT, new Date(installedAt));\r\n}\r\n\r\nexport const isEligible = (isEntitled, isRCIdSynced, installedAt) => {\r\n    return isEntitled && (isRCIdSynced || !installedAt || !isExpired(installedAt));\r\n}\r\n","export const themeColors = {\r\n    \"firefoxDark\": \"#2A2A2E\",\r\n    \"firefoxDarkRGB\": \"rgb(43, 42, 51)\"\r\n}\r\n\r\nexport class Theme {\r\n    constructor() {\r\n        this.osDark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n    }\r\n\r\n    async getFirefoxTheme() {\r\n        try {\r\n            const theme = await browser.theme.getCurrent();\r\n            \r\n            this.firefoxDark = \r\n                theme.colors[\"ntp_background\"] === themeColors.firefoxDark ||\r\n                theme.colors[\"ntp_background\"] === themeColors.firefoxDarkRGB;\r\n\r\n        } catch (e) {\r\n            this.firefoxDark = false;\r\n        }\r\n\r\n        return this.firefoxDark;\r\n    }\r\n\r\n    async isDarkTheme() {\r\n        return this.osDark || (await this.getFirefoxTheme());\r\n    }\r\n}","//@ts-check\r\nimport { UAParser } from \"ua-parser-js\"\r\n\r\nexport default class BrowserHelper {\r\n\r\n    /**\r\n     * @param {string} userAgent\r\n     */\r\n    static isMobileSafari(userAgent) {\r\n        \r\n        let browserName = this.browserName(userAgent);\r\n\r\n        return browserName === \"Mobile Safari\" || (browserName === \"Safari\"  && navigator.maxTouchPoints && navigator.maxTouchPoints > 1);\r\n\r\n    }\r\n\r\n    static isiOS(userAgent) {\r\n\r\n        let result = new UAParser().setUA(userAgent).getResult();\r\n        return result.os.name === \"iOS\";\r\n\r\n    }\r\n\r\n    /**\r\n     * @param {string} userAgent\r\n     */\r\n    static browserName(userAgent) {\r\n\r\n        let result = new UAParser().setUA(userAgent).getResult();\r\n        return result.browser.name;\r\n\r\n    }\r\n\r\n}","/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nimport { ConsoleLogger as Logger } from './Logger';\n\nconst logger = new Logger('Hub');\n\nconst AMPLIFY_SYMBOL = (typeof Symbol !== 'undefined' &&\ntypeof Symbol.for === 'function'\n\t? Symbol.for('amplify_default')\n\t: '@@amplify_default') as Symbol;\ninterface IPattern {\n\tpattern: RegExp;\n\tcallback: HubCallback;\n}\n\ninterface IListener {\n\tname: string;\n\tcallback: HubCallback;\n}\n\nexport type HubCapsule = {\n\tchannel: string;\n\tpayload: HubPayload;\n\tsource: string;\n\tpatternInfo?: string[];\n};\n\nexport type HubPayload = {\n\tevent: string;\n\tdata?: any;\n\tmessage?: string;\n};\n\nexport type HubCallback = (capsule: HubCapsule) => void;\n\nexport type LegacyCallback = { onHubCapsule: HubCallback };\n\nfunction isLegacyCallback(callback: any): callback is LegacyCallback {\n\treturn (<LegacyCallback>callback).onHubCapsule !== undefined;\n}\n\nexport class HubClass {\n\tname: string;\n\tprivate listeners: IListener[] = [];\n\tprivate patterns: IPattern[] = [];\n\n\tprotectedChannels = [\n\t\t'core',\n\t\t'auth',\n\t\t'api',\n\t\t'analytics',\n\t\t'interactions',\n\t\t'pubsub',\n\t\t'storage',\n\t\t'xr',\n\t];\n\n\tconstructor(name: string) {\n\t\tthis.name = name;\n\t}\n\n\t// Note - Need to pass channel as a reference for removal to work and not anonymous function\n\tremove(channel: string | RegExp, listener: HubCallback) {\n\t\tif (channel instanceof RegExp) {\n\t\t\tconst pattern = this.patterns.find(\n\t\t\t\t({ pattern }) => pattern.source === channel.source\n\t\t\t);\n\t\t\tif (!pattern) {\n\t\t\t\tlogger.warn(`No listeners for ${channel}`);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.patterns = [...this.patterns.filter(x => x !== pattern)];\n\t\t} else {\n\t\t\tconst holder = this.listeners[channel];\n\t\t\tif (!holder) {\n\t\t\t\tlogger.warn(`No listeners for ${channel}`);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.listeners[channel] = [\n\t\t\t\t...holder.filter(({ callback }) => callback !== listener),\n\t\t\t];\n\t\t}\n\t}\n\n\tdispatch(\n\t\tchannel: string,\n\t\tpayload: HubPayload,\n\t\tsource: string = '',\n\t\tampSymbol?: Symbol\n\t) {\n\t\tif (this.protectedChannels.indexOf(channel) > -1) {\n\t\t\tconst hasAccess = ampSymbol === AMPLIFY_SYMBOL;\n\n\t\t\tif (!hasAccess) {\n\t\t\t\tlogger.warn(\n\t\t\t\t\t`WARNING: ${channel} is protected and dispatching on it can have unintended consequences`\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tconst capsule: HubCapsule = {\n\t\t\tchannel,\n\t\t\tpayload: { ...payload },\n\t\t\tsource,\n\t\t\tpatternInfo: [],\n\t\t};\n\n\t\ttry {\n\t\t\tthis._toListeners(capsule);\n\t\t} catch (e) {\n\t\t\tlogger.error(e);\n\t\t}\n\t}\n\n\tlisten(\n\t\tchannel: string | RegExp,\n\t\tcallback?: HubCallback | LegacyCallback,\n\t\tlistenerName = 'noname'\n\t) {\n\t\tlet cb: HubCallback;\n\t\t// Check for legacy onHubCapsule callback for backwards compatability\n\t\tif (isLegacyCallback(callback)) {\n\t\t\tlogger.warn(\n\t\t\t\t`WARNING onHubCapsule is Deprecated. Please pass in a callback.`\n\t\t\t);\n\t\t\tcb = callback.onHubCapsule.bind(callback);\n\t\t} else if (typeof callback !== 'function') {\n\t\t\tthrow new Error('No callback supplied to Hub');\n\t\t} else {\n\t\t\tcb = callback;\n\t\t}\n\n\t\tif (channel instanceof RegExp) {\n\t\t\tthis.patterns.push({\n\t\t\t\tpattern: channel,\n\t\t\t\tcallback: cb,\n\t\t\t});\n\t\t} else {\n\t\t\tlet holder = this.listeners[channel];\n\n\t\t\tif (!holder) {\n\t\t\t\tholder = [];\n\t\t\t\tthis.listeners[channel] = holder;\n\t\t\t}\n\n\t\t\tholder.push({\n\t\t\t\tname: listenerName,\n\t\t\t\tcallback: cb,\n\t\t\t});\n\t\t}\n\n\t\treturn () => {\n\t\t\tthis.remove(channel, cb);\n\t\t};\n\t}\n\n\tprivate _toListeners(capsule: HubCapsule) {\n\t\tconst { channel, payload } = capsule;\n\t\tconst holder = this.listeners[channel];\n\n\t\tif (holder) {\n\t\t\tholder.forEach(listener => {\n\t\t\t\tlogger.debug(`Dispatching to ${channel} with `, payload);\n\t\t\t\ttry {\n\t\t\t\t\tlistener.callback(capsule);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tlogger.error(e);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (this.patterns.length > 0) {\n\t\t\tif (!payload.message) {\n\t\t\t\tlogger.warn(`Cannot perform pattern matching without a message key`);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst payloadStr = payload.message;\n\n\t\t\tthis.patterns.forEach(pattern => {\n\t\t\t\tconst match = payloadStr.match(pattern.pattern);\n\t\t\t\tif (match) {\n\t\t\t\t\tconst [, ...groups] = match;\n\t\t\t\t\tconst dispatchingCapsule: HubCapsule = {\n\t\t\t\t\t\t...capsule,\n\t\t\t\t\t\tpatternInfo: groups,\n\t\t\t\t\t};\n\t\t\t\t\ttry {\n\t\t\t\t\t\tpattern.callback(dispatchingCapsule);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tlogger.error(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n\n/*We export a __default__ instance of HubClass to use it as a \npseudo Singleton for the main messaging bus, however you can still create\nyour own instance of HubClass() for a separate \"private bus\" of events.*/\nexport const Hub = new HubClass('__default__');\n/**\n * @deprecated use named import\n */\nexport default Hub;\n","/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nlet dataMemory = {};\n\n/** @class */\nexport class MemoryStorage {\n\t/**\n\t * This is used to set a specific item in storage\n\t * @param {string} key - the key for the item\n\t * @param {object} value - the value\n\t * @returns {string} value that was set\n\t */\n\tstatic setItem(key: string, value: any) {\n\t\tdataMemory[key] = value;\n\t\treturn dataMemory[key];\n\t}\n\n\t/**\n\t * This is used to get a specific key from storage\n\t * @param {string} key - the key for the item\n\t * This is used to clear the storage\n\t * @returns {string} the data item\n\t */\n\tstatic getItem(key: string) {\n\t\treturn Object.prototype.hasOwnProperty.call(dataMemory, key)\n\t\t\t? dataMemory[key]\n\t\t\t: undefined;\n\t}\n\n\t/**\n\t * This is used to remove an item from storage\n\t * @param {string} key - the key being set\n\t * @returns {string} value - value that was deleted\n\t */\n\tstatic removeItem(key: string) {\n\t\treturn delete dataMemory[key];\n\t}\n\n\t/**\n\t * This is used to clear the storage\n\t * @returns {string} nothing\n\t */\n\tstatic clear() {\n\t\tdataMemory = {};\n\t\treturn dataMemory;\n\t}\n}\n\nexport class StorageHelper {\n\tprivate storageWindow: any;\n\t/**\n\t * This is used to get a storage object\n\t * @returns {object} the storage\n\t */\n\tconstructor() {\n\t\ttry {\n\t\t\tthis.storageWindow = window.localStorage;\n\t\t\tthis.storageWindow.setItem('aws.amplify.test-ls', 1);\n\t\t\tthis.storageWindow.removeItem('aws.amplify.test-ls');\n\t\t} catch (exception) {\n\t\t\tthis.storageWindow = MemoryStorage;\n\t\t}\n\t}\n\n\t/**\n\t * This is used to return the storage\n\t * @returns {object} the storage\n\t */\n\tgetStorage(): any {\n\t\treturn this.storageWindow;\n\t}\n}\n\n/**\n * @deprecated use named import\n */\nexport default StorageHelper;\n","/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nconst MIME_MAP = [\n\t{ type: 'text/plain', ext: 'txt' },\n\t{ type: 'text/html', ext: 'html' },\n\t{ type: 'text/javascript', ext: 'js' },\n\t{ type: 'text/css', ext: 'css' },\n\t{ type: 'text/csv', ext: 'csv' },\n\t{ type: 'text/yaml', ext: 'yml' },\n\t{ type: 'text/yaml', ext: 'yaml' },\n\t{ type: 'text/calendar', ext: 'ics' },\n\t{ type: 'text/calendar', ext: 'ical' },\n\n\t{ type: 'image/apng', ext: 'apng' },\n\t{ type: 'image/bmp', ext: 'bmp' },\n\t{ type: 'image/gif', ext: 'gif' },\n\t{ type: 'image/x-icon', ext: 'ico' },\n\t{ type: 'image/x-icon', ext: 'cur' },\n\t{ type: 'image/jpeg', ext: 'jpg' },\n\t{ type: 'image/jpeg', ext: 'jpeg' },\n\t{ type: 'image/jpeg', ext: 'jfif' },\n\t{ type: 'image/jpeg', ext: 'pjp' },\n\t{ type: 'image/jpeg', ext: 'pjpeg' },\n\t{ type: 'image/png', ext: 'png' },\n\t{ type: 'image/svg+xml', ext: 'svg' },\n\t{ type: 'image/tiff', ext: 'tif' },\n\t{ type: 'image/tiff', ext: 'tiff' },\n\t{ type: 'image/webp', ext: 'webp' },\n\n\t{ type: 'application/json', ext: 'json' },\n\t{ type: 'application/xml', ext: 'xml' },\n\t{ type: 'application/x-sh', ext: 'sh' },\n\t{ type: 'application/zip', ext: 'zip' },\n\t{ type: 'application/x-rar-compressed', ext: 'rar' },\n\t{ type: 'application/x-tar', ext: 'tar' },\n\t{ type: 'application/x-bzip', ext: 'bz' },\n\t{ type: 'application/x-bzip2', ext: 'bz2' },\n\t{ type: 'application/pdf', ext: 'pdf' },\n\t{ type: 'application/java-archive', ext: 'jar' },\n\t{ type: 'application/msword', ext: 'doc' },\n\t{ type: 'application/vnd.ms-excel', ext: 'xls' },\n\t{ type: 'application/vnd.ms-excel', ext: 'xlsx' },\n\n\t{ type: 'message/rfc822', ext: 'eml' },\n];\n\nexport const isEmpty = (obj = {}) => Object.keys(obj).length === 0;\n\nexport const sortByField = (list, field, dir) => {\n\tif (!list || !list.sort) {\n\t\treturn false;\n\t}\n\n\tconst dirX = dir && dir === 'desc' ? -1 : 1;\n\tlist.sort(function(a, b) {\n\t\tconst a_val = a[field];\n\t\tconst b_val = b[field];\n\n\t\tif (typeof b_val === 'undefined') {\n\t\t\treturn typeof a_val === 'undefined' ? 0 : 1 * dirX;\n\t\t}\n\n\t\tif (typeof a_val === 'undefined') {\n\t\t\treturn -1 * dirX;\n\t\t}\n\n\t\tif (a_val < b_val) {\n\t\t\treturn -1 * dirX;\n\t\t}\n\t\tif (a_val > b_val) {\n\t\t\treturn 1 * dirX;\n\t\t}\n\n\t\treturn 0;\n\t});\n\n\treturn true;\n};\n\nexport const objectLessAttributes = (obj, less) => {\n\tconst ret = Object.assign({}, obj);\n\tif (less) {\n\t\tif (typeof less === 'string') {\n\t\t\tdelete ret[less];\n\t\t} else {\n\t\t\tless.forEach(attr => {\n\t\t\t\tdelete ret[attr];\n\t\t\t});\n\t\t}\n\t}\n\n\treturn ret;\n};\n\nexport const filenameToContentType = (\n\tfilename,\n\tdefVal = 'application/octet-stream'\n) => {\n\tconst name = filename.toLowerCase();\n\n\tconst filtered = MIME_MAP.filter(mime => name.endsWith('.' + mime.ext));\n\treturn filtered.length > 0 ? filtered[0].type : defVal;\n};\n\nexport const isTextFile = contentType => {\n\tconst type = contentType.toLowerCase();\n\tif (type.startsWith('text/')) {\n\t\treturn true;\n\t}\n\treturn (\n\t\t'application/json' === type ||\n\t\t'application/xml' === type ||\n\t\t'application/sh' === type\n\t);\n};\n\nexport const generateRandomString = () => {\n\tlet result = '';\n\tconst chars =\n\t\t'0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\tfor (let i = 32; i > 0; i -= 1) {\n\t\tresult += chars[Math.floor(Math.random() * chars.length)];\n\t}\n\treturn result;\n};\n\nexport const makeQuerablePromise = promise => {\n\tif (promise.isResolved) return promise;\n\n\tlet isPending = true;\n\tlet isRejected = false;\n\tlet isFullfilled = false;\n\n\tconst result = promise.then(\n\t\tdata => {\n\t\t\tisFullfilled = true;\n\t\t\tisPending = false;\n\t\t\treturn data;\n\t\t},\n\t\te => {\n\t\t\tisRejected = true;\n\t\t\tisPending = false;\n\t\t\tthrow e;\n\t\t}\n\t);\n\n\tresult.isFullfilled = () => isFullfilled;\n\tresult.isPending = () => isPending;\n\tresult.isRejected = () => isRejected;\n\n\treturn result;\n};\n\nexport const isWebWorker = () => {\n\tif (typeof self === 'undefined') {\n\t\treturn false;\n\t}\n\tconst selfContext = self as { WorkerGlobalScope? };\n\treturn typeof selfContext.WorkerGlobalScope !== 'undefined' &&\n\t\tself instanceof selfContext.WorkerGlobalScope;\n};\n\nexport const browserOrNode = () => {\n\tconst isBrowser =\n\t\ttypeof window !== 'undefined' && typeof window.document !== 'undefined';\n\tconst isNode =\n\t\ttypeof process !== 'undefined' &&\n\t\tprocess.versions != null &&\n\t\tprocess.versions.node != null;\n\n\treturn {\n\t\tisBrowser,\n\t\tisNode,\n\t};\n};\n\n/**\n * transfer the first letter of the keys to lowercase\n * @param {Object} obj - the object need to be transferred\n * @param {Array} whiteListForItself - whitelist itself from being transferred\n * @param {Array} whiteListForChildren - whitelist its children keys from being transferred\n */\nexport const transferKeyToLowerCase = (\n\tobj,\n\twhiteListForItself = [],\n\twhiteListForChildren = []\n) => {\n\tif (!isStrictObject(obj)) return obj;\n\tconst ret = {};\n\n\tfor (const key in obj) {\n\t\tif (obj.hasOwnProperty(key)) {\n\t\t\tconst transferedKey = whiteListForItself.includes(key)\n\t\t\t\t? key\n\t\t\t\t: key[0].toLowerCase() + key.slice(1);\n\n\t\t\tret[transferedKey] = whiteListForChildren.includes(key)\n\t\t\t\t? obj[key]\n\t\t\t\t: transferKeyToLowerCase(\n\t\t\t\t\t\tobj[key],\n\t\t\t\t\t\twhiteListForItself,\n\t\t\t\t\t\twhiteListForChildren\n\t\t\t\t  );\n\t\t}\n\t}\n\n\treturn ret;\n};\n\n/**\n * transfer the first letter of the keys to lowercase\n * @param {Object} obj - the object need to be transferred\n * @param {Array} whiteListForItself - whitelist itself from being transferred\n * @param {Array} whiteListForChildren - whitelist its children keys from being transferred\n */\nexport const transferKeyToUpperCase = (\n\tobj,\n\twhiteListForItself = [],\n\twhiteListForChildren = []\n) => {\n\tif (!isStrictObject(obj)) return obj;\n\tconst ret = {};\n\n\tfor (const key in obj) {\n\t\tif (obj.hasOwnProperty(key)) {\n\t\t\tconst transferredKey = whiteListForItself.includes(key)\n\t\t\t\t? key\n\t\t\t\t: key[0].toUpperCase() + key.slice(1);\n\n\t\t\tret[transferredKey] = whiteListForChildren.includes(key)\n\t\t\t\t? obj[key]\n\t\t\t\t: transferKeyToUpperCase(\n\t\t\t\t\t\tobj[key],\n\t\t\t\t\t\twhiteListForItself,\n\t\t\t\t\t\twhiteListForChildren\n\t\t\t\t  );\n\t\t}\n\t}\n\treturn ret;\n};\n\n/**\n * Return true if the object is a strict object\n * which means it's not Array, Function, Number, String, Boolean or Null\n * @param obj the Object\n */\nexport const isStrictObject = obj => {\n\treturn (\n\t\tobj instanceof Object &&\n\t\t!(obj instanceof Array) &&\n\t\t!(obj instanceof Function) &&\n\t\t!(obj instanceof Number) &&\n\t\t!(obj instanceof String) &&\n\t\t!(obj instanceof Boolean)\n\t);\n};\n\n/**\n * @deprecated use per-function imports\n */\nexport class JS {\n\tstatic isEmpty = isEmpty;\n\tstatic sortByField = sortByField;\n\tstatic objectLessAttributes = objectLessAttributes;\n\tstatic filenameToContentType = filenameToContentType;\n\tstatic isTextFile = isTextFile;\n\tstatic generateRandomString = generateRandomString;\n\tstatic makeQuerablePromise = makeQuerablePromise;\n\tstatic isWebWorker = isWebWorker;\n\tstatic browserOrNode = browserOrNode;\n\tstatic transferKeyToLowerCase = transferKeyToLowerCase;\n\tstatic transferKeyToUpperCase = transferKeyToUpperCase;\n\tstatic isStrictObject = isStrictObject;\n}\n\n/**\n * @deprecated use per-function imports\n */\nexport default JS;\n","import { DelayFunction } from '../types';\nimport { ConsoleLogger as Logger } from '../Logger/ConsoleLogger';\nconst logger = new Logger('Util');\n\nexport class NonRetryableError extends Error {\n\tpublic readonly nonRetryable = true;\n\tconstructor(message: string) {\n\t\tsuper(message);\n\t}\n}\n\nconst isNonRetryableError = (obj: any): obj is NonRetryableError => {\n\tconst key: keyof NonRetryableError = 'nonRetryable';\n\treturn obj && obj[key];\n};\n\n/**\n * @private\n * Internal use of Amplify only\n */\nexport async function retry(\n\tfunctionToRetry: Function,\n\targs: any[],\n\tdelayFn: DelayFunction,\n\tattempt: number = 1\n) {\n\tif (typeof functionToRetry !== 'function') {\n\t\tthrow Error('functionToRetry must be a function');\n\t}\n\tlogger.debug(\n\t\t`${\n\t\t\tfunctionToRetry.name\n\t\t} attempt #${attempt} with this vars: ${JSON.stringify(args)}`\n\t);\n\n\ttry {\n\t\treturn await functionToRetry(...args);\n\t} catch (err) {\n\t\tlogger.debug(`error on ${functionToRetry.name}`, err);\n\n\t\tif (isNonRetryableError(err)) {\n\t\t\tlogger.debug(`${functionToRetry.name} non retryable error`, err);\n\t\t\tthrow err;\n\t\t}\n\n\t\tconst retryIn = delayFn(attempt, args, err);\n\t\tlogger.debug(`${functionToRetry.name} retrying in ${retryIn} ms`);\n\n\t\tif (retryIn !== false) {\n\t\t\tawait new Promise(res => setTimeout(res, retryIn));\n\t\t\treturn await retry(functionToRetry, args, delayFn, attempt + 1);\n\t\t} else {\n\t\t\tthrow err;\n\t\t}\n\t}\n}\n\nconst MAX_DELAY_MS = 5 * 60 * 1000;\n\nfunction jitteredBackoff(maxDelayMs: number): DelayFunction {\n\tconst BASE_TIME_MS = 100;\n\tconst JITTER_FACTOR = 100;\n\n\treturn attempt => {\n\t\tconst delay = 2 ** attempt * BASE_TIME_MS + JITTER_FACTOR * Math.random();\n\t\treturn delay > maxDelayMs ? false : delay;\n\t};\n}\n\n/**\n * @private\n * Internal use of Amplify only\n */\nexport const jitteredExponentialRetry = (\n\tfunctionToRetry: Function,\n\targs: any[],\n\tmaxDelayMs: number = MAX_DELAY_MS\n) => retry(functionToRetry, args, jitteredBackoff(maxDelayMs));\n","/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { ConsoleLogger as Logger } from '../Logger';\nimport { browserOrNode } from '../JS';\nimport { NonRetryableError } from '../Util';\n\nconst logger = new Logger('CognitoCredentials');\n\nconst waitForInit = new Promise((res, rej) => {\n\tif (!browserOrNode().isBrowser) {\n\t\tlogger.debug('not in the browser, directly resolved');\n\t\treturn res();\n\t}\n\tconst ga =\n\t\twindow['gapi'] && window['gapi'].auth2 ? window['gapi'].auth2 : null;\n\tif (ga) {\n\t\tlogger.debug('google api already loaded');\n\t\treturn res();\n\t} else {\n\t\tsetTimeout(() => {\n\t\t\treturn res();\n\t\t}, 2000);\n\t}\n});\n\nexport class GoogleOAuth {\n\tpublic initialized = false;\n\n\tconstructor() {\n\t\tthis.refreshGoogleToken = this.refreshGoogleToken.bind(this);\n\t\tthis._refreshGoogleTokenImpl = this._refreshGoogleTokenImpl.bind(this);\n\t}\n\n\tpublic async refreshGoogleToken() {\n\t\tif (!this.initialized) {\n\t\t\tlogger.debug('need to wait for the Google SDK loaded');\n\t\t\tawait waitForInit;\n\t\t\tthis.initialized = true;\n\t\t\tlogger.debug('finish waiting');\n\t\t}\n\n\t\treturn this._refreshGoogleTokenImpl();\n\t}\n\n\tprivate _refreshGoogleTokenImpl() {\n\t\tlet ga = null;\n\t\tif (browserOrNode().isBrowser)\n\t\t\tga = window['gapi'] && window['gapi'].auth2 ? window['gapi'].auth2 : null;\n\t\tif (!ga) {\n\t\t\tlogger.debug('no gapi auth2 available');\n\t\t\treturn Promise.reject('no gapi auth2 available');\n\t\t}\n\n\t\treturn new Promise((res, rej) => {\n\t\t\tga.getAuthInstance()\n\t\t\t\t.then(googleAuth => {\n\t\t\t\t\tif (!googleAuth) {\n\t\t\t\t\t\tlogger.debug('google Auth undefined');\n\t\t\t\t\t\trej(new NonRetryableError('google Auth undefined'));\n\t\t\t\t\t}\n\n\t\t\t\t\tconst googleUser = googleAuth.currentUser.get();\n\t\t\t\t\t// refresh the token\n\t\t\t\t\tif (googleUser.isSignedIn()) {\n\t\t\t\t\t\tlogger.debug('refreshing the google access token');\n\t\t\t\t\t\tgoogleUser\n\t\t\t\t\t\t\t.reloadAuthResponse()\n\t\t\t\t\t\t\t.then(authResponse => {\n\t\t\t\t\t\t\t\tconst { id_token, expires_at } = authResponse;\n\t\t\t\t\t\t\t\tres({ token: id_token, expires_at });\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.catch(err => {\n\t\t\t\t\t\t\t\tif (err && err.error === 'network_error') {\n\t\t\t\t\t\t\t\t\t// Not using NonRetryableError so handler will be retried\n\t\t\t\t\t\t\t\t\trej('Network error reloading google auth response');\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\trej(\n\t\t\t\t\t\t\t\t\t\tnew NonRetryableError(\n\t\t\t\t\t\t\t\t\t\t\t'Failed to reload google auth response'\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\trej(new NonRetryableError('User is not signed in with Google'));\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\tlogger.debug('Failed to refresh google token', err);\n\t\t\t\t\trej(new NonRetryableError('Failed to refresh google token'));\n\t\t\t\t});\n\t\t});\n\t}\n}\n\n/**\n * @deprecated use named import\n */\nexport default GoogleOAuth;\n","/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { ConsoleLogger as Logger } from '../Logger';\nimport { browserOrNode } from '../JS';\nimport { NonRetryableError } from '../Util';\n\nconst logger = new Logger('CognitoCredentials');\n\nconst waitForInit = new Promise((res, rej) => {\n\tif (!browserOrNode().isBrowser) {\n\t\tlogger.debug('not in the browser, directly resolved');\n\t\treturn res();\n\t}\n\tconst fb = window['FB'];\n\tif (fb) {\n\t\tlogger.debug('FB SDK already loaded');\n\t\treturn res();\n\t} else {\n\t\tsetTimeout(() => {\n\t\t\treturn res();\n\t\t}, 2000);\n\t}\n});\n\nexport class FacebookOAuth {\n\tpublic initialized = false;\n\n\tconstructor() {\n\t\tthis.refreshFacebookToken = this.refreshFacebookToken.bind(this);\n\t\tthis._refreshFacebookTokenImpl = this._refreshFacebookTokenImpl.bind(this);\n\t}\n\n\tpublic async refreshFacebookToken() {\n\t\tif (!this.initialized) {\n\t\t\tlogger.debug('need to wait for the Facebook SDK loaded');\n\t\t\tawait waitForInit;\n\t\t\tthis.initialized = true;\n\t\t\tlogger.debug('finish waiting');\n\t\t}\n\n\t\treturn this._refreshFacebookTokenImpl();\n\t}\n\n\tprivate _refreshFacebookTokenImpl() {\n\t\tlet fb = null;\n\t\tif (browserOrNode().isBrowser) fb = window['FB'];\n\t\tif (!fb) {\n\t\t\tconst errorMessage = 'no fb sdk available';\n\t\t\tlogger.debug(errorMessage);\n\t\t\treturn Promise.reject(new NonRetryableError(errorMessage));\n\t\t}\n\n\t\treturn new Promise((res, rej) => {\n\t\t\tfb.getLoginStatus(\n\t\t\t\tfbResponse => {\n\t\t\t\t\tif (!fbResponse || !fbResponse.authResponse) {\n\t\t\t\t\t\tconst errorMessage =\n\t\t\t\t\t\t\t'no response from facebook when refreshing the jwt token';\n\t\t\t\t\t\tlogger.debug(errorMessage);\n\t\t\t\t\t\t// There is no definitive indication for a network error in\n\t\t\t\t\t\t// fbResponse, so we are treating it as an invalid token.\n\t\t\t\t\t\trej(new NonRetryableError(errorMessage));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst response = fbResponse.authResponse;\n\t\t\t\t\t\tconst { accessToken, expiresIn } = response;\n\t\t\t\t\t\tconst date = new Date();\n\t\t\t\t\t\tconst expires_at = expiresIn * 1000 + date.getTime();\n\t\t\t\t\t\tif (!accessToken) {\n\t\t\t\t\t\t\tconst errorMessage = 'the jwtToken is undefined';\n\t\t\t\t\t\t\tlogger.debug(errorMessage);\n\t\t\t\t\t\t\trej(new NonRetryableError(errorMessage));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tres({\n\t\t\t\t\t\t\ttoken: accessToken,\n\t\t\t\t\t\t\texpires_at,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{ scope: 'public_profile,email' }\n\t\t\t);\n\t\t});\n\t}\n}\n\n/**\n * @deprecated use named import\n */\nexport default FacebookOAuth;\n","/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { GoogleOAuth as GoogleOAuthClass } from './GoogleOAuth';\nimport { FacebookOAuth as FacebookOAuthClass } from './FacebookOAuth';\n\nexport const GoogleOAuth = new GoogleOAuthClass();\nexport const FacebookOAuth = new FacebookOAuthClass();\n","/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { version } from './version';\n\nconst BASE_USER_AGENT = `aws-amplify/${version}`;\n\nexport const Platform = {\n\tuserAgent: `${BASE_USER_AGENT} js`,\n\tproduct: '',\n\tnavigator: null,\n\tisReactNative: false,\n};\nif (typeof navigator !== 'undefined' && navigator.product) {\n\tPlatform.product = navigator.product || '';\n\tPlatform.navigator = navigator || null;\n\tswitch (navigator.product) {\n\t\tcase 'ReactNative':\n\t\t\tPlatform.userAgent = `${BASE_USER_AGENT} react-native`;\n\t\t\tPlatform.isReactNative = true;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tPlatform.userAgent = `${BASE_USER_AGENT} js`;\n\t\t\tPlatform.isReactNative = false;\n\t\t\tbreak;\n\t}\n}\n\nexport const getAmplifyUserAgent = () => {\n\treturn Platform.userAgent;\n};\n\n/**\n * @deprecated use named import\n */\nexport default Platform;\n","import { ConsoleLogger as LoggerClass } from './Logger';\n\nconst logger = new LoggerClass('Amplify');\n\nexport class AmplifyClass {\n\t// Everything that is `register`ed is tracked here\n\tprivate _components = [];\n\tprivate _config = {};\n\n\t// All modules (with `getModuleName()`) are stored here for dependency injection\n\tprivate _modules = {};\n\n\t// for backward compatibility to avoid breaking change\n\t// if someone is using like Amplify.Auth\n\tAuth = null;\n\tAnalytics = null;\n\tAPI = null;\n\tCredentials = null;\n\tStorage = null;\n\tI18n = null;\n\tCache = null;\n\tPubSub = null;\n\tInteractions = null;\n\tPushnotification = null;\n\tUI = null;\n\tXR = null;\n\tPredictions = null;\n\tDataStore = null;\n\tGeo = null;\n\n\tLogger = LoggerClass;\n\tServiceWorker = null;\n\n\tregister(comp) {\n\t\tlogger.debug('component registered in amplify', comp);\n\t\tthis._components.push(comp);\n\t\tif (typeof comp.getModuleName === 'function') {\n\t\t\tthis._modules[comp.getModuleName()] = comp;\n\t\t\tthis[comp.getModuleName()] = comp;\n\t\t} else {\n\t\t\tlogger.debug('no getModuleName method for component', comp);\n\t\t}\n\n\t\t// Finally configure this new component(category) loaded\n\t\t// With the new modularization changes in Amplify V3, all the Amplify\n\t\t// component are not loaded/registered right away but when they are\n\t\t// imported (and hence instantiated) in the client's app. This ensures\n\t\t// that all new components imported get correctly configured with the\n\t\t// configuration that Amplify.configure() was called with.\n\t\tcomp.configure(this._config);\n\t}\n\n\tconfigure(config?) {\n\t\tif (!config) return this._config;\n\n\t\tthis._config = Object.assign(this._config, config);\n\t\tlogger.debug('amplify config', this._config);\n\n\t\t// Dependency Injection via property-setting.\n\t\t// This avoids introducing a public method/interface/setter that's difficult to remove later.\n\t\t// Plus, it reduces `if` statements within the `constructor` and `configure` of each module\n\t\tObject.entries(this._modules).forEach(([Name, comp]) => {\n\t\t\t// e.g. Auth.*\n\t\t\tObject.keys(comp).forEach(property => {\n\t\t\t\t// e.g. Auth[\"Credentials\"] = this._modules[\"Credentials\"] when set\n\t\t\t\tif (this._modules[property]) {\n\t\t\t\t\tcomp[property] = this._modules[property];\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tthis._components.map(comp => {\n\t\t\tcomp.configure(this._config);\n\t\t});\n\n\t\treturn this._config;\n\t}\n\n\taddPluggable(pluggable) {\n\t\tif (\n\t\t\tpluggable &&\n\t\t\tpluggable['getCategory'] &&\n\t\t\ttypeof pluggable['getCategory'] === 'function'\n\t\t) {\n\t\t\tthis._components.map(comp => {\n\t\t\t\tif (\n\t\t\t\t\tcomp['addPluggable'] &&\n\t\t\t\t\ttypeof comp['addPluggable'] === 'function'\n\t\t\t\t) {\n\t\t\t\t\tcomp.addPluggable(pluggable);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport const Amplify = new AmplifyClass();\n\n/**\n * @deprecated use named import\n */\nexport default Amplify;\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import { SmithyException as __SmithyException } from \"@aws-sdk/smithy-client\";\nimport { MetadataBearer as $MetadataBearer } from \"@aws-sdk/types\";\n\nexport enum AmbiguousRoleResolutionType {\n  AUTHENTICATED_ROLE = \"AuthenticatedRole\",\n  DENY = \"Deny\",\n}\n\n/**\n * <p>A provider representing an Amazon Cognito user pool and its client ID.</p>\n */\nexport interface CognitoIdentityProvider {\n  /**\n   * <p>The provider name for an Amazon Cognito user pool. For example,\n   *             <code>cognito-idp.us-east-1.amazonaws.com/us-east-1_123456789</code>.</p>\n   */\n  ProviderName?: string;\n\n  /**\n   * <p>The client ID for the Amazon Cognito user pool.</p>\n   */\n  ClientId?: string;\n\n  /**\n   * <p>TRUE if server-side token validation is enabled for the identity provider’s\n   *          token.</p>\n   *          <p>Once you set <code>ServerSideTokenCheck</code> to TRUE for an identity pool, that\n   *          identity pool will check with the integrated user pools to make sure that the user has not\n   *          been globally signed out or deleted before the identity pool provides an OIDC token or AWS\n   *          credentials for the user.</p>\n   *          <p>If the user is signed out or deleted, the identity pool will return a 400 Not\n   *          Authorized error.</p>\n   */\n  ServerSideTokenCheck?: boolean;\n}\n\nexport namespace CognitoIdentityProvider {\n  export const filterSensitiveLog = (obj: CognitoIdentityProvider): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Input to the CreateIdentityPool action.</p>\n */\nexport interface CreateIdentityPoolInput {\n  /**\n   * <p>A string that you provide.</p>\n   */\n  IdentityPoolName: string | undefined;\n\n  /**\n   * <p>TRUE if the identity pool supports unauthenticated logins.</p>\n   */\n  AllowUnauthenticatedIdentities: boolean | undefined;\n\n  /**\n   * <p>Enables or disables the Basic (Classic) authentication flow. For more information, see\n   *       <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/authentication-flow.html\">Identity Pools (Federated Identities) Authentication Flow</a> in the <i>Amazon Cognito Developer Guide</i>.</p>\n   */\n  AllowClassicFlow?: boolean;\n\n  /**\n   * <p>Optional key:value pairs mapping provider names to provider app IDs.</p>\n   */\n  SupportedLoginProviders?: { [key: string]: string };\n\n  /**\n   * <p>The \"domain\" by which Cognito will refer to your users. This name acts as a\n   *          placeholder that allows your backend and the Cognito service to communicate about the\n   *          developer provider. For the <code>DeveloperProviderName</code>, you can use letters as well\n   *          as period (<code>.</code>), underscore (<code>_</code>), and dash\n   *          (<code>-</code>).</p>\n   *          <p>Once you have set a developer provider name, you cannot change it. Please take care\n   *          in setting this parameter.</p>\n   */\n  DeveloperProviderName?: string;\n\n  /**\n   * <p>A list of OpendID Connect provider ARNs.</p>\n   */\n  OpenIdConnectProviderARNs?: string[];\n\n  /**\n   * <p>An array of Amazon Cognito user pools and their client IDs.</p>\n   */\n  CognitoIdentityProviders?: CognitoIdentityProvider[];\n\n  /**\n   * <p>An array of Amazon Resource Names (ARNs) of the SAML provider for your identity\n   *          pool.</p>\n   */\n  SamlProviderARNs?: string[];\n\n  /**\n   * <p>Tags to assign to the identity pool. A tag is a label that you can apply to identity\n   *          pools to categorize and manage them in different ways, such as by purpose, owner,\n   *          environment, or other criteria.</p>\n   */\n  IdentityPoolTags?: { [key: string]: string };\n}\n\nexport namespace CreateIdentityPoolInput {\n  export const filterSensitiveLog = (obj: CreateIdentityPoolInput): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>An object representing an Amazon Cognito identity pool.</p>\n */\nexport interface IdentityPool {\n  /**\n   * <p>An identity pool ID in the format REGION:GUID.</p>\n   */\n  IdentityPoolId: string | undefined;\n\n  /**\n   * <p>A string that you provide.</p>\n   */\n  IdentityPoolName: string | undefined;\n\n  /**\n   * <p>TRUE if the identity pool supports unauthenticated logins.</p>\n   */\n  AllowUnauthenticatedIdentities: boolean | undefined;\n\n  /**\n   * <p>Enables or disables the Basic (Classic) authentication flow. For more information, see\n   *       <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/authentication-flow.html\">Identity Pools (Federated Identities) Authentication Flow</a> in the <i>Amazon Cognito Developer Guide</i>.</p>\n   */\n  AllowClassicFlow?: boolean;\n\n  /**\n   * <p>Optional key:value pairs mapping provider names to provider app IDs.</p>\n   */\n  SupportedLoginProviders?: { [key: string]: string };\n\n  /**\n   * <p>The \"domain\" by which Cognito will refer to your users.</p>\n   */\n  DeveloperProviderName?: string;\n\n  /**\n   * <p>A list of OpendID Connect provider ARNs.</p>\n   */\n  OpenIdConnectProviderARNs?: string[];\n\n  /**\n   * <p>A list representing an Amazon Cognito user pool and its client ID.</p>\n   */\n  CognitoIdentityProviders?: CognitoIdentityProvider[];\n\n  /**\n   * <p>An array of Amazon Resource Names (ARNs) of the SAML provider for your identity\n   *          pool.</p>\n   */\n  SamlProviderARNs?: string[];\n\n  /**\n   * <p>The tags that are assigned to the identity pool. A tag is a label that you can apply to\n   *          identity pools to categorize and manage them in different ways, such as by purpose, owner,\n   *          environment, or other criteria.</p>\n   */\n  IdentityPoolTags?: { [key: string]: string };\n}\n\nexport namespace IdentityPool {\n  export const filterSensitiveLog = (obj: IdentityPool): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Thrown when the service encounters an error during processing the request.</p>\n */\nexport interface InternalErrorException extends __SmithyException, $MetadataBearer {\n  name: \"InternalErrorException\";\n  $fault: \"server\";\n  /**\n   * <p>The message returned by an InternalErrorException.</p>\n   */\n  message?: string;\n}\n\nexport namespace InternalErrorException {\n  export const filterSensitiveLog = (obj: InternalErrorException): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Thrown for missing or bad input parameter(s).</p>\n */\nexport interface InvalidParameterException extends __SmithyException, $MetadataBearer {\n  name: \"InvalidParameterException\";\n  $fault: \"client\";\n  /**\n   * <p>The message returned by an InvalidParameterException.</p>\n   */\n  message?: string;\n}\n\nexport namespace InvalidParameterException {\n  export const filterSensitiveLog = (obj: InvalidParameterException): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Thrown when the total number of user pools has exceeded a preset limit.</p>\n */\nexport interface LimitExceededException extends __SmithyException, $MetadataBearer {\n  name: \"LimitExceededException\";\n  $fault: \"client\";\n  /**\n   * <p>The message returned by a LimitExceededException.</p>\n   */\n  message?: string;\n}\n\nexport namespace LimitExceededException {\n  export const filterSensitiveLog = (obj: LimitExceededException): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Thrown when a user is not authorized to access the requested resource.</p>\n */\nexport interface NotAuthorizedException extends __SmithyException, $MetadataBearer {\n  name: \"NotAuthorizedException\";\n  $fault: \"client\";\n  /**\n   * <p>The message returned by a NotAuthorizedException</p>\n   */\n  message?: string;\n}\n\nexport namespace NotAuthorizedException {\n  export const filterSensitiveLog = (obj: NotAuthorizedException): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Thrown when a user tries to use a login which is already linked to another\n *          account.</p>\n */\nexport interface ResourceConflictException extends __SmithyException, $MetadataBearer {\n  name: \"ResourceConflictException\";\n  $fault: \"client\";\n  /**\n   * <p>The message returned by a ResourceConflictException.</p>\n   */\n  message?: string;\n}\n\nexport namespace ResourceConflictException {\n  export const filterSensitiveLog = (obj: ResourceConflictException): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Thrown when a request is throttled.</p>\n */\nexport interface TooManyRequestsException extends __SmithyException, $MetadataBearer {\n  name: \"TooManyRequestsException\";\n  $fault: \"client\";\n  /**\n   * <p>Message returned by a TooManyRequestsException</p>\n   */\n  message?: string;\n}\n\nexport namespace TooManyRequestsException {\n  export const filterSensitiveLog = (obj: TooManyRequestsException): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Input to the <code>DeleteIdentities</code> action.</p>\n */\nexport interface DeleteIdentitiesInput {\n  /**\n   * <p>A list of 1-60 identities that you want to delete.</p>\n   */\n  IdentityIdsToDelete: string[] | undefined;\n}\n\nexport namespace DeleteIdentitiesInput {\n  export const filterSensitiveLog = (obj: DeleteIdentitiesInput): any => ({\n    ...obj,\n  });\n}\n\nexport enum ErrorCode {\n  ACCESS_DENIED = \"AccessDenied\",\n  INTERNAL_SERVER_ERROR = \"InternalServerError\",\n}\n\n/**\n * <p>An array of UnprocessedIdentityId objects, each of which contains an ErrorCode and\n *          IdentityId.</p>\n */\nexport interface UnprocessedIdentityId {\n  /**\n   * <p>A unique identifier in the format REGION:GUID.</p>\n   */\n  IdentityId?: string;\n\n  /**\n   * <p>The error code indicating the type of error that occurred.</p>\n   */\n  ErrorCode?: ErrorCode | string;\n}\n\nexport namespace UnprocessedIdentityId {\n  export const filterSensitiveLog = (obj: UnprocessedIdentityId): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Returned in response to a successful <code>DeleteIdentities</code>\n *          operation.</p>\n */\nexport interface DeleteIdentitiesResponse {\n  /**\n   * <p>An array of UnprocessedIdentityId objects, each of which contains an ErrorCode and\n   *          IdentityId.</p>\n   */\n  UnprocessedIdentityIds?: UnprocessedIdentityId[];\n}\n\nexport namespace DeleteIdentitiesResponse {\n  export const filterSensitiveLog = (obj: DeleteIdentitiesResponse): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Input to the DeleteIdentityPool action.</p>\n */\nexport interface DeleteIdentityPoolInput {\n  /**\n   * <p>An identity pool ID in the format REGION:GUID.</p>\n   */\n  IdentityPoolId: string | undefined;\n}\n\nexport namespace DeleteIdentityPoolInput {\n  export const filterSensitiveLog = (obj: DeleteIdentityPoolInput): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Thrown when the requested resource (for example, a dataset or record) does not\n *          exist.</p>\n */\nexport interface ResourceNotFoundException extends __SmithyException, $MetadataBearer {\n  name: \"ResourceNotFoundException\";\n  $fault: \"client\";\n  /**\n   * <p>The message returned by a ResourceNotFoundException.</p>\n   */\n  message?: string;\n}\n\nexport namespace ResourceNotFoundException {\n  export const filterSensitiveLog = (obj: ResourceNotFoundException): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Input to the <code>DescribeIdentity</code> action.</p>\n */\nexport interface DescribeIdentityInput {\n  /**\n   * <p>A unique identifier in the format REGION:GUID.</p>\n   */\n  IdentityId: string | undefined;\n}\n\nexport namespace DescribeIdentityInput {\n  export const filterSensitiveLog = (obj: DescribeIdentityInput): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>A description of the identity.</p>\n */\nexport interface IdentityDescription {\n  /**\n   * <p>A unique identifier in the format REGION:GUID.</p>\n   */\n  IdentityId?: string;\n\n  /**\n   * <p>The provider names.</p>\n   */\n  Logins?: string[];\n\n  /**\n   * <p>Date on which the identity was created.</p>\n   */\n  CreationDate?: Date;\n\n  /**\n   * <p>Date on which the identity was last modified.</p>\n   */\n  LastModifiedDate?: Date;\n}\n\nexport namespace IdentityDescription {\n  export const filterSensitiveLog = (obj: IdentityDescription): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Input to the DescribeIdentityPool action.</p>\n */\nexport interface DescribeIdentityPoolInput {\n  /**\n   * <p>An identity pool ID in the format REGION:GUID.</p>\n   */\n  IdentityPoolId: string | undefined;\n}\n\nexport namespace DescribeIdentityPoolInput {\n  export const filterSensitiveLog = (obj: DescribeIdentityPoolInput): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>An exception thrown when a dependent service such as Facebook or Twitter is not\n *          responding</p>\n */\nexport interface ExternalServiceException extends __SmithyException, $MetadataBearer {\n  name: \"ExternalServiceException\";\n  $fault: \"client\";\n  /**\n   * <p>The message returned by an ExternalServiceException</p>\n   */\n  message?: string;\n}\n\nexport namespace ExternalServiceException {\n  export const filterSensitiveLog = (obj: ExternalServiceException): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Input to the <code>GetCredentialsForIdentity</code> action.</p>\n */\nexport interface GetCredentialsForIdentityInput {\n  /**\n   * <p>A unique identifier in the format REGION:GUID.</p>\n   */\n  IdentityId: string | undefined;\n\n  /**\n   * <p>A set of optional name-value pairs that map provider names to provider tokens. The\n   *          name-value pair will follow the syntax \"provider_name\":\n   *          \"provider_user_identifier\".</p>\n   *          <p>Logins should not be specified when trying to get credentials for an unauthenticated\n   *          identity.</p>\n   *          <p>The Logins parameter is required when using identities associated with external\n   *          identity providers such as FaceBook. For examples of <code>Logins</code> maps, see the code\n   *          examples in the <a href=\"http://docs.aws.amazon.com/cognito/latest/developerguide/external-identity-providers.html\">External Identity Providers</a> section of the Amazon Cognito Developer\n   *          Guide.</p>\n   */\n  Logins?: { [key: string]: string };\n\n  /**\n   * <p>The Amazon Resource Name (ARN) of the role to be assumed when multiple roles were\n   *          received in the token from the identity provider. For example, a SAML-based identity\n   *          provider. This parameter is optional for identity providers that do not support role\n   *          customization.</p>\n   */\n  CustomRoleArn?: string;\n}\n\nexport namespace GetCredentialsForIdentityInput {\n  export const filterSensitiveLog = (obj: GetCredentialsForIdentityInput): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Credentials for the provided identity ID.</p>\n */\nexport interface Credentials {\n  /**\n   * <p>The Access Key portion of the credentials.</p>\n   */\n  AccessKeyId?: string;\n\n  /**\n   * <p>The Secret Access Key portion of the credentials</p>\n   */\n  SecretKey?: string;\n\n  /**\n   * <p>The Session Token portion of the credentials</p>\n   */\n  SessionToken?: string;\n\n  /**\n   * <p>The date at which these credentials will expire.</p>\n   */\n  Expiration?: Date;\n}\n\nexport namespace Credentials {\n  export const filterSensitiveLog = (obj: Credentials): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Returned in response to a successful <code>GetCredentialsForIdentity</code>\n *          operation.</p>\n */\nexport interface GetCredentialsForIdentityResponse {\n  /**\n   * <p>A unique identifier in the format REGION:GUID.</p>\n   */\n  IdentityId?: string;\n\n  /**\n   * <p>Credentials for the provided identity ID.</p>\n   */\n  Credentials?: Credentials;\n}\n\nexport namespace GetCredentialsForIdentityResponse {\n  export const filterSensitiveLog = (obj: GetCredentialsForIdentityResponse): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Thrown if the identity pool has no role associated for the given auth type\n *          (auth/unauth) or if the AssumeRole fails.</p>\n */\nexport interface InvalidIdentityPoolConfigurationException extends __SmithyException, $MetadataBearer {\n  name: \"InvalidIdentityPoolConfigurationException\";\n  $fault: \"client\";\n  /**\n   * <p>The message returned for an <code>InvalidIdentityPoolConfigurationException</code>\n   *          </p>\n   */\n  message?: string;\n}\n\nexport namespace InvalidIdentityPoolConfigurationException {\n  export const filterSensitiveLog = (obj: InvalidIdentityPoolConfigurationException): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Input to the GetId action.</p>\n */\nexport interface GetIdInput {\n  /**\n   * <p>A standard AWS account ID (9+ digits).</p>\n   */\n  AccountId?: string;\n\n  /**\n   * <p>An identity pool ID in the format REGION:GUID.</p>\n   */\n  IdentityPoolId: string | undefined;\n\n  /**\n   * <p>A set of optional name-value pairs that map provider names to provider tokens. The\n   *          available provider names for <code>Logins</code> are as follows:</p>\n   *          <ul>\n   *             <li>\n   *                <p>Facebook: <code>graph.facebook.com</code>\n   *                </p>\n   *             </li>\n   *             <li>\n   *                <p>Amazon Cognito user pool:\n   *                   <code>cognito-idp.<region>.amazonaws.com/<YOUR_USER_POOL_ID></code>,\n   *                for example, <code>cognito-idp.us-east-1.amazonaws.com/us-east-1_123456789</code>.\n   *             </p>\n   *             </li>\n   *             <li>\n   *                <p>Google: <code>accounts.google.com</code>\n   *                </p>\n   *             </li>\n   *             <li>\n   *                <p>Amazon: <code>www.amazon.com</code>\n   *                </p>\n   *             </li>\n   *             <li>\n   *                <p>Twitter: <code>api.twitter.com</code>\n   *                </p>\n   *             </li>\n   *             <li>\n   *                <p>Digits: <code>www.digits.com</code>\n   *                </p>\n   *             </li>\n   *          </ul>\n   */\n  Logins?: { [key: string]: string };\n}\n\nexport namespace GetIdInput {\n  export const filterSensitiveLog = (obj: GetIdInput): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Returned in response to a GetId request.</p>\n */\nexport interface GetIdResponse {\n  /**\n   * <p>A unique identifier in the format REGION:GUID.</p>\n   */\n  IdentityId?: string;\n}\n\nexport namespace GetIdResponse {\n  export const filterSensitiveLog = (obj: GetIdResponse): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Input to the <code>GetIdentityPoolRoles</code> action.</p>\n */\nexport interface GetIdentityPoolRolesInput {\n  /**\n   * <p>An identity pool ID in the format REGION:GUID.</p>\n   */\n  IdentityPoolId: string | undefined;\n}\n\nexport namespace GetIdentityPoolRolesInput {\n  export const filterSensitiveLog = (obj: GetIdentityPoolRolesInput): any => ({\n    ...obj,\n  });\n}\n\nexport enum MappingRuleMatchType {\n  CONTAINS = \"Contains\",\n  EQUALS = \"Equals\",\n  NOT_EQUAL = \"NotEqual\",\n  STARTS_WITH = \"StartsWith\",\n}\n\n/**\n * <p>A rule that maps a claim name, a claim value, and a match type to a role\n *          ARN.</p>\n */\nexport interface MappingRule {\n  /**\n   * <p>The claim name that must be present in the token, for example, \"isAdmin\" or\n   *          \"paid\".</p>\n   */\n  Claim: string | undefined;\n\n  /**\n   * <p>The match condition that specifies how closely the claim value in the IdP token must\n   *          match <code>Value</code>.</p>\n   */\n  MatchType: MappingRuleMatchType | string | undefined;\n\n  /**\n   * <p>A brief string that the claim must match, for example, \"paid\" or \"yes\".</p>\n   */\n  Value: string | undefined;\n\n  /**\n   * <p>The role ARN.</p>\n   */\n  RoleARN: string | undefined;\n}\n\nexport namespace MappingRule {\n  export const filterSensitiveLog = (obj: MappingRule): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>A container for rules.</p>\n */\nexport interface RulesConfigurationType {\n  /**\n   * <p>An array of rules. You can specify up to 25 rules per identity provider.</p>\n   *          <p>Rules are evaluated in order. The first one to match specifies the role.</p>\n   */\n  Rules: MappingRule[] | undefined;\n}\n\nexport namespace RulesConfigurationType {\n  export const filterSensitiveLog = (obj: RulesConfigurationType): any => ({\n    ...obj,\n  });\n}\n\nexport enum RoleMappingType {\n  RULES = \"Rules\",\n  TOKEN = \"Token\",\n}\n\n/**\n * <p>A role mapping.</p>\n */\nexport interface RoleMapping {\n  /**\n   * <p>The role mapping type. Token will use <code>cognito:roles</code> and\n   *             <code>cognito:preferred_role</code> claims from the Cognito identity provider token to\n   *          map groups to roles. Rules will attempt to match claims from the token to map to a\n   *          role.</p>\n   */\n  Type: RoleMappingType | string | undefined;\n\n  /**\n   * <p>If you specify Token or Rules as the <code>Type</code>,\n   *             <code>AmbiguousRoleResolution</code> is required.</p>\n   *          <p>Specifies the action to be taken if either no rules match the claim value for the\n   *             <code>Rules</code> type, or there is no <code>cognito:preferred_role</code> claim and\n   *          there are multiple <code>cognito:roles</code> matches for the <code>Token</code>\n   *          type.</p>\n   */\n  AmbiguousRoleResolution?: AmbiguousRoleResolutionType | string;\n\n  /**\n   * <p>The rules to be used for mapping users to roles.</p>\n   *          <p>If you specify Rules as the role mapping type, <code>RulesConfiguration</code> is\n   *          required.</p>\n   */\n  RulesConfiguration?: RulesConfigurationType;\n}\n\nexport namespace RoleMapping {\n  export const filterSensitiveLog = (obj: RoleMapping): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Returned in response to a successful <code>GetIdentityPoolRoles</code>\n *          operation.</p>\n */\nexport interface GetIdentityPoolRolesResponse {\n  /**\n   * <p>An identity pool ID in the format REGION:GUID.</p>\n   */\n  IdentityPoolId?: string;\n\n  /**\n   * <p>The map of roles associated with this pool. Currently only authenticated and\n   *          unauthenticated roles are supported.</p>\n   */\n  Roles?: { [key: string]: string };\n\n  /**\n   * <p>How users for a specific identity provider are to mapped to roles. This is a\n   *             String-to-<a>RoleMapping</a> object map. The string identifies the identity\n   *          provider, for example, \"graph.facebook.com\" or\n   *          \"cognito-idp.us-east-1.amazonaws.com/us-east-1_abcdefghi:app_client_id\".</p>\n   */\n  RoleMappings?: { [key: string]: RoleMapping };\n}\n\nexport namespace GetIdentityPoolRolesResponse {\n  export const filterSensitiveLog = (obj: GetIdentityPoolRolesResponse): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Input to the GetOpenIdToken action.</p>\n */\nexport interface GetOpenIdTokenInput {\n  /**\n   * <p>A unique identifier in the format REGION:GUID.</p>\n   */\n  IdentityId: string | undefined;\n\n  /**\n   * <p>A set of optional name-value pairs that map provider names to provider tokens. When\n   *          using graph.facebook.com and www.amazon.com, supply the access_token returned from the\n   *          provider's authflow. For accounts.google.com, an Amazon Cognito user pool provider, or any\n   *          other OpenId Connect provider, always include the <code>id_token</code>.</p>\n   */\n  Logins?: { [key: string]: string };\n}\n\nexport namespace GetOpenIdTokenInput {\n  export const filterSensitiveLog = (obj: GetOpenIdTokenInput): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Returned in response to a successful GetOpenIdToken request.</p>\n */\nexport interface GetOpenIdTokenResponse {\n  /**\n   * <p>A unique identifier in the format REGION:GUID. Note that the IdentityId returned may\n   *          not match the one passed on input.</p>\n   */\n  IdentityId?: string;\n\n  /**\n   * <p>An OpenID token, valid for 10 minutes.</p>\n   */\n  Token?: string;\n}\n\nexport namespace GetOpenIdTokenResponse {\n  export const filterSensitiveLog = (obj: GetOpenIdTokenResponse): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>The provided developer user identifier is already registered with Cognito under a\n *          different identity ID.</p>\n */\nexport interface DeveloperUserAlreadyRegisteredException extends __SmithyException, $MetadataBearer {\n  name: \"DeveloperUserAlreadyRegisteredException\";\n  $fault: \"client\";\n  /**\n   * <p>This developer user identifier is already registered with Cognito.</p>\n   */\n  message?: string;\n}\n\nexport namespace DeveloperUserAlreadyRegisteredException {\n  export const filterSensitiveLog = (obj: DeveloperUserAlreadyRegisteredException): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Input to the <code>GetOpenIdTokenForDeveloperIdentity</code> action.</p>\n */\nexport interface GetOpenIdTokenForDeveloperIdentityInput {\n  /**\n   * <p>An identity pool ID in the format REGION:GUID.</p>\n   */\n  IdentityPoolId: string | undefined;\n\n  /**\n   * <p>A unique identifier in the format REGION:GUID.</p>\n   */\n  IdentityId?: string;\n\n  /**\n   * <p>A set of optional name-value pairs that map provider names to provider tokens. Each\n   *          name-value pair represents a user from a public provider or developer provider. If the user\n   *          is from a developer provider, the name-value pair will follow the syntax\n   *             <code>\"developer_provider_name\": \"developer_user_identifier\"</code>. The developer\n   *          provider is the \"domain\" by which Cognito will refer to your users; you provided this\n   *          domain while creating/updating the identity pool. The developer user identifier is an\n   *          identifier from your backend that uniquely identifies a user. When you create an identity\n   *          pool, you can specify the supported logins.</p>\n   */\n  Logins: { [key: string]: string } | undefined;\n\n  /**\n   * <p>The expiration time of the token, in seconds. You can specify a custom expiration\n   *          time for the token so that you can cache it. If you don't provide an expiration time, the\n   *          token is valid for 15 minutes. You can exchange the token with Amazon STS for temporary AWS\n   *          credentials, which are valid for a maximum of one hour. The maximum token duration you can\n   *          set is 24 hours. You should take care in setting the expiration time for a token, as there\n   *          are significant security implications: an attacker could use a leaked token to access your\n   *          AWS resources for the token's duration.</p>\n   *          <note>\n   *             <p>Please provide for a small grace period, usually no more than 5 minutes, to account for clock skew.</p>\n   *          </note>\n   */\n  TokenDuration?: number;\n}\n\nexport namespace GetOpenIdTokenForDeveloperIdentityInput {\n  export const filterSensitiveLog = (obj: GetOpenIdTokenForDeveloperIdentityInput): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Returned in response to a successful <code>GetOpenIdTokenForDeveloperIdentity</code>\n *          request.</p>\n */\nexport interface GetOpenIdTokenForDeveloperIdentityResponse {\n  /**\n   * <p>A unique identifier in the format REGION:GUID.</p>\n   */\n  IdentityId?: string;\n\n  /**\n   * <p>An OpenID token.</p>\n   */\n  Token?: string;\n}\n\nexport namespace GetOpenIdTokenForDeveloperIdentityResponse {\n  export const filterSensitiveLog = (obj: GetOpenIdTokenForDeveloperIdentityResponse): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Input to the ListIdentities action.</p>\n */\nexport interface ListIdentitiesInput {\n  /**\n   * <p>An identity pool ID in the format REGION:GUID.</p>\n   */\n  IdentityPoolId: string | undefined;\n\n  /**\n   * <p>The maximum number of identities to return.</p>\n   */\n  MaxResults: number | undefined;\n\n  /**\n   * <p>A pagination token.</p>\n   */\n  NextToken?: string;\n\n  /**\n   * <p>An optional boolean parameter that allows you to hide disabled identities. If\n   *          omitted, the ListIdentities API will include disabled identities in the response.</p>\n   */\n  HideDisabled?: boolean;\n}\n\nexport namespace ListIdentitiesInput {\n  export const filterSensitiveLog = (obj: ListIdentitiesInput): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>The response to a ListIdentities request.</p>\n */\nexport interface ListIdentitiesResponse {\n  /**\n   * <p>An identity pool ID in the format REGION:GUID.</p>\n   */\n  IdentityPoolId?: string;\n\n  /**\n   * <p>An object containing a set of identities and associated mappings.</p>\n   */\n  Identities?: IdentityDescription[];\n\n  /**\n   * <p>A pagination token.</p>\n   */\n  NextToken?: string;\n}\n\nexport namespace ListIdentitiesResponse {\n  export const filterSensitiveLog = (obj: ListIdentitiesResponse): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Input to the ListIdentityPools action.</p>\n */\nexport interface ListIdentityPoolsInput {\n  /**\n   * <p>The maximum number of identities to return.</p>\n   */\n  MaxResults: number | undefined;\n\n  /**\n   * <p>A pagination token.</p>\n   */\n  NextToken?: string;\n}\n\nexport namespace ListIdentityPoolsInput {\n  export const filterSensitiveLog = (obj: ListIdentityPoolsInput): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>A description of the identity pool.</p>\n */\nexport interface IdentityPoolShortDescription {\n  /**\n   * <p>An identity pool ID in the format REGION:GUID.</p>\n   */\n  IdentityPoolId?: string;\n\n  /**\n   * <p>A string that you provide.</p>\n   */\n  IdentityPoolName?: string;\n}\n\nexport namespace IdentityPoolShortDescription {\n  export const filterSensitiveLog = (obj: IdentityPoolShortDescription): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>The result of a successful ListIdentityPools action.</p>\n */\nexport interface ListIdentityPoolsResponse {\n  /**\n   * <p>The identity pools returned by the ListIdentityPools action.</p>\n   */\n  IdentityPools?: IdentityPoolShortDescription[];\n\n  /**\n   * <p>A pagination token.</p>\n   */\n  NextToken?: string;\n}\n\nexport namespace ListIdentityPoolsResponse {\n  export const filterSensitiveLog = (obj: ListIdentityPoolsResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface ListTagsForResourceInput {\n  /**\n   * <p>The Amazon Resource Name (ARN) of the identity pool that the tags are assigned\n   *          to.</p>\n   */\n  ResourceArn: string | undefined;\n}\n\nexport namespace ListTagsForResourceInput {\n  export const filterSensitiveLog = (obj: ListTagsForResourceInput): any => ({\n    ...obj,\n  });\n}\n\nexport interface ListTagsForResourceResponse {\n  /**\n   * <p>The tags that are assigned to the identity pool.</p>\n   */\n  Tags?: { [key: string]: string };\n}\n\nexport namespace ListTagsForResourceResponse {\n  export const filterSensitiveLog = (obj: ListTagsForResourceResponse): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Input to the <code>LookupDeveloperIdentityInput</code> action.</p>\n */\nexport interface LookupDeveloperIdentityInput {\n  /**\n   * <p>An identity pool ID in the format REGION:GUID.</p>\n   */\n  IdentityPoolId: string | undefined;\n\n  /**\n   * <p>A unique identifier in the format REGION:GUID.</p>\n   */\n  IdentityId?: string;\n\n  /**\n   * <p>A unique ID used by your backend authentication process to identify a user.\n   *          Typically, a developer identity provider would issue many developer user identifiers, in\n   *          keeping with the number of users.</p>\n   */\n  DeveloperUserIdentifier?: string;\n\n  /**\n   * <p>The maximum number of identities to return.</p>\n   */\n  MaxResults?: number;\n\n  /**\n   * <p>A pagination token. The first call you make will have <code>NextToken</code> set to\n   *          null. After that the service will return <code>NextToken</code> values as needed. For\n   *          example, let's say you make a request with <code>MaxResults</code> set to 10, and there are\n   *          20 matches in the database. The service will return a pagination token as a part of the\n   *          response. This token can be used to call the API again and get results starting from the\n   *          11th match.</p>\n   */\n  NextToken?: string;\n}\n\nexport namespace LookupDeveloperIdentityInput {\n  export const filterSensitiveLog = (obj: LookupDeveloperIdentityInput): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Returned in response to a successful <code>LookupDeveloperIdentity</code>\n *          action.</p>\n */\nexport interface LookupDeveloperIdentityResponse {\n  /**\n   * <p>A unique identifier in the format REGION:GUID.</p>\n   */\n  IdentityId?: string;\n\n  /**\n   * <p>This is the list of developer user identifiers associated with an identity ID.\n   *          Cognito supports the association of multiple developer user identifiers with an identity\n   *          ID.</p>\n   */\n  DeveloperUserIdentifierList?: string[];\n\n  /**\n   * <p>A pagination token. The first call you make will have <code>NextToken</code> set to\n   *          null. After that the service will return <code>NextToken</code> values as needed. For\n   *          example, let's say you make a request with <code>MaxResults</code> set to 10, and there are\n   *          20 matches in the database. The service will return a pagination token as a part of the\n   *          response. This token can be used to call the API again and get results starting from the\n   *          11th match.</p>\n   */\n  NextToken?: string;\n}\n\nexport namespace LookupDeveloperIdentityResponse {\n  export const filterSensitiveLog = (obj: LookupDeveloperIdentityResponse): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Input to the <code>MergeDeveloperIdentities</code> action.</p>\n */\nexport interface MergeDeveloperIdentitiesInput {\n  /**\n   * <p>User identifier for the source user. The value should be a\n   *             <code>DeveloperUserIdentifier</code>.</p>\n   */\n  SourceUserIdentifier: string | undefined;\n\n  /**\n   * <p>User identifier for the destination user. The value should be a\n   *             <code>DeveloperUserIdentifier</code>.</p>\n   */\n  DestinationUserIdentifier: string | undefined;\n\n  /**\n   * <p>The \"domain\" by which Cognito will refer to your users. This is a (pseudo) domain\n   *          name that you provide while creating an identity pool. This name acts as a placeholder that\n   *          allows your backend and the Cognito service to communicate about the developer provider.\n   *          For the <code>DeveloperProviderName</code>, you can use letters as well as period (.),\n   *          underscore (_), and dash (-).</p>\n   */\n  DeveloperProviderName: string | undefined;\n\n  /**\n   * <p>An identity pool ID in the format REGION:GUID.</p>\n   */\n  IdentityPoolId: string | undefined;\n}\n\nexport namespace MergeDeveloperIdentitiesInput {\n  export const filterSensitiveLog = (obj: MergeDeveloperIdentitiesInput): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Returned in response to a successful <code>MergeDeveloperIdentities</code>\n *          action.</p>\n */\nexport interface MergeDeveloperIdentitiesResponse {\n  /**\n   * <p>A unique identifier in the format REGION:GUID.</p>\n   */\n  IdentityId?: string;\n}\n\nexport namespace MergeDeveloperIdentitiesResponse {\n  export const filterSensitiveLog = (obj: MergeDeveloperIdentitiesResponse): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Thrown if there are parallel requests to modify a resource.</p>\n */\nexport interface ConcurrentModificationException extends __SmithyException, $MetadataBearer {\n  name: \"ConcurrentModificationException\";\n  $fault: \"client\";\n  /**\n   * <p>The message returned by a ConcurrentModificationException.</p>\n   */\n  message?: string;\n}\n\nexport namespace ConcurrentModificationException {\n  export const filterSensitiveLog = (obj: ConcurrentModificationException): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Input to the <code>SetIdentityPoolRoles</code> action.</p>\n */\nexport interface SetIdentityPoolRolesInput {\n  /**\n   * <p>An identity pool ID in the format REGION:GUID.</p>\n   */\n  IdentityPoolId: string | undefined;\n\n  /**\n   * <p>The map of roles associated with this pool. For a given role, the key will be either\n   *          \"authenticated\" or \"unauthenticated\" and the value will be the Role ARN.</p>\n   */\n  Roles: { [key: string]: string } | undefined;\n\n  /**\n   * <p>How users for a specific identity provider are to mapped to roles. This is a string\n   *          to <a>RoleMapping</a> object map. The string identifies the identity provider,\n   *          for example, \"graph.facebook.com\" or\n   *          \"cognito-idp-east-1.amazonaws.com/us-east-1_abcdefghi:app_client_id\".</p>\n   *          <p>Up to 25 rules can be specified per identity provider.</p>\n   */\n  RoleMappings?: { [key: string]: RoleMapping };\n}\n\nexport namespace SetIdentityPoolRolesInput {\n  export const filterSensitiveLog = (obj: SetIdentityPoolRolesInput): any => ({\n    ...obj,\n  });\n}\n\nexport interface TagResourceInput {\n  /**\n   * <p>The Amazon Resource Name (ARN) of the identity pool to assign the tags to.</p>\n   */\n  ResourceArn: string | undefined;\n\n  /**\n   * <p>The tags to assign to the identity pool.</p>\n   */\n  Tags: { [key: string]: string } | undefined;\n}\n\nexport namespace TagResourceInput {\n  export const filterSensitiveLog = (obj: TagResourceInput): any => ({\n    ...obj,\n  });\n}\n\nexport interface TagResourceResponse {}\n\nexport namespace TagResourceResponse {\n  export const filterSensitiveLog = (obj: TagResourceResponse): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Input to the <code>UnlinkDeveloperIdentity</code> action.</p>\n */\nexport interface UnlinkDeveloperIdentityInput {\n  /**\n   * <p>A unique identifier in the format REGION:GUID.</p>\n   */\n  IdentityId: string | undefined;\n\n  /**\n   * <p>An identity pool ID in the format REGION:GUID.</p>\n   */\n  IdentityPoolId: string | undefined;\n\n  /**\n   * <p>The \"domain\" by which Cognito will refer to your users.</p>\n   */\n  DeveloperProviderName: string | undefined;\n\n  /**\n   * <p>A unique ID used by your backend authentication process to identify a user.</p>\n   */\n  DeveloperUserIdentifier: string | undefined;\n}\n\nexport namespace UnlinkDeveloperIdentityInput {\n  export const filterSensitiveLog = (obj: UnlinkDeveloperIdentityInput): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Input to the UnlinkIdentity action.</p>\n */\nexport interface UnlinkIdentityInput {\n  /**\n   * <p>A unique identifier in the format REGION:GUID.</p>\n   */\n  IdentityId: string | undefined;\n\n  /**\n   * <p>A set of optional name-value pairs that map provider names to provider\n   *          tokens.</p>\n   */\n  Logins: { [key: string]: string } | undefined;\n\n  /**\n   * <p>Provider names to unlink from this identity.</p>\n   */\n  LoginsToRemove: string[] | undefined;\n}\n\nexport namespace UnlinkIdentityInput {\n  export const filterSensitiveLog = (obj: UnlinkIdentityInput): any => ({\n    ...obj,\n  });\n}\n\nexport interface UntagResourceInput {\n  /**\n   * <p>The Amazon Resource Name (ARN) of the identity pool that the tags are assigned\n   *          to.</p>\n   */\n  ResourceArn: string | undefined;\n\n  /**\n   * <p>The keys of the tags to remove from the user pool.</p>\n   */\n  TagKeys: string[] | undefined;\n}\n\nexport namespace UntagResourceInput {\n  export const filterSensitiveLog = (obj: UntagResourceInput): any => ({\n    ...obj,\n  });\n}\n\nexport interface UntagResourceResponse {}\n\nexport namespace UntagResourceResponse {\n  export const filterSensitiveLog = (obj: UntagResourceResponse): any => ({\n    ...obj,\n  });\n}\n","import { HeaderBag, HttpMessage, HttpResponse as IHttpResponse } from \"@aws-sdk/types\";\n\ntype HttpResponseOptions = Partial<HttpMessage> & {\n  statusCode: number;\n};\n\nexport interface HttpResponse extends IHttpResponse {}\n\nexport class HttpResponse {\n  public statusCode: number;\n  public headers: HeaderBag;\n  public body?: any;\n\n  constructor(options: HttpResponseOptions) {\n    this.statusCode = options.statusCode;\n    this.headers = options.headers || {};\n    this.body = options.body;\n  }\n\n  static isInstance(response: unknown): response is HttpResponse {\n    //determine if response is a valid HttpResponse\n    if (!response) return false;\n    const resp = response as any;\n    return typeof resp.statusCode === \"number\" && typeof resp.headers === \"object\";\n  }\n}\n","import { Endpoint, HeaderBag, HttpMessage, HttpRequest as IHttpRequest, QueryParameterBag } from \"@aws-sdk/types\";\n\ntype HttpRequestOptions = Partial<HttpMessage> & Partial<Endpoint> & { method?: string };\n\nexport interface HttpRequest extends IHttpRequest {}\n\nexport class HttpRequest implements HttpMessage, Endpoint {\n  public method: string;\n  public protocol: string;\n  public hostname: string;\n  public port?: number;\n  public path: string;\n  public query: QueryParameterBag;\n  public headers: HeaderBag;\n  public body?: any;\n\n  constructor(options: HttpRequestOptions) {\n    this.method = options.method || \"GET\";\n    this.hostname = options.hostname || \"localhost\";\n    this.port = options.port;\n    this.query = options.query || {};\n    this.headers = options.headers || {};\n    this.body = options.body;\n    this.protocol = options.protocol\n      ? options.protocol.substr(-1) !== \":\"\n        ? `${options.protocol}:`\n        : options.protocol\n      : \"https:\";\n    this.path = options.path ? (options.path.charAt(0) !== \"/\" ? `/${options.path}` : options.path) : \"/\";\n  }\n\n  static isInstance(request: unknown): request is HttpRequest {\n    //determine if request is a valid httpRequest\n    if (!request) return false;\n    const req: any = request;\n    return (\n      \"method\" in req &&\n      \"protocol\" in req &&\n      \"hostname\" in req &&\n      \"path\" in req &&\n      typeof req[\"query\"] === \"object\" &&\n      typeof req[\"headers\"] === \"object\"\n    );\n  }\n\n  clone(): HttpRequest {\n    const cloned = new HttpRequest({\n      ...this,\n      headers: { ...this.headers },\n    });\n    if (cloned.query) cloned.query = cloneQuery(cloned.query);\n    return cloned;\n  }\n}\n\nfunction cloneQuery(query: QueryParameterBag): QueryParameterBag {\n  return Object.keys(query).reduce((carry: QueryParameterBag, paramName: string) => {\n    const param = query[paramName];\n    return {\n      ...carry,\n      [paramName]: Array.isArray(param) ? [...param] : param,\n    };\n  }, {});\n}\n","import { CreateIdentityPoolCommandInput, CreateIdentityPoolCommandOutput } from \"../commands/CreateIdentityPoolCommand\";\nimport { DeleteIdentitiesCommandInput, DeleteIdentitiesCommandOutput } from \"../commands/DeleteIdentitiesCommand\";\nimport { DeleteIdentityPoolCommandInput, DeleteIdentityPoolCommandOutput } from \"../commands/DeleteIdentityPoolCommand\";\nimport { DescribeIdentityCommandInput, DescribeIdentityCommandOutput } from \"../commands/DescribeIdentityCommand\";\nimport {\n  DescribeIdentityPoolCommandInput,\n  DescribeIdentityPoolCommandOutput,\n} from \"../commands/DescribeIdentityPoolCommand\";\nimport {\n  GetCredentialsForIdentityCommandInput,\n  GetCredentialsForIdentityCommandOutput,\n} from \"../commands/GetCredentialsForIdentityCommand\";\nimport { GetIdCommandInput, GetIdCommandOutput } from \"../commands/GetIdCommand\";\nimport {\n  GetIdentityPoolRolesCommandInput,\n  GetIdentityPoolRolesCommandOutput,\n} from \"../commands/GetIdentityPoolRolesCommand\";\nimport { GetOpenIdTokenCommandInput, GetOpenIdTokenCommandOutput } from \"../commands/GetOpenIdTokenCommand\";\nimport {\n  GetOpenIdTokenForDeveloperIdentityCommandInput,\n  GetOpenIdTokenForDeveloperIdentityCommandOutput,\n} from \"../commands/GetOpenIdTokenForDeveloperIdentityCommand\";\nimport { ListIdentitiesCommandInput, ListIdentitiesCommandOutput } from \"../commands/ListIdentitiesCommand\";\nimport { ListIdentityPoolsCommandInput, ListIdentityPoolsCommandOutput } from \"../commands/ListIdentityPoolsCommand\";\nimport {\n  ListTagsForResourceCommandInput,\n  ListTagsForResourceCommandOutput,\n} from \"../commands/ListTagsForResourceCommand\";\nimport {\n  LookupDeveloperIdentityCommandInput,\n  LookupDeveloperIdentityCommandOutput,\n} from \"../commands/LookupDeveloperIdentityCommand\";\nimport {\n  MergeDeveloperIdentitiesCommandInput,\n  MergeDeveloperIdentitiesCommandOutput,\n} from \"../commands/MergeDeveloperIdentitiesCommand\";\nimport {\n  SetIdentityPoolRolesCommandInput,\n  SetIdentityPoolRolesCommandOutput,\n} from \"../commands/SetIdentityPoolRolesCommand\";\nimport { TagResourceCommandInput, TagResourceCommandOutput } from \"../commands/TagResourceCommand\";\nimport {\n  UnlinkDeveloperIdentityCommandInput,\n  UnlinkDeveloperIdentityCommandOutput,\n} from \"../commands/UnlinkDeveloperIdentityCommand\";\nimport { UnlinkIdentityCommandInput, UnlinkIdentityCommandOutput } from \"../commands/UnlinkIdentityCommand\";\nimport { UntagResourceCommandInput, UntagResourceCommandOutput } from \"../commands/UntagResourceCommand\";\nimport { UpdateIdentityPoolCommandInput, UpdateIdentityPoolCommandOutput } from \"../commands/UpdateIdentityPoolCommand\";\nimport {\n  CognitoIdentityProvider,\n  ConcurrentModificationException,\n  CreateIdentityPoolInput,\n  Credentials,\n  DeleteIdentitiesInput,\n  DeleteIdentitiesResponse,\n  DeleteIdentityPoolInput,\n  DescribeIdentityInput,\n  DescribeIdentityPoolInput,\n  DeveloperUserAlreadyRegisteredException,\n  ExternalServiceException,\n  GetCredentialsForIdentityInput,\n  GetCredentialsForIdentityResponse,\n  GetIdInput,\n  GetIdResponse,\n  GetIdentityPoolRolesInput,\n  GetIdentityPoolRolesResponse,\n  GetOpenIdTokenForDeveloperIdentityInput,\n  GetOpenIdTokenForDeveloperIdentityResponse,\n  GetOpenIdTokenInput,\n  GetOpenIdTokenResponse,\n  IdentityDescription,\n  IdentityPool,\n  IdentityPoolShortDescription,\n  InternalErrorException,\n  InvalidIdentityPoolConfigurationException,\n  InvalidParameterException,\n  LimitExceededException,\n  ListIdentitiesInput,\n  ListIdentitiesResponse,\n  ListIdentityPoolsInput,\n  ListIdentityPoolsResponse,\n  ListTagsForResourceInput,\n  ListTagsForResourceResponse,\n  LookupDeveloperIdentityInput,\n  LookupDeveloperIdentityResponse,\n  MappingRule,\n  MergeDeveloperIdentitiesInput,\n  MergeDeveloperIdentitiesResponse,\n  NotAuthorizedException,\n  ResourceConflictException,\n  ResourceNotFoundException,\n  RoleMapping,\n  RulesConfigurationType,\n  SetIdentityPoolRolesInput,\n  TagResourceInput,\n  TagResourceResponse,\n  TooManyRequestsException,\n  UnlinkDeveloperIdentityInput,\n  UnlinkIdentityInput,\n  UnprocessedIdentityId,\n  UntagResourceInput,\n  UntagResourceResponse,\n} from \"../models/models_0\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { SmithyException as __SmithyException } from \"@aws-sdk/smithy-client\";\nimport {\n  Endpoint as __Endpoint,\n  HeaderBag as __HeaderBag,\n  MetadataBearer as __MetadataBearer,\n  ResponseMetadata as __ResponseMetadata,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport const serializeAws_json1_1CreateIdentityPoolCommand = async (\n  input: CreateIdentityPoolCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.CreateIdentityPool\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1CreateIdentityPoolInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DeleteIdentitiesCommand = async (\n  input: DeleteIdentitiesCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.DeleteIdentities\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DeleteIdentitiesInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DeleteIdentityPoolCommand = async (\n  input: DeleteIdentityPoolCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.DeleteIdentityPool\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DeleteIdentityPoolInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DescribeIdentityCommand = async (\n  input: DescribeIdentityCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.DescribeIdentity\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DescribeIdentityInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DescribeIdentityPoolCommand = async (\n  input: DescribeIdentityPoolCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.DescribeIdentityPool\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DescribeIdentityPoolInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1GetCredentialsForIdentityCommand = async (\n  input: GetCredentialsForIdentityCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.GetCredentialsForIdentity\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1GetCredentialsForIdentityInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1GetIdCommand = async (\n  input: GetIdCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.GetId\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1GetIdInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1GetIdentityPoolRolesCommand = async (\n  input: GetIdentityPoolRolesCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.GetIdentityPoolRoles\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1GetIdentityPoolRolesInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1GetOpenIdTokenCommand = async (\n  input: GetOpenIdTokenCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.GetOpenIdToken\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1GetOpenIdTokenInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1GetOpenIdTokenForDeveloperIdentityCommand = async (\n  input: GetOpenIdTokenForDeveloperIdentityCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.GetOpenIdTokenForDeveloperIdentity\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1GetOpenIdTokenForDeveloperIdentityInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1ListIdentitiesCommand = async (\n  input: ListIdentitiesCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.ListIdentities\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1ListIdentitiesInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1ListIdentityPoolsCommand = async (\n  input: ListIdentityPoolsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.ListIdentityPools\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1ListIdentityPoolsInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1ListTagsForResourceCommand = async (\n  input: ListTagsForResourceCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.ListTagsForResource\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1ListTagsForResourceInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1LookupDeveloperIdentityCommand = async (\n  input: LookupDeveloperIdentityCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.LookupDeveloperIdentity\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1LookupDeveloperIdentityInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1MergeDeveloperIdentitiesCommand = async (\n  input: MergeDeveloperIdentitiesCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.MergeDeveloperIdentities\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1MergeDeveloperIdentitiesInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1SetIdentityPoolRolesCommand = async (\n  input: SetIdentityPoolRolesCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.SetIdentityPoolRoles\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1SetIdentityPoolRolesInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1TagResourceCommand = async (\n  input: TagResourceCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.TagResource\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1TagResourceInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1UnlinkDeveloperIdentityCommand = async (\n  input: UnlinkDeveloperIdentityCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.UnlinkDeveloperIdentity\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1UnlinkDeveloperIdentityInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1UnlinkIdentityCommand = async (\n  input: UnlinkIdentityCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.UnlinkIdentity\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1UnlinkIdentityInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1UntagResourceCommand = async (\n  input: UntagResourceCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.UntagResource\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1UntagResourceInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1UpdateIdentityPoolCommand = async (\n  input: UpdateIdentityPoolCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.UpdateIdentityPool\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1IdentityPool(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const deserializeAws_json1_1CreateIdentityPoolCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateIdentityPoolCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1CreateIdentityPoolCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1IdentityPool(data, context);\n  const response: CreateIdentityPoolCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1CreateIdentityPoolCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateIdentityPoolCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.cognitoidentity#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      response = {\n        ...(await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceConflictException\":\n    case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DeleteIdentitiesCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteIdentitiesCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DeleteIdentitiesCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1DeleteIdentitiesResponse(data, context);\n  const response: DeleteIdentitiesCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DeleteIdentitiesCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteIdentitiesCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DeleteIdentityPoolCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteIdentityPoolCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DeleteIdentityPoolCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: DeleteIdentityPoolCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DeleteIdentityPoolCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteIdentityPoolCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      response = {\n        ...(await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DescribeIdentityCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeIdentityCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DescribeIdentityCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1IdentityDescription(data, context);\n  const response: DescribeIdentityCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DescribeIdentityCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeIdentityCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      response = {\n        ...(await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DescribeIdentityPoolCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeIdentityPoolCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DescribeIdentityPoolCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1IdentityPool(data, context);\n  const response: DescribeIdentityPoolCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DescribeIdentityPoolCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeIdentityPoolCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      response = {\n        ...(await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1GetCredentialsForIdentityCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetCredentialsForIdentityCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1GetCredentialsForIdentityCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1GetCredentialsForIdentityResponse(data, context);\n  const response: GetCredentialsForIdentityCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1GetCredentialsForIdentityCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetCredentialsForIdentityCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"ExternalServiceException\":\n    case \"com.amazonaws.cognitoidentity#ExternalServiceException\":\n      response = {\n        ...(await deserializeAws_json1_1ExternalServiceExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidIdentityPoolConfigurationException\":\n    case \"com.amazonaws.cognitoidentity#InvalidIdentityPoolConfigurationException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidIdentityPoolConfigurationExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      response = {\n        ...(await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceConflictException\":\n    case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1GetIdCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetIdCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1GetIdCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1GetIdResponse(data, context);\n  const response: GetIdCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1GetIdCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetIdCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"ExternalServiceException\":\n    case \"com.amazonaws.cognitoidentity#ExternalServiceException\":\n      response = {\n        ...(await deserializeAws_json1_1ExternalServiceExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.cognitoidentity#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      response = {\n        ...(await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceConflictException\":\n    case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1GetIdentityPoolRolesCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetIdentityPoolRolesCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1GetIdentityPoolRolesCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1GetIdentityPoolRolesResponse(data, context);\n  const response: GetIdentityPoolRolesCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1GetIdentityPoolRolesCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetIdentityPoolRolesCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      response = {\n        ...(await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceConflictException\":\n    case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1GetOpenIdTokenCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetOpenIdTokenCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1GetOpenIdTokenCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1GetOpenIdTokenResponse(data, context);\n  const response: GetOpenIdTokenCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1GetOpenIdTokenCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetOpenIdTokenCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"ExternalServiceException\":\n    case \"com.amazonaws.cognitoidentity#ExternalServiceException\":\n      response = {\n        ...(await deserializeAws_json1_1ExternalServiceExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      response = {\n        ...(await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceConflictException\":\n    case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1GetOpenIdTokenForDeveloperIdentityCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetOpenIdTokenForDeveloperIdentityCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1GetOpenIdTokenForDeveloperIdentityCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1GetOpenIdTokenForDeveloperIdentityResponse(data, context);\n  const response: GetOpenIdTokenForDeveloperIdentityCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1GetOpenIdTokenForDeveloperIdentityCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetOpenIdTokenForDeveloperIdentityCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"DeveloperUserAlreadyRegisteredException\":\n    case \"com.amazonaws.cognitoidentity#DeveloperUserAlreadyRegisteredException\":\n      response = {\n        ...(await deserializeAws_json1_1DeveloperUserAlreadyRegisteredExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      response = {\n        ...(await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceConflictException\":\n    case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1ListIdentitiesCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListIdentitiesCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1ListIdentitiesCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1ListIdentitiesResponse(data, context);\n  const response: ListIdentitiesCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1ListIdentitiesCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListIdentitiesCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      response = {\n        ...(await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1ListIdentityPoolsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListIdentityPoolsCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1ListIdentityPoolsCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1ListIdentityPoolsResponse(data, context);\n  const response: ListIdentityPoolsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1ListIdentityPoolsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListIdentityPoolsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      response = {\n        ...(await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1ListTagsForResourceCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListTagsForResourceCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1ListTagsForResourceCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1ListTagsForResourceResponse(data, context);\n  const response: ListTagsForResourceCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1ListTagsForResourceCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListTagsForResourceCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      response = {\n        ...(await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1LookupDeveloperIdentityCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<LookupDeveloperIdentityCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1LookupDeveloperIdentityCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1LookupDeveloperIdentityResponse(data, context);\n  const response: LookupDeveloperIdentityCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1LookupDeveloperIdentityCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<LookupDeveloperIdentityCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      response = {\n        ...(await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceConflictException\":\n    case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1MergeDeveloperIdentitiesCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<MergeDeveloperIdentitiesCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1MergeDeveloperIdentitiesCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1MergeDeveloperIdentitiesResponse(data, context);\n  const response: MergeDeveloperIdentitiesCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1MergeDeveloperIdentitiesCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<MergeDeveloperIdentitiesCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      response = {\n        ...(await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceConflictException\":\n    case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1SetIdentityPoolRolesCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<SetIdentityPoolRolesCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1SetIdentityPoolRolesCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: SetIdentityPoolRolesCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1SetIdentityPoolRolesCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<SetIdentityPoolRolesCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"ConcurrentModificationException\":\n    case \"com.amazonaws.cognitoidentity#ConcurrentModificationException\":\n      response = {\n        ...(await deserializeAws_json1_1ConcurrentModificationExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      response = {\n        ...(await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceConflictException\":\n    case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1TagResourceCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<TagResourceCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1TagResourceCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1TagResourceResponse(data, context);\n  const response: TagResourceCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1TagResourceCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<TagResourceCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      response = {\n        ...(await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1UnlinkDeveloperIdentityCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UnlinkDeveloperIdentityCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1UnlinkDeveloperIdentityCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: UnlinkDeveloperIdentityCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1UnlinkDeveloperIdentityCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UnlinkDeveloperIdentityCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      response = {\n        ...(await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceConflictException\":\n    case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1UnlinkIdentityCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UnlinkIdentityCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1UnlinkIdentityCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: UnlinkIdentityCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1UnlinkIdentityCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UnlinkIdentityCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"ExternalServiceException\":\n    case \"com.amazonaws.cognitoidentity#ExternalServiceException\":\n      response = {\n        ...(await deserializeAws_json1_1ExternalServiceExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      response = {\n        ...(await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceConflictException\":\n    case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1UntagResourceCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UntagResourceCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1UntagResourceCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1UntagResourceResponse(data, context);\n  const response: UntagResourceCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1UntagResourceCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UntagResourceCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      response = {\n        ...(await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1UpdateIdentityPoolCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateIdentityPoolCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1UpdateIdentityPoolCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1IdentityPool(data, context);\n  const response: UpdateIdentityPoolCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1UpdateIdentityPoolCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateIdentityPoolCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"ConcurrentModificationException\":\n    case \"com.amazonaws.cognitoidentity#ConcurrentModificationException\":\n      response = {\n        ...(await deserializeAws_json1_1ConcurrentModificationExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.cognitoidentity#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      response = {\n        ...(await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceConflictException\":\n    case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nconst deserializeAws_json1_1ConcurrentModificationExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<ConcurrentModificationException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1ConcurrentModificationException(body, context);\n  const contents: ConcurrentModificationException = {\n    name: \"ConcurrentModificationException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1DeveloperUserAlreadyRegisteredExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<DeveloperUserAlreadyRegisteredException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1DeveloperUserAlreadyRegisteredException(body, context);\n  const contents: DeveloperUserAlreadyRegisteredException = {\n    name: \"DeveloperUserAlreadyRegisteredException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1ExternalServiceExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<ExternalServiceException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1ExternalServiceException(body, context);\n  const contents: ExternalServiceException = {\n    name: \"ExternalServiceException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1InternalErrorExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<InternalErrorException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1InternalErrorException(body, context);\n  const contents: InternalErrorException = {\n    name: \"InternalErrorException\",\n    $fault: \"server\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1InvalidIdentityPoolConfigurationExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<InvalidIdentityPoolConfigurationException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1InvalidIdentityPoolConfigurationException(body, context);\n  const contents: InvalidIdentityPoolConfigurationException = {\n    name: \"InvalidIdentityPoolConfigurationException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1InvalidParameterExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<InvalidParameterException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1InvalidParameterException(body, context);\n  const contents: InvalidParameterException = {\n    name: \"InvalidParameterException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1LimitExceededExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<LimitExceededException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1LimitExceededException(body, context);\n  const contents: LimitExceededException = {\n    name: \"LimitExceededException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1NotAuthorizedExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<NotAuthorizedException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1NotAuthorizedException(body, context);\n  const contents: NotAuthorizedException = {\n    name: \"NotAuthorizedException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1ResourceConflictExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<ResourceConflictException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1ResourceConflictException(body, context);\n  const contents: ResourceConflictException = {\n    name: \"ResourceConflictException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1ResourceNotFoundExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<ResourceNotFoundException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1ResourceNotFoundException(body, context);\n  const contents: ResourceNotFoundException = {\n    name: \"ResourceNotFoundException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1TooManyRequestsExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<TooManyRequestsException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1TooManyRequestsException(body, context);\n  const contents: TooManyRequestsException = {\n    name: \"TooManyRequestsException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst serializeAws_json1_1CognitoIdentityProvider = (input: CognitoIdentityProvider, context: __SerdeContext): any => {\n  return {\n    ...(input.ClientId !== undefined && input.ClientId !== null && { ClientId: input.ClientId }),\n    ...(input.ProviderName !== undefined && input.ProviderName !== null && { ProviderName: input.ProviderName }),\n    ...(input.ServerSideTokenCheck !== undefined &&\n      input.ServerSideTokenCheck !== null && { ServerSideTokenCheck: input.ServerSideTokenCheck }),\n  };\n};\n\nconst serializeAws_json1_1CognitoIdentityProviderList = (\n  input: CognitoIdentityProvider[],\n  context: __SerdeContext\n): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return serializeAws_json1_1CognitoIdentityProvider(entry, context);\n    });\n};\n\nconst serializeAws_json1_1CreateIdentityPoolInput = (input: CreateIdentityPoolInput, context: __SerdeContext): any => {\n  return {\n    ...(input.AllowClassicFlow !== undefined &&\n      input.AllowClassicFlow !== null && { AllowClassicFlow: input.AllowClassicFlow }),\n    ...(input.AllowUnauthenticatedIdentities !== undefined &&\n      input.AllowUnauthenticatedIdentities !== null && {\n        AllowUnauthenticatedIdentities: input.AllowUnauthenticatedIdentities,\n      }),\n    ...(input.CognitoIdentityProviders !== undefined &&\n      input.CognitoIdentityProviders !== null && {\n        CognitoIdentityProviders: serializeAws_json1_1CognitoIdentityProviderList(\n          input.CognitoIdentityProviders,\n          context\n        ),\n      }),\n    ...(input.DeveloperProviderName !== undefined &&\n      input.DeveloperProviderName !== null && { DeveloperProviderName: input.DeveloperProviderName }),\n    ...(input.IdentityPoolName !== undefined &&\n      input.IdentityPoolName !== null && { IdentityPoolName: input.IdentityPoolName }),\n    ...(input.IdentityPoolTags !== undefined &&\n      input.IdentityPoolTags !== null && {\n        IdentityPoolTags: serializeAws_json1_1IdentityPoolTagsType(input.IdentityPoolTags, context),\n      }),\n    ...(input.OpenIdConnectProviderARNs !== undefined &&\n      input.OpenIdConnectProviderARNs !== null && {\n        OpenIdConnectProviderARNs: serializeAws_json1_1OIDCProviderList(input.OpenIdConnectProviderARNs, context),\n      }),\n    ...(input.SamlProviderARNs !== undefined &&\n      input.SamlProviderARNs !== null && {\n        SamlProviderARNs: serializeAws_json1_1SAMLProviderList(input.SamlProviderARNs, context),\n      }),\n    ...(input.SupportedLoginProviders !== undefined &&\n      input.SupportedLoginProviders !== null && {\n        SupportedLoginProviders: serializeAws_json1_1IdentityProviders(input.SupportedLoginProviders, context),\n      }),\n  };\n};\n\nconst serializeAws_json1_1DeleteIdentitiesInput = (input: DeleteIdentitiesInput, context: __SerdeContext): any => {\n  return {\n    ...(input.IdentityIdsToDelete !== undefined &&\n      input.IdentityIdsToDelete !== null && {\n        IdentityIdsToDelete: serializeAws_json1_1IdentityIdList(input.IdentityIdsToDelete, context),\n      }),\n  };\n};\n\nconst serializeAws_json1_1DeleteIdentityPoolInput = (input: DeleteIdentityPoolInput, context: __SerdeContext): any => {\n  return {\n    ...(input.IdentityPoolId !== undefined &&\n      input.IdentityPoolId !== null && { IdentityPoolId: input.IdentityPoolId }),\n  };\n};\n\nconst serializeAws_json1_1DescribeIdentityInput = (input: DescribeIdentityInput, context: __SerdeContext): any => {\n  return {\n    ...(input.IdentityId !== undefined && input.IdentityId !== null && { IdentityId: input.IdentityId }),\n  };\n};\n\nconst serializeAws_json1_1DescribeIdentityPoolInput = (\n  input: DescribeIdentityPoolInput,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.IdentityPoolId !== undefined &&\n      input.IdentityPoolId !== null && { IdentityPoolId: input.IdentityPoolId }),\n  };\n};\n\nconst serializeAws_json1_1GetCredentialsForIdentityInput = (\n  input: GetCredentialsForIdentityInput,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.CustomRoleArn !== undefined && input.CustomRoleArn !== null && { CustomRoleArn: input.CustomRoleArn }),\n    ...(input.IdentityId !== undefined && input.IdentityId !== null && { IdentityId: input.IdentityId }),\n    ...(input.Logins !== undefined &&\n      input.Logins !== null && { Logins: serializeAws_json1_1LoginsMap(input.Logins, context) }),\n  };\n};\n\nconst serializeAws_json1_1GetIdentityPoolRolesInput = (\n  input: GetIdentityPoolRolesInput,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.IdentityPoolId !== undefined &&\n      input.IdentityPoolId !== null && { IdentityPoolId: input.IdentityPoolId }),\n  };\n};\n\nconst serializeAws_json1_1GetIdInput = (input: GetIdInput, context: __SerdeContext): any => {\n  return {\n    ...(input.AccountId !== undefined && input.AccountId !== null && { AccountId: input.AccountId }),\n    ...(input.IdentityPoolId !== undefined &&\n      input.IdentityPoolId !== null && { IdentityPoolId: input.IdentityPoolId }),\n    ...(input.Logins !== undefined &&\n      input.Logins !== null && { Logins: serializeAws_json1_1LoginsMap(input.Logins, context) }),\n  };\n};\n\nconst serializeAws_json1_1GetOpenIdTokenForDeveloperIdentityInput = (\n  input: GetOpenIdTokenForDeveloperIdentityInput,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.IdentityId !== undefined && input.IdentityId !== null && { IdentityId: input.IdentityId }),\n    ...(input.IdentityPoolId !== undefined &&\n      input.IdentityPoolId !== null && { IdentityPoolId: input.IdentityPoolId }),\n    ...(input.Logins !== undefined &&\n      input.Logins !== null && { Logins: serializeAws_json1_1LoginsMap(input.Logins, context) }),\n    ...(input.TokenDuration !== undefined && input.TokenDuration !== null && { TokenDuration: input.TokenDuration }),\n  };\n};\n\nconst serializeAws_json1_1GetOpenIdTokenInput = (input: GetOpenIdTokenInput, context: __SerdeContext): any => {\n  return {\n    ...(input.IdentityId !== undefined && input.IdentityId !== null && { IdentityId: input.IdentityId }),\n    ...(input.Logins !== undefined &&\n      input.Logins !== null && { Logins: serializeAws_json1_1LoginsMap(input.Logins, context) }),\n  };\n};\n\nconst serializeAws_json1_1IdentityIdList = (input: string[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst serializeAws_json1_1IdentityPool = (input: IdentityPool, context: __SerdeContext): any => {\n  return {\n    ...(input.AllowClassicFlow !== undefined &&\n      input.AllowClassicFlow !== null && { AllowClassicFlow: input.AllowClassicFlow }),\n    ...(input.AllowUnauthenticatedIdentities !== undefined &&\n      input.AllowUnauthenticatedIdentities !== null && {\n        AllowUnauthenticatedIdentities: input.AllowUnauthenticatedIdentities,\n      }),\n    ...(input.CognitoIdentityProviders !== undefined &&\n      input.CognitoIdentityProviders !== null && {\n        CognitoIdentityProviders: serializeAws_json1_1CognitoIdentityProviderList(\n          input.CognitoIdentityProviders,\n          context\n        ),\n      }),\n    ...(input.DeveloperProviderName !== undefined &&\n      input.DeveloperProviderName !== null && { DeveloperProviderName: input.DeveloperProviderName }),\n    ...(input.IdentityPoolId !== undefined &&\n      input.IdentityPoolId !== null && { IdentityPoolId: input.IdentityPoolId }),\n    ...(input.IdentityPoolName !== undefined &&\n      input.IdentityPoolName !== null && { IdentityPoolName: input.IdentityPoolName }),\n    ...(input.IdentityPoolTags !== undefined &&\n      input.IdentityPoolTags !== null && {\n        IdentityPoolTags: serializeAws_json1_1IdentityPoolTagsType(input.IdentityPoolTags, context),\n      }),\n    ...(input.OpenIdConnectProviderARNs !== undefined &&\n      input.OpenIdConnectProviderARNs !== null && {\n        OpenIdConnectProviderARNs: serializeAws_json1_1OIDCProviderList(input.OpenIdConnectProviderARNs, context),\n      }),\n    ...(input.SamlProviderARNs !== undefined &&\n      input.SamlProviderARNs !== null && {\n        SamlProviderARNs: serializeAws_json1_1SAMLProviderList(input.SamlProviderARNs, context),\n      }),\n    ...(input.SupportedLoginProviders !== undefined &&\n      input.SupportedLoginProviders !== null && {\n        SupportedLoginProviders: serializeAws_json1_1IdentityProviders(input.SupportedLoginProviders, context),\n      }),\n  };\n};\n\nconst serializeAws_json1_1IdentityPoolTagsListType = (input: string[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst serializeAws_json1_1IdentityPoolTagsType = (input: { [key: string]: string }, context: __SerdeContext): any => {\n  return Object.entries(input).reduce((acc: { [key: string]: string }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: value,\n    };\n  }, {});\n};\n\nconst serializeAws_json1_1IdentityProviders = (input: { [key: string]: string }, context: __SerdeContext): any => {\n  return Object.entries(input).reduce((acc: { [key: string]: string }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: value,\n    };\n  }, {});\n};\n\nconst serializeAws_json1_1ListIdentitiesInput = (input: ListIdentitiesInput, context: __SerdeContext): any => {\n  return {\n    ...(input.HideDisabled !== undefined && input.HideDisabled !== null && { HideDisabled: input.HideDisabled }),\n    ...(input.IdentityPoolId !== undefined &&\n      input.IdentityPoolId !== null && { IdentityPoolId: input.IdentityPoolId }),\n    ...(input.MaxResults !== undefined && input.MaxResults !== null && { MaxResults: input.MaxResults }),\n    ...(input.NextToken !== undefined && input.NextToken !== null && { NextToken: input.NextToken }),\n  };\n};\n\nconst serializeAws_json1_1ListIdentityPoolsInput = (input: ListIdentityPoolsInput, context: __SerdeContext): any => {\n  return {\n    ...(input.MaxResults !== undefined && input.MaxResults !== null && { MaxResults: input.MaxResults }),\n    ...(input.NextToken !== undefined && input.NextToken !== null && { NextToken: input.NextToken }),\n  };\n};\n\nconst serializeAws_json1_1ListTagsForResourceInput = (\n  input: ListTagsForResourceInput,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.ResourceArn !== undefined && input.ResourceArn !== null && { ResourceArn: input.ResourceArn }),\n  };\n};\n\nconst serializeAws_json1_1LoginsList = (input: string[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst serializeAws_json1_1LoginsMap = (input: { [key: string]: string }, context: __SerdeContext): any => {\n  return Object.entries(input).reduce((acc: { [key: string]: string }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: value,\n    };\n  }, {});\n};\n\nconst serializeAws_json1_1LookupDeveloperIdentityInput = (\n  input: LookupDeveloperIdentityInput,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.DeveloperUserIdentifier !== undefined &&\n      input.DeveloperUserIdentifier !== null && { DeveloperUserIdentifier: input.DeveloperUserIdentifier }),\n    ...(input.IdentityId !== undefined && input.IdentityId !== null && { IdentityId: input.IdentityId }),\n    ...(input.IdentityPoolId !== undefined &&\n      input.IdentityPoolId !== null && { IdentityPoolId: input.IdentityPoolId }),\n    ...(input.MaxResults !== undefined && input.MaxResults !== null && { MaxResults: input.MaxResults }),\n    ...(input.NextToken !== undefined && input.NextToken !== null && { NextToken: input.NextToken }),\n  };\n};\n\nconst serializeAws_json1_1MappingRule = (input: MappingRule, context: __SerdeContext): any => {\n  return {\n    ...(input.Claim !== undefined && input.Claim !== null && { Claim: input.Claim }),\n    ...(input.MatchType !== undefined && input.MatchType !== null && { MatchType: input.MatchType }),\n    ...(input.RoleARN !== undefined && input.RoleARN !== null && { RoleARN: input.RoleARN }),\n    ...(input.Value !== undefined && input.Value !== null && { Value: input.Value }),\n  };\n};\n\nconst serializeAws_json1_1MappingRulesList = (input: MappingRule[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return serializeAws_json1_1MappingRule(entry, context);\n    });\n};\n\nconst serializeAws_json1_1MergeDeveloperIdentitiesInput = (\n  input: MergeDeveloperIdentitiesInput,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.DestinationUserIdentifier !== undefined &&\n      input.DestinationUserIdentifier !== null && { DestinationUserIdentifier: input.DestinationUserIdentifier }),\n    ...(input.DeveloperProviderName !== undefined &&\n      input.DeveloperProviderName !== null && { DeveloperProviderName: input.DeveloperProviderName }),\n    ...(input.IdentityPoolId !== undefined &&\n      input.IdentityPoolId !== null && { IdentityPoolId: input.IdentityPoolId }),\n    ...(input.SourceUserIdentifier !== undefined &&\n      input.SourceUserIdentifier !== null && { SourceUserIdentifier: input.SourceUserIdentifier }),\n  };\n};\n\nconst serializeAws_json1_1OIDCProviderList = (input: string[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst serializeAws_json1_1RoleMapping = (input: RoleMapping, context: __SerdeContext): any => {\n  return {\n    ...(input.AmbiguousRoleResolution !== undefined &&\n      input.AmbiguousRoleResolution !== null && { AmbiguousRoleResolution: input.AmbiguousRoleResolution }),\n    ...(input.RulesConfiguration !== undefined &&\n      input.RulesConfiguration !== null && {\n        RulesConfiguration: serializeAws_json1_1RulesConfigurationType(input.RulesConfiguration, context),\n      }),\n    ...(input.Type !== undefined && input.Type !== null && { Type: input.Type }),\n  };\n};\n\nconst serializeAws_json1_1RoleMappingMap = (input: { [key: string]: RoleMapping }, context: __SerdeContext): any => {\n  return Object.entries(input).reduce((acc: { [key: string]: RoleMapping }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: serializeAws_json1_1RoleMapping(value, context),\n    };\n  }, {});\n};\n\nconst serializeAws_json1_1RolesMap = (input: { [key: string]: string }, context: __SerdeContext): any => {\n  return Object.entries(input).reduce((acc: { [key: string]: string }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: value,\n    };\n  }, {});\n};\n\nconst serializeAws_json1_1RulesConfigurationType = (input: RulesConfigurationType, context: __SerdeContext): any => {\n  return {\n    ...(input.Rules !== undefined &&\n      input.Rules !== null && { Rules: serializeAws_json1_1MappingRulesList(input.Rules, context) }),\n  };\n};\n\nconst serializeAws_json1_1SAMLProviderList = (input: string[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst serializeAws_json1_1SetIdentityPoolRolesInput = (\n  input: SetIdentityPoolRolesInput,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.IdentityPoolId !== undefined &&\n      input.IdentityPoolId !== null && { IdentityPoolId: input.IdentityPoolId }),\n    ...(input.RoleMappings !== undefined &&\n      input.RoleMappings !== null && { RoleMappings: serializeAws_json1_1RoleMappingMap(input.RoleMappings, context) }),\n    ...(input.Roles !== undefined &&\n      input.Roles !== null && { Roles: serializeAws_json1_1RolesMap(input.Roles, context) }),\n  };\n};\n\nconst serializeAws_json1_1TagResourceInput = (input: TagResourceInput, context: __SerdeContext): any => {\n  return {\n    ...(input.ResourceArn !== undefined && input.ResourceArn !== null && { ResourceArn: input.ResourceArn }),\n    ...(input.Tags !== undefined &&\n      input.Tags !== null && { Tags: serializeAws_json1_1IdentityPoolTagsType(input.Tags, context) }),\n  };\n};\n\nconst serializeAws_json1_1UnlinkDeveloperIdentityInput = (\n  input: UnlinkDeveloperIdentityInput,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.DeveloperProviderName !== undefined &&\n      input.DeveloperProviderName !== null && { DeveloperProviderName: input.DeveloperProviderName }),\n    ...(input.DeveloperUserIdentifier !== undefined &&\n      input.DeveloperUserIdentifier !== null && { DeveloperUserIdentifier: input.DeveloperUserIdentifier }),\n    ...(input.IdentityId !== undefined && input.IdentityId !== null && { IdentityId: input.IdentityId }),\n    ...(input.IdentityPoolId !== undefined &&\n      input.IdentityPoolId !== null && { IdentityPoolId: input.IdentityPoolId }),\n  };\n};\n\nconst serializeAws_json1_1UnlinkIdentityInput = (input: UnlinkIdentityInput, context: __SerdeContext): any => {\n  return {\n    ...(input.IdentityId !== undefined && input.IdentityId !== null && { IdentityId: input.IdentityId }),\n    ...(input.Logins !== undefined &&\n      input.Logins !== null && { Logins: serializeAws_json1_1LoginsMap(input.Logins, context) }),\n    ...(input.LoginsToRemove !== undefined &&\n      input.LoginsToRemove !== null && {\n        LoginsToRemove: serializeAws_json1_1LoginsList(input.LoginsToRemove, context),\n      }),\n  };\n};\n\nconst serializeAws_json1_1UntagResourceInput = (input: UntagResourceInput, context: __SerdeContext): any => {\n  return {\n    ...(input.ResourceArn !== undefined && input.ResourceArn !== null && { ResourceArn: input.ResourceArn }),\n    ...(input.TagKeys !== undefined &&\n      input.TagKeys !== null && { TagKeys: serializeAws_json1_1IdentityPoolTagsListType(input.TagKeys, context) }),\n  };\n};\n\nconst deserializeAws_json1_1CognitoIdentityProvider = (\n  output: any,\n  context: __SerdeContext\n): CognitoIdentityProvider => {\n  return {\n    ClientId: output.ClientId !== undefined && output.ClientId !== null ? output.ClientId : undefined,\n    ProviderName: output.ProviderName !== undefined && output.ProviderName !== null ? output.ProviderName : undefined,\n    ServerSideTokenCheck:\n      output.ServerSideTokenCheck !== undefined && output.ServerSideTokenCheck !== null\n        ? output.ServerSideTokenCheck\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1CognitoIdentityProviderList = (\n  output: any,\n  context: __SerdeContext\n): CognitoIdentityProvider[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1CognitoIdentityProvider(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1ConcurrentModificationException = (\n  output: any,\n  context: __SerdeContext\n): ConcurrentModificationException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1Credentials = (output: any, context: __SerdeContext): Credentials => {\n  return {\n    AccessKeyId: output.AccessKeyId !== undefined && output.AccessKeyId !== null ? output.AccessKeyId : undefined,\n    Expiration:\n      output.Expiration !== undefined && output.Expiration !== null\n        ? new Date(Math.round(output.Expiration * 1000))\n        : undefined,\n    SecretKey: output.SecretKey !== undefined && output.SecretKey !== null ? output.SecretKey : undefined,\n    SessionToken: output.SessionToken !== undefined && output.SessionToken !== null ? output.SessionToken : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1DeleteIdentitiesResponse = (\n  output: any,\n  context: __SerdeContext\n): DeleteIdentitiesResponse => {\n  return {\n    UnprocessedIdentityIds:\n      output.UnprocessedIdentityIds !== undefined && output.UnprocessedIdentityIds !== null\n        ? deserializeAws_json1_1UnprocessedIdentityIdList(output.UnprocessedIdentityIds, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1DeveloperUserAlreadyRegisteredException = (\n  output: any,\n  context: __SerdeContext\n): DeveloperUserAlreadyRegisteredException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1DeveloperUserIdentifierList = (output: any, context: __SerdeContext): string[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst deserializeAws_json1_1ExternalServiceException = (\n  output: any,\n  context: __SerdeContext\n): ExternalServiceException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1GetCredentialsForIdentityResponse = (\n  output: any,\n  context: __SerdeContext\n): GetCredentialsForIdentityResponse => {\n  return {\n    Credentials:\n      output.Credentials !== undefined && output.Credentials !== null\n        ? deserializeAws_json1_1Credentials(output.Credentials, context)\n        : undefined,\n    IdentityId: output.IdentityId !== undefined && output.IdentityId !== null ? output.IdentityId : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1GetIdentityPoolRolesResponse = (\n  output: any,\n  context: __SerdeContext\n): GetIdentityPoolRolesResponse => {\n  return {\n    IdentityPoolId:\n      output.IdentityPoolId !== undefined && output.IdentityPoolId !== null ? output.IdentityPoolId : undefined,\n    RoleMappings:\n      output.RoleMappings !== undefined && output.RoleMappings !== null\n        ? deserializeAws_json1_1RoleMappingMap(output.RoleMappings, context)\n        : undefined,\n    Roles:\n      output.Roles !== undefined && output.Roles !== null\n        ? deserializeAws_json1_1RolesMap(output.Roles, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1GetIdResponse = (output: any, context: __SerdeContext): GetIdResponse => {\n  return {\n    IdentityId: output.IdentityId !== undefined && output.IdentityId !== null ? output.IdentityId : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1GetOpenIdTokenForDeveloperIdentityResponse = (\n  output: any,\n  context: __SerdeContext\n): GetOpenIdTokenForDeveloperIdentityResponse => {\n  return {\n    IdentityId: output.IdentityId !== undefined && output.IdentityId !== null ? output.IdentityId : undefined,\n    Token: output.Token !== undefined && output.Token !== null ? output.Token : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1GetOpenIdTokenResponse = (output: any, context: __SerdeContext): GetOpenIdTokenResponse => {\n  return {\n    IdentityId: output.IdentityId !== undefined && output.IdentityId !== null ? output.IdentityId : undefined,\n    Token: output.Token !== undefined && output.Token !== null ? output.Token : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1IdentitiesList = (output: any, context: __SerdeContext): IdentityDescription[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1IdentityDescription(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1IdentityDescription = (output: any, context: __SerdeContext): IdentityDescription => {\n  return {\n    CreationDate:\n      output.CreationDate !== undefined && output.CreationDate !== null\n        ? new Date(Math.round(output.CreationDate * 1000))\n        : undefined,\n    IdentityId: output.IdentityId !== undefined && output.IdentityId !== null ? output.IdentityId : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null\n        ? new Date(Math.round(output.LastModifiedDate * 1000))\n        : undefined,\n    Logins:\n      output.Logins !== undefined && output.Logins !== null\n        ? deserializeAws_json1_1LoginsList(output.Logins, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1IdentityPool = (output: any, context: __SerdeContext): IdentityPool => {\n  return {\n    AllowClassicFlow:\n      output.AllowClassicFlow !== undefined && output.AllowClassicFlow !== null ? output.AllowClassicFlow : undefined,\n    AllowUnauthenticatedIdentities:\n      output.AllowUnauthenticatedIdentities !== undefined && output.AllowUnauthenticatedIdentities !== null\n        ? output.AllowUnauthenticatedIdentities\n        : undefined,\n    CognitoIdentityProviders:\n      output.CognitoIdentityProviders !== undefined && output.CognitoIdentityProviders !== null\n        ? deserializeAws_json1_1CognitoIdentityProviderList(output.CognitoIdentityProviders, context)\n        : undefined,\n    DeveloperProviderName:\n      output.DeveloperProviderName !== undefined && output.DeveloperProviderName !== null\n        ? output.DeveloperProviderName\n        : undefined,\n    IdentityPoolId:\n      output.IdentityPoolId !== undefined && output.IdentityPoolId !== null ? output.IdentityPoolId : undefined,\n    IdentityPoolName:\n      output.IdentityPoolName !== undefined && output.IdentityPoolName !== null ? output.IdentityPoolName : undefined,\n    IdentityPoolTags:\n      output.IdentityPoolTags !== undefined && output.IdentityPoolTags !== null\n        ? deserializeAws_json1_1IdentityPoolTagsType(output.IdentityPoolTags, context)\n        : undefined,\n    OpenIdConnectProviderARNs:\n      output.OpenIdConnectProviderARNs !== undefined && output.OpenIdConnectProviderARNs !== null\n        ? deserializeAws_json1_1OIDCProviderList(output.OpenIdConnectProviderARNs, context)\n        : undefined,\n    SamlProviderARNs:\n      output.SamlProviderARNs !== undefined && output.SamlProviderARNs !== null\n        ? deserializeAws_json1_1SAMLProviderList(output.SamlProviderARNs, context)\n        : undefined,\n    SupportedLoginProviders:\n      output.SupportedLoginProviders !== undefined && output.SupportedLoginProviders !== null\n        ? deserializeAws_json1_1IdentityProviders(output.SupportedLoginProviders, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1IdentityPoolShortDescription = (\n  output: any,\n  context: __SerdeContext\n): IdentityPoolShortDescription => {\n  return {\n    IdentityPoolId:\n      output.IdentityPoolId !== undefined && output.IdentityPoolId !== null ? output.IdentityPoolId : undefined,\n    IdentityPoolName:\n      output.IdentityPoolName !== undefined && output.IdentityPoolName !== null ? output.IdentityPoolName : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1IdentityPoolsList = (\n  output: any,\n  context: __SerdeContext\n): IdentityPoolShortDescription[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1IdentityPoolShortDescription(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1IdentityPoolTagsType = (\n  output: any,\n  context: __SerdeContext\n): { [key: string]: string } => {\n  return Object.entries(output).reduce((acc: { [key: string]: string }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: value,\n    };\n  }, {});\n};\n\nconst deserializeAws_json1_1IdentityProviders = (output: any, context: __SerdeContext): { [key: string]: string } => {\n  return Object.entries(output).reduce((acc: { [key: string]: string }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: value,\n    };\n  }, {});\n};\n\nconst deserializeAws_json1_1InternalErrorException = (output: any, context: __SerdeContext): InternalErrorException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1InvalidIdentityPoolConfigurationException = (\n  output: any,\n  context: __SerdeContext\n): InvalidIdentityPoolConfigurationException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1InvalidParameterException = (\n  output: any,\n  context: __SerdeContext\n): InvalidParameterException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1LimitExceededException = (output: any, context: __SerdeContext): LimitExceededException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ListIdentitiesResponse = (output: any, context: __SerdeContext): ListIdentitiesResponse => {\n  return {\n    Identities:\n      output.Identities !== undefined && output.Identities !== null\n        ? deserializeAws_json1_1IdentitiesList(output.Identities, context)\n        : undefined,\n    IdentityPoolId:\n      output.IdentityPoolId !== undefined && output.IdentityPoolId !== null ? output.IdentityPoolId : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ListIdentityPoolsResponse = (\n  output: any,\n  context: __SerdeContext\n): ListIdentityPoolsResponse => {\n  return {\n    IdentityPools:\n      output.IdentityPools !== undefined && output.IdentityPools !== null\n        ? deserializeAws_json1_1IdentityPoolsList(output.IdentityPools, context)\n        : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ListTagsForResourceResponse = (\n  output: any,\n  context: __SerdeContext\n): ListTagsForResourceResponse => {\n  return {\n    Tags:\n      output.Tags !== undefined && output.Tags !== null\n        ? deserializeAws_json1_1IdentityPoolTagsType(output.Tags, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1LoginsList = (output: any, context: __SerdeContext): string[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst deserializeAws_json1_1LookupDeveloperIdentityResponse = (\n  output: any,\n  context: __SerdeContext\n): LookupDeveloperIdentityResponse => {\n  return {\n    DeveloperUserIdentifierList:\n      output.DeveloperUserIdentifierList !== undefined && output.DeveloperUserIdentifierList !== null\n        ? deserializeAws_json1_1DeveloperUserIdentifierList(output.DeveloperUserIdentifierList, context)\n        : undefined,\n    IdentityId: output.IdentityId !== undefined && output.IdentityId !== null ? output.IdentityId : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1MappingRule = (output: any, context: __SerdeContext): MappingRule => {\n  return {\n    Claim: output.Claim !== undefined && output.Claim !== null ? output.Claim : undefined,\n    MatchType: output.MatchType !== undefined && output.MatchType !== null ? output.MatchType : undefined,\n    RoleARN: output.RoleARN !== undefined && output.RoleARN !== null ? output.RoleARN : undefined,\n    Value: output.Value !== undefined && output.Value !== null ? output.Value : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1MappingRulesList = (output: any, context: __SerdeContext): MappingRule[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1MappingRule(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1MergeDeveloperIdentitiesResponse = (\n  output: any,\n  context: __SerdeContext\n): MergeDeveloperIdentitiesResponse => {\n  return {\n    IdentityId: output.IdentityId !== undefined && output.IdentityId !== null ? output.IdentityId : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1NotAuthorizedException = (output: any, context: __SerdeContext): NotAuthorizedException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1OIDCProviderList = (output: any, context: __SerdeContext): string[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst deserializeAws_json1_1ResourceConflictException = (\n  output: any,\n  context: __SerdeContext\n): ResourceConflictException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ResourceNotFoundException = (\n  output: any,\n  context: __SerdeContext\n): ResourceNotFoundException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1RoleMapping = (output: any, context: __SerdeContext): RoleMapping => {\n  return {\n    AmbiguousRoleResolution:\n      output.AmbiguousRoleResolution !== undefined && output.AmbiguousRoleResolution !== null\n        ? output.AmbiguousRoleResolution\n        : undefined,\n    RulesConfiguration:\n      output.RulesConfiguration !== undefined && output.RulesConfiguration !== null\n        ? deserializeAws_json1_1RulesConfigurationType(output.RulesConfiguration, context)\n        : undefined,\n    Type: output.Type !== undefined && output.Type !== null ? output.Type : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1RoleMappingMap = (output: any, context: __SerdeContext): { [key: string]: RoleMapping } => {\n  return Object.entries(output).reduce((acc: { [key: string]: RoleMapping }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: deserializeAws_json1_1RoleMapping(value, context),\n    };\n  }, {});\n};\n\nconst deserializeAws_json1_1RolesMap = (output: any, context: __SerdeContext): { [key: string]: string } => {\n  return Object.entries(output).reduce((acc: { [key: string]: string }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: value,\n    };\n  }, {});\n};\n\nconst deserializeAws_json1_1RulesConfigurationType = (output: any, context: __SerdeContext): RulesConfigurationType => {\n  return {\n    Rules:\n      output.Rules !== undefined && output.Rules !== null\n        ? deserializeAws_json1_1MappingRulesList(output.Rules, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1SAMLProviderList = (output: any, context: __SerdeContext): string[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst deserializeAws_json1_1TagResourceResponse = (output: any, context: __SerdeContext): TagResourceResponse => {\n  return {} as any;\n};\n\nconst deserializeAws_json1_1TooManyRequestsException = (\n  output: any,\n  context: __SerdeContext\n): TooManyRequestsException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1UnprocessedIdentityId = (output: any, context: __SerdeContext): UnprocessedIdentityId => {\n  return {\n    ErrorCode: output.ErrorCode !== undefined && output.ErrorCode !== null ? output.ErrorCode : undefined,\n    IdentityId: output.IdentityId !== undefined && output.IdentityId !== null ? output.IdentityId : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1UnprocessedIdentityIdList = (\n  output: any,\n  context: __SerdeContext\n): UnprocessedIdentityId[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1UnprocessedIdentityId(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1UntagResourceResponse = (output: any, context: __SerdeContext): UntagResourceResponse => {\n  return {} as any;\n};\n\nconst deserializeMetadata = (output: __HttpResponse): __ResponseMetadata => ({\n  httpStatusCode: output.statusCode,\n  requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"],\n  extendedRequestId: output.headers[\"x-amz-id-2\"],\n  cfId: output.headers[\"x-amz-cf-id\"],\n});\n\n// Collect low-level response body stream to Uint8Array.\nconst collectBody = (streamBody: any = new Uint8Array(), context: __SerdeContext): Promise<Uint8Array> => {\n  if (streamBody instanceof Uint8Array) {\n    return Promise.resolve(streamBody);\n  }\n  return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\n\n// Encode Uint8Array data into string with utf-8.\nconst collectBodyString = (streamBody: any, context: __SerdeContext): Promise<string> =>\n  collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\n\nconst buildHttpRpcRequest = async (\n  context: __SerdeContext,\n  headers: __HeaderBag,\n  path: string,\n  resolvedHostname: string | undefined,\n  body: any\n): Promise<__HttpRequest> => {\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  const contents: any = {\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    path,\n    headers,\n  };\n  if (resolvedHostname !== undefined) {\n    contents.hostname = resolvedHostname;\n  }\n  if (body !== undefined) {\n    contents.body = body;\n  }\n  return new __HttpRequest(contents);\n};\n\nconst parseBody = (streamBody: any, context: __SerdeContext): any =>\n  collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n      return JSON.parse(encoded);\n    }\n    return {};\n  });\n\n/**\n * Load an error code for the aws.rest-json-1.1 protocol.\n */\nconst loadRestJsonErrorCode = (output: __HttpResponse, data: any): string => {\n  const findKey = (object: any, key: string) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase());\n\n  const sanitizeErrorCode = (rawValue: string): string => {\n    let cleanValue = rawValue;\n    if (cleanValue.indexOf(\":\") >= 0) {\n      cleanValue = cleanValue.split(\":\")[0];\n    }\n    if (cleanValue.indexOf(\"#\") >= 0) {\n      cleanValue = cleanValue.split(\"#\")[1];\n    }\n    return cleanValue;\n  };\n\n  const headerKey = findKey(output.headers, \"x-amzn-errortype\");\n  if (headerKey !== undefined) {\n    return sanitizeErrorCode(output.headers[headerKey]);\n  }\n\n  if (data.code !== undefined) {\n    return sanitizeErrorCode(data.code);\n  }\n\n  if (data[\"__type\"] !== undefined) {\n    return sanitizeErrorCode(data[\"__type\"]);\n  }\n\n  return \"\";\n};\n","import {\n  DeserializeHandlerOptions,\n  EndpointBearer,\n  MetadataBearer,\n  MiddlewareStack,\n  Pluggable,\n  RequestSerializer,\n  ResponseDeserializer,\n  SerializeHandlerOptions,\n} from \"@aws-sdk/types\";\n\nimport { deserializerMiddleware } from \"./deserializerMiddleware\";\nimport { serializerMiddleware } from \"./serializerMiddleware\";\n\nexport const deserializerMiddlewareOption: DeserializeHandlerOptions = {\n  name: \"deserializerMiddleware\",\n  step: \"deserialize\",\n  tags: [\"DESERIALIZER\"],\n  override: true,\n};\n\nexport const serializerMiddlewareOption: SerializeHandlerOptions = {\n  name: \"serializerMiddleware\",\n  step: \"serialize\",\n  tags: [\"SERIALIZER\"],\n  override: true,\n};\n\nexport function getSerdePlugin<\n  InputType extends object,\n  SerDeContext extends EndpointBearer,\n  OutputType extends MetadataBearer\n>(\n  config: SerDeContext,\n  serializer: RequestSerializer<any, SerDeContext>,\n  deserializer: ResponseDeserializer<OutputType, any, SerDeContext>\n): Pluggable<InputType, OutputType> {\n  return {\n    applyToStack: (commandStack: MiddlewareStack<InputType, OutputType>) => {\n      commandStack.add(deserializerMiddleware(config, deserializer), deserializerMiddlewareOption);\n      commandStack.add(serializerMiddleware(config, serializer), serializerMiddlewareOption);\n    },\n  };\n}\n","import {\n  DeserializeHandler,\n  DeserializeHandlerArguments,\n  DeserializeHandlerOutput,\n  DeserializeMiddleware,\n  HandlerExecutionContext,\n  ResponseDeserializer,\n} from \"@aws-sdk/types\";\n\nexport const deserializerMiddleware = <Input extends object, Output extends object, RuntimeUtils = any>(\n  options: RuntimeUtils,\n  deserializer: ResponseDeserializer<any, any, RuntimeUtils>\n): DeserializeMiddleware<Input, Output> => (\n  next: DeserializeHandler<Input, Output>,\n  context: HandlerExecutionContext\n): DeserializeHandler<Input, Output> => async (\n  args: DeserializeHandlerArguments<Input>\n): Promise<DeserializeHandlerOutput<Output>> => {\n  const { response } = await next(args);\n  const parsed = await deserializer(response, options);\n  return {\n    response,\n    output: parsed as Output,\n  };\n};\n","import {\n  EndpointBearer,\n  HandlerExecutionContext,\n  RequestSerializer,\n  SerializeHandler,\n  SerializeHandlerArguments,\n  SerializeHandlerOutput,\n  SerializeMiddleware,\n} from \"@aws-sdk/types\";\n\nexport const serializerMiddleware = <Input extends object, Output extends object, RuntimeUtils extends EndpointBearer>(\n  options: RuntimeUtils,\n  serializer: RequestSerializer<any, RuntimeUtils>\n): SerializeMiddleware<Input, Output> => (\n  next: SerializeHandler<Input, Output>,\n  context: HandlerExecutionContext\n): SerializeHandler<Input, Output> => async (\n  args: SerializeHandlerArguments<Input>\n): Promise<SerializeHandlerOutput<Output>> => {\n  const request = await serializer(args.input, options);\n  return next({\n    ...args,\n    request,\n  });\n};\n","import {\n  AbsoluteLocation,\n  DeserializeHandler,\n  Handler,\n  HandlerExecutionContext,\n  HandlerOptions,\n  MiddlewareStack,\n  MiddlewareType,\n  Pluggable,\n  Priority,\n  RelativeLocation,\n  Step,\n} from \"@aws-sdk/types\";\n\nimport { AbsoluteMiddlewareEntry, MiddlewareEntry, Normalized, RelativeMiddlewareEntry } from \"./types\";\n\nexport const constructStack = <Input extends object, Output extends object>(): MiddlewareStack<Input, Output> => {\n  let absoluteEntries: AbsoluteMiddlewareEntry<Input, Output>[] = [];\n  let relativeEntries: RelativeMiddlewareEntry<Input, Output>[] = [];\n  const entriesNameSet: Set<string> = new Set();\n\n  const sort = <T extends AbsoluteMiddlewareEntry<Input, Output>>(entries: T[]): T[] =>\n    entries.sort(\n      (a, b) =>\n        stepWeights[b.step] - stepWeights[a.step] ||\n        priorityWeights[b.priority || \"normal\"] - priorityWeights[a.priority || \"normal\"]\n    );\n\n  const removeByName = (toRemove: string): boolean => {\n    let isRemoved = false;\n    const filterCb = (entry: MiddlewareEntry<Input, Output>): boolean => {\n      if (entry.name && entry.name === toRemove) {\n        isRemoved = true;\n        entriesNameSet.delete(toRemove);\n        return false;\n      }\n      return true;\n    };\n    absoluteEntries = absoluteEntries.filter(filterCb);\n    relativeEntries = relativeEntries.filter(filterCb);\n    return isRemoved;\n  };\n\n  const removeByReference = (toRemove: MiddlewareType<Input, Output>): boolean => {\n    let isRemoved = false;\n    const filterCb = (entry: MiddlewareEntry<Input, Output>): boolean => {\n      if (entry.middleware === toRemove) {\n        isRemoved = true;\n        if (entry.name) entriesNameSet.delete(entry.name);\n        return false;\n      }\n      return true;\n    };\n    absoluteEntries = absoluteEntries.filter(filterCb);\n    relativeEntries = relativeEntries.filter(filterCb);\n    return isRemoved;\n  };\n\n  const cloneTo = <InputType extends Input, OutputType extends Output>(\n    toStack: MiddlewareStack<InputType, OutputType>\n  ): MiddlewareStack<InputType, OutputType> => {\n    absoluteEntries.forEach((entry) => {\n      //@ts-ignore\n      toStack.add(entry.middleware, { ...entry });\n    });\n    relativeEntries.forEach((entry) => {\n      //@ts-ignore\n      toStack.addRelativeTo(entry.middleware, { ...entry });\n    });\n    return toStack;\n  };\n\n  const expandRelativeMiddlewareList = (\n    from: Normalized<MiddlewareEntry<Input, Output>, Input, Output>\n  ): MiddlewareEntry<Input, Output>[] => {\n    const expandedMiddlewareList: MiddlewareEntry<Input, Output>[] = [];\n    from.before.forEach((entry) => {\n      if (entry.before.length === 0 && entry.after.length === 0) {\n        expandedMiddlewareList.push(entry);\n      } else {\n        expandedMiddlewareList.push(...expandRelativeMiddlewareList(entry));\n      }\n    });\n    expandedMiddlewareList.push(from);\n    from.after.reverse().forEach((entry) => {\n      if (entry.before.length === 0 && entry.after.length === 0) {\n        expandedMiddlewareList.push(entry);\n      } else {\n        expandedMiddlewareList.push(...expandRelativeMiddlewareList(entry));\n      }\n    });\n    return expandedMiddlewareList;\n  };\n\n  /**\n   * Get a final list of middleware in the order of being executed in the resolved handler.\n   */\n  const getMiddlewareList = (): Array<MiddlewareType<Input, Output>> => {\n    const normalizedAbsoluteEntries: Normalized<AbsoluteMiddlewareEntry<Input, Output>, Input, Output>[] = [];\n    const normalizedRelativeEntries: Normalized<RelativeMiddlewareEntry<Input, Output>, Input, Output>[] = [];\n    const normalizedEntriesNameMap: {\n      [middlewareName: string]: Normalized<MiddlewareEntry<Input, Output>, Input, Output>;\n    } = {};\n\n    absoluteEntries.forEach((entry) => {\n      const normalizedEntry = {\n        ...entry,\n        before: [],\n        after: [],\n      };\n      if (normalizedEntry.name) normalizedEntriesNameMap[normalizedEntry.name] = normalizedEntry;\n      normalizedAbsoluteEntries.push(normalizedEntry);\n    });\n\n    relativeEntries.forEach((entry) => {\n      const normalizedEntry = {\n        ...entry,\n        before: [],\n        after: [],\n      };\n      if (normalizedEntry.name) normalizedEntriesNameMap[normalizedEntry.name] = normalizedEntry;\n      normalizedRelativeEntries.push(normalizedEntry);\n    });\n\n    normalizedRelativeEntries.forEach((entry) => {\n      if (entry.toMiddleware) {\n        const toMiddleware = normalizedEntriesNameMap[entry.toMiddleware];\n        if (toMiddleware === undefined) {\n          throw new Error(\n            `${entry.toMiddleware} is not found when adding ${entry.name || \"anonymous\"} middleware ${entry.relation} ${\n              entry.toMiddleware\n            }`\n          );\n        }\n        if (entry.relation === \"after\") {\n          toMiddleware.after.push(entry);\n        }\n        if (entry.relation === \"before\") {\n          toMiddleware.before.push(entry);\n        }\n      }\n    });\n\n    const mainChain = sort(normalizedAbsoluteEntries)\n      .map(expandRelativeMiddlewareList)\n      .reduce((wholeList, expendedMiddlewareList) => {\n        // TODO: Replace it with Array.flat();\n        wholeList.push(...expendedMiddlewareList);\n        return wholeList;\n      }, [] as MiddlewareEntry<Input, Output>[]);\n    return mainChain.map((entry) => entry.middleware);\n  };\n\n  const stack = {\n    add: (middleware: MiddlewareType<Input, Output>, options: HandlerOptions & AbsoluteLocation = {}) => {\n      const { name, override } = options;\n      const entry: AbsoluteMiddlewareEntry<Input, Output> = {\n        step: \"initialize\",\n        priority: \"normal\",\n        middleware,\n        ...options,\n      };\n      if (name) {\n        if (entriesNameSet.has(name)) {\n          if (!override) throw new Error(`Duplicate middleware name '${name}'`);\n          const toOverrideIndex = absoluteEntries.findIndex((entry) => entry.name === name);\n          const toOverride = absoluteEntries[toOverrideIndex];\n          if (toOverride.step !== entry.step || toOverride.priority !== entry.priority) {\n            throw new Error(\n              `\"${name}\" middleware with ${toOverride.priority} priority in ${toOverride.step} step cannot be ` +\n                `overridden by same-name middleware with ${entry.priority} priority in ${entry.step} step.`\n            );\n          }\n          absoluteEntries.splice(toOverrideIndex, 1);\n        }\n        entriesNameSet.add(name);\n      }\n      absoluteEntries.push(entry);\n    },\n\n    addRelativeTo: (middleware: MiddlewareType<Input, Output>, options: HandlerOptions & RelativeLocation) => {\n      const { name, override } = options;\n      const entry: RelativeMiddlewareEntry<Input, Output> = {\n        middleware,\n        ...options,\n      };\n      if (name) {\n        if (entriesNameSet.has(name)) {\n          if (!override) throw new Error(`Duplicate middleware name '${name}'`);\n          const toOverrideIndex = relativeEntries.findIndex((entry) => entry.name === name);\n          const toOverride = relativeEntries[toOverrideIndex];\n          if (toOverride.toMiddleware !== entry.toMiddleware || toOverride.relation !== entry.relation) {\n            throw new Error(\n              `\"${name}\" middleware ${toOverride.relation} \"${toOverride.toMiddleware}\" middleware cannot be overridden ` +\n                `by same-name middleware ${entry.relation} \"${entry.toMiddleware}\" middleware.`\n            );\n          }\n          relativeEntries.splice(toOverrideIndex, 1);\n        }\n        entriesNameSet.add(name);\n      }\n      relativeEntries.push(entry);\n    },\n\n    clone: () => cloneTo(constructStack<Input, Output>()),\n\n    use: (plugin: Pluggable<Input, Output>) => {\n      plugin.applyToStack(stack);\n    },\n\n    remove: (toRemove: MiddlewareType<Input, Output> | string): boolean => {\n      if (typeof toRemove === \"string\") return removeByName(toRemove);\n      else return removeByReference(toRemove);\n    },\n\n    removeByTag: (toRemove: string): boolean => {\n      let isRemoved = false;\n      const filterCb = (entry: MiddlewareEntry<Input, Output>): boolean => {\n        const { tags, name } = entry;\n        if (tags && tags.includes(toRemove)) {\n          if (name) entriesNameSet.delete(name);\n          isRemoved = true;\n          return false;\n        }\n        return true;\n      };\n      absoluteEntries = absoluteEntries.filter(filterCb);\n      relativeEntries = relativeEntries.filter(filterCb);\n      return isRemoved;\n    },\n\n    concat: <InputType extends Input, OutputType extends Output>(\n      from: MiddlewareStack<InputType, OutputType>\n    ): MiddlewareStack<InputType, OutputType> => {\n      const cloned = cloneTo(constructStack<InputType, OutputType>());\n      cloned.use(from);\n      return cloned;\n    },\n\n    applyToStack: cloneTo,\n\n    resolve: <InputType extends Input, OutputType extends Output>(\n      handler: DeserializeHandler<InputType, OutputType>,\n      context: HandlerExecutionContext\n    ): Handler<InputType, OutputType> => {\n      for (const middleware of getMiddlewareList().reverse()) {\n        handler = middleware(handler as Handler<Input, OutputType>, context) as any;\n      }\n      return handler as Handler<InputType, OutputType>;\n    },\n  };\n  return stack;\n};\n\nconst stepWeights: { [key in Step]: number } = {\n  initialize: 5,\n  serialize: 4,\n  build: 3,\n  finalizeRequest: 2,\n  deserialize: 1,\n};\n\nconst priorityWeights: { [key in Priority]: number } = {\n  high: 3,\n  normal: 2,\n  low: 1,\n};\n","import { constructStack } from \"@aws-sdk/middleware-stack\";\nimport { Client as IClient, Command, MetadataBearer, RequestHandler } from \"@aws-sdk/types\";\n\nexport interface SmithyConfiguration<HandlerOptions> {\n  requestHandler: RequestHandler<any, any, HandlerOptions>;\n  /**\n   * The API version set internally by the SDK, and is\n   * not planned to be used by customer code.\n   * @internal\n   */\n  readonly apiVersion: string;\n}\n\nexport type SmithyResolvedConfiguration<HandlerOptions> = SmithyConfiguration<HandlerOptions>;\n\nexport class Client<\n  HandlerOptions,\n  ClientInput extends object,\n  ClientOutput extends MetadataBearer,\n  ResolvedClientConfiguration extends SmithyResolvedConfiguration<HandlerOptions>\n> implements IClient<ClientInput, ClientOutput, ResolvedClientConfiguration> {\n  public middlewareStack = constructStack<ClientInput, ClientOutput>();\n  readonly config: ResolvedClientConfiguration;\n  constructor(config: ResolvedClientConfiguration) {\n    this.config = config;\n  }\n  send<InputType extends ClientInput, OutputType extends ClientOutput>(\n    command: Command<ClientInput, InputType, ClientOutput, OutputType, SmithyResolvedConfiguration<HandlerOptions>>,\n    options?: HandlerOptions\n  ): Promise<OutputType>;\n  send<InputType extends ClientInput, OutputType extends ClientOutput>(\n    command: Command<ClientInput, InputType, ClientOutput, OutputType, SmithyResolvedConfiguration<HandlerOptions>>,\n    cb: (err: any, data?: OutputType) => void\n  ): void;\n  send<InputType extends ClientInput, OutputType extends ClientOutput>(\n    command: Command<ClientInput, InputType, ClientOutput, OutputType, SmithyResolvedConfiguration<HandlerOptions>>,\n    options: HandlerOptions,\n    cb: (err: any, data?: OutputType) => void\n  ): void;\n  send<InputType extends ClientInput, OutputType extends ClientOutput>(\n    command: Command<ClientInput, InputType, ClientOutput, OutputType, SmithyResolvedConfiguration<HandlerOptions>>,\n    optionsOrCb?: HandlerOptions | ((err: any, data?: OutputType) => void),\n    cb?: (err: any, data?: OutputType) => void\n  ): Promise<OutputType> | void {\n    const options = typeof optionsOrCb !== \"function\" ? optionsOrCb : undefined;\n    const callback = typeof optionsOrCb === \"function\" ? (optionsOrCb as (err: any, data?: OutputType) => void) : cb;\n    const handler = command.resolveMiddleware(this.middlewareStack as any, this.config, options);\n    if (callback) {\n      handler(command)\n        .then(\n          (result) => callback(null, result.output),\n          (err: any) => callback(err)\n        )\n        .catch(\n          // prevent any errors thrown in the callback from triggering an\n          // unhandled promise rejection\n          () => {}\n        );\n    } else {\n      return handler(command).then((result) => result.output);\n    }\n  }\n\n  destroy() {\n    if (this.config.requestHandler.destroy) this.config.requestHandler.destroy();\n  }\n}\n","import { constructStack } from \"@aws-sdk/middleware-stack\";\nimport { Command as ICommand, Handler, MetadataBearer, MiddlewareStack as IMiddlewareStack } from \"@aws-sdk/types\";\n\nexport abstract class Command<\n  Input extends ClientInput,\n  Output extends ClientOutput,\n  ResolvedClientConfiguration,\n  ClientInput extends object = any,\n  ClientOutput extends MetadataBearer = any\n> implements ICommand<ClientInput, Input, ClientOutput, Output, ResolvedClientConfiguration> {\n  abstract input: Input;\n  readonly middlewareStack: IMiddlewareStack<Input, Output> = constructStack<Input, Output>();\n  abstract resolveMiddleware(\n    stack: IMiddlewareStack<ClientInput, ClientOutput>,\n    configuration: ResolvedClientConfiguration,\n    options: any\n  ): Handler<Input, Output>;\n}\n","/**\n * Function that wraps encodeURIComponent to encode additional characters\n * to fully adhere to RFC 3986.\n */\nexport function extendedEncodeURIComponent(str: string): string {\n  return encodeURIComponent(str).replace(/[!'()*]/g, function (c) {\n    return \"%\" + c.charCodeAt(0).toString(16);\n  });\n}\n","/**\n * Lazy String holder for JSON typed contents.\n */\n\ninterface StringWrapper {\n  new (arg: any): String;\n}\n\n/**\n * Because of https://github.com/microsoft/tslib/issues/95,\n * TS 'extends' shim doesn't support extending native types like String.\n * So here we create StringWrapper that duplicate everything from String\n * class including its prototype chain. So we can extend from here.\n */\n// @ts-ignore StringWrapper implementation is not a simple constructor\nexport const StringWrapper: StringWrapper = function () {\n  //@ts-ignore 'this' cannot be assigned to any, but Object.getPrototypeOf accepts any\n  const Class = Object.getPrototypeOf(this).constructor;\n  const Constructor = Function.bind.apply(String, [null as any, ...arguments]);\n  //@ts-ignore Call wrapped String constructor directly, don't bother typing it.\n  const instance = new Constructor();\n  Object.setPrototypeOf(instance, Class.prototype);\n  return instance as String;\n};\nStringWrapper.prototype = Object.create(String.prototype, {\n  constructor: {\n    value: StringWrapper,\n    enumerable: false,\n    writable: true,\n    configurable: true,\n  },\n});\nObject.setPrototypeOf(StringWrapper, String);\n\nexport class LazyJsonString extends StringWrapper {\n  deserializeJSON(): any {\n    return JSON.parse(super.toString());\n  }\n\n  toJSON(): string {\n    return super.toString();\n  }\n\n  static fromObject(object: any): LazyJsonString {\n    if (object instanceof LazyJsonString) {\n      return object;\n    } else if (object instanceof String || typeof object === \"string\") {\n      return new LazyJsonString(object);\n    }\n    return new LazyJsonString(JSON.stringify(object));\n  }\n}\n","import { CognitoIdentityClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CognitoIdentityClient\";\nimport { GetCredentialsForIdentityInput, GetCredentialsForIdentityResponse } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1GetCredentialsForIdentityCommand,\n  serializeAws_json1_1GetCredentialsForIdentityCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type GetCredentialsForIdentityCommandInput = GetCredentialsForIdentityInput;\nexport type GetCredentialsForIdentityCommandOutput = GetCredentialsForIdentityResponse & __MetadataBearer;\n\n/**\n * <p>Returns credentials for the provided identity ID. Any provided logins will be\n *          validated against supported login providers. If the token is for\n *          cognito-identity.amazonaws.com, it will be passed through to AWS Security Token Service\n *          with the appropriate role for the token.</p>\n *          <p>This is a public API. You do not need any credentials to call this API.</p>\n */\nexport class GetCredentialsForIdentityCommand extends $Command<\n  GetCredentialsForIdentityCommandInput,\n  GetCredentialsForIdentityCommandOutput,\n  CognitoIdentityClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: GetCredentialsForIdentityCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CognitoIdentityClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<GetCredentialsForIdentityCommandInput, GetCredentialsForIdentityCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CognitoIdentityClient\";\n    const commandName = \"GetCredentialsForIdentityCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: GetCredentialsForIdentityInput.filterSensitiveLog,\n      outputFilterSensitiveLog: GetCredentialsForIdentityResponse.filterSensitiveLog,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: GetCredentialsForIdentityCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1GetCredentialsForIdentityCommand(input, context);\n  }\n\n  private deserialize(\n    output: __HttpResponse,\n    context: __SerdeContext\n  ): Promise<GetCredentialsForIdentityCommandOutput> {\n    return deserializeAws_json1_1GetCredentialsForIdentityCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n","/**\n * An error representing a failure of an individual credential provider.\n *\n * This error class has special meaning to the {@link chain} method. If a\n * provider in the chain is rejected with an error, the chain will only proceed\n * to the next provider if the value of the `tryNextLink` property on the error\n * is truthy. This allows individual providers to halt the chain and also\n * ensures the chain will stop if an entirely unexpected error is encountered.\n */\nexport class ProviderError extends Error {\n  constructor(message: string, public readonly tryNextLink: boolean = true) {\n    super(message);\n  }\n}\n","import { Logins, ResolvedLogins } from \"./Logins\";\n\n/**\n * @internal\n */\nexport function resolveLogins(logins: Logins): Promise<ResolvedLogins> {\n  return Promise.all(\n    Object.keys(logins).reduce((arr: Array<[string, string] | Promise<[string, string]>>, name: string) => {\n      const tokenOrProvider = logins[name];\n      if (typeof tokenOrProvider === \"string\") {\n        arr.push([name, tokenOrProvider] as [string, string]);\n      } else {\n        arr.push(tokenOrProvider().then((token) => [name, token] as [string, string]));\n      }\n      return arr;\n    }, [] as Array<Promise<[string, string]>>)\n  ).then((resolvedPairs) =>\n    resolvedPairs.reduce((logins: ResolvedLogins, [key, value]) => {\n      logins[key] = value;\n      return logins;\n    }, {} as ResolvedLogins)\n  );\n}\n","import { GetCredentialsForIdentityCommand } from \"@aws-sdk/client-cognito-identity\";\nimport { ProviderError } from \"@aws-sdk/property-provider\";\nimport { CredentialProvider, Credentials } from \"@aws-sdk/types\";\n\nimport { CognitoProviderParameters } from \"./CognitoProviderParameters\";\nimport { resolveLogins } from \"./resolveLogins\";\n\nexport interface CognitoIdentityCredentials extends Credentials {\n  /**\n   * The Cognito ID returned by the last call to AWS.CognitoIdentity.getOpenIdToken().\n   */\n  identityId: string;\n}\n\n/**\n * Retrieves temporary AWS credentials using Amazon Cognito's\n * `GetCredentialsForIdentity` operation.\n *\n * Results from this function call are not cached internally.\n */\nexport function fromCognitoIdentity(parameters: FromCognitoIdentityParameters): CredentialProvider {\n  return async (): Promise<CognitoIdentityCredentials> => {\n    const {\n      Credentials: {\n        AccessKeyId = throwOnMissingAccessKeyId(),\n        Expiration,\n        SecretKey = throwOnMissingSecretKey(),\n        SessionToken,\n      } = throwOnMissingCredentials(),\n    } = await parameters.client.send(\n      new GetCredentialsForIdentityCommand({\n        CustomRoleArn: parameters.customRoleArn,\n        IdentityId: parameters.identityId,\n        Logins: parameters.logins ? await resolveLogins(parameters.logins) : undefined,\n      })\n    );\n\n    return {\n      identityId: parameters.identityId,\n      accessKeyId: AccessKeyId,\n      secretAccessKey: SecretKey,\n      sessionToken: SessionToken,\n      expiration: Expiration,\n    };\n  };\n}\n\nexport interface FromCognitoIdentityParameters extends CognitoProviderParameters {\n  /**\n   * The unique identifier for the identity against which credentials will be\n   * issued.\n   */\n  identityId: string;\n}\n\nfunction throwOnMissingAccessKeyId(): never {\n  throw new ProviderError(\"Response from Amazon Cognito contained no access key ID\");\n}\n\nfunction throwOnMissingCredentials(): never {\n  throw new ProviderError(\"Response from Amazon Cognito contained no credentials\");\n}\n\nfunction throwOnMissingSecretKey(): never {\n  throw new ProviderError(\"Response from Amazon Cognito contained no secret key\");\n}\n","import { CognitoIdentityClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CognitoIdentityClient\";\nimport { GetIdInput, GetIdResponse } from \"../models/models_0\";\nimport { deserializeAws_json1_1GetIdCommand, serializeAws_json1_1GetIdCommand } from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type GetIdCommandInput = GetIdInput;\nexport type GetIdCommandOutput = GetIdResponse & __MetadataBearer;\n\n/**\n * <p>Generates (or retrieves) a Cognito ID. Supplying multiple logins will create an\n *          implicit linked account.</p>\n *          <p>This is a public API. You do not need any credentials to call this API.</p>\n */\nexport class GetIdCommand extends $Command<GetIdCommandInput, GetIdCommandOutput, CognitoIdentityClientResolvedConfig> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: GetIdCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CognitoIdentityClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<GetIdCommandInput, GetIdCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CognitoIdentityClient\";\n    const commandName = \"GetIdCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: GetIdInput.filterSensitiveLog,\n      outputFilterSensitiveLog: GetIdResponse.filterSensitiveLog,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: GetIdCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1GetIdCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<GetIdCommandOutput> {\n    return deserializeAws_json1_1GetIdCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n","import { Storage } from \"./Storage\";\n\nconst STORE_NAME = \"IdentityIds\";\n\nexport class IndexedDbStorage implements Storage {\n  constructor(private readonly dbName: string = \"aws:cognito-identity-ids\") {}\n\n  getItem(key: string): Promise<string | null> {\n    return this.withObjectStore(\"readonly\", (store) => {\n      const req = store.get(key);\n\n      return new Promise<string | null>((resolve) => {\n        req.onerror = () => resolve(null);\n\n        req.onsuccess = () => resolve(req.result ? req.result.value : null);\n      });\n    }).catch(() => null);\n  }\n\n  removeItem(key: string): Promise<void> {\n    return this.withObjectStore(\"readwrite\", (store) => {\n      const req = store.delete(key);\n\n      return new Promise<void>((resolve, reject) => {\n        req.onerror = () => reject(req.error);\n\n        req.onsuccess = () => resolve();\n      });\n    });\n  }\n\n  setItem(id: string, value: string): Promise<void> {\n    return this.withObjectStore(\"readwrite\", (store) => {\n      const req = store.put({ id, value });\n\n      return new Promise<void>((resolve, reject) => {\n        req.onerror = () => reject(req.error);\n\n        req.onsuccess = () => resolve();\n      });\n    });\n  }\n\n  private getDb(): Promise<IDBDatabase> {\n    const openDbRequest = self.indexedDB.open(this.dbName, 1);\n    return new Promise((resolve, reject) => {\n      openDbRequest.onsuccess = () => {\n        resolve(openDbRequest.result);\n      };\n\n      openDbRequest.onerror = () => {\n        reject(openDbRequest.error);\n      };\n\n      openDbRequest.onblocked = () => {\n        reject(new Error(\"Unable to access DB\"));\n      };\n\n      openDbRequest.onupgradeneeded = () => {\n        const db = openDbRequest.result;\n        db.onerror = () => {\n          reject(new Error(\"Failed to create object store\"));\n        };\n\n        db.createObjectStore(STORE_NAME, { keyPath: \"id\" });\n      };\n    });\n  }\n\n  private withObjectStore<R>(mode: IDBTransactionMode, action: (store: IDBObjectStore) => Promise<R>): Promise<R> {\n    return this.getDb().then((db) => {\n      const tx = db.transaction(STORE_NAME, mode);\n      tx.oncomplete = () => db.close();\n\n      return new Promise<R>((resolve, reject) => {\n        tx.onerror = () => reject(tx.error);\n\n        resolve(action(tx.objectStore(STORE_NAME)));\n      }).catch((err) => {\n        db.close();\n        throw err;\n      });\n    });\n  }\n}\n","import { Storage } from \"./Storage\";\n\nexport class InMemoryStorage implements Storage {\n  constructor(private store: { [key: string]: string } = {}) {}\n\n  getItem(key: string): string | null {\n    if (key in this.store) {\n      return this.store[key];\n    }\n\n    return null;\n  }\n\n  removeItem(key: string): void {\n    delete this.store[key];\n  }\n\n  setItem(key: string, value: string): void {\n    this.store[key] = value;\n  }\n}\n","import { IndexedDbStorage } from \"./IndexedDbStorage\";\nimport { InMemoryStorage } from \"./InMemoryStorage\";\nimport { Storage } from \"./Storage\";\n\nconst inMemoryStorage = new InMemoryStorage();\n\nexport function localStorage(): Storage {\n  if (typeof self === \"object\" && self.indexedDB) {\n    return new IndexedDbStorage();\n  }\n\n  if (typeof window === \"object\" && window.localStorage) {\n    return window.localStorage;\n  }\n\n  return inMemoryStorage;\n}\n","import { GetIdCommand } from \"@aws-sdk/client-cognito-identity\";\nimport { ProviderError } from \"@aws-sdk/property-provider\";\nimport { CredentialProvider } from \"@aws-sdk/types\";\n\nimport { CognitoProviderParameters } from \"./CognitoProviderParameters\";\nimport { fromCognitoIdentity } from \"./fromCognitoIdentity\";\nimport { localStorage } from \"./localStorage\";\nimport { resolveLogins } from \"./resolveLogins\";\nimport { Storage } from \"./Storage\";\n\n/**\n * Retrieves or generates a unique identifier using Amazon Cognito's `GetId`\n * operation, then generates temporary AWS credentials using Amazon Cognito's\n * `GetCredentialsForIdentity` operation.\n *\n * Results from `GetId` are cached internally, but results from\n * `GetCredentialsForIdentity` are not.\n */\nexport function fromCognitoIdentityPool({\n  accountId,\n  cache = localStorage(),\n  client,\n  customRoleArn,\n  identityPoolId,\n  logins,\n  userIdentifier = !logins || Object.keys(logins).length === 0 ? \"ANONYMOUS\" : undefined,\n}: FromCognitoIdentityPoolParameters): CredentialProvider {\n  const cacheKey = userIdentifier ? `aws:cognito-identity-credentials:${identityPoolId}:${userIdentifier}` : undefined;\n\n  let provider: CredentialProvider = async () => {\n    let identityId = cacheKey && (await cache.getItem(cacheKey));\n    if (!identityId) {\n      const { IdentityId = throwOnMissingId() } = await client.send(\n        new GetIdCommand({\n          AccountId: accountId,\n          IdentityPoolId: identityPoolId,\n          Logins: logins ? await resolveLogins(logins) : undefined,\n        })\n      );\n      identityId = IdentityId;\n      if (cacheKey) {\n        Promise.resolve(cache.setItem(cacheKey, identityId)).catch(() => {});\n      }\n    }\n\n    provider = fromCognitoIdentity({\n      client,\n      customRoleArn,\n      logins,\n      identityId,\n    });\n\n    return provider();\n  };\n\n  return () =>\n    provider().catch(async (err) => {\n      if (cacheKey) {\n        Promise.resolve(cache.removeItem(cacheKey)).catch(() => {});\n      }\n\n      throw err;\n    });\n}\n\nexport interface FromCognitoIdentityPoolParameters extends CognitoProviderParameters {\n  /**\n   * A standard AWS account ID (9+ digits).\n   */\n  accountId?: string;\n\n  /**\n   * A cache in which to store resolved Cognito IdentityIds. If not supplied,\n   * the credential provider will attempt to store IdentityIds in one of the\n   * following (in order of preference):\n   *   1. IndexedDB\n   *   2. LocalStorage\n   *   3. An in-memory cache object that will not persist between pages.\n   *\n   * IndexedDB is preferred to maximize data sharing between top-level\n   * browsing contexts and web workers.\n   *\n   * The provider will not cache IdentityIds of authenticated users unless a\n   * separate `userIdentitifer` parameter is supplied.\n   */\n  cache?: Storage;\n\n  /**\n   * The unique identifier for the identity pool from which an identity should\n   * be retrieved or generated.\n   */\n  identityPoolId: string;\n\n  /**\n   * A unique identifier for the user. This is distinct from a Cognito\n   * IdentityId and should instead be an identifier meaningful to your\n   * application. Used to cache Cognito IdentityIds on a per-user basis.\n   */\n  userIdentifier?: string;\n}\n\nfunction throwOnMissingId(): never {\n  throw new ProviderError(\"Response from Amazon Cognito contained no identity ID\");\n}\n","export const escapeUri = (uri: string): string =>\n  // AWS percent-encodes some extra non-standard characters in a URI\n  encodeURIComponent(uri).replace(/[!'()*]/g, hexEncode);\n\nconst hexEncode = (c: string) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`;\n","const alphabetByEncoding: { [key: string]: number } = {};\nconst alphabetByValue: Array<string> = new Array(64);\n\nfor (let i = 0, start = \"A\".charCodeAt(0), limit = \"Z\".charCodeAt(0); i + start <= limit; i++) {\n  const char = String.fromCharCode(i + start);\n  alphabetByEncoding[char] = i;\n  alphabetByValue[i] = char;\n}\n\nfor (let i = 0, start = \"a\".charCodeAt(0), limit = \"z\".charCodeAt(0); i + start <= limit; i++) {\n  const char = String.fromCharCode(i + start);\n  const index = i + 26;\n  alphabetByEncoding[char] = index;\n  alphabetByValue[index] = char;\n}\n\nfor (let i = 0; i < 10; i++) {\n  alphabetByEncoding[i.toString(10)] = i + 52;\n  const char = i.toString(10);\n  const index = i + 52;\n  alphabetByEncoding[char] = index;\n  alphabetByValue[index] = char;\n}\n\nalphabetByEncoding[\"+\"] = 62;\nalphabetByValue[62] = \"+\";\nalphabetByEncoding[\"/\"] = 63;\nalphabetByValue[63] = \"/\";\n\nconst bitsPerLetter = 6;\nconst bitsPerByte = 8;\nconst maxLetterValue = 0b111111;\n\n/**\n * Converts a base-64 encoded string to a Uint8Array of bytes.\n *\n * @param input The base-64 encoded string\n *\n * @see https://tools.ietf.org/html/rfc4648#section-4\n */\nexport function fromBase64(input: string): Uint8Array {\n  let totalByteLength = (input.length / 4) * 3;\n  if (input.substr(-2) === \"==\") {\n    totalByteLength -= 2;\n  } else if (input.substr(-1) === \"=\") {\n    totalByteLength--;\n  }\n  const out = new ArrayBuffer(totalByteLength);\n  const dataView = new DataView(out);\n  for (let i = 0; i < input.length; i += 4) {\n    let bits = 0;\n    let bitLength = 0;\n    for (let j = i, limit = i + 3; j <= limit; j++) {\n      if (input[j] !== \"=\") {\n        bits |= alphabetByEncoding[input[j]] << ((limit - j) * bitsPerLetter);\n        bitLength += bitsPerLetter;\n      } else {\n        bits >>= bitsPerLetter;\n      }\n    }\n\n    const chunkOffset = (i / 4) * 3;\n    bits >>= bitLength % bitsPerByte;\n    const byteLength = Math.floor(bitLength / bitsPerByte);\n    for (let k = 0; k < byteLength; k++) {\n      const offset = (byteLength - k - 1) * bitsPerByte;\n      dataView.setUint8(chunkOffset + k, (bits & (255 << offset)) >> offset);\n    }\n  }\n\n  return new Uint8Array(out);\n}\n\n/**\n * Converts a Uint8Array of binary data to a base-64 encoded string.\n *\n * @param input The binary data to encode\n *\n * @see https://tools.ietf.org/html/rfc4648#section-4\n */\nexport function toBase64(input: Uint8Array): string {\n  let str = \"\";\n  for (let i = 0; i < input.length; i += 3) {\n    let bits = 0;\n    let bitLength = 0;\n    for (let j = i, limit = Math.min(i + 3, input.length); j < limit; j++) {\n      bits |= input[j] << ((limit - j - 1) * bitsPerByte);\n      bitLength += bitsPerByte;\n    }\n\n    const bitClusterCount = Math.ceil(bitLength / bitsPerLetter);\n    bits <<= bitClusterCount * bitsPerLetter - bitLength;\n    for (let k = 1; k <= bitClusterCount; k++) {\n      const offset = (bitClusterCount - k) * bitsPerLetter;\n      str += alphabetByValue[(bits & (maxLetterValue << offset)) >> offset];\n    }\n\n    str += \"==\".slice(0, 4 - bitClusterCount);\n  }\n\n  return str;\n}\n","import { HttpHandler, HttpRequest, HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { buildQueryString } from \"@aws-sdk/querystring-builder\";\nimport { HeaderBag, HttpHandlerOptions } from \"@aws-sdk/types\";\n\nimport { requestTimeout } from \"./request-timeout\";\n\ndeclare let AbortController: any;\n\n/**\n * Represents the http options that can be passed to a browser http client.\n */\nexport interface FetchHttpHandlerOptions {\n  /**\n   * The number of milliseconds a request can take before being automatically\n   * terminated.\n   */\n  requestTimeout?: number;\n}\n\nexport class FetchHttpHandler implements HttpHandler {\n  private readonly requestTimeout?: number;\n\n  constructor({ requestTimeout }: FetchHttpHandlerOptions = {}) {\n    this.requestTimeout = requestTimeout;\n  }\n\n  destroy(): void {\n    // Do nothing. TLS and HTTP/2 connection pooling is handled by the browser.\n  }\n\n  handle(request: HttpRequest, { abortSignal }: HttpHandlerOptions = {}): Promise<{ response: HttpResponse }> {\n    const requestTimeoutInMs = this.requestTimeout;\n\n    // if the request was already aborted, prevent doing extra work\n    if (abortSignal?.aborted) {\n      const abortError = new Error(\"Request aborted\");\n      abortError.name = \"AbortError\";\n      return Promise.reject(abortError);\n    }\n\n    let path = request.path;\n    if (request.query) {\n      const queryString = buildQueryString(request.query);\n      if (queryString) {\n        path += `?${queryString}`;\n      }\n    }\n\n    const { port, method } = request;\n    const url = `${request.protocol}//${request.hostname}${port ? `:${port}` : \"\"}${path}`;\n    // Request constructor doesn't allow GET/HEAD request with body\n    // ref: https://github.com/whatwg/fetch/issues/551\n    const body = method === \"GET\" || method === \"HEAD\" ? undefined : request.body;\n    const requestOptions: RequestInit = {\n      body,\n      headers: new Headers(request.headers),\n      method: method,\n    };\n\n    // some browsers support abort signal\n    if (typeof AbortController !== \"undefined\") {\n      (requestOptions as any)[\"signal\"] = abortSignal;\n    }\n\n    const fetchRequest = new Request(url, requestOptions);\n    const raceOfPromises = [\n      fetch(fetchRequest).then((response) => {\n        const fetchHeaders: any = response.headers;\n        const transformedHeaders: HeaderBag = {};\n\n        for (const pair of <Array<string[]>>fetchHeaders.entries()) {\n          transformedHeaders[pair[0]] = pair[1];\n        }\n\n        const hasReadableStream = response.body !== undefined;\n\n        // Return the response with buffered body\n        if (!hasReadableStream) {\n          return response.blob().then((body) => ({\n            response: new HttpResponse({\n              headers: transformedHeaders,\n              statusCode: response.status,\n              body,\n            }),\n          }));\n        }\n        // Return the response with streaming body\n        return {\n          response: new HttpResponse({\n            headers: transformedHeaders,\n            statusCode: response.status,\n            body: response.body,\n          }),\n        };\n      }),\n      requestTimeout(requestTimeoutInMs),\n    ];\n    if (abortSignal) {\n      raceOfPromises.push(\n        new Promise<never>((resolve, reject) => {\n          abortSignal.onabort = () => {\n            const abortError = new Error(\"Request aborted\");\n            abortError.name = \"AbortError\";\n            reject(abortError);\n          };\n        })\n      );\n    }\n    return Promise.race(raceOfPromises);\n  }\n}\n","import { QueryParameterBag } from \"@aws-sdk/types\";\nimport { escapeUri } from \"@aws-sdk/util-uri-escape\";\n\nexport function buildQueryString(query: QueryParameterBag): string {\n  const parts: string[] = [];\n  for (let key of Object.keys(query).sort()) {\n    const value = query[key];\n    key = escapeUri(key);\n    if (Array.isArray(value)) {\n      for (let i = 0, iLen = value.length; i < iLen; i++) {\n        parts.push(`${key}=${escapeUri(value[i])}`);\n      }\n    } else {\n      let qsEntry = key;\n      if (value || typeof value === \"string\") {\n        qsEntry += `=${escapeUri(value)}`;\n      }\n      parts.push(qsEntry);\n    }\n  }\n\n  return parts.join(\"&\");\n}\n","export function requestTimeout(timeoutInMs = 0): Promise<never> {\n  return new Promise((resolve, reject) => {\n    if (timeoutInMs) {\n      setTimeout(() => {\n        const timeoutError = new Error(`Request did not complete within ${timeoutInMs} ms`);\n        timeoutError.name = \"TimeoutError\";\n        reject(timeoutError);\n      }, timeoutInMs);\n    }\n  });\n}\n","import { StreamCollector } from \"@aws-sdk/types\";\nimport { fromBase64 } from \"@aws-sdk/util-base64-browser\";\n\n//reference: https://snack.expo.io/r1JCSWRGU\nexport const streamCollector: StreamCollector = (stream: Blob | ReadableStream): Promise<Uint8Array> => {\n  if (typeof Blob === \"function\" && stream instanceof Blob) {\n    return collectBlob(stream);\n  }\n\n  return collectStream(stream as ReadableStream);\n};\n\nasync function collectBlob(blob: Blob): Promise<Uint8Array> {\n  const base64 = await readToBase64(blob);\n  const arrayBuffer = fromBase64(base64);\n  return new Uint8Array(arrayBuffer);\n}\n\nasync function collectStream(stream: ReadableStream): Promise<Uint8Array> {\n  let res = new Uint8Array(0);\n  const reader = stream.getReader();\n  let isDone = false;\n  while (!isDone) {\n    const { done, value } = await reader.read();\n    if (value) {\n      const prior = res;\n      res = new Uint8Array(prior.length + value.length);\n      res.set(prior);\n      res.set(value, prior.length);\n    }\n    isDone = done;\n  }\n  return res;\n}\n\nfunction readToBase64(blob: Blob): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      // reference: https://developer.mozilla.org/en-US/docs/Web/API/FileReader/readAsDataURL\n      // response from readAsDataURL is always prepended with \"data:*/*;base64,\"\n      if (reader.readyState !== 2) {\n        return reject(new Error(\"Reader aborted too early\"));\n      }\n      const result = (reader.result ?? \"\") as string;\n      // Response can include only 'data:' for empty blob, return empty string in this case.\n      // Otherwise, return the string after ','\n      const commaIndex = result.indexOf(\",\");\n      const dataOffset = commaIndex > -1 ? commaIndex + 1 : result.length;\n      resolve(result.substring(dataOffset));\n    };\n    reader.onabort = () => reject(new Error(\"Read aborted\"));\n    reader.onerror = () => reject(reader.error);\n    // reader.readAsArrayBuffer is not always available\n    reader.readAsDataURL(blob);\n  });\n}\n","import { Provider } from \"@aws-sdk/types\";\nexport const invalidProvider: (message: string) => Provider<any> = (message: string) => () => Promise.reject(message);\n","import {\n  AbsoluteLocation,\n  FinalizeHandler,\n  FinalizeHandlerArguments,\n  FinalizeHandlerOutput,\n  FinalizeRequestHandlerOptions,\n  HandlerExecutionContext,\n  MetadataBearer,\n  Pluggable,\n} from \"@aws-sdk/types\";\n\nimport { RetryResolvedConfig } from \"./configurations\";\n\nexport const retryMiddleware = (options: RetryResolvedConfig) => <Output extends MetadataBearer = MetadataBearer>(\n  next: FinalizeHandler<any, Output>,\n  context: HandlerExecutionContext\n): FinalizeHandler<any, Output> => async (\n  args: FinalizeHandlerArguments<any>\n): Promise<FinalizeHandlerOutput<Output>> => {\n  if (options?.retryStrategy?.mode)\n    context.userAgent = [...(context.userAgent || []), [\"cfg/retry-mode\", options.retryStrategy.mode]];\n  return options.retryStrategy.retry(next, args);\n};\n\nexport const retryMiddlewareOptions: FinalizeRequestHandlerOptions & AbsoluteLocation = {\n  name: \"retryMiddleware\",\n  tags: [\"RETRY\"],\n  step: \"finalizeRequest\",\n  priority: \"high\",\n  override: true,\n};\n\nexport const getRetryPlugin = (options: RetryResolvedConfig): Pluggable<any, any> => ({\n  applyToStack: (clientStack) => {\n    clientStack.add(retryMiddleware(options), retryMiddlewareOptions);\n  },\n});\n","/**\n * Errors encountered when the client clock and server clock cannot agree on the\n * current time.\n *\n * These errors are retryable, assuming the SDK has enabled clock skew\n * correction.\n */\nexport const CLOCK_SKEW_ERROR_CODES = [\n  \"AuthFailure\",\n  \"InvalidSignatureException\",\n  \"RequestExpired\",\n  \"RequestInTheFuture\",\n  \"RequestTimeTooSkewed\",\n  \"SignatureDoesNotMatch\",\n];\n\n/**\n * Errors that indicate the SDK is being throttled.\n *\n * These errors are always retryable.\n */\nexport const THROTTLING_ERROR_CODES = [\n  \"BandwidthLimitExceeded\",\n  \"EC2ThrottledException\",\n  \"LimitExceededException\",\n  \"PriorRequestNotComplete\",\n  \"ProvisionedThroughputExceededException\",\n  \"RequestLimitExceeded\",\n  \"RequestThrottled\",\n  \"RequestThrottledException\",\n  \"SlowDown\",\n  \"ThrottledException\",\n  \"Throttling\",\n  \"ThrottlingException\",\n  \"TooManyRequestsException\",\n  \"TransactionInProgressException\", // DynamoDB\n];\n\n/**\n * Error codes that indicate transient issues\n */\nexport const TRANSIENT_ERROR_CODES = [\"AbortError\", \"TimeoutError\", \"RequestTimeout\", \"RequestTimeoutException\"];\n\n/**\n * Error codes that indicate transient issues\n */\nexport const TRANSIENT_ERROR_STATUS_CODES = [500, 502, 503, 504];\n","import { SdkError } from \"@aws-sdk/smithy-client\";\n\nimport {\n  CLOCK_SKEW_ERROR_CODES,\n  THROTTLING_ERROR_CODES,\n  TRANSIENT_ERROR_CODES,\n  TRANSIENT_ERROR_STATUS_CODES,\n} from \"./constants\";\n\nexport const isRetryableByTrait = (error: SdkError) => error.$retryable !== undefined;\n\nexport const isClockSkewError = (error: SdkError) => CLOCK_SKEW_ERROR_CODES.includes(error.name);\n\nexport const isThrottlingError = (error: SdkError) =>\n  error.$metadata?.httpStatusCode === 429 ||\n  THROTTLING_ERROR_CODES.includes(error.name) ||\n  error.$retryable?.throttling == true;\n\nexport const isTransientError = (error: SdkError) =>\n  TRANSIENT_ERROR_CODES.includes(error.name) ||\n  TRANSIENT_ERROR_STATUS_CODES.includes(error.$metadata?.httpStatusCode || 0);\n","import { MAXIMUM_RETRY_DELAY } from \"./constants\";\n\n/**\n * Calculate a capped, fully-jittered exponential backoff time.\n */\nexport const defaultDelayDecider = (delayBase: number, attempts: number) =>\n  Math.floor(Math.min(MAXIMUM_RETRY_DELAY, Math.random() * 2 ** attempts * delayBase));\n","/**\n * The base number of milliseconds to use in calculating a suitable cool-down\n * time when a retryable error is encountered.\n */\nexport const DEFAULT_RETRY_DELAY_BASE = 100;\n\n/**\n * The maximum amount of time (in milliseconds) that will be used as a delay\n * between retry attempts.\n */\nexport const MAXIMUM_RETRY_DELAY = 20 * 1000;\n\n/**\n * The retry delay base (in milliseconds) to use when a throttling error is\n * encountered.\n */\nexport const THROTTLING_RETRY_DELAY_BASE = 500;\n\n/**\n * Initial number of retry tokens in Retry Quota\n */\nexport const INITIAL_RETRY_TOKENS = 500;\n\n/**\n * The total amount of retry tokens to be decremented from retry token balance.\n */\nexport const RETRY_COST = 5;\n\n/**\n * The total amount of retry tokens to be decremented from retry token balance\n * when a throttling error is encountered.\n */\nexport const TIMEOUT_RETRY_COST = 10;\n\n/**\n * The total amount of retry token to be incremented from retry token balance\n * if an SDK operation invocation succeeds without requiring a retry request.\n */\nexport const NO_RETRY_INCREMENT = 1;\n\n/**\n * Header name for SDK invocation ID\n */\nexport const INVOCATION_ID_HEADER = \"amz-sdk-invocation-id\";\n\n/**\n * Header name for request retry information.\n */\nexport const REQUEST_HEADER = \"amz-sdk-request\";\n","import {\n  isClockSkewError,\n  isRetryableByTrait,\n  isThrottlingError,\n  isTransientError,\n} from \"@aws-sdk/service-error-classification\";\nimport { SdkError } from \"@aws-sdk/smithy-client\";\n\nexport const defaultRetryDecider = (error: SdkError) => {\n  if (!error) {\n    return false;\n  }\n\n  return isRetryableByTrait(error) || isClockSkewError(error) || isThrottlingError(error) || isTransientError(error);\n};\n","import { HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { isThrottlingError } from \"@aws-sdk/service-error-classification\";\nimport { SdkError } from \"@aws-sdk/smithy-client\";\nimport { FinalizeHandler, FinalizeHandlerArguments, MetadataBearer, Provider, RetryStrategy } from \"@aws-sdk/types\";\nimport { v4 } from \"uuid\";\n\nimport {\n  DEFAULT_RETRY_DELAY_BASE,\n  INITIAL_RETRY_TOKENS,\n  INVOCATION_ID_HEADER,\n  REQUEST_HEADER,\n  THROTTLING_RETRY_DELAY_BASE,\n} from \"./constants\";\nimport { getDefaultRetryQuota } from \"./defaultRetryQuota\";\nimport { defaultDelayDecider } from \"./delayDecider\";\nimport { defaultRetryDecider } from \"./retryDecider\";\n\n/**\n * The default value for how many HTTP requests an SDK should make for a\n * single SDK operation invocation before giving up\n */\nexport const DEFAULT_MAX_ATTEMPTS = 3;\n\n/**\n * The default retry algorithm to use.\n */\nexport const DEFAULT_RETRY_MODE = \"standard\";\n\n/**\n * Determines whether an error is retryable based on the number of retries\n * already attempted, the HTTP status code, and the error received (if any).\n *\n * @param error         The error encountered.\n */\nexport interface RetryDecider {\n  (error: SdkError): boolean;\n}\n\n/**\n * Determines the number of milliseconds to wait before retrying an action.\n *\n * @param delayBase The base delay (in milliseconds).\n * @param attempts  The number of times the action has already been tried.\n */\nexport interface DelayDecider {\n  (delayBase: number, attempts: number): number;\n}\n\n/**\n * Interface that specifies the retry quota behavior.\n */\nexport interface RetryQuota {\n  /**\n   * returns true if retry tokens are available from the retry quota bucket.\n   */\n  hasRetryTokens: (error: SdkError) => boolean;\n\n  /**\n   * returns token amount from the retry quota bucket.\n   * throws error is retry tokens are not available.\n   */\n  retrieveRetryTokens: (error: SdkError) => number;\n\n  /**\n   * releases tokens back to the retry quota.\n   */\n  releaseRetryTokens: (releaseCapacityAmount?: number) => void;\n}\n\n/**\n * Strategy options to be passed to StandardRetryStrategy\n */\nexport interface StandardRetryStrategyOptions {\n  retryDecider?: RetryDecider;\n  delayDecider?: DelayDecider;\n  retryQuota?: RetryQuota;\n}\n\nexport class StandardRetryStrategy implements RetryStrategy {\n  private retryDecider: RetryDecider;\n  private delayDecider: DelayDecider;\n  private retryQuota: RetryQuota;\n  public readonly mode = DEFAULT_RETRY_MODE;\n\n  constructor(private readonly maxAttemptsProvider: Provider<number>, options?: StandardRetryStrategyOptions) {\n    this.retryDecider = options?.retryDecider ?? defaultRetryDecider;\n    this.delayDecider = options?.delayDecider ?? defaultDelayDecider;\n    this.retryQuota = options?.retryQuota ?? getDefaultRetryQuota(INITIAL_RETRY_TOKENS);\n  }\n\n  private shouldRetry(error: SdkError, attempts: number, maxAttempts: number) {\n    return attempts < maxAttempts && this.retryDecider(error) && this.retryQuota.hasRetryTokens(error);\n  }\n\n  private async getMaxAttempts() {\n    let maxAttempts: number;\n    try {\n      maxAttempts = await this.maxAttemptsProvider();\n    } catch (error) {\n      maxAttempts = DEFAULT_MAX_ATTEMPTS;\n    }\n    return maxAttempts;\n  }\n\n  async retry<Input extends object, Ouput extends MetadataBearer>(\n    next: FinalizeHandler<Input, Ouput>,\n    args: FinalizeHandlerArguments<Input>\n  ) {\n    let retryTokenAmount;\n    let attempts = 0;\n    let totalDelay = 0;\n\n    const maxAttempts = await this.getMaxAttempts();\n\n    const { request } = args;\n    if (HttpRequest.isInstance(request)) {\n      request.headers[INVOCATION_ID_HEADER] = v4();\n    }\n\n    while (true) {\n      try {\n        if (HttpRequest.isInstance(request)) {\n          request.headers[REQUEST_HEADER] = `attempt=${attempts + 1}; max=${maxAttempts}`;\n        }\n        const { response, output } = await next(args);\n\n        this.retryQuota.releaseRetryTokens(retryTokenAmount);\n        output.$metadata.attempts = attempts + 1;\n        output.$metadata.totalRetryDelay = totalDelay;\n\n        return { response, output };\n      } catch (err) {\n        attempts++;\n        if (this.shouldRetry(err as SdkError, attempts, maxAttempts)) {\n          retryTokenAmount = this.retryQuota.retrieveRetryTokens(err);\n          const delay = this.delayDecider(\n            isThrottlingError(err) ? THROTTLING_RETRY_DELAY_BASE : DEFAULT_RETRY_DELAY_BASE,\n            attempts\n          );\n          totalDelay += delay;\n\n          await new Promise((resolve) => setTimeout(resolve, delay));\n          continue;\n        }\n\n        if (!err.$metadata) {\n          err.$metadata = {};\n        }\n\n        err.$metadata.attempts = attempts;\n        err.$metadata.totalRetryDelay = totalDelay;\n        throw err;\n      }\n    }\n  }\n}\n","import { SdkError } from \"@aws-sdk/smithy-client\";\n\nimport { NO_RETRY_INCREMENT, RETRY_COST, TIMEOUT_RETRY_COST } from \"./constants\";\nimport { RetryQuota } from \"./defaultStrategy\";\n\nexport const getDefaultRetryQuota = (initialRetryTokens: number): RetryQuota => {\n  const MAX_CAPACITY = initialRetryTokens;\n  let availableCapacity = initialRetryTokens;\n\n  const getCapacityAmount = (error: SdkError) => (error.name === \"TimeoutError\" ? TIMEOUT_RETRY_COST : RETRY_COST);\n\n  const hasRetryTokens = (error: SdkError) => getCapacityAmount(error) <= availableCapacity;\n\n  const retrieveRetryTokens = (error: SdkError) => {\n    if (!hasRetryTokens(error)) {\n      // retryStrategy should stop retrying, and return last error\n      throw new Error(\"No retry token available\");\n    }\n    const capacityAmount = getCapacityAmount(error);\n    availableCapacity -= capacityAmount;\n    return capacityAmount;\n  };\n\n  const releaseRetryTokens = (capacityReleaseAmount?: number) => {\n    availableCapacity += capacityReleaseAmount ?? NO_RETRY_INCREMENT;\n    availableCapacity = Math.min(availableCapacity, MAX_CAPACITY);\n  };\n\n  return Object.freeze({\n    hasRetryTokens,\n    retrieveRetryTokens,\n    releaseRetryTokens,\n  });\n};\n","import { LoadedConfigSelectors } from \"@aws-sdk/node-config-provider\";\nimport { Provider, RetryStrategy } from \"@aws-sdk/types\";\n\nimport { DEFAULT_MAX_ATTEMPTS, DEFAULT_RETRY_MODE, StandardRetryStrategy } from \"./defaultStrategy\";\n\nexport const ENV_MAX_ATTEMPTS = \"AWS_MAX_ATTEMPTS\";\nexport const CONFIG_MAX_ATTEMPTS = \"max_attempts\";\n\nexport const NODE_MAX_ATTEMPT_CONFIG_OPTIONS: LoadedConfigSelectors<number> = {\n  environmentVariableSelector: (env) => {\n    const value = env[ENV_MAX_ATTEMPTS];\n    if (!value) return undefined;\n    const maxAttempt = parseInt(value);\n    if (Number.isNaN(maxAttempt)) {\n      throw new Error(`Environment variable ${ENV_MAX_ATTEMPTS} mast be a number, got \"${value}\"`);\n    }\n    return maxAttempt;\n  },\n  configFileSelector: (profile) => {\n    const value = profile[CONFIG_MAX_ATTEMPTS];\n    if (!value) return undefined;\n    const maxAttempt = parseInt(value);\n    if (Number.isNaN(maxAttempt)) {\n      throw new Error(`Shared config file entry ${CONFIG_MAX_ATTEMPTS} mast be a number, got \"${value}\"`);\n    }\n    return maxAttempt;\n  },\n  default: DEFAULT_MAX_ATTEMPTS,\n};\n\nexport interface RetryInputConfig {\n  /**\n   * The maximum number of times requests that encounter retryable failures should be attempted.\n   */\n  maxAttempts?: number | Provider<number>;\n  /**\n   * The strategy to retry the request. Using built-in exponential backoff strategy by default.\n   */\n  retryStrategy?: RetryStrategy;\n}\n\ninterface PreviouslyResolved {}\nexport interface RetryResolvedConfig {\n  maxAttempts: Provider<number>;\n  retryStrategy: RetryStrategy;\n}\n\nexport const resolveRetryConfig = <T>(input: T & PreviouslyResolved & RetryInputConfig): T & RetryResolvedConfig => {\n  const maxAttempts = normalizeMaxAttempts(input.maxAttempts);\n  return {\n    ...input,\n    maxAttempts,\n    retryStrategy: input.retryStrategy || new StandardRetryStrategy(maxAttempts),\n  };\n};\n\nconst normalizeMaxAttempts = (maxAttempts: number | Provider<number> = DEFAULT_MAX_ATTEMPTS): Provider<number> => {\n  if (typeof maxAttempts === \"number\") {\n    const promisified = Promise.resolve(maxAttempts);\n    return () => promisified;\n  }\n  return maxAttempts;\n};\n\nexport const ENV_RETRY_MODE = \"AWS_RETRY_MODE\";\nexport const CONFIG_RETRY_MODE = \"retry_mode\";\n\nexport const NODE_RETRY_MODE_CONFIG_OPTIONS: LoadedConfigSelectors<string> = {\n  environmentVariableSelector: (env) => env[ENV_RETRY_MODE],\n  configFileSelector: (profile) => profile[CONFIG_RETRY_MODE],\n  default: DEFAULT_RETRY_MODE,\n};\n","export function calculateBodyLength(body: any): number | undefined {\n  if (typeof body === \"string\") {\n    let len = body.length;\n\n    for (let i = len - 1; i >= 0; i--) {\n      const code = body.charCodeAt(i);\n      if (code > 0x7f && code <= 0x7ff) len++;\n      else if (code > 0x7ff && code <= 0xffff) len += 2;\n    }\n\n    return len;\n  } else if (typeof body.byteLength === \"number\") {\n    // handles Uint8Array, ArrayBuffer, Buffer, and ArrayBufferView\n    return body.byteLength;\n  } else if (typeof body.size === \"number\") {\n    // handles browser File object\n    return body.size;\n  }\n}\n","import { Provider, UserAgent } from \"@aws-sdk/types\";\nimport bowser from \"bowser\";\n\nimport { DefaultUserAgentOptions } from \"./configurations\";\n\n/**\n * Default provider to the user agent in browsers. It's a best effort to infer\n * the device information. It uses bowser library to detect the browser and virsion\n */\nexport const defaultUserAgent = ({\n  serviceId,\n  clientVersion,\n}: DefaultUserAgentOptions): Provider<UserAgent> => async () => {\n  const parsedUA = window?.navigator?.userAgent ? bowser.parse(window.navigator.userAgent) : undefined;\n  const sections: UserAgent = [\n    // sdk-metadata\n    [\"aws-sdk-js\", clientVersion],\n    // os-metadata\n    [`os/${parsedUA?.os?.name || \"other\"}`, parsedUA?.os?.version],\n    // language-metadata\n    // ECMAScript edition doesn't matter in JS.\n    [\"lang/js\"],\n    // browser vendor and version.\n    [\"md/browser\", `${parsedUA?.browser?.name ?? \"unknown\"}_${parsedUA?.browser?.version ?? \"unknown\"}`],\n  ];\n\n  if (serviceId) {\n    // api-metadata\n    // service Id may not appear in non-AWS clients\n    sections.push([`api/${serviceId}`, clientVersion]);\n  }\n\n  return sections;\n};\n","import { RegionInfo, RegionInfoProvider } from \"@aws-sdk/types\";\n\n// Partition default templates\nconst AWS_TEMPLATE = \"cognito-identity.{region}.amazonaws.com\";\nconst AWS_CN_TEMPLATE = \"cognito-identity.{region}.amazonaws.com.cn\";\nconst AWS_ISO_TEMPLATE = \"cognito-identity.{region}.c2s.ic.gov\";\nconst AWS_ISO_B_TEMPLATE = \"cognito-identity.{region}.sc2s.sgov.gov\";\nconst AWS_US_GOV_TEMPLATE = \"cognito-identity.{region}.amazonaws.com\";\n\n// Partition regions\nconst AWS_REGIONS = new Set([\n  \"af-south-1\",\n  \"ap-east-1\",\n  \"ap-northeast-1\",\n  \"ap-northeast-2\",\n  \"ap-south-1\",\n  \"ap-southeast-1\",\n  \"ap-southeast-2\",\n  \"ca-central-1\",\n  \"eu-central-1\",\n  \"eu-north-1\",\n  \"eu-south-1\",\n  \"eu-west-1\",\n  \"eu-west-2\",\n  \"eu-west-3\",\n  \"me-south-1\",\n  \"sa-east-1\",\n  \"us-east-1\",\n  \"us-east-2\",\n  \"us-west-1\",\n  \"us-west-2\",\n]);\nconst AWS_CN_REGIONS = new Set([\"cn-north-1\", \"cn-northwest-1\"]);\nconst AWS_ISO_REGIONS = new Set([\"us-iso-east-1\"]);\nconst AWS_ISO_B_REGIONS = new Set([\"us-isob-east-1\"]);\nconst AWS_US_GOV_REGIONS = new Set([\"us-gov-east-1\", \"us-gov-west-1\"]);\n\nexport const defaultRegionInfoProvider: RegionInfoProvider = (region: string, options?: any) => {\n  let regionInfo: RegionInfo | undefined = undefined;\n  switch (region) {\n    // First, try to match exact region names.\n    case \"ap-northeast-1\":\n      regionInfo = {\n        hostname: \"cognito-identity.ap-northeast-1.amazonaws.com\",\n        partition: \"aws\",\n      };\n      break;\n    case \"ap-northeast-2\":\n      regionInfo = {\n        hostname: \"cognito-identity.ap-northeast-2.amazonaws.com\",\n        partition: \"aws\",\n      };\n      break;\n    case \"ap-south-1\":\n      regionInfo = {\n        hostname: \"cognito-identity.ap-south-1.amazonaws.com\",\n        partition: \"aws\",\n      };\n      break;\n    case \"ap-southeast-1\":\n      regionInfo = {\n        hostname: \"cognito-identity.ap-southeast-1.amazonaws.com\",\n        partition: \"aws\",\n      };\n      break;\n    case \"ap-southeast-2\":\n      regionInfo = {\n        hostname: \"cognito-identity.ap-southeast-2.amazonaws.com\",\n        partition: \"aws\",\n      };\n      break;\n    case \"ca-central-1\":\n      regionInfo = {\n        hostname: \"cognito-identity.ca-central-1.amazonaws.com\",\n        partition: \"aws\",\n      };\n      break;\n    case \"cn-north-1\":\n      regionInfo = {\n        hostname: \"cognito-identity.cn-north-1.amazonaws.com.cn\",\n        partition: \"aws-cn\",\n      };\n      break;\n    case \"eu-central-1\":\n      regionInfo = {\n        hostname: \"cognito-identity.eu-central-1.amazonaws.com\",\n        partition: \"aws\",\n      };\n      break;\n    case \"eu-north-1\":\n      regionInfo = {\n        hostname: \"cognito-identity.eu-north-1.amazonaws.com\",\n        partition: \"aws\",\n      };\n      break;\n    case \"eu-west-1\":\n      regionInfo = {\n        hostname: \"cognito-identity.eu-west-1.amazonaws.com\",\n        partition: \"aws\",\n      };\n      break;\n    case \"eu-west-2\":\n      regionInfo = {\n        hostname: \"cognito-identity.eu-west-2.amazonaws.com\",\n        partition: \"aws\",\n      };\n      break;\n    case \"eu-west-3\":\n      regionInfo = {\n        hostname: \"cognito-identity.eu-west-3.amazonaws.com\",\n        partition: \"aws\",\n      };\n      break;\n    case \"fips-us-east-1\":\n      regionInfo = {\n        hostname: \"cognito-identity-fips.us-east-1.amazonaws.com\",\n        partition: \"aws\",\n        signingRegion: \"us-east-1\",\n      };\n      break;\n    case \"fips-us-east-2\":\n      regionInfo = {\n        hostname: \"cognito-identity-fips.us-east-2.amazonaws.com\",\n        partition: \"aws\",\n        signingRegion: \"us-east-2\",\n      };\n      break;\n    case \"fips-us-gov-west-1\":\n      regionInfo = {\n        hostname: \"cognito-identity-fips.us-gov-west-1.amazonaws.com\",\n        partition: \"aws-us-gov\",\n        signingRegion: \"us-gov-west-1\",\n      };\n      break;\n    case \"fips-us-west-2\":\n      regionInfo = {\n        hostname: \"cognito-identity-fips.us-west-2.amazonaws.com\",\n        partition: \"aws\",\n        signingRegion: \"us-west-2\",\n      };\n      break;\n    case \"sa-east-1\":\n      regionInfo = {\n        hostname: \"cognito-identity.sa-east-1.amazonaws.com\",\n        partition: \"aws\",\n      };\n      break;\n    case \"us-east-1\":\n      regionInfo = {\n        hostname: \"cognito-identity.us-east-1.amazonaws.com\",\n        partition: \"aws\",\n      };\n      break;\n    case \"us-east-2\":\n      regionInfo = {\n        hostname: \"cognito-identity.us-east-2.amazonaws.com\",\n        partition: \"aws\",\n      };\n      break;\n    case \"us-gov-west-1\":\n      regionInfo = {\n        hostname: \"cognito-identity.us-gov-west-1.amazonaws.com\",\n        partition: \"aws-us-gov\",\n      };\n      break;\n    case \"us-west-1\":\n      regionInfo = {\n        hostname: \"cognito-identity.us-west-1.amazonaws.com\",\n        partition: \"aws\",\n      };\n      break;\n    case \"us-west-2\":\n      regionInfo = {\n        hostname: \"cognito-identity.us-west-2.amazonaws.com\",\n        partition: \"aws\",\n      };\n      break;\n    // Next, try to match partition endpoints.\n    default:\n      if (AWS_REGIONS.has(region)) {\n        regionInfo = {\n          hostname: AWS_TEMPLATE.replace(\"{region}\", region),\n          partition: \"aws\",\n        };\n      }\n      if (AWS_CN_REGIONS.has(region)) {\n        regionInfo = {\n          hostname: AWS_CN_TEMPLATE.replace(\"{region}\", region),\n          partition: \"aws-cn\",\n        };\n      }\n      if (AWS_ISO_REGIONS.has(region)) {\n        regionInfo = {\n          hostname: AWS_ISO_TEMPLATE.replace(\"{region}\", region),\n          partition: \"aws-iso\",\n        };\n      }\n      if (AWS_ISO_B_REGIONS.has(region)) {\n        regionInfo = {\n          hostname: AWS_ISO_B_TEMPLATE.replace(\"{region}\", region),\n          partition: \"aws-iso-b\",\n        };\n      }\n      if (AWS_US_GOV_REGIONS.has(region)) {\n        regionInfo = {\n          hostname: AWS_US_GOV_TEMPLATE.replace(\"{region}\", region),\n          partition: \"aws-us-gov\",\n        };\n      }\n      // Finally, assume it's an AWS partition endpoint.\n      if (regionInfo === undefined) {\n        regionInfo = {\n          hostname: AWS_TEMPLATE.replace(\"{region}\", region),\n          partition: \"aws\",\n        };\n      }\n  }\n  return Promise.resolve({ signingService: \"cognito-identity\", ...regionInfo });\n};\n","import { parseQueryString } from \"@aws-sdk/querystring-parser\";\nimport { Endpoint, QueryParameterBag, UrlParser } from \"@aws-sdk/types\";\n\nexport const parseUrl: UrlParser = (url: string): Endpoint => {\n  const { hostname, pathname, port, protocol, search } = new URL(url);\n\n  let query: QueryParameterBag | undefined;\n  if (search) {\n    query = parseQueryString(search);\n  }\n\n  return {\n    hostname,\n    port: port ? parseInt(port) : undefined,\n    protocol,\n    path: pathname,\n    query,\n  };\n};\n","import { QueryParameterBag } from \"@aws-sdk/types\";\n\nexport function parseQueryString(querystring: string): QueryParameterBag {\n  const query: QueryParameterBag = {};\n  querystring = querystring.replace(/^\\?/, \"\");\n\n  if (querystring) {\n    for (const pair of querystring.split(\"&\")) {\n      let [key, value = null] = pair.split(\"=\");\n      key = decodeURIComponent(key);\n      if (value) {\n        value = decodeURIComponent(value);\n      }\n      if (!(key in query)) {\n        query[key] = value;\n      } else if (Array.isArray(query[key])) {\n        (query[key] as Array<string>).push(value as string);\n      } else {\n        query[key] = [query[key] as string, value as string];\n      }\n    }\n  }\n\n  return query;\n}\n","import { defaultRegionInfoProvider } from \"./endpoints\";\nimport { Logger as __Logger } from \"@aws-sdk/types\";\nimport { parseUrl } from \"@aws-sdk/url-parser\";\n\n/**\n * @internal\n */\nexport const ClientSharedValues = {\n  apiVersion: \"2014-06-30\",\n  disableHostPrefix: false,\n  logger: {} as __Logger,\n  regionInfoProvider: defaultRegionInfoProvider,\n  serviceId: \"Cognito Identity\",\n  urlParser: parseUrl,\n};\n","import packageInfo from \"./package.json\";\n\nimport { Sha256 } from \"@aws-crypto/sha256-browser\";\nimport { FetchHttpHandler, streamCollector } from \"@aws-sdk/fetch-http-handler\";\nimport { invalidProvider } from \"@aws-sdk/invalid-dependency\";\nimport { DEFAULT_MAX_ATTEMPTS } from \"@aws-sdk/middleware-retry\";\nimport { fromBase64, toBase64 } from \"@aws-sdk/util-base64-browser\";\nimport { calculateBodyLength } from \"@aws-sdk/util-body-length-browser\";\nimport { defaultUserAgent } from \"@aws-sdk/util-user-agent-browser\";\nimport { fromUtf8, toUtf8 } from \"@aws-sdk/util-utf8-browser\";\nimport { ClientDefaults } from \"./CognitoIdentityClient\";\nimport { ClientSharedValues } from \"./runtimeConfig.shared\";\n\n/**\n * @internal\n */\nexport const ClientDefaultValues: Required<ClientDefaults> = {\n  ...ClientSharedValues,\n  runtime: \"browser\",\n  base64Decoder: fromBase64,\n  base64Encoder: toBase64,\n  bodyLengthChecker: calculateBodyLength,\n  credentialDefaultProvider: (_: unknown) => () => Promise.reject(new Error(\"Credential is missing\")),\n  defaultUserAgentProvider: defaultUserAgent({\n    serviceId: ClientSharedValues.serviceId,\n    clientVersion: packageInfo.version,\n  }),\n  maxAttempts: DEFAULT_MAX_ATTEMPTS,\n  region: invalidProvider(\"Region is missing\"),\n  requestHandler: new FetchHttpHandler(),\n  sha256: Sha256,\n  streamCollector,\n  utf8Decoder: fromUtf8,\n  utf8Encoder: toUtf8,\n};\n","import { Endpoint, Provider, RegionInfoProvider, UrlParser } from \"@aws-sdk/types\";\n\nexport interface EndpointsInputConfig {\n  /**\n   * The fully qualified endpoint of the webservice. This is only required when using a custom endpoint (for example, when using a local version of S3).\n   */\n  endpoint?: string | Endpoint | Provider<Endpoint>;\n\n  /**\n   * Whether TLS is enabled for requests.\n   */\n  tls?: boolean;\n}\n\ninterface PreviouslyResolved {\n  regionInfoProvider: RegionInfoProvider;\n  urlParser: UrlParser;\n  region: Provider<string>;\n}\n\nexport interface EndpointsResolvedConfig extends Required<EndpointsInputConfig> {\n  endpoint: Provider<Endpoint>;\n  isCustomEndpoint: boolean;\n}\n\nexport const resolveEndpointsConfig = <T>(\n  input: T & EndpointsInputConfig & PreviouslyResolved\n): T & EndpointsResolvedConfig => ({\n  ...input,\n  tls: input.tls ?? true,\n  endpoint: input.endpoint ? normalizeEndpoint(input) : () => getEndPointFromRegion(input),\n  isCustomEndpoint: input.endpoint ? true : false,\n});\n\nconst normalizeEndpoint = (input: EndpointsInputConfig & PreviouslyResolved): Provider<Endpoint> => {\n  const { endpoint, urlParser } = input;\n  if (typeof endpoint === \"string\") {\n    const promisified = Promise.resolve(urlParser(endpoint));\n    return () => promisified;\n  } else if (typeof endpoint === \"object\") {\n    const promisified = Promise.resolve(endpoint);\n    return () => promisified;\n  }\n  return endpoint!;\n};\n\nconst getEndPointFromRegion = async (input: EndpointsInputConfig & PreviouslyResolved) => {\n  const { tls = true } = input;\n  const region = await input.region();\n\n  const dnsHostRegex = new RegExp(/^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]{0,61}[a-zA-Z0-9])$/);\n  if (!dnsHostRegex.test(region)) {\n    throw new Error(\"Invalid region in client config\");\n  }\n\n  const { hostname } = (await input.regionInfoProvider(region)) ?? {};\n  if (!hostname) {\n    throw new Error(\"Cannot resolve hostname from client config\");\n  }\n\n  return input.urlParser(`${tls ? \"https:\" : \"http:\"}//${hostname}`);\n};\n","import { LoadedConfigSelectors, LocalConfigOptions } from \"@aws-sdk/node-config-provider\";\nimport { Provider } from \"@aws-sdk/types\";\n\nexport const REGION_ENV_NAME = \"AWS_REGION\";\nexport const REGION_INI_NAME = \"region\";\n\nexport const NODE_REGION_CONFIG_OPTIONS: LoadedConfigSelectors<string> = {\n  environmentVariableSelector: (env) => env[REGION_ENV_NAME],\n  configFileSelector: (profile) => profile[REGION_INI_NAME],\n  default: () => {\n    throw new Error(\"Region is missing\");\n  },\n};\n\nexport const NODE_REGION_CONFIG_FILE_OPTIONS: LocalConfigOptions = {\n  preferredFile: \"credentials\",\n};\n\nexport interface RegionInputConfig {\n  /**\n   * The AWS region to which this client will send requests\n   */\n  region?: string | Provider<string>;\n}\n\ninterface PreviouslyResolved {}\n\nexport interface RegionResolvedConfig {\n  region: Provider<string>;\n}\n\nexport const resolveRegionConfig = <T>(input: T & RegionInputConfig & PreviouslyResolved): T & RegionResolvedConfig => {\n  if (!input.region) {\n    throw new Error(\"Region is missing\");\n  }\n  return {\n    ...input,\n    region: normalizeRegion(input.region!),\n  };\n};\n\nconst normalizeRegion = (region: string | Provider<string>): Provider<string> => {\n  if (typeof region === \"string\") {\n    const promisified = Promise.resolve(region);\n    return () => promisified;\n  }\n  return region as Provider<string>;\n};\n","import { HttpRequest } from \"@aws-sdk/protocol-http\";\nimport {\n  BodyLengthCalculator,\n  BuildHandler,\n  BuildHandlerArguments,\n  BuildHandlerOptions,\n  BuildHandlerOutput,\n  BuildMiddleware,\n  MetadataBearer,\n  Pluggable,\n} from \"@aws-sdk/types\";\n\nconst CONTENT_LENGTH_HEADER = \"content-length\";\n\nexport function contentLengthMiddleware(bodyLengthChecker: BodyLengthCalculator): BuildMiddleware<any, any> {\n  return <Output extends MetadataBearer>(next: BuildHandler<any, Output>): BuildHandler<any, Output> => async (\n    args: BuildHandlerArguments<any>\n  ): Promise<BuildHandlerOutput<Output>> => {\n    const request = args.request;\n    if (HttpRequest.isInstance(request)) {\n      const { body, headers } = request;\n      if (\n        body &&\n        Object.keys(headers)\n          .map((str) => str.toLowerCase())\n          .indexOf(CONTENT_LENGTH_HEADER) === -1\n      ) {\n        const length = bodyLengthChecker(body);\n        if (length !== undefined) {\n          request.headers = {\n            ...request.headers,\n            [CONTENT_LENGTH_HEADER]: String(length),\n          };\n        }\n      }\n    }\n\n    return next({\n      ...args,\n      request,\n    });\n  };\n}\n\nexport const contentLengthMiddlewareOptions: BuildHandlerOptions = {\n  step: \"build\",\n  tags: [\"SET_CONTENT_LENGTH\", \"CONTENT_LENGTH\"],\n  name: \"contentLengthMiddleware\",\n  override: true,\n};\n\nexport const getContentLengthPlugin = (options: { bodyLengthChecker: BodyLengthCalculator }): Pluggable<any, any> => ({\n  applyToStack: (clientStack) => {\n    clientStack.add(contentLengthMiddleware(options.bodyLengthChecker), contentLengthMiddlewareOptions);\n  },\n});\n","const SHORT_TO_HEX: { [key: number]: string } = {};\nconst HEX_TO_SHORT: { [key: string]: number } = {};\n\nfor (let i = 0; i < 256; i++) {\n  let encodedByte = i.toString(16).toLowerCase();\n  if (encodedByte.length === 1) {\n    encodedByte = `0${encodedByte}`;\n  }\n\n  SHORT_TO_HEX[i] = encodedByte;\n  HEX_TO_SHORT[encodedByte] = i;\n}\n\n/**\n * Converts a hexadecimal encoded string to a Uint8Array of bytes.\n *\n * @param encoded The hexadecimal encoded string\n */\nexport function fromHex(encoded: string): Uint8Array {\n  if (encoded.length % 2 !== 0) {\n    throw new Error(\"Hex encoded strings must have an even number length\");\n  }\n\n  const out = new Uint8Array(encoded.length / 2);\n  for (let i = 0; i < encoded.length; i += 2) {\n    const encodedByte = encoded.substr(i, 2).toLowerCase();\n    if (encodedByte in HEX_TO_SHORT) {\n      out[i / 2] = HEX_TO_SHORT[encodedByte];\n    } else {\n      throw new Error(`Cannot decode unrecognized sequence ${encodedByte} as hexadecimal`);\n    }\n  }\n\n  return out;\n}\n\n/**\n * Converts a Uint8Array of binary data to a hexadecimal encoded string.\n *\n * @param bytes The binary data to encode\n */\nexport function toHex(bytes: Uint8Array): string {\n  let out = \"\";\n  for (let i = 0; i < bytes.byteLength; i++) {\n    out += SHORT_TO_HEX[bytes[i]];\n  }\n\n  return out;\n}\n","import { HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { AbsoluteLocation, BuildHandlerOptions, BuildMiddleware, Pluggable, RequestHandler } from \"@aws-sdk/types\";\n\nexport interface HostHeaderInputConfig {}\ninterface PreviouslyResolved {\n  requestHandler: RequestHandler<any, any>;\n}\nexport interface HostHeaderResolvedConfig {\n  requestHandler: RequestHandler<any, any>;\n}\nexport function resolveHostHeaderConfig<T>(\n  input: T & PreviouslyResolved & HostHeaderInputConfig\n): T & HostHeaderResolvedConfig {\n  return input;\n}\n\nexport const hostHeaderMiddleware = <Input extends object, Output extends object>(\n  options: HostHeaderResolvedConfig\n): BuildMiddleware<Input, Output> => (next) => async (args) => {\n  if (!HttpRequest.isInstance(args.request)) return next(args);\n  const { request } = args;\n  const { handlerProtocol = \"\" } = options.requestHandler.metadata || {};\n  //For H2 request, remove 'host' header and use ':authority' header instead\n  //reference: https://nodejs.org/dist/latest-v13.x/docs/api/errors.html#ERR_HTTP2_INVALID_CONNECTION_HEADERS\n  if (handlerProtocol.indexOf(\"h2\") >= 0 && !request.headers[\":authority\"]) {\n    delete request.headers[\"host\"];\n    request.headers[\":authority\"] = \"\";\n    //non-H2 request and 'host' header is not set, set the 'host' header to request's hostname.\n  } else if (!request.headers[\"host\"]) {\n    request.headers[\"host\"] = request.hostname;\n  }\n  return next(args);\n};\n\nexport const hostHeaderMiddlewareOptions: BuildHandlerOptions & AbsoluteLocation = {\n  name: \"hostHeaderMiddleware\",\n  step: \"build\",\n  priority: \"low\",\n  tags: [\"HOST\"],\n  override: true,\n};\n\nexport const getHostHeaderPlugin = (options: HostHeaderResolvedConfig): Pluggable<any, any> => ({\n  applyToStack: (clientStack) => {\n    clientStack.add(hostHeaderMiddleware(options), hostHeaderMiddlewareOptions);\n  },\n});\n","import { HttpResponse } from \"@aws-sdk/protocol-http\";\nimport {\n  AbsoluteLocation,\n  HandlerExecutionContext,\n  InitializeHandler,\n  InitializeHandlerArguments,\n  InitializeHandlerOptions,\n  InitializeHandlerOutput,\n  MetadataBearer,\n  Pluggable,\n} from \"@aws-sdk/types\";\n\nexport const loggerMiddleware = () => <Output extends MetadataBearer = MetadataBearer>(\n  next: InitializeHandler<any, Output>,\n  context: HandlerExecutionContext\n): InitializeHandler<any, Output> => async (\n  args: InitializeHandlerArguments<any>\n): Promise<InitializeHandlerOutput<Output>> => {\n  const { clientName, commandName, inputFilterSensitiveLog, logger, outputFilterSensitiveLog } = context;\n\n  const response = await next(args);\n\n  if (!logger) {\n    return response;\n  }\n\n  if (typeof logger.info === \"function\") {\n    const { $metadata, ...outputWithoutMetadata } = response.output;\n    logger.info({\n      clientName,\n      commandName,\n      input: inputFilterSensitiveLog(args.input),\n      output: outputFilterSensitiveLog(outputWithoutMetadata),\n      metadata: $metadata,\n    });\n  }\n\n  return response;\n};\n\nexport const loggerMiddlewareOptions: InitializeHandlerOptions & AbsoluteLocation = {\n  name: \"loggerMiddleware\",\n  tags: [\"LOGGER\"],\n  step: \"initialize\",\n  override: true,\n};\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport const getLoggerPlugin = (options: any): Pluggable<any, any> => ({\n  applyToStack: (clientStack) => {\n    clientStack.add(loggerMiddleware(), loggerMiddlewareOptions);\n  },\n});\n","export const ALGORITHM_QUERY_PARAM = \"X-Amz-Algorithm\";\nexport const CREDENTIAL_QUERY_PARAM = \"X-Amz-Credential\";\nexport const AMZ_DATE_QUERY_PARAM = \"X-Amz-Date\";\nexport const SIGNED_HEADERS_QUERY_PARAM = \"X-Amz-SignedHeaders\";\nexport const EXPIRES_QUERY_PARAM = \"X-Amz-Expires\";\nexport const SIGNATURE_QUERY_PARAM = \"X-Amz-Signature\";\nexport const TOKEN_QUERY_PARAM = \"X-Amz-Security-Token\";\n\nexport const AUTH_HEADER = \"authorization\";\nexport const AMZ_DATE_HEADER = AMZ_DATE_QUERY_PARAM.toLowerCase();\nexport const DATE_HEADER = \"date\";\nexport const GENERATED_HEADERS = [AUTH_HEADER, AMZ_DATE_HEADER, DATE_HEADER];\nexport const SIGNATURE_HEADER = SIGNATURE_QUERY_PARAM.toLowerCase();\nexport const SHA256_HEADER = \"x-amz-content-sha256\";\nexport const TOKEN_HEADER = TOKEN_QUERY_PARAM.toLowerCase();\nexport const HOST_HEADER = \"host\";\n\nexport const ALWAYS_UNSIGNABLE_HEADERS = {\n  authorization: true,\n  \"cache-control\": true,\n  connection: true,\n  expect: true,\n  from: true,\n  \"keep-alive\": true,\n  \"max-forwards\": true,\n  pragma: true,\n  referer: true,\n  te: true,\n  trailer: true,\n  \"transfer-encoding\": true,\n  upgrade: true,\n  \"user-agent\": true,\n  \"x-amzn-trace-id\": true,\n};\n\nexport const PROXY_HEADER_PATTERN = /^proxy-/;\n\nexport const SEC_HEADER_PATTERN = /^sec-/;\n\nexport const UNSIGNABLE_PATTERNS = [/^proxy-/i, /^sec-/i];\n\nexport const ALGORITHM_IDENTIFIER = \"AWS4-HMAC-SHA256\";\n\nexport const EVENT_ALGORITHM_IDENTIFIER = \"AWS4-HMAC-SHA256-PAYLOAD\";\n\nexport const UNSIGNED_PAYLOAD = \"UNSIGNED-PAYLOAD\";\n\nexport const MAX_CACHE_SIZE = 50;\nexport const KEY_TYPE_IDENTIFIER = \"aws4_request\";\n\nexport const MAX_PRESIGNED_TTL = 60 * 60 * 24 * 7;\n","import { Credentials, HashConstructor, SourceData } from \"@aws-sdk/types\";\nimport { toHex } from \"@aws-sdk/util-hex-encoding\";\n\nimport { KEY_TYPE_IDENTIFIER, MAX_CACHE_SIZE } from \"./constants\";\n\nconst signingKeyCache: { [key: string]: Uint8Array } = {};\nconst cacheQueue: Array<string> = [];\n\n/**\n * Create a string describing the scope of credentials used to sign a request.\n *\n * @param shortDate The current calendar date in the form YYYYMMDD.\n * @param region    The AWS region in which the service resides.\n * @param service   The service to which the signed request is being sent.\n */\nexport function createScope(shortDate: string, region: string, service: string): string {\n  return `${shortDate}/${region}/${service}/${KEY_TYPE_IDENTIFIER}`;\n}\n\n/**\n * Derive a signing key from its composite parts\n *\n * @param sha256Constructor A constructor function that can instantiate SHA-256\n *                          hash objects.\n * @param credentials       The credentials with which the request will be\n *                          signed.\n * @param shortDate         The current calendar date in the form YYYYMMDD.\n * @param region            The AWS region in which the service resides.\n * @param service           The service to which the signed request is being\n *                          sent.\n */\nexport const getSigningKey = async (\n  sha256Constructor: HashConstructor,\n  credentials: Credentials,\n  shortDate: string,\n  region: string,\n  service: string\n): Promise<Uint8Array> => {\n  const credsHash = await hmac(sha256Constructor, credentials.secretAccessKey, credentials.accessKeyId);\n  const cacheKey = `${shortDate}:${region}:${service}:${toHex(credsHash)}:${credentials.sessionToken}`;\n  if (cacheKey in signingKeyCache) {\n    return signingKeyCache[cacheKey];\n  }\n\n  cacheQueue.push(cacheKey);\n  while (cacheQueue.length > MAX_CACHE_SIZE) {\n    delete signingKeyCache[cacheQueue.shift() as string];\n  }\n\n  let key: SourceData = `AWS4${credentials.secretAccessKey}`;\n  for (const signable of [shortDate, region, service, KEY_TYPE_IDENTIFIER]) {\n    key = await hmac(sha256Constructor, key, signable);\n  }\n  return (signingKeyCache[cacheKey] = key as Uint8Array);\n};\n\n/**\n * @internal\n */\nexport function clearCredentialCache(): void {\n  cacheQueue.length = 0;\n  Object.keys(signingKeyCache).forEach((cacheKey) => {\n    delete signingKeyCache[cacheKey];\n  });\n}\n\nfunction hmac(ctor: HashConstructor, secret: SourceData, data: SourceData): Promise<Uint8Array> {\n  const hash = new ctor(secret);\n  hash.update(data);\n  return hash.digest();\n}\n","import { HeaderBag, HttpRequest } from \"@aws-sdk/types\";\n\nimport { ALWAYS_UNSIGNABLE_HEADERS, PROXY_HEADER_PATTERN, SEC_HEADER_PATTERN } from \"./constants\";\n\n/**\n * @internal\n */\nexport function getCanonicalHeaders(\n  { headers }: HttpRequest,\n  unsignableHeaders?: Set<string>,\n  signableHeaders?: Set<string>\n): HeaderBag {\n  const canonical: HeaderBag = {};\n  for (const headerName of Object.keys(headers).sort()) {\n    const canonicalHeaderName = headerName.toLowerCase();\n    if (\n      canonicalHeaderName in ALWAYS_UNSIGNABLE_HEADERS ||\n      unsignableHeaders?.has(canonicalHeaderName) ||\n      PROXY_HEADER_PATTERN.test(canonicalHeaderName) ||\n      SEC_HEADER_PATTERN.test(canonicalHeaderName)\n    ) {\n      if (!signableHeaders || (signableHeaders && !signableHeaders.has(canonicalHeaderName))) {\n        continue;\n      }\n    }\n\n    canonical[canonicalHeaderName] = headers[headerName].trim().replace(/\\s+/g, \" \");\n  }\n\n  return canonical;\n}\n","import { isArrayBuffer } from \"@aws-sdk/is-array-buffer\";\nimport { HashConstructor, HttpRequest } from \"@aws-sdk/types\";\nimport { toHex } from \"@aws-sdk/util-hex-encoding\";\n\nimport { SHA256_HEADER, UNSIGNED_PAYLOAD } from \"./constants\";\n\n/**\n * @internal\n */\nexport async function getPayloadHash(\n  { headers, body }: HttpRequest,\n  hashConstructor: HashConstructor\n): Promise<string> {\n  for (const headerName of Object.keys(headers)) {\n    if (headerName.toLowerCase() === SHA256_HEADER) {\n      return headers[headerName];\n    }\n  }\n\n  if (body == undefined) {\n    return \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\";\n  } else if (typeof body === \"string\" || ArrayBuffer.isView(body) || isArrayBuffer(body)) {\n    const hashCtor = new hashConstructor();\n    hashCtor.update(body);\n    return toHex(await hashCtor.digest());\n  }\n\n  // As any defined body that is not a string or binary data is a stream, this\n  // body is unsignable. Attempt to send the request with an unsigned payload,\n  // which may or may not be accepted by the service.\n  return UNSIGNED_PAYLOAD;\n}\n","export const isArrayBuffer = (arg: any): arg is ArrayBuffer =>\n  (typeof ArrayBuffer === \"function\" && arg instanceof ArrayBuffer) ||\n  Object.prototype.toString.call(arg) === \"[object ArrayBuffer]\";\n","import { HttpRequest, QueryParameterBag } from \"@aws-sdk/types\";\n\n/**\n * @internal\n */\nexport function cloneRequest({ headers, query, ...rest }: HttpRequest): HttpRequest {\n  return {\n    ...rest,\n    headers: { ...headers },\n    query: query ? cloneQuery(query) : undefined,\n  };\n}\n\nfunction cloneQuery(query: QueryParameterBag): QueryParameterBag {\n  return Object.keys(query).reduce((carry: QueryParameterBag, paramName: string) => {\n    const param = query[paramName];\n    return {\n      ...carry,\n      [paramName]: Array.isArray(param) ? [...param] : param,\n    };\n  }, {});\n}\n","import { HttpRequest } from \"@aws-sdk/types\";\n\nimport { cloneRequest } from \"./cloneRequest\";\nimport { GENERATED_HEADERS } from \"./constants\";\n\n/**\n * @internal\n */\nexport function prepareRequest(request: HttpRequest): HttpRequest {\n  // Create a clone of the request object that does not clone the body\n  request = typeof (request as any).clone === \"function\" ? (request as any).clone() : cloneRequest(request);\n\n  for (const headerName of Object.keys(request.headers)) {\n    if (GENERATED_HEADERS.indexOf(headerName.toLowerCase()) > -1) {\n      delete request.headers[headerName];\n    }\n  }\n\n  return request;\n}\n","export function iso8601(time: number | string | Date): string {\n  return toDate(time)\n    .toISOString()\n    .replace(/\\.\\d{3}Z$/, \"Z\");\n}\n\nexport function toDate(time: number | string | Date): Date {\n  if (typeof time === \"number\") {\n    return new Date(time * 1000);\n  }\n\n  if (typeof time === \"string\") {\n    if (Number(time)) {\n      return new Date(Number(time) * 1000);\n    }\n    return new Date(time);\n  }\n\n  return time;\n}\n","import {\n  Credentials,\n  DateInput,\n  EventSigner,\n  EventSigningArguments,\n  FormattedEvent,\n  HashConstructor,\n  HeaderBag,\n  HttpRequest,\n  Provider,\n  RequestPresigner,\n  RequestPresigningArguments,\n  RequestSigner,\n  RequestSigningArguments,\n  SigningArguments,\n  StringSigner,\n} from \"@aws-sdk/types\";\nimport { toHex } from \"@aws-sdk/util-hex-encoding\";\n\nimport {\n  ALGORITHM_IDENTIFIER,\n  ALGORITHM_QUERY_PARAM,\n  AMZ_DATE_HEADER,\n  AMZ_DATE_QUERY_PARAM,\n  AUTH_HEADER,\n  CREDENTIAL_QUERY_PARAM,\n  EVENT_ALGORITHM_IDENTIFIER,\n  EXPIRES_QUERY_PARAM,\n  MAX_PRESIGNED_TTL,\n  SHA256_HEADER,\n  SIGNATURE_QUERY_PARAM,\n  SIGNED_HEADERS_QUERY_PARAM,\n  TOKEN_HEADER,\n  TOKEN_QUERY_PARAM,\n} from \"./constants\";\nimport { createScope, getSigningKey } from \"./credentialDerivation\";\nimport { getCanonicalHeaders } from \"./getCanonicalHeaders\";\nimport { getCanonicalQuery } from \"./getCanonicalQuery\";\nimport { getPayloadHash } from \"./getPayloadHash\";\nimport { hasHeader } from \"./hasHeader\";\nimport { moveHeadersToQuery } from \"./moveHeadersToQuery\";\nimport { prepareRequest } from \"./prepareRequest\";\nimport { iso8601 } from \"./utilDate\";\n\nexport interface SignatureV4Init {\n  /**\n   * The service signing name.\n   */\n  service: string;\n\n  /**\n   * The region name or a function that returns a promise that will be\n   * resolved with the region name.\n   */\n  region: string | Provider<string>;\n\n  /**\n   * The credentials with which the request should be signed or a function\n   * that returns a promise that will be resolved with credentials.\n   */\n  credentials: Credentials | Provider<Credentials>;\n\n  /**\n   * A constructor function for a hash object that will calculate SHA-256 HMAC\n   * checksums.\n   */\n  sha256?: HashConstructor;\n\n  /**\n   * Whether to uri-escape the request URI path as part of computing the\n   * canonical request string. This is required for every AWS service, except\n   * Amazon S3, as of late 2017.\n   *\n   * @default [true]\n   */\n  uriEscapePath?: boolean;\n\n  /**\n   * Whether to calculate a checksum of the request body and include it as\n   * either a request header (when signing) or as a query string parameter\n   * (when presigning). This is required for AWS Glacier and Amazon S3 and optional for\n   * every other AWS service as of late 2017.\n   *\n   * @default [true]\n   */\n  applyChecksum?: boolean;\n}\n\nexport interface SignatureV4CryptoInit {\n  sha256: HashConstructor;\n}\n\nexport class SignatureV4 implements RequestPresigner, RequestSigner, StringSigner, EventSigner {\n  private readonly service: string;\n  private readonly regionProvider: Provider<string>;\n  private readonly credentialProvider: Provider<Credentials>;\n  private readonly sha256: HashConstructor;\n  private readonly uriEscapePath: boolean;\n  private readonly applyChecksum: boolean;\n\n  constructor({\n    applyChecksum,\n    credentials,\n    region,\n    service,\n    sha256,\n    uriEscapePath = true,\n  }: SignatureV4Init & SignatureV4CryptoInit) {\n    this.service = service;\n    this.sha256 = sha256;\n    this.uriEscapePath = uriEscapePath;\n    // default to true if applyChecksum isn't set\n    this.applyChecksum = typeof applyChecksum === \"boolean\" ? applyChecksum : true;\n    this.regionProvider = normalizeRegionProvider(region);\n    this.credentialProvider = normalizeCredentialsProvider(credentials);\n  }\n\n  public async presign(originalRequest: HttpRequest, options: RequestPresigningArguments = {}): Promise<HttpRequest> {\n    const {\n      signingDate = new Date(),\n      expiresIn = 3600,\n      unsignableHeaders,\n      unhoistableHeaders,\n      signableHeaders,\n      signingRegion,\n      signingService,\n    } = options;\n    const credentials = await this.credentialProvider();\n    const region = signingRegion ?? (await this.regionProvider());\n\n    const { longDate, shortDate } = formatDate(signingDate);\n    if (expiresIn > MAX_PRESIGNED_TTL) {\n      return Promise.reject(\n        \"Signature version 4 presigned URLs\" + \" must have an expiration date less than one week in\" + \" the future\"\n      );\n    }\n\n    const scope = createScope(shortDate, region, signingService ?? this.service);\n    const request = moveHeadersToQuery(prepareRequest(originalRequest), { unhoistableHeaders });\n\n    if (credentials.sessionToken) {\n      request.query[TOKEN_QUERY_PARAM] = credentials.sessionToken;\n    }\n    request.query[ALGORITHM_QUERY_PARAM] = ALGORITHM_IDENTIFIER;\n    request.query[CREDENTIAL_QUERY_PARAM] = `${credentials.accessKeyId}/${scope}`;\n    request.query[AMZ_DATE_QUERY_PARAM] = longDate;\n    request.query[EXPIRES_QUERY_PARAM] = expiresIn.toString(10);\n\n    const canonicalHeaders = getCanonicalHeaders(request, unsignableHeaders, signableHeaders);\n    request.query[SIGNED_HEADERS_QUERY_PARAM] = getCanonicalHeaderList(canonicalHeaders);\n\n    request.query[SIGNATURE_QUERY_PARAM] = await this.getSignature(\n      longDate,\n      scope,\n      this.getSigningKey(credentials, region, shortDate, signingService),\n      this.createCanonicalRequest(request, canonicalHeaders, await getPayloadHash(originalRequest, this.sha256))\n    );\n\n    return request;\n  }\n\n  public async sign(stringToSign: string, options?: SigningArguments): Promise<string>;\n  public async sign(event: FormattedEvent, options: EventSigningArguments): Promise<string>;\n  public async sign(requestToSign: HttpRequest, options?: RequestSigningArguments): Promise<HttpRequest>;\n  public async sign(toSign: any, options: any): Promise<any> {\n    if (typeof toSign === \"string\") {\n      return this.signString(toSign, options);\n    } else if (toSign.headers && toSign.payload) {\n      return this.signEvent(toSign, options);\n    } else {\n      return this.signRequest(toSign, options);\n    }\n  }\n\n  private async signEvent(\n    { headers, payload }: FormattedEvent,\n    { signingDate = new Date(), priorSignature, signingRegion, signingService }: EventSigningArguments\n  ): Promise<string> {\n    const region = signingRegion ?? (await this.regionProvider());\n    const { shortDate, longDate } = formatDate(signingDate);\n    const scope = createScope(shortDate, region, signingService ?? this.service);\n    const hashedPayload = await getPayloadHash({ headers: {}, body: payload } as any, this.sha256);\n    const hash = new this.sha256();\n    hash.update(headers);\n    const hashedHeaders = toHex(await hash.digest());\n    const stringToSign = [\n      EVENT_ALGORITHM_IDENTIFIER,\n      longDate,\n      scope,\n      priorSignature,\n      hashedHeaders,\n      hashedPayload,\n    ].join(\"\\n\");\n    return this.signString(stringToSign, { signingDate, signingRegion: region, signingService });\n  }\n\n  private async signString(\n    stringToSign: string,\n    { signingDate = new Date(), signingRegion, signingService }: SigningArguments = {}\n  ): Promise<string> {\n    const credentials = await this.credentialProvider();\n    const region = signingRegion ?? (await this.regionProvider());\n    const { shortDate } = formatDate(signingDate);\n\n    const hash = new this.sha256(await this.getSigningKey(credentials, region, shortDate, signingService));\n    hash.update(stringToSign);\n    return toHex(await hash.digest());\n  }\n\n  private async signRequest(\n    requestToSign: HttpRequest,\n    {\n      signingDate = new Date(),\n      signableHeaders,\n      unsignableHeaders,\n      signingRegion,\n      signingService,\n    }: RequestSigningArguments = {}\n  ): Promise<HttpRequest> {\n    const credentials = await this.credentialProvider();\n    const region = signingRegion ?? (await this.regionProvider());\n    const request = prepareRequest(requestToSign);\n    const { longDate, shortDate } = formatDate(signingDate);\n    const scope = createScope(shortDate, region, signingService ?? this.service);\n\n    request.headers[AMZ_DATE_HEADER] = longDate;\n    if (credentials.sessionToken) {\n      request.headers[TOKEN_HEADER] = credentials.sessionToken;\n    }\n\n    const payloadHash = await getPayloadHash(request, this.sha256);\n    if (!hasHeader(SHA256_HEADER, request.headers) && this.applyChecksum) {\n      request.headers[SHA256_HEADER] = payloadHash;\n    }\n\n    const canonicalHeaders = getCanonicalHeaders(request, unsignableHeaders, signableHeaders);\n    const signature = await this.getSignature(\n      longDate,\n      scope,\n      this.getSigningKey(credentials, region, shortDate, signingService),\n      this.createCanonicalRequest(request, canonicalHeaders, payloadHash)\n    );\n\n    request.headers[AUTH_HEADER] =\n      `${ALGORITHM_IDENTIFIER} ` +\n      `Credential=${credentials.accessKeyId}/${scope}, ` +\n      `SignedHeaders=${getCanonicalHeaderList(canonicalHeaders)}, ` +\n      `Signature=${signature}`;\n\n    return request;\n  }\n\n  private createCanonicalRequest(request: HttpRequest, canonicalHeaders: HeaderBag, payloadHash: string): string {\n    const sortedHeaders = Object.keys(canonicalHeaders).sort();\n    return `${request.method}\n${this.getCanonicalPath(request)}\n${getCanonicalQuery(request)}\n${sortedHeaders.map((name) => `${name}:${canonicalHeaders[name]}`).join(\"\\n\")}\n\n${sortedHeaders.join(\";\")}\n${payloadHash}`;\n  }\n\n  private async createStringToSign(\n    longDate: string,\n    credentialScope: string,\n    canonicalRequest: string\n  ): Promise<string> {\n    const hash = new this.sha256();\n    hash.update(canonicalRequest);\n    const hashedRequest = await hash.digest();\n\n    return `${ALGORITHM_IDENTIFIER}\n${longDate}\n${credentialScope}\n${toHex(hashedRequest)}`;\n  }\n\n  private getCanonicalPath({ path }: HttpRequest): string {\n    if (this.uriEscapePath) {\n      const doubleEncoded = encodeURIComponent(path.replace(/^\\//, \"\"));\n      return `/${doubleEncoded.replace(/%2F/g, \"/\")}`;\n    }\n\n    return path;\n  }\n\n  private async getSignature(\n    longDate: string,\n    credentialScope: string,\n    keyPromise: Promise<Uint8Array>,\n    canonicalRequest: string\n  ): Promise<string> {\n    const stringToSign = await this.createStringToSign(longDate, credentialScope, canonicalRequest);\n\n    const hash = new this.sha256(await keyPromise);\n    hash.update(stringToSign);\n    return toHex(await hash.digest());\n  }\n\n  private getSigningKey(\n    credentials: Credentials,\n    region: string,\n    shortDate: string,\n    service?: string\n  ): Promise<Uint8Array> {\n    return getSigningKey(this.sha256, credentials, shortDate, region, service || this.service);\n  }\n}\n\nconst formatDate = (now: DateInput): { longDate: string; shortDate: string } => {\n  const longDate = iso8601(now).replace(/[\\-:]/g, \"\");\n  return {\n    longDate,\n    shortDate: longDate.substr(0, 8),\n  };\n};\n\nconst getCanonicalHeaderList = (headers: object): string => Object.keys(headers).sort().join(\";\");\n\nconst normalizeRegionProvider = (region: string | Provider<string>): Provider<string> => {\n  if (typeof region === \"string\") {\n    const promisified = Promise.resolve(region);\n    return () => promisified;\n  } else {\n    return region;\n  }\n};\n\nconst normalizeCredentialsProvider = (credentials: Credentials | Provider<Credentials>): Provider<Credentials> => {\n  if (typeof credentials === \"object\") {\n    const promisified = Promise.resolve(credentials);\n    return () => promisified;\n  } else {\n    return credentials;\n  }\n};\n","import { HttpRequest, QueryParameterBag } from \"@aws-sdk/types\";\n\nimport { cloneRequest } from \"./cloneRequest\";\n\n/**\n * @internal\n */\nexport function moveHeadersToQuery(\n  request: HttpRequest,\n  options: { unhoistableHeaders?: Set<string> } = {}\n): HttpRequest & { query: QueryParameterBag } {\n  const { headers, query = {} as QueryParameterBag } =\n    typeof (request as any).clone === \"function\" ? (request as any).clone() : cloneRequest(request);\n  for (const name of Object.keys(headers)) {\n    const lname = name.toLowerCase();\n    if (lname.substr(0, 6) === \"x-amz-\" && !options.unhoistableHeaders?.has(lname)) {\n      query[name] = headers[name];\n      delete headers[name];\n    }\n  }\n\n  return {\n    ...request,\n    headers,\n    query,\n  };\n}\n","import { HeaderBag } from \"@aws-sdk/types\";\n\nexport function hasHeader(soughtHeader: string, headers: HeaderBag): boolean {\n  soughtHeader = soughtHeader.toLowerCase();\n  for (const headerName of Object.keys(headers)) {\n    if (soughtHeader === headerName.toLowerCase()) {\n      return true;\n    }\n  }\n\n  return false;\n}\n","import { HttpRequest } from \"@aws-sdk/types\";\nimport { escapeUri } from \"@aws-sdk/util-uri-escape\";\n\nimport { SIGNATURE_HEADER } from \"./constants\";\n\n/**\n * @internal\n */\nexport function getCanonicalQuery({ query = {} }: HttpRequest): string {\n  const keys: Array<string> = [];\n  const serialized: { [key: string]: string } = {};\n  for (const key of Object.keys(query).sort()) {\n    if (key.toLowerCase() === SIGNATURE_HEADER) {\n      continue;\n    }\n\n    keys.push(key);\n    const value = query[key];\n    if (typeof value === \"string\") {\n      serialized[key] = `${escapeUri(key)}=${escapeUri(value)}`;\n    } else if (Array.isArray(value)) {\n      serialized[key] = value\n        .slice(0)\n        .sort()\n        .reduce(\n          (encoded: Array<string>, value: string) => encoded.concat([`${escapeUri(key)}=${escapeUri(value)}`]),\n          []\n        )\n        .join(\"&\");\n    }\n  }\n\n  return keys\n    .map((key) => serialized[key])\n    .filter((serialized) => serialized) // omit any falsy values\n    .join(\"&\");\n}\n","import { SignatureV4 } from \"@aws-sdk/signature-v4\";\nimport { Credentials, HashConstructor, Provider, RegionInfo, RegionInfoProvider, RequestSigner } from \"@aws-sdk/types\";\n\nexport interface AwsAuthInputConfig {\n  /**\n   * The credentials used to sign requests.\n   */\n  credentials?: Credentials | Provider<Credentials>;\n\n  /**\n   * The signer to use when signing requests.\n   */\n  signer?: RequestSigner | Provider<RequestSigner>;\n\n  /**\n   * Whether to escape request path when signing the request.\n   */\n  signingEscapePath?: boolean;\n\n  /**\n   * An offset value in milliseconds to apply to all signing times.\n   */\n  systemClockOffset?: number;\n\n  /**\n   * The region where you want to sign your request against. This\n   * can be different to the region in the endpoint.\n   */\n  signingRegion?: string;\n}\ninterface PreviouslyResolved {\n  credentialDefaultProvider: (input: any) => Provider<Credentials>;\n  region: string | Provider<string>;\n  regionInfoProvider: RegionInfoProvider;\n  signingName?: string;\n  serviceId: string;\n  sha256: HashConstructor;\n}\nexport interface AwsAuthResolvedConfig {\n  credentials: Provider<Credentials>;\n  signer: Provider<RequestSigner>;\n  signingEscapePath: boolean;\n  systemClockOffset: number;\n}\nexport function resolveAwsAuthConfig<T>(input: T & AwsAuthInputConfig & PreviouslyResolved): T & AwsAuthResolvedConfig {\n  const credentials = input.credentials || input.credentialDefaultProvider(input as any);\n  const normalizedCreds = normalizeProvider(credentials);\n  const { signingEscapePath = true, systemClockOffset = input.systemClockOffset || 0, sha256 } = input;\n  let signer: Provider<RequestSigner>;\n  if (input.signer) {\n    //if signer is supplied by user, normalize it to a function returning a promise for signer.\n    signer = normalizeProvider(input.signer);\n  } else {\n    //construct a provider inferring signing from region.\n    signer = () =>\n      normalizeProvider(input.region)()\n        .then(async (region) => [(await input.regionInfoProvider(region)) || {}, region] as [RegionInfo, string])\n        .then(([regionInfo, region]) => {\n          const { signingRegion, signingService } = regionInfo;\n          //update client's singing region and signing service config if they are resolved.\n          //signing region resolving order: user supplied signingRegion -> endpoints.json inferred region -> client region\n          input.signingRegion = input.signingRegion || signingRegion || region;\n          //signing name resolving order:\n          //user supplied signingName -> endpoints.json inferred (credential scope -> model arnNamespace) -> model service id\n          input.signingName = input.signingName || signingService || input.serviceId;\n\n          return new SignatureV4({\n            credentials: normalizedCreds,\n            region: input.signingRegion,\n            service: input.signingName,\n            sha256,\n            uriEscapePath: signingEscapePath,\n          });\n        });\n  }\n\n  return {\n    ...input,\n    systemClockOffset,\n    signingEscapePath,\n    credentials: normalizedCreds,\n    signer,\n  };\n}\n\nfunction normalizeProvider<T>(input: T | Provider<T>): Provider<T> {\n  if (typeof input === \"object\") {\n    const promisified = Promise.resolve(input);\n    return () => promisified;\n  }\n  return input as Provider<T>;\n}\n","import { HttpRequest } from \"@aws-sdk/protocol-http\";\nimport {\n  FinalizeHandler,\n  FinalizeHandlerArguments,\n  FinalizeHandlerOutput,\n  FinalizeRequestMiddleware,\n  HandlerExecutionContext,\n  Pluggable,\n  RelativeMiddlewareOptions,\n} from \"@aws-sdk/types\";\n\nimport { AwsAuthResolvedConfig } from \"./configurations\";\n\nconst isClockSkewed = (newServerTime: number, systemClockOffset: number) =>\n  Math.abs(getSkewCorrectedDate(systemClockOffset).getTime() - newServerTime) >= 300000;\n\nconst getSkewCorrectedDate = (systemClockOffset: number) => new Date(Date.now() + systemClockOffset);\n\nexport function awsAuthMiddleware<Input extends object, Output extends object>(\n  options: AwsAuthResolvedConfig\n): FinalizeRequestMiddleware<Input, Output> {\n  return (next: FinalizeHandler<Input, Output>, context: HandlerExecutionContext): FinalizeHandler<Input, Output> =>\n    async function (args: FinalizeHandlerArguments<Input>): Promise<FinalizeHandlerOutput<Output>> {\n      if (!HttpRequest.isInstance(args.request)) return next(args);\n      const signer = typeof options.signer === \"function\" ? await options.signer() : options.signer;\n      const output = await next({\n        ...args,\n        request: await signer.sign(args.request, {\n          signingDate: new Date(Date.now() + options.systemClockOffset),\n          signingRegion: context[\"signing_region\"],\n          signingService: context[\"signing_service\"],\n        }),\n      });\n\n      const { headers } = output.response as any;\n      const dateHeader = headers && (headers.date || headers.Date);\n      if (dateHeader) {\n        const serverTime = Date.parse(dateHeader);\n        if (isClockSkewed(serverTime, options.systemClockOffset)) {\n          options.systemClockOffset = serverTime - Date.now();\n        }\n      }\n\n      return output;\n    };\n}\n\nexport const awsAuthMiddlewareOptions: RelativeMiddlewareOptions = {\n  name: \"awsAuthMiddleware\",\n  tags: [\"SIGNATURE\", \"AWSAUTH\"],\n  relation: \"after\",\n  toMiddleware: \"retryMiddleware\",\n  override: true,\n};\n\nexport const getAwsAuthPlugin = (options: AwsAuthResolvedConfig): Pluggable<any, any> => ({\n  applyToStack: (clientStack) => {\n    clientStack.addRelativeTo(awsAuthMiddleware(options), awsAuthMiddlewareOptions);\n  },\n});\n","import { Provider, UserAgent } from \"@aws-sdk/types\";\nexport interface UserAgentInputConfig {\n  /**\n   * The custom user agent header that would be appended to default one\n   */\n  customUserAgent?: string | UserAgent;\n}\ninterface PreviouslyResolved {\n  defaultUserAgentProvider: Provider<UserAgent>;\n  runtime: string;\n}\nexport interface UserAgentResolvedConfig {\n  defaultUserAgentProvider: Provider<UserAgent>;\n  customUserAgent?: UserAgent;\n  runtime: string;\n}\nexport function resolveUserAgentConfig<T>(\n  input: T & PreviouslyResolved & UserAgentInputConfig\n): T & UserAgentResolvedConfig {\n  return {\n    ...input,\n    customUserAgent: typeof input.customUserAgent === \"string\" ? [[input.customUserAgent]] : input.customUserAgent,\n  };\n}\n","export const USER_AGENT = \"user-agent\";\n\nexport const X_AMZ_USER_AGENT = \"x-amz-user-agent\";\n\nexport const SPACE = \" \";\n\nexport const UA_ESCAPE_REGEX = /[^\\!\\#\\$\\%\\&\\'\\*\\+\\-\\.\\^\\_\\`\\|\\~\\d\\w]/g;\n","import { HttpRequest } from \"@aws-sdk/protocol-http\";\nimport {\n  AbsoluteLocation,\n  BuildHandler,\n  BuildHandlerArguments,\n  BuildHandlerOptions,\n  BuildHandlerOutput,\n  HandlerExecutionContext,\n  MetadataBearer,\n  Pluggable,\n  UserAgentPair,\n} from \"@aws-sdk/types\";\n\nimport { UserAgentResolvedConfig } from \"./configurations\";\nimport { SPACE, UA_ESCAPE_REGEX, USER_AGENT, X_AMZ_USER_AGENT } from \"./constants\";\n\n/**\n * Build user agent header sections from:\n * 1. runtime-specific default user agent provider;\n * 2. custom user agent from `customUserAgent` client config;\n * 3. handler execution context set by internal SDK components;\n * The built user agent will be set to `x-amz-user-agent` header for ALL the\n * runtimes.\n * Please note that any override to the `user-agent` or `x-amz-user-agent` header\n * in the HTTP request is discouraged. Please use `customUserAgent` client\n * config or middleware setting the `userAgent` context to generate desired user\n * agent.\n */\nexport const userAgentMiddleware = (options: UserAgentResolvedConfig) => <Output extends MetadataBearer>(\n  next: BuildHandler<any, any>,\n  context: HandlerExecutionContext\n): BuildHandler<any, any> => async (args: BuildHandlerArguments<any>): Promise<BuildHandlerOutput<Output>> => {\n  const { request } = args;\n  if (!HttpRequest.isInstance(request)) return next(args);\n  const { headers } = request;\n  const userAgent = context?.userAgent?.map(escapeUserAgent) || [];\n  const defaultUserAgent = (await options.defaultUserAgentProvider()).map(escapeUserAgent);\n  const customUserAgent = options?.customUserAgent?.map(escapeUserAgent) || [];\n  // Set value to AWS-specific user agent header\n  headers[X_AMZ_USER_AGENT] = [...defaultUserAgent, ...userAgent, ...customUserAgent].join(SPACE);\n  // Get value to be sent with non-AWS-specific user agent header.\n  const normalUAValue = [\n    ...defaultUserAgent.filter((section) => section.startsWith(\"aws-sdk-\")),\n    ...customUserAgent,\n  ].join(SPACE);\n  if (options.runtime !== \"browser\" && normalUAValue) {\n    headers[USER_AGENT] = headers[USER_AGENT] ? `${headers[USER_AGENT]} ${normalUAValue}` : normalUAValue;\n  }\n\n  return next({\n    ...args,\n    request,\n  });\n};\n\n/**\n * Escape the each pair according to https://tools.ietf.org/html/rfc5234 and join the pair with pattern `name/version`.\n * User agent name may include prefix like `md/`, `api/`, `os/` etc., we should not escape the `/` after the prefix.\n * @private\n */\nconst escapeUserAgent = ([name, version]: UserAgentPair): string => {\n  const prefixSeparatorIndex = name.indexOf(\"/\");\n  const prefix = name.substring(0, prefixSeparatorIndex); // If no prefix, prefix is just \"\"\n  let uaName = name.substring(prefixSeparatorIndex + 1);\n  if (prefix === \"api\") {\n    uaName = uaName.toLowerCase();\n  }\n  return [prefix, uaName, version]\n    .filter((item) => item && item.length > 0)\n    .map((item) => item?.replace(UA_ESCAPE_REGEX, \"_\"))\n    .join(\"/\");\n};\n\nexport const getUserAgentMiddlewareOptions: BuildHandlerOptions & AbsoluteLocation = {\n  name: \"getUserAgentMiddleware\",\n  step: \"build\",\n  priority: \"low\",\n  tags: [\"SET_USER_AGENT\", \"USER_AGENT\"],\n  override: true,\n};\n\nexport const getUserAgentPlugin = (config: UserAgentResolvedConfig): Pluggable<any, any> => ({\n  applyToStack: (clientStack) => {\n    clientStack.add(userAgentMiddleware(config), getUserAgentMiddlewareOptions);\n  },\n});\n","import { CreateIdentityPoolCommandInput, CreateIdentityPoolCommandOutput } from \"./commands/CreateIdentityPoolCommand\";\nimport { DeleteIdentitiesCommandInput, DeleteIdentitiesCommandOutput } from \"./commands/DeleteIdentitiesCommand\";\nimport { DeleteIdentityPoolCommandInput, DeleteIdentityPoolCommandOutput } from \"./commands/DeleteIdentityPoolCommand\";\nimport { DescribeIdentityCommandInput, DescribeIdentityCommandOutput } from \"./commands/DescribeIdentityCommand\";\nimport {\n  DescribeIdentityPoolCommandInput,\n  DescribeIdentityPoolCommandOutput,\n} from \"./commands/DescribeIdentityPoolCommand\";\nimport {\n  GetCredentialsForIdentityCommandInput,\n  GetCredentialsForIdentityCommandOutput,\n} from \"./commands/GetCredentialsForIdentityCommand\";\nimport { GetIdCommandInput, GetIdCommandOutput } from \"./commands/GetIdCommand\";\nimport {\n  GetIdentityPoolRolesCommandInput,\n  GetIdentityPoolRolesCommandOutput,\n} from \"./commands/GetIdentityPoolRolesCommand\";\nimport { GetOpenIdTokenCommandInput, GetOpenIdTokenCommandOutput } from \"./commands/GetOpenIdTokenCommand\";\nimport {\n  GetOpenIdTokenForDeveloperIdentityCommandInput,\n  GetOpenIdTokenForDeveloperIdentityCommandOutput,\n} from \"./commands/GetOpenIdTokenForDeveloperIdentityCommand\";\nimport { ListIdentitiesCommandInput, ListIdentitiesCommandOutput } from \"./commands/ListIdentitiesCommand\";\nimport { ListIdentityPoolsCommandInput, ListIdentityPoolsCommandOutput } from \"./commands/ListIdentityPoolsCommand\";\nimport {\n  ListTagsForResourceCommandInput,\n  ListTagsForResourceCommandOutput,\n} from \"./commands/ListTagsForResourceCommand\";\nimport {\n  LookupDeveloperIdentityCommandInput,\n  LookupDeveloperIdentityCommandOutput,\n} from \"./commands/LookupDeveloperIdentityCommand\";\nimport {\n  MergeDeveloperIdentitiesCommandInput,\n  MergeDeveloperIdentitiesCommandOutput,\n} from \"./commands/MergeDeveloperIdentitiesCommand\";\nimport {\n  SetIdentityPoolRolesCommandInput,\n  SetIdentityPoolRolesCommandOutput,\n} from \"./commands/SetIdentityPoolRolesCommand\";\nimport { TagResourceCommandInput, TagResourceCommandOutput } from \"./commands/TagResourceCommand\";\nimport {\n  UnlinkDeveloperIdentityCommandInput,\n  UnlinkDeveloperIdentityCommandOutput,\n} from \"./commands/UnlinkDeveloperIdentityCommand\";\nimport { UnlinkIdentityCommandInput, UnlinkIdentityCommandOutput } from \"./commands/UnlinkIdentityCommand\";\nimport { UntagResourceCommandInput, UntagResourceCommandOutput } from \"./commands/UntagResourceCommand\";\nimport { UpdateIdentityPoolCommandInput, UpdateIdentityPoolCommandOutput } from \"./commands/UpdateIdentityPoolCommand\";\nimport { ClientDefaultValues as __ClientDefaultValues } from \"./runtimeConfig\";\nimport {\n  EndpointsInputConfig,\n  EndpointsResolvedConfig,\n  RegionInputConfig,\n  RegionResolvedConfig,\n  resolveEndpointsConfig,\n  resolveRegionConfig,\n} from \"@aws-sdk/config-resolver\";\nimport { getContentLengthPlugin } from \"@aws-sdk/middleware-content-length\";\nimport {\n  HostHeaderInputConfig,\n  HostHeaderResolvedConfig,\n  getHostHeaderPlugin,\n  resolveHostHeaderConfig,\n} from \"@aws-sdk/middleware-host-header\";\nimport { getLoggerPlugin } from \"@aws-sdk/middleware-logger\";\nimport { RetryInputConfig, RetryResolvedConfig, getRetryPlugin, resolveRetryConfig } from \"@aws-sdk/middleware-retry\";\nimport { AwsAuthInputConfig, AwsAuthResolvedConfig, resolveAwsAuthConfig } from \"@aws-sdk/middleware-signing\";\nimport {\n  UserAgentInputConfig,\n  UserAgentResolvedConfig,\n  getUserAgentPlugin,\n  resolveUserAgentConfig,\n} from \"@aws-sdk/middleware-user-agent\";\nimport { HttpHandler as __HttpHandler } from \"@aws-sdk/protocol-http\";\nimport {\n  Client as __Client,\n  SmithyConfiguration as __SmithyConfiguration,\n  SmithyResolvedConfiguration as __SmithyResolvedConfiguration,\n} from \"@aws-sdk/smithy-client\";\nimport {\n  Provider,\n  RegionInfoProvider,\n  Credentials as __Credentials,\n  Decoder as __Decoder,\n  Encoder as __Encoder,\n  HashConstructor as __HashConstructor,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  Logger as __Logger,\n  Provider as __Provider,\n  StreamCollector as __StreamCollector,\n  UrlParser as __UrlParser,\n  UserAgent as __UserAgent,\n} from \"@aws-sdk/types\";\n\nexport type ServiceInputTypes =\n  | CreateIdentityPoolCommandInput\n  | DeleteIdentitiesCommandInput\n  | DeleteIdentityPoolCommandInput\n  | DescribeIdentityCommandInput\n  | DescribeIdentityPoolCommandInput\n  | GetCredentialsForIdentityCommandInput\n  | GetIdCommandInput\n  | GetIdentityPoolRolesCommandInput\n  | GetOpenIdTokenCommandInput\n  | GetOpenIdTokenForDeveloperIdentityCommandInput\n  | ListIdentitiesCommandInput\n  | ListIdentityPoolsCommandInput\n  | ListTagsForResourceCommandInput\n  | LookupDeveloperIdentityCommandInput\n  | MergeDeveloperIdentitiesCommandInput\n  | SetIdentityPoolRolesCommandInput\n  | TagResourceCommandInput\n  | UnlinkDeveloperIdentityCommandInput\n  | UnlinkIdentityCommandInput\n  | UntagResourceCommandInput\n  | UpdateIdentityPoolCommandInput;\n\nexport type ServiceOutputTypes =\n  | CreateIdentityPoolCommandOutput\n  | DeleteIdentitiesCommandOutput\n  | DeleteIdentityPoolCommandOutput\n  | DescribeIdentityCommandOutput\n  | DescribeIdentityPoolCommandOutput\n  | GetCredentialsForIdentityCommandOutput\n  | GetIdCommandOutput\n  | GetIdentityPoolRolesCommandOutput\n  | GetOpenIdTokenCommandOutput\n  | GetOpenIdTokenForDeveloperIdentityCommandOutput\n  | ListIdentitiesCommandOutput\n  | ListIdentityPoolsCommandOutput\n  | ListTagsForResourceCommandOutput\n  | LookupDeveloperIdentityCommandOutput\n  | MergeDeveloperIdentitiesCommandOutput\n  | SetIdentityPoolRolesCommandOutput\n  | TagResourceCommandOutput\n  | UnlinkDeveloperIdentityCommandOutput\n  | UnlinkIdentityCommandOutput\n  | UntagResourceCommandOutput\n  | UpdateIdentityPoolCommandOutput;\n\nexport interface ClientDefaults extends Partial<__SmithyResolvedConfiguration<__HttpHandlerOptions>> {\n  /**\n   * The HTTP handler to use. Fetch in browser and Https in Nodejs.\n   */\n  requestHandler?: __HttpHandler;\n\n  /**\n   * A constructor for a class implementing the @aws-sdk/types.Hash interface\n   * that computes the SHA-256 HMAC or checksum of a string or binary buffer.\n   */\n  sha256?: __HashConstructor;\n\n  /**\n   * The function that will be used to convert strings into HTTP endpoints.\n   */\n  urlParser?: __UrlParser;\n\n  /**\n   * A function that can calculate the length of a request body.\n   */\n  bodyLengthChecker?: (body: any) => number | undefined;\n\n  /**\n   * A function that converts a stream into an array of bytes.\n   */\n  streamCollector?: __StreamCollector;\n\n  /**\n   * The function that will be used to convert a base64-encoded string to a byte array\n   */\n  base64Decoder?: __Decoder;\n\n  /**\n   * The function that will be used to convert binary data to a base64-encoded string\n   */\n  base64Encoder?: __Encoder;\n\n  /**\n   * The function that will be used to convert a UTF8-encoded string to a byte array\n   */\n  utf8Decoder?: __Decoder;\n\n  /**\n   * The function that will be used to convert binary data to a UTF-8 encoded string\n   */\n  utf8Encoder?: __Encoder;\n\n  /**\n   * The runtime environment\n   */\n  runtime?: string;\n\n  /**\n   * Disable dyanamically changing the endpoint of the client based on the hostPrefix\n   * trait of an operation.\n   */\n  disableHostPrefix?: boolean;\n\n  /**\n   * Unique service identifier.\n   * @internal\n   */\n  serviceId?: string;\n\n  /**\n   * Default credentials provider; Not available in browser runtime\n   */\n  credentialDefaultProvider?: (input: any) => __Provider<__Credentials>;\n\n  /**\n   * The AWS region to which this client will send requests\n   */\n  region?: string | __Provider<string>;\n\n  /**\n   * Value for how many times a request will be made at most in case of retry.\n   */\n  maxAttempts?: number | __Provider<number>;\n\n  /**\n   * Optional logger for logging debug/info/warn/error.\n   */\n  logger?: __Logger;\n\n  /**\n   * Fetch related hostname, signing name or signing region with given region.\n   */\n  regionInfoProvider?: RegionInfoProvider;\n\n  /**\n   * The provider populating default tracking information to be sent with `user-agent`, `x-amz-user-agent` header\n   * @internal\n   */\n  defaultUserAgentProvider?: Provider<__UserAgent>;\n}\n\nexport type CognitoIdentityClientConfig = Partial<__SmithyConfiguration<__HttpHandlerOptions>> &\n  ClientDefaults &\n  RegionInputConfig &\n  EndpointsInputConfig &\n  AwsAuthInputConfig &\n  RetryInputConfig &\n  HostHeaderInputConfig &\n  UserAgentInputConfig;\n\nexport type CognitoIdentityClientResolvedConfig = __SmithyResolvedConfiguration<__HttpHandlerOptions> &\n  Required<ClientDefaults> &\n  RegionResolvedConfig &\n  EndpointsResolvedConfig &\n  AwsAuthResolvedConfig &\n  RetryResolvedConfig &\n  HostHeaderResolvedConfig &\n  UserAgentResolvedConfig;\n\n/**\n * <fullname>Amazon Cognito Federated Identities</fullname>\n *          <p>Amazon Cognito Federated Identities is a web service that delivers scoped temporary\n *          credentials to mobile devices and other untrusted environments. It uniquely identifies a\n *          device and supplies the user with a consistent identity over the lifetime of an\n *          application.</p>\n *          <p>Using Amazon Cognito Federated Identities, you can enable authentication with one or\n *          more third-party identity providers (Facebook, Google, or Login with Amazon) or an Amazon\n *          Cognito user pool, and you can also choose to support unauthenticated access from your app.\n *          Cognito delivers a unique identifier for each user and acts as an OpenID token provider\n *          trusted by AWS Security Token Service (STS) to access temporary, limited-privilege AWS\n *          credentials.</p>\n *          <p>For a description of the authentication flow from the Amazon Cognito Developer Guide\n *          see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/authentication-flow.html\">Authentication Flow</a>.</p>\n *          <p>For more information see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-identity.html\">Amazon Cognito Federated Identities</a>.</p>\n */\nexport class CognitoIdentityClient extends __Client<\n  __HttpHandlerOptions,\n  ServiceInputTypes,\n  ServiceOutputTypes,\n  CognitoIdentityClientResolvedConfig\n> {\n  readonly config: CognitoIdentityClientResolvedConfig;\n\n  constructor(configuration: CognitoIdentityClientConfig) {\n    let _config_0 = {\n      ...__ClientDefaultValues,\n      ...configuration,\n    };\n    let _config_1 = resolveRegionConfig(_config_0);\n    let _config_2 = resolveEndpointsConfig(_config_1);\n    let _config_3 = resolveAwsAuthConfig(_config_2);\n    let _config_4 = resolveRetryConfig(_config_3);\n    let _config_5 = resolveHostHeaderConfig(_config_4);\n    let _config_6 = resolveUserAgentConfig(_config_5);\n    super(_config_6);\n    this.config = _config_6;\n    this.middlewareStack.use(getRetryPlugin(this.config));\n    this.middlewareStack.use(getContentLengthPlugin(this.config));\n    this.middlewareStack.use(getHostHeaderPlugin(this.config));\n    this.middlewareStack.use(getLoggerPlugin(this.config));\n    this.middlewareStack.use(getUserAgentPlugin(this.config));\n  }\n\n  destroy(): void {\n    super.destroy();\n  }\n}\n","import { ConsoleLogger as Logger } from './Logger';\nimport { StorageHelper } from './StorageHelper';\nimport { makeQuerablePromise } from './JS';\nimport { FacebookOAuth, GoogleOAuth } from './OAuthHelper';\nimport { jitteredExponentialRetry } from './Util';\nimport { ICredentials } from './types';\nimport { getAmplifyUserAgent } from './Platform';\nimport { Amplify } from './Amplify';\nimport {\n\tfromCognitoIdentity,\n\tFromCognitoIdentityParameters,\n\tfromCognitoIdentityPool,\n\tFromCognitoIdentityPoolParameters,\n} from '@aws-sdk/credential-provider-cognito-identity';\nimport {\n\tCognitoIdentityClient,\n\tGetIdCommand,\n\tGetCredentialsForIdentityCommand,\n} from '@aws-sdk/client-cognito-identity';\nimport { CredentialProvider } from '@aws-sdk/types';\n\nconst logger = new Logger('Credentials');\n\nconst CREDENTIALS_TTL = 50 * 60 * 1000; // 50 min, can be modified on config if required in the future\n\nconst COGNITO_IDENTITY_KEY_PREFIX = 'CognitoIdentityId-';\n\nexport class CredentialsClass {\n\tprivate _config;\n\tprivate _credentials;\n\tprivate _credentials_source;\n\tprivate _gettingCredPromise = null;\n\tprivate _refreshHandlers = {};\n\tprivate _storage;\n\tprivate _storageSync;\n\tprivate _identityId;\n\tprivate _nextCredentialsRefresh: Number;\n\n\t// Allow `Auth` to be injected for SSR, but Auth isn't a required dependency for Credentials\n\tAuth = undefined;\n\n\tconstructor(config) {\n\t\tthis.configure(config);\n\t\tthis._refreshHandlers['google'] = GoogleOAuth.refreshGoogleToken;\n\t\tthis._refreshHandlers['facebook'] = FacebookOAuth.refreshFacebookToken;\n\t}\n\n\tpublic getModuleName() {\n\t\treturn 'Credentials';\n\t}\n\n\tpublic getCredSource() {\n\t\treturn this._credentials_source;\n\t}\n\n\tpublic configure(config) {\n\t\tif (!config) return this._config || {};\n\n\t\tthis._config = Object.assign({}, this._config, config);\n\t\tconst { refreshHandlers } = this._config;\n\t\t// If the developer has provided an object of refresh handlers,\n\t\t// then we can merge the provided handlers with the current handlers.\n\t\tif (refreshHandlers) {\n\t\t\tthis._refreshHandlers = {\n\t\t\t\t...this._refreshHandlers,\n\t\t\t\t...refreshHandlers,\n\t\t\t};\n\t\t}\n\n\t\tthis._storage = this._config.storage;\n\n\t\tif (!this._storage) {\n\t\t\tthis._storage = new StorageHelper().getStorage();\n\t\t}\n\n\t\tthis._storageSync = Promise.resolve();\n\t\tif (typeof this._storage['sync'] === 'function') {\n\t\t\tthis._storageSync = this._storage['sync']();\n\t\t}\n\n\t\treturn this._config;\n\t}\n\n\tpublic get() {\n\t\tlogger.debug('getting credentials');\n\t\treturn this._pickupCredentials();\n\t}\n\n\t// currently we only store the guest identity in local storage\n\tprivate _getCognitoIdentityIdStorageKey(identityPoolId: string) {\n\t\treturn `${COGNITO_IDENTITY_KEY_PREFIX}${identityPoolId}`;\n\t}\n\n\tprivate _pickupCredentials() {\n\t\tlogger.debug('picking up credentials');\n\t\tif (!this._gettingCredPromise || !this._gettingCredPromise.isPending()) {\n\t\t\tlogger.debug('getting new cred promise');\n\t\t\tthis._gettingCredPromise = makeQuerablePromise(this._keepAlive());\n\t\t} else {\n\t\t\tlogger.debug('getting old cred promise');\n\t\t}\n\t\treturn this._gettingCredPromise;\n\t}\n\n\tprivate async _keepAlive() {\n\t\tlogger.debug('checking if credentials exists and not expired');\n\t\tconst cred = this._credentials;\n\t\tif (cred && !this._isExpired(cred) && !this._isPastTTL()) {\n\t\t\tlogger.debug('credentials not changed and not expired, directly return');\n\t\t\treturn Promise.resolve(cred);\n\t\t}\n\n\t\tlogger.debug('need to get a new credential or refresh the existing one');\n\n\t\t// Some use-cases don't require Auth for signing in, but use Credentials for guest users (e.g. Analytics)\n\t\t// Prefer locally scoped `Auth`, but fallback to registered `Amplify.Auth` global otherwise.\n\t\tconst { Auth = Amplify.Auth } = this;\n\n\t\tif (!Auth || typeof Auth.currentUserCredentials !== 'function') {\n\t\t\treturn Promise.reject('No Auth module registered in Amplify');\n\t\t}\n\n\t\tif (!this._isExpired(cred) && this._isPastTTL()) {\n\t\t\tlogger.debug('ttl has passed but token is not yet expired');\n\t\t\ttry {\n\t\t\t\tconst user = await Auth.currentUserPoolUser();\n\t\t\t\tconst session = await Auth.currentSession();\n\t\t\t\tconst refreshToken = session.refreshToken;\n\t\t\t\tconst refreshRequest = new Promise((res, rej) => {\n\t\t\t\t\tuser.refreshSession(refreshToken, (err, data) => {\n\t\t\t\t\t\treturn err ? rej(err) : res(data);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\tawait refreshRequest; // note that rejections will be caught and handled in the catch block.\n\t\t\t} catch (err) {\n\t\t\t\t// should not throw because user might just be on guest access or is authenticated through federation\n\t\t\t\tlogger.debug('Error attempting to refreshing the session', err);\n\t\t\t}\n\t\t}\n\t\treturn Auth.currentUserCredentials();\n\t}\n\n\tpublic refreshFederatedToken(federatedInfo) {\n\t\tlogger.debug('Getting federated credentials');\n\t\tconst { provider, user, token, identity_id } = federatedInfo;\n\t\tlet { expires_at } = federatedInfo;\n\n\t\t// Make sure expires_at is in millis\n\t\texpires_at =\n\t\t\tnew Date(expires_at).getFullYear() === 1970\n\t\t\t\t? expires_at * 1000\n\t\t\t\t: expires_at;\n\n\t\tconst that = this;\n\t\tlogger.debug('checking if federated jwt token expired');\n\t\tif (expires_at > new Date().getTime()) {\n\t\t\t// if not expired\n\t\t\tlogger.debug('token not expired');\n\t\t\treturn this._setCredentialsFromFederation({\n\t\t\t\tprovider,\n\t\t\t\ttoken,\n\t\t\t\tuser,\n\t\t\t\tidentity_id,\n\t\t\t\texpires_at,\n\t\t\t});\n\t\t} else {\n\t\t\t// if refresh handler exists\n\t\t\tif (\n\t\t\t\tthat._refreshHandlers[provider] &&\n\t\t\t\ttypeof that._refreshHandlers[provider] === 'function'\n\t\t\t) {\n\t\t\t\tlogger.debug('getting refreshed jwt token from federation provider');\n\t\t\t\treturn this._providerRefreshWithRetry({\n\t\t\t\t\trefreshHandler: that._refreshHandlers[provider],\n\t\t\t\t\tprovider,\n\t\t\t\t\tuser,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tlogger.debug('no refresh handler for provider:', provider);\n\t\t\t\tthis.clear();\n\t\t\t\treturn Promise.reject('no refresh handler for provider');\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _providerRefreshWithRetry({ refreshHandler, provider, user }) {\n\t\tconst MAX_DELAY_MS = 10 * 1000;\n\t\t// refreshHandler will retry network errors, otherwise it will\n\t\t// return NonRetryableError to break out of jitteredExponentialRetry\n\t\treturn jitteredExponentialRetry(refreshHandler, [], MAX_DELAY_MS)\n\t\t\t.then(data => {\n\t\t\t\tlogger.debug('refresh federated token sucessfully', data);\n\t\t\t\treturn this._setCredentialsFromFederation({\n\t\t\t\t\tprovider,\n\t\t\t\t\ttoken: data.token,\n\t\t\t\t\tuser,\n\t\t\t\t\tidentity_id: data.identity_id,\n\t\t\t\t\texpires_at: data.expires_at,\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(e => {\n\t\t\t\tconst isNetworkError =\n\t\t\t\t\ttypeof e === 'string' &&\n\t\t\t\t\te.toLowerCase().lastIndexOf('network error', e.length) === 0;\n\n\t\t\t\tif (!isNetworkError) {\n\t\t\t\t\tthis.clear();\n\t\t\t\t}\n\n\t\t\t\tlogger.debug('refresh federated token failed', e);\n\t\t\t\treturn Promise.reject('refreshing federation token failed: ' + e);\n\t\t\t});\n\t}\n\n\tprivate _isExpired(credentials): boolean {\n\t\tif (!credentials) {\n\t\t\tlogger.debug('no credentials for expiration check');\n\t\t\treturn true;\n\t\t}\n\t\tlogger.debug('are these credentials expired?', credentials);\n\t\tconst ts = Date.now();\n\n\t\t/* returns date object.\n\t\t\thttps://github.com/aws/aws-sdk-js-v3/blob/v1.0.0-beta.1/packages/types/src/credentials.ts#L26\n\t\t*/\n\t\tconst { expiration } = credentials;\n\t\treturn expiration.getTime() <= ts;\n\t}\n\n\tprivate _isPastTTL(): boolean {\n\t\treturn this._nextCredentialsRefresh <= Date.now();\n\t}\n\n\tprivate async _setCredentialsForGuest() {\n\t\tlogger.debug('setting credentials for guest');\n\t\tconst { identityPoolId, region, mandatorySignIn } = this._config;\n\t\tif (mandatorySignIn) {\n\t\t\treturn Promise.reject(\n\t\t\t\t'cannot get guest credentials when mandatory signin enabled'\n\t\t\t);\n\t\t}\n\n\t\tif (!identityPoolId) {\n\t\t\tlogger.debug(\n\t\t\t\t'No Cognito Identity pool provided for unauthenticated access'\n\t\t\t);\n\t\t\treturn Promise.reject(\n\t\t\t\t'No Cognito Identity pool provided for unauthenticated access'\n\t\t\t);\n\t\t}\n\n\t\tif (!region) {\n\t\t\tlogger.debug('region is not configured for getting the credentials');\n\t\t\treturn Promise.reject(\n\t\t\t\t'region is not configured for getting the credentials'\n\t\t\t);\n\t\t}\n\n\t\tconst identityId = this._identityId = await this._getGuestIdentityId();\n\n\t\tconst cognitoClient = new CognitoIdentityClient({\n\t\t\tregion,\n\t\t\tcustomUserAgent: getAmplifyUserAgent(),\n\t\t});\n\n\t\tlet credentials = undefined;\n\t\tif (identityId) {\n\t\t\tconst cognitoIdentityParams: FromCognitoIdentityParameters = {\n\t\t\t\tidentityId,\n\t\t\t\tclient: cognitoClient,\n\t\t\t};\n\t\t\tcredentials = fromCognitoIdentity(cognitoIdentityParams)();\n\t\t} else {\n\t\t\t/*\n\t\t\tRetreiving identityId with GetIdCommand to mimic the behavior in the following code in aws-sdk-v3:\n\t\t\thttps://git.io/JeDxU\n\n\t\t\tNote: Retreive identityId from CredentialsProvider once aws-sdk-js v3 supports this.\n\t\t\t*/\n\t\t\tconst credentialsProvider: CredentialProvider = async () => {\n\t\t\t\tconst { IdentityId } = await cognitoClient.send(\n\t\t\t\t\tnew GetIdCommand({\n\t\t\t\t\t\tIdentityPoolId: identityPoolId,\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t\tthis._identityId = IdentityId;\n\t\t\t\tconst cognitoIdentityParams: FromCognitoIdentityParameters = {\n\t\t\t\t\tclient: cognitoClient,\n\t\t\t\t\tidentityId: IdentityId,\n\t\t\t\t};\n\n\t\t\t\tconst credentialsFromCognitoIdentity = fromCognitoIdentity(\n\t\t\t\t\tcognitoIdentityParams\n\t\t\t\t);\n\n\t\t\t\treturn credentialsFromCognitoIdentity();\n\t\t\t};\n\n\t\t\tcredentials = credentialsProvider().catch(async err => {\n\t\t\t\tthrow err;\n\t\t\t});\n\t\t}\n\n\t\treturn this._loadCredentials(credentials, 'guest', false, null)\n\t\t\t.then(res => {\n\t\t\t\treturn res;\n\t\t\t})\n\t\t\t.catch(async e => {\n\t\t\t\t// If identity id is deleted in the console, we make one attempt to recreate it\n\t\t\t\t// and remove existing id from cache.\n\t\t\t\tif (\n\t\t\t\t\te.name === 'ResourceNotFoundException' &&\n\t\t\t\t\te.message === `Identity '${identityId}' not found.`\n\t\t\t\t) {\n\t\t\t\t\tlogger.debug('Failed to load guest credentials');\n\t\t\t\t\tawait this._removeGuestIdentityId();\n\n\t\t\t\t\tconst credentialsProvider: CredentialProvider = async () => {\n\t\t\t\t\t\tconst { IdentityId } = await cognitoClient.send(\n\t\t\t\t\t\t\tnew GetIdCommand({\n\t\t\t\t\t\t\t\tIdentityPoolId: identityPoolId,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t);\n\t\t\t\t\t\tthis._identityId = IdentityId;\n\t\t\t\t\t\tconst cognitoIdentityParams: FromCognitoIdentityParameters = {\n\t\t\t\t\t\t\tclient: cognitoClient,\n\t\t\t\t\t\t\tidentityId: IdentityId,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tconst credentialsFromCognitoIdentity = fromCognitoIdentity(\n\t\t\t\t\t\t\tcognitoIdentityParams\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\treturn credentialsFromCognitoIdentity();\n\t\t\t\t\t};\n\n\t\t\t\t\tcredentials = credentialsProvider().catch(async err => {\n\t\t\t\t\t\tthrow err;\n\t\t\t\t\t});\n\n\t\t\t\t\treturn this._loadCredentials(credentials, 'guest', false, null);\n\t\t\t\t} else {\n\t\t\t\t\treturn e;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate _setCredentialsFromFederation(params) {\n\t\tconst { provider, token, identity_id } = params;\n\t\tconst domains = {\n\t\t\tgoogle: 'accounts.google.com',\n\t\t\tfacebook: 'graph.facebook.com',\n\t\t\tamazon: 'www.amazon.com',\n\t\t\tdeveloper: 'cognito-identity.amazonaws.com',\n\t\t};\n\n\t\t// Use custom provider url instead of the predefined ones\n\t\tconst domain = domains[provider] || provider;\n\t\tif (!domain) {\n\t\t\treturn Promise.reject('You must specify a federated provider');\n\t\t}\n\n\t\tconst logins = {};\n\t\tlogins[domain] = token;\n\n\t\tconst { identityPoolId, region } = this._config;\n\t\tif (!identityPoolId) {\n\t\t\tlogger.debug('No Cognito Federated Identity pool provided');\n\t\t\treturn Promise.reject('No Cognito Federated Identity pool provided');\n\t\t}\n\t\tif (!region) {\n\t\t\tlogger.debug('region is not configured for getting the credentials');\n\t\t\treturn Promise.reject(\n\t\t\t\t'region is not configured for getting the credentials'\n\t\t\t);\n\t\t}\n\n\t\tconst cognitoClient = new CognitoIdentityClient({\n\t\t\tregion,\n\t\t\tcustomUserAgent: getAmplifyUserAgent(),\n\t\t});\n\n\t\tlet credentials = undefined;\n\t\tif (identity_id) {\n\t\t\tconst cognitoIdentityParams: FromCognitoIdentityParameters = {\n\t\t\t\tidentityId: identity_id,\n\t\t\t\tlogins,\n\t\t\t\tclient: cognitoClient,\n\t\t\t};\n\t\t\tcredentials = fromCognitoIdentity(cognitoIdentityParams)();\n\t\t} else {\n\t\t\tconst cognitoIdentityParams: FromCognitoIdentityPoolParameters = {\n\t\t\t\tlogins,\n\t\t\t\tidentityPoolId,\n\t\t\t\tclient: cognitoClient,\n\t\t\t};\n\t\t\tcredentials = fromCognitoIdentityPool(cognitoIdentityParams)();\n\t\t}\n\t\treturn this._loadCredentials(credentials, 'federated', true, params);\n\t}\n\n\tprivate _setCredentialsFromSession(session): Promise<ICredentials> {\n\t\tlogger.debug('set credentials from session');\n\t\tconst idToken = session.getIdToken().getJwtToken();\n\t\tconst { region, userPoolId, identityPoolId } = this._config;\n\t\tif (!identityPoolId) {\n\t\t\tlogger.debug('No Cognito Federated Identity pool provided');\n\t\t\treturn Promise.reject('No Cognito Federated Identity pool provided');\n\t\t}\n\t\tif (!region) {\n\t\t\tlogger.debug('region is not configured for getting the credentials');\n\t\t\treturn Promise.reject(\n\t\t\t\t'region is not configured for getting the credentials'\n\t\t\t);\n\t\t}\n\t\tconst key = 'cognito-idp.' + region + '.amazonaws.com/' + userPoolId;\n\t\tconst logins = {};\n\t\tlogins[key] = idToken;\n\n\t\tconst cognitoClient = new CognitoIdentityClient({\n\t\t\tregion,\n\t\t\tcustomUserAgent: getAmplifyUserAgent(),\n\t\t});\n\n\t\t/* \n\t\t\tRetreiving identityId with GetIdCommand to mimic the behavior in the following code in aws-sdk-v3:\n\t\t\thttps://git.io/JeDxU\n\n\t\t\tNote: Retreive identityId from CredentialsProvider once aws-sdk-js v3 supports this.\n\t\t*/\n\t\tconst credentialsProvider: CredentialProvider = async () => {\n\t\t\t// try to fetch the local stored guest identity, if found, we will associate it with the logins\n\t\t\tconst guestIdentityId = await this._getGuestIdentityId();\n\n\t\t\tlet generatedOrRetrievedIdentityId;\n\t\t\tif (!guestIdentityId) {\n\t\t\t\t// for a first-time user, this will return a brand new identity\n\t\t\t\t// for a returning user, this will retrieve the previous identity assocaited with the logins\n\t\t\t\tconst { IdentityId } = await cognitoClient.send(\n\t\t\t\t\tnew GetIdCommand({\n\t\t\t\t\t\tIdentityPoolId: identityPoolId,\n\t\t\t\t\t\tLogins: logins,\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t\tgeneratedOrRetrievedIdentityId = IdentityId;\n\t\t\t}\n\n\t\t\tconst {\n\t\t\t\tCredentials: {\n\t\t\t\t\tAccessKeyId,\n\t\t\t\t\tExpiration,\n\t\t\t\t\tSecretKey,\n\t\t\t\t\tSessionToken,\n\t\t\t\t},\n\t\t\t\t// single source of truth for the primary identity associated with the logins\n\t\t\t\t// only if a guest identity is used for a first-time user, that guest identity will become its primary identity\n\t\t\t\tIdentityId: primaryIdentityId,\n\t\t\t} = await cognitoClient.send(\n\t\t\t\tnew GetCredentialsForIdentityCommand({\n\t\t\t\t  IdentityId: guestIdentityId || generatedOrRetrievedIdentityId,\n\t\t\t\t  Logins: logins,\n\t\t\t\t})\n\t\t\t);\n\n\t\t\tthis._identityId = primaryIdentityId;\n\t\t\tif (guestIdentityId) {\n\t\t\t\t// if guestIdentity is found and used by GetCredentialsForIdentity\n\t\t\t\t// it will be linked to the logins provided, and disqualified as an unauth identity\n\t\t\t\tlogger.debug(`The guest identity ${guestIdentityId} has been successfully linked to the logins`);\n\t\t\t\tif (guestIdentityId === primaryIdentityId) {\n\t\t\t\t\tlogger.debug(`The guest identity ${guestIdentityId} has become the primary identity`);\n\t\t\t\t}\n\t\t\t\t// remove it from local storage to avoid being used as a guest Identity by _setCredentialsForGuest\n\t\t\t\tawait this._removeGuestIdentityId();\n\t\t\t}\n\n\t\t\t// https://github.com/aws/aws-sdk-js-v3/blob/main/packages/credential-provider-cognito-identity/src/fromCognitoIdentity.ts#L40\n\t\t\treturn {\n\t\t\t\taccessKeyId: AccessKeyId,\n\t\t\t\tsecretAccessKey: SecretKey,\n\t\t\t\tsessionToken: SessionToken,\n\t\t\t\texpiration: Expiration,\n\t\t\t\tidentityId: primaryIdentityId,\n\t\t\t  };\n\t\t};\n\n\t\tconst credentials = credentialsProvider().catch(async err => {\n\t\t\tthrow err;\n\t\t});\n\n\t\treturn this._loadCredentials(credentials, 'userPool', true, null);\n\t}\n\n\tprivate _loadCredentials(\n\t\tcredentials,\n\t\tsource,\n\t\tauthenticated,\n\t\tinfo\n\t): Promise<ICredentials> {\n\t\tconst that = this;\n\t\treturn new Promise((res, rej) => {\n\t\t\tcredentials\n\t\t\t\t.then(async credentials => {\n\t\t\t\t\tlogger.debug('Load credentials successfully', credentials);\n\t\t\t\t\tif (this._identityId && !credentials.identityId) {\n\t\t\t\t\t\tcredentials['identityId'] = this._identityId;\n\t\t\t\t\t}\n\n\t\t\t\t\tthat._credentials = credentials;\n\t\t\t\t\tthat._credentials.authenticated = authenticated;\n\t\t\t\t\tthat._credentials_source = source;\n\t\t\t\t\tthat._nextCredentialsRefresh = new Date().getTime() + CREDENTIALS_TTL;\n\t\t\t\t\tif (source === 'federated') {\n\t\t\t\t\t\tconst user = Object.assign(\n\t\t\t\t\t\t\t{ id: this._credentials.identityId },\n\t\t\t\t\t\t\tinfo.user\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst { provider, token, expires_at, identity_id } = info;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tthis._storage.setItem(\n\t\t\t\t\t\t\t\t'aws-amplify-federatedInfo',\n\t\t\t\t\t\t\t\tJSON.stringify({\n\t\t\t\t\t\t\t\t\tprovider,\n\t\t\t\t\t\t\t\t\ttoken,\n\t\t\t\t\t\t\t\t\tuser,\n\t\t\t\t\t\t\t\t\texpires_at,\n\t\t\t\t\t\t\t\t\tidentity_id,\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tlogger.debug('Failed to put federated info into auth storage', e);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (source === 'guest') {\n\t\t\t\t\t\tawait this._setGuestIdentityId(credentials.identityId);\n\t\t\t\t\t}\n\t\t\t\t\tres(that._credentials);\n\t\t\t\t\treturn;\n\t\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tlogger.debug('Failed to load credentials', credentials);\n\t\t\t\t\t\tlogger.debug('Error loading credentials', err);\n\t\t\t\t\t\trej(err);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t});\n\t}\n\n\tpublic set(params, source): Promise<ICredentials> {\n\t\tif (source === 'session') {\n\t\t\treturn this._setCredentialsFromSession(params);\n\t\t} else if (source === 'federation') {\n\t\t\treturn this._setCredentialsFromFederation(params);\n\t\t} else if (source === 'guest') {\n\t\t\treturn this._setCredentialsForGuest();\n\t\t} else {\n\t\t\tlogger.debug('no source specified for setting credentials');\n\t\t\treturn Promise.reject('invalid source');\n\t\t}\n\t}\n\n\tpublic async clear() {\n\t\tthis._credentials = null;\n\t\tthis._credentials_source = null;\n\t\tlogger.debug('removing aws-amplify-federatedInfo from storage');\n\t\tthis._storage.removeItem('aws-amplify-federatedInfo');\n\t}\n\n\t/* operations on local stored guest identity */\n\tprivate async _getGuestIdentityId(): Promise<string> {\n\t\tconst { identityPoolId } = this._config;\n\t\ttry {\n\t\t\tawait this._storageSync;\n\t\t\treturn this._storage.getItem(\n\t\t\t\tthis._getCognitoIdentityIdStorageKey(identityPoolId)\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tlogger.debug('Failed to get the cached guest identityId', e);\n\t\t}\n\t}\n\n\tprivate async _setGuestIdentityId(identityId: string) {\n\t\tconst { identityPoolId } = this._config;\n\t\ttry {\n\t\t\tawait this._storageSync;\n\t\t\tthis._storage.setItem(\n\t\t\t\tthis._getCognitoIdentityIdStorageKey(identityPoolId),\n\t\t\t\tidentityId,\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tlogger.debug('Failed to cache guest identityId', e);\n\t\t}\n\t}\n\n\tprivate async _removeGuestIdentityId() {\n\t\tconst { identityPoolId } = this._config;\n\t\tlogger.debug(\n\t\t\t`removing ${this._getCognitoIdentityIdStorageKey(\n\t\t\t\tidentityPoolId\n\t\t\t)} from storage`\n\t\t);\n\t\tthis._storage.removeItem(\n\t\t\tthis._getCognitoIdentityIdStorageKey(identityPoolId)\n\t\t);\n\t}\n\n\t/**\n\t * Compact version of credentials\n\t * @param {Object} credentials\n\t * @return {Object} - Credentials\n\t */\n\tpublic shear(credentials) {\n\t\treturn {\n\t\t\taccessKeyId: credentials.accessKeyId,\n\t\t\tsessionToken: credentials.sessionToken,\n\t\t\tsecretAccessKey: credentials.secretAccessKey,\n\t\t\tidentityId: credentials.identityId,\n\t\t\tauthenticated: credentials.authenticated,\n\t\t};\n\t}\n}\n\nexport const Credentials = new CredentialsClass(null);\n\nAmplify.register(Credentials);\n\n/**\n * @deprecated use named import\n */\nexport default Credentials;\n","import { AmplifyConfig } from './types';\nimport { ConsoleLogger as Logger } from './Logger';\n\nconst logger = new Logger('Parser');\n\nexport const parseMobileHubConfig = (config): AmplifyConfig => {\n\tconst amplifyConfig: AmplifyConfig = {};\n\t// Analytics\n\tif (config['aws_mobile_analytics_app_id']) {\n\t\tconst Analytics = {\n\t\t\tAWSPinpoint: {\n\t\t\t\tappId: config['aws_mobile_analytics_app_id'],\n\t\t\t\tregion: config['aws_mobile_analytics_app_region'],\n\t\t\t},\n\t\t};\n\t\tamplifyConfig.Analytics = Analytics;\n\t}\n\n\t// Auth\n\tif (config['aws_cognito_identity_pool_id'] || config['aws_user_pools_id']) {\n\t\tamplifyConfig.Auth = {\n\t\t\tuserPoolId: config['aws_user_pools_id'],\n\t\t\tuserPoolWebClientId: config['aws_user_pools_web_client_id'],\n\t\t\tregion: config['aws_cognito_region'],\n\t\t\tidentityPoolId: config['aws_cognito_identity_pool_id'],\n\t\t\tidentityPoolRegion: config['aws_cognito_region'],\n\t\t\tmandatorySignIn: config['aws_mandatory_sign_in'] === 'enable',\n\t\t};\n\t}\n\n\t// Storage\n\tlet storageConfig;\n\tif (config['aws_user_files_s3_bucket']) {\n\t\tstorageConfig = {\n\t\t\tAWSS3: {\n\t\t\t\tbucket: config['aws_user_files_s3_bucket'],\n\t\t\t\tregion: config['aws_user_files_s3_bucket_region'],\n\t\t\t\tdangerouslyConnectToHttpEndpointForTesting:\n\t\t\t\t\tconfig[\n\t\t\t\t\t\t'aws_user_files_s3_dangerously_connect_to_http_endpoint_for_testing'\n\t\t\t\t\t],\n\t\t\t},\n\t\t};\n\t} else {\n\t\tstorageConfig = config ? config.Storage || config : {};\n\t}\n\n\t// Logging\n\tif (config['Logging']) {\n\t\tamplifyConfig.Logging = {\n\t\t\t...config['Logging'],\n\t\t\tregion: config['aws_project_region'],\n\t\t};\n\t}\n\n\t// Geo\n\tif (config['geo']) {\n\t\tamplifyConfig.Geo = Object.assign({}, config.geo);\n\t\tif (config.geo['amazon_location_service']) {\n\t\t\tamplifyConfig.Geo = {\n\t\t\t\tAmazonLocationService: config.geo['amazon_location_service'],\n\t\t\t};\n\t\t}\n\t}\n\n\tamplifyConfig.Analytics = Object.assign(\n\t\t{},\n\t\tamplifyConfig.Analytics,\n\t\tconfig.Analytics\n\t);\n\tamplifyConfig.Auth = Object.assign({}, amplifyConfig.Auth, config.Auth);\n\tamplifyConfig.Storage = Object.assign({}, storageConfig);\n\tamplifyConfig.Logging = Object.assign(\n\t\t{},\n\t\tamplifyConfig.Logging,\n\t\tconfig.Logging\n\t);\n\tlogger.debug('parse config', config, 'to amplifyconfig', amplifyConfig);\n\treturn amplifyConfig;\n};\n\n/**\n * @deprecated use per-function export\n */\nexport class Parser {\n\tstatic parseMobilehubConfig = parseMobileHubConfig;\n}\n\n/**\n * @deprecated use per-function export\n */\nexport default Parser;\n","import * as cookie from 'cookie';\r\nexport function hasDocumentCookie() {\r\n    // Can we get/set cookies on document.cookie?\r\n    return typeof document === 'object' && typeof document.cookie === 'string';\r\n}\r\nexport function cleanCookies() {\r\n    document.cookie.split(';').forEach(function (c) {\r\n        document.cookie = c\r\n            .replace(/^ +/, '')\r\n            .replace(/=.*/, '=;expires=' + new Date().toUTCString() + ';path=/');\r\n    });\r\n}\r\nexport function parseCookies(cookies, options) {\r\n    if (typeof cookies === 'string') {\r\n        return cookie.parse(cookies, options);\r\n    }\r\n    else if (typeof cookies === 'object' && cookies !== null) {\r\n        return cookies;\r\n    }\r\n    else {\r\n        return {};\r\n    }\r\n}\r\nexport function isParsingCookie(value, doNotParse) {\r\n    if (typeof doNotParse === 'undefined') {\r\n        // We guess if the cookie start with { or [, it has been serialized\r\n        doNotParse =\r\n            !value || (value[0] !== '{' && value[0] !== '[' && value[0] !== '\"');\r\n    }\r\n    return !doNotParse;\r\n}\r\nexport function readCookie(value, options) {\r\n    if (options === void 0) { options = {}; }\r\n    var cleanValue = cleanupCookieValue(value);\r\n    if (isParsingCookie(cleanValue, options.doNotParse)) {\r\n        try {\r\n            return JSON.parse(cleanValue);\r\n        }\r\n        catch (e) {\r\n            // At least we tried\r\n        }\r\n    }\r\n    // Ignore clean value if we failed the deserialization\r\n    // It is not relevant anymore to trim those values\r\n    return value;\r\n}\r\nfunction cleanupCookieValue(value) {\r\n    // express prepend j: before serializing a cookie\r\n    if (value && value[0] === 'j' && value[1] === ':') {\r\n        return value.substr(2);\r\n    }\r\n    return value;\r\n}\r\n","var __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nimport * as cookie from 'cookie';\r\nimport { hasDocumentCookie, parseCookies, readCookie } from './utils';\r\nvar Cookies = /** @class */ (function () {\r\n    function Cookies(cookies, options) {\r\n        var _this = this;\r\n        this.changeListeners = [];\r\n        this.HAS_DOCUMENT_COOKIE = false;\r\n        this.cookies = parseCookies(cookies, options);\r\n        new Promise(function () {\r\n            _this.HAS_DOCUMENT_COOKIE = hasDocumentCookie();\r\n        }).catch(function () { });\r\n    }\r\n    Cookies.prototype._updateBrowserValues = function (parseOptions) {\r\n        if (!this.HAS_DOCUMENT_COOKIE) {\r\n            return;\r\n        }\r\n        this.cookies = cookie.parse(document.cookie, parseOptions);\r\n    };\r\n    Cookies.prototype._emitChange = function (params) {\r\n        for (var i = 0; i < this.changeListeners.length; ++i) {\r\n            this.changeListeners[i](params);\r\n        }\r\n    };\r\n    Cookies.prototype.get = function (name, options, parseOptions) {\r\n        if (options === void 0) { options = {}; }\r\n        this._updateBrowserValues(parseOptions);\r\n        return readCookie(this.cookies[name], options);\r\n    };\r\n    Cookies.prototype.getAll = function (options, parseOptions) {\r\n        if (options === void 0) { options = {}; }\r\n        this._updateBrowserValues(parseOptions);\r\n        var result = {};\r\n        for (var name_1 in this.cookies) {\r\n            result[name_1] = readCookie(this.cookies[name_1], options);\r\n        }\r\n        return result;\r\n    };\r\n    Cookies.prototype.set = function (name, value, options) {\r\n        var _a;\r\n        if (typeof value === 'object') {\r\n            value = JSON.stringify(value);\r\n        }\r\n        this.cookies = __assign(__assign({}, this.cookies), (_a = {}, _a[name] = value, _a));\r\n        if (this.HAS_DOCUMENT_COOKIE) {\r\n            document.cookie = cookie.serialize(name, value, options);\r\n        }\r\n        this._emitChange({ name: name, value: value, options: options });\r\n    };\r\n    Cookies.prototype.remove = function (name, options) {\r\n        var finalOptions = (options = __assign(__assign({}, options), { expires: new Date(1970, 1, 1, 0, 0, 1), maxAge: 0 }));\r\n        this.cookies = __assign({}, this.cookies);\r\n        delete this.cookies[name];\r\n        if (this.HAS_DOCUMENT_COOKIE) {\r\n            document.cookie = cookie.serialize(name, '', finalOptions);\r\n        }\r\n        this._emitChange({ name: name, value: undefined, options: options });\r\n    };\r\n    Cookies.prototype.addChangeListener = function (callback) {\r\n        this.changeListeners.push(callback);\r\n    };\r\n    Cookies.prototype.removeChangeListener = function (callback) {\r\n        var idx = this.changeListeners.indexOf(callback);\r\n        if (idx >= 0) {\r\n            this.changeListeners.splice(idx, 1);\r\n        }\r\n    };\r\n    return Cookies;\r\n}());\r\nexport default Cookies;\r\n","import Cookies from './Cookies';\r\nexport default Cookies;\r\n","import Cookies from 'universal-cookie';\nimport { browserOrNode } from '../JS';\n\ntype Store = Record<string, string>;\n\nconst { isBrowser } = browserOrNode();\n\n// Avoid using @types/next because @aws-amplify/ui-angular's version of TypeScript is too old to support it\ntype Context = { req?: any };\n\nexport class UniversalStorage implements Storage {\n\tcookies = new Cookies();\n\tstore: Store = isBrowser ? window.localStorage : Object.create(null);\n\n\tconstructor(context: Context = {}) {\n\t\tthis.cookies = context.req\n\t\t\t? new Cookies(context.req.headers.cookie)\n\t\t\t: new Cookies();\n\n\t\tObject.assign(this.store, this.cookies.getAll());\n\t}\n\n\tget length() {\n\t\treturn Object.entries(this.store).length;\n\t}\n\n\tclear() {\n\t\tArray.from(new Array(this.length))\n\t\t\t.map((_, i) => this.key(i))\n\t\t\t.forEach(key => this.removeItem(key));\n\t}\n\n\tgetItem(key: keyof Store) {\n\t\treturn this.getLocalItem(key);\n\t}\n\n\tprotected getLocalItem(key: keyof Store) {\n\t\treturn Object.prototype.hasOwnProperty.call(this.store, key)\n\t\t\t? this.store[key]\n\t\t\t: null;\n\t}\n\n\tprotected getUniversalItem(key: keyof Store) {\n\t\treturn this.cookies.get(key);\n\t}\n\n\tkey(index: number) {\n\t\treturn Object.keys(this.store)[index];\n\t}\n\n\tremoveItem(key: string) {\n\t\tthis.removeLocalItem(key);\n\t\tthis.removeUniversalItem(key);\n\t}\n\n\tprotected removeLocalItem(key: keyof Store) {\n\t\tdelete this.store[key];\n\t}\n\n\tprotected removeUniversalItem(key: keyof Store) {\n\t\tthis.cookies.remove(key, {\n\t\t\tpath: '/',\n\t\t});\n\t}\n\n\tsetItem(key: keyof Store, value: string) {\n\t\tthis.setLocalItem(key, value);\n\n\t\t// keys take the shape:\n\t\t//  1. `${ProviderPrefix}.${userPoolClientId}.${username}.${tokenType}\n\t\t//  2. `${ProviderPrefix}.${userPoolClientId}.LastAuthUser\n\t\tconst tokenType = key.split('.').pop();\n\n\t\tswitch (tokenType) {\n\t\t\t// LastAuthUser is needed for computing other key names\n\t\t\tcase 'LastAuthUser':\n\n\t\t\t// accessToken is required for CognitoUserSession\n\t\t\tcase 'accessToken':\n\n\t\t\t// refreshToken originates on the client, but SSR pages won't fail when this expires\n\t\t\t// Note: the new `accessToken` will also be refreshed on the client (since Amplify doesn't set server-side cookies)\n\t\t\tcase 'refreshToken':\n\n\t\t\t// Required for CognitoUserSession\n\t\t\tcase 'idToken':\n\t\t\t\tisBrowser\n\t\t\t\t\t? this.setUniversalItem(key, value)\n\t\t\t\t\t: this.setLocalItem(key, value);\n\n\t\t\t// userData is used when `Auth.currentAuthenticatedUser({ bypassCache: false })`.\n\t\t\t// Can be persisted to speed up calls to `Auth.currentAuthenticatedUser()`\n\t\t\t// case 'userData':\n\n\t\t\t// Ignoring clockDrift on the server for now, but needs testing\n\t\t\t// case 'clockDrift':\n\t\t}\n\t}\n\n\tprotected setLocalItem(key: keyof Store, value: string) {\n\t\tthis.store[key] = value;\n\t}\n\n\tprotected setUniversalItem(key: keyof Store, value: string) {\n\t\tthis.cookies.set(key, value, {\n\t\t\tpath: '/',\n\t\t\t// `httpOnly` cannot be set via JavaScript: https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#JavaScript_access_using_Document.cookie\n\t\t\tsameSite: true,\n\t\t\t// Allow unsecure requests to http://localhost:3000/ when in development.\n\t\t\tsecure: window.location.hostname === 'localhost' ? false : true,\n\t\t});\n\t}\n}\n","/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @class */\nvar AuthenticationDetails = /*#__PURE__*/function () {\n  /**\n   * Constructs a new AuthenticationDetails object\n   * @param {object=} data Creation options.\n   * @param {string} data.Username User being authenticated.\n   * @param {string} data.Password Plain-text password to authenticate with.\n   * @param {(AttributeArg[])?} data.ValidationData Application extra metadata.\n   * @param {(AttributeArg[])?} data.AuthParamaters Authentication paramaters for custom auth.\n   */\n  function AuthenticationDetails(data) {\n    var _ref = data || {},\n        ValidationData = _ref.ValidationData,\n        Username = _ref.Username,\n        Password = _ref.Password,\n        AuthParameters = _ref.AuthParameters,\n        ClientMetadata = _ref.ClientMetadata;\n\n    this.validationData = ValidationData || {};\n    this.authParameters = AuthParameters || {};\n    this.clientMetadata = ClientMetadata || {};\n    this.username = Username;\n    this.password = Password;\n  }\n  /**\n   * @returns {string} the record's username\n   */\n\n\n  var _proto = AuthenticationDetails.prototype;\n\n  _proto.getUsername = function getUsername() {\n    return this.username;\n  }\n  /**\n   * @returns {string} the record's password\n   */\n  ;\n\n  _proto.getPassword = function getPassword() {\n    return this.password;\n  }\n  /**\n   * @returns {Array} the record's validationData\n   */\n  ;\n\n  _proto.getValidationData = function getValidationData() {\n    return this.validationData;\n  }\n  /**\n   * @returns {Array} the record's authParameters\n   */\n  ;\n\n  _proto.getAuthParameters = function getAuthParameters() {\n    return this.authParameters;\n  }\n  /**\n   * @returns {ClientMetadata} the clientMetadata for a Lambda trigger\n   */\n  ;\n\n  _proto.getClientMetadata = function getClientMetadata() {\n    return this.clientMetadata;\n  };\n\n  return AuthenticationDetails;\n}();\n\nexport { AuthenticationDetails as default };","var crypto; // Native crypto from window (Browser)\n\nif (typeof window !== 'undefined' && window.crypto) {\n  crypto = window.crypto;\n} // Native (experimental IE 11) crypto from window (Browser)\n\n\nif (!crypto && typeof window !== 'undefined' && window.msCrypto) {\n  crypto = window.msCrypto;\n}\n/*\n * Cryptographically secure pseudorandom number generator\n * As Math.random() is cryptographically not safe to use\n */\n\n\nexport default function cryptoSecureRandomInt() {\n  if (crypto) {\n    // Use getRandomValues method (Browser)\n    if (typeof crypto.getRandomValues === 'function') {\n      try {\n        return crypto.getRandomValues(new Uint32Array(1))[0];\n      } catch (err) {}\n    } // Use randomBytes method (NodeJS)\n\n\n    if (typeof crypto.randomBytes === 'function') {\n      try {\n        return crypto.randomBytes(4).readInt32LE();\n      } catch (err) {}\n    }\n  }\n\n  throw new Error('Native crypto module could not be used to get secure random number.');\n}","import cryptoSecureRandomInt from './cryptoSecureRandomInt';\n/**\n * Hex encoding strategy.\n * Converts a word array to a hex string.\n * @param {WordArray} wordArray The word array.\n * @return {string} The hex string.\n * @static\n */\n\nfunction hexStringify(wordArray) {\n  // Shortcuts\n  var words = wordArray.words;\n  var sigBytes = wordArray.sigBytes; // Convert\n\n  var hexChars = [];\n\n  for (var i = 0; i < sigBytes; i++) {\n    var bite = words[i >>> 2] >>> 24 - i % 4 * 8 & 0xff;\n    hexChars.push((bite >>> 4).toString(16));\n    hexChars.push((bite & 0x0f).toString(16));\n  }\n\n  return hexChars.join('');\n}\n\nvar WordArray = /*#__PURE__*/function () {\n  function WordArray(words, sigBytes) {\n    words = this.words = words || [];\n\n    if (sigBytes != undefined) {\n      this.sigBytes = sigBytes;\n    } else {\n      this.sigBytes = words.length * 4;\n    }\n  }\n\n  var _proto = WordArray.prototype;\n\n  _proto.random = function random(nBytes) {\n    var words = [];\n\n    for (var i = 0; i < nBytes; i += 4) {\n      words.push(cryptoSecureRandomInt());\n    }\n\n    return new WordArray(words, nBytes);\n  };\n\n  _proto.toString = function toString() {\n    return hexStringify(this);\n  };\n\n  return WordArray;\n}();\n\nexport { WordArray as default };","// A small implementation of BigInteger based on http://www-cs-students.stanford.edu/~tjw/jsbn/\n//\n// All public methods have been removed except the following:\n//   new BigInteger(a, b) (only radix 2, 4, 8, 16 and 32 supported)\n//   toString (only radix 2, 4, 8, 16 and 32 supported)\n//   negate\n//   abs\n//   compareTo\n//   bitLength\n//   mod\n//   equals\n//   add\n//   subtract\n//   multiply\n//   divide\n//   modPow\nexport default BigInteger;\n/*\n * Copyright (c) 2003-2005  Tom Wu\n * All Rights Reserved.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY\n * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n *\n * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,\n * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER\n * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF\n * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT\n * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n *\n * In addition, the following condition applies:\n *\n * All redistributions must retain an intact copy of this copyright notice\n * and disclaimer.\n */\n// (public) Constructor\n\nfunction BigInteger(a, b) {\n  if (a != null) this.fromString(a, b);\n} // return new, unset BigInteger\n\n\nfunction nbi() {\n  return new BigInteger(null);\n} // Bits per digit\n\n\nvar dbits; // JavaScript engine analysis\n\nvar canary = 0xdeadbeefcafe;\nvar j_lm = (canary & 0xffffff) == 0xefcafe; // am: Compute w_j += (x*this_i), propagate carries,\n// c is initial carry, returns final carry.\n// c < 3*dvalue, x < 2*dvalue, this_i < dvalue\n// We need to select the fastest one that works in this environment.\n// am1: use a single mult and divide to get the high bits,\n// max digit bits should be 26 because\n// max internal value = 2*dvalue^2-2*dvalue (< 2^53)\n\nfunction am1(i, x, w, j, c, n) {\n  while (--n >= 0) {\n    var v = x * this[i++] + w[j] + c;\n    c = Math.floor(v / 0x4000000);\n    w[j++] = v & 0x3ffffff;\n  }\n\n  return c;\n} // am2 avoids a big mult-and-extract completely.\n// Max digit bits should be <= 30 because we do bitwise ops\n// on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)\n\n\nfunction am2(i, x, w, j, c, n) {\n  var xl = x & 0x7fff,\n      xh = x >> 15;\n\n  while (--n >= 0) {\n    var l = this[i] & 0x7fff;\n    var h = this[i++] >> 15;\n    var m = xh * l + h * xl;\n    l = xl * l + ((m & 0x7fff) << 15) + w[j] + (c & 0x3fffffff);\n    c = (l >>> 30) + (m >>> 15) + xh * h + (c >>> 30);\n    w[j++] = l & 0x3fffffff;\n  }\n\n  return c;\n} // Alternately, set max digit bits to 28 since some\n// browsers slow down when dealing with 32-bit numbers.\n\n\nfunction am3(i, x, w, j, c, n) {\n  var xl = x & 0x3fff,\n      xh = x >> 14;\n\n  while (--n >= 0) {\n    var l = this[i] & 0x3fff;\n    var h = this[i++] >> 14;\n    var m = xh * l + h * xl;\n    l = xl * l + ((m & 0x3fff) << 14) + w[j] + c;\n    c = (l >> 28) + (m >> 14) + xh * h;\n    w[j++] = l & 0xfffffff;\n  }\n\n  return c;\n}\n\nvar inBrowser = typeof navigator !== 'undefined';\n\nif (inBrowser && j_lm && navigator.appName == 'Microsoft Internet Explorer') {\n  BigInteger.prototype.am = am2;\n  dbits = 30;\n} else if (inBrowser && j_lm && navigator.appName != 'Netscape') {\n  BigInteger.prototype.am = am1;\n  dbits = 26;\n} else {\n  // Mozilla/Netscape seems to prefer am3\n  BigInteger.prototype.am = am3;\n  dbits = 28;\n}\n\nBigInteger.prototype.DB = dbits;\nBigInteger.prototype.DM = (1 << dbits) - 1;\nBigInteger.prototype.DV = 1 << dbits;\nvar BI_FP = 52;\nBigInteger.prototype.FV = Math.pow(2, BI_FP);\nBigInteger.prototype.F1 = BI_FP - dbits;\nBigInteger.prototype.F2 = 2 * dbits - BI_FP; // Digit conversions\n\nvar BI_RM = '0123456789abcdefghijklmnopqrstuvwxyz';\nvar BI_RC = new Array();\nvar rr, vv;\nrr = '0'.charCodeAt(0);\n\nfor (vv = 0; vv <= 9; ++vv) {\n  BI_RC[rr++] = vv;\n}\n\nrr = 'a'.charCodeAt(0);\n\nfor (vv = 10; vv < 36; ++vv) {\n  BI_RC[rr++] = vv;\n}\n\nrr = 'A'.charCodeAt(0);\n\nfor (vv = 10; vv < 36; ++vv) {\n  BI_RC[rr++] = vv;\n}\n\nfunction int2char(n) {\n  return BI_RM.charAt(n);\n}\n\nfunction intAt(s, i) {\n  var c = BI_RC[s.charCodeAt(i)];\n  return c == null ? -1 : c;\n} // (protected) copy this to r\n\n\nfunction bnpCopyTo(r) {\n  for (var i = this.t - 1; i >= 0; --i) {\n    r[i] = this[i];\n  }\n\n  r.t = this.t;\n  r.s = this.s;\n} // (protected) set from integer value x, -DV <= x < DV\n\n\nfunction bnpFromInt(x) {\n  this.t = 1;\n  this.s = x < 0 ? -1 : 0;\n  if (x > 0) this[0] = x;else if (x < -1) this[0] = x + this.DV;else this.t = 0;\n} // return bigint initialized to value\n\n\nfunction nbv(i) {\n  var r = nbi();\n  r.fromInt(i);\n  return r;\n} // (protected) set from string and radix\n\n\nfunction bnpFromString(s, b) {\n  var k;\n  if (b == 16) k = 4;else if (b == 8) k = 3;else if (b == 2) k = 1;else if (b == 32) k = 5;else if (b == 4) k = 2;else throw new Error('Only radix 2, 4, 8, 16, 32 are supported');\n  this.t = 0;\n  this.s = 0;\n  var i = s.length,\n      mi = false,\n      sh = 0;\n\n  while (--i >= 0) {\n    var x = intAt(s, i);\n\n    if (x < 0) {\n      if (s.charAt(i) == '-') mi = true;\n      continue;\n    }\n\n    mi = false;\n    if (sh == 0) this[this.t++] = x;else if (sh + k > this.DB) {\n      this[this.t - 1] |= (x & (1 << this.DB - sh) - 1) << sh;\n      this[this.t++] = x >> this.DB - sh;\n    } else this[this.t - 1] |= x << sh;\n    sh += k;\n    if (sh >= this.DB) sh -= this.DB;\n  }\n\n  this.clamp();\n  if (mi) BigInteger.ZERO.subTo(this, this);\n} // (protected) clamp off excess high words\n\n\nfunction bnpClamp() {\n  var c = this.s & this.DM;\n\n  while (this.t > 0 && this[this.t - 1] == c) {\n    --this.t;\n  }\n} // (public) return string representation in given radix\n\n\nfunction bnToString(b) {\n  if (this.s < 0) return '-' + this.negate().toString(b);\n  var k;\n  if (b == 16) k = 4;else if (b == 8) k = 3;else if (b == 2) k = 1;else if (b == 32) k = 5;else if (b == 4) k = 2;else throw new Error('Only radix 2, 4, 8, 16, 32 are supported');\n  var km = (1 << k) - 1,\n      d,\n      m = false,\n      r = '',\n      i = this.t;\n  var p = this.DB - i * this.DB % k;\n\n  if (i-- > 0) {\n    if (p < this.DB && (d = this[i] >> p) > 0) {\n      m = true;\n      r = int2char(d);\n    }\n\n    while (i >= 0) {\n      if (p < k) {\n        d = (this[i] & (1 << p) - 1) << k - p;\n        d |= this[--i] >> (p += this.DB - k);\n      } else {\n        d = this[i] >> (p -= k) & km;\n\n        if (p <= 0) {\n          p += this.DB;\n          --i;\n        }\n      }\n\n      if (d > 0) m = true;\n      if (m) r += int2char(d);\n    }\n  }\n\n  return m ? r : '0';\n} // (public) -this\n\n\nfunction bnNegate() {\n  var r = nbi();\n  BigInteger.ZERO.subTo(this, r);\n  return r;\n} // (public) |this|\n\n\nfunction bnAbs() {\n  return this.s < 0 ? this.negate() : this;\n} // (public) return + if this > a, - if this < a, 0 if equal\n\n\nfunction bnCompareTo(a) {\n  var r = this.s - a.s;\n  if (r != 0) return r;\n  var i = this.t;\n  r = i - a.t;\n  if (r != 0) return this.s < 0 ? -r : r;\n\n  while (--i >= 0) {\n    if ((r = this[i] - a[i]) != 0) return r;\n  }\n\n  return 0;\n} // returns bit length of the integer x\n\n\nfunction nbits(x) {\n  var r = 1,\n      t;\n\n  if ((t = x >>> 16) != 0) {\n    x = t;\n    r += 16;\n  }\n\n  if ((t = x >> 8) != 0) {\n    x = t;\n    r += 8;\n  }\n\n  if ((t = x >> 4) != 0) {\n    x = t;\n    r += 4;\n  }\n\n  if ((t = x >> 2) != 0) {\n    x = t;\n    r += 2;\n  }\n\n  if ((t = x >> 1) != 0) {\n    x = t;\n    r += 1;\n  }\n\n  return r;\n} // (public) return the number of bits in \"this\"\n\n\nfunction bnBitLength() {\n  if (this.t <= 0) return 0;\n  return this.DB * (this.t - 1) + nbits(this[this.t - 1] ^ this.s & this.DM);\n} // (protected) r = this << n*DB\n\n\nfunction bnpDLShiftTo(n, r) {\n  var i;\n\n  for (i = this.t - 1; i >= 0; --i) {\n    r[i + n] = this[i];\n  }\n\n  for (i = n - 1; i >= 0; --i) {\n    r[i] = 0;\n  }\n\n  r.t = this.t + n;\n  r.s = this.s;\n} // (protected) r = this >> n*DB\n\n\nfunction bnpDRShiftTo(n, r) {\n  for (var i = n; i < this.t; ++i) {\n    r[i - n] = this[i];\n  }\n\n  r.t = Math.max(this.t - n, 0);\n  r.s = this.s;\n} // (protected) r = this << n\n\n\nfunction bnpLShiftTo(n, r) {\n  var bs = n % this.DB;\n  var cbs = this.DB - bs;\n  var bm = (1 << cbs) - 1;\n  var ds = Math.floor(n / this.DB),\n      c = this.s << bs & this.DM,\n      i;\n\n  for (i = this.t - 1; i >= 0; --i) {\n    r[i + ds + 1] = this[i] >> cbs | c;\n    c = (this[i] & bm) << bs;\n  }\n\n  for (i = ds - 1; i >= 0; --i) {\n    r[i] = 0;\n  }\n\n  r[ds] = c;\n  r.t = this.t + ds + 1;\n  r.s = this.s;\n  r.clamp();\n} // (protected) r = this >> n\n\n\nfunction bnpRShiftTo(n, r) {\n  r.s = this.s;\n  var ds = Math.floor(n / this.DB);\n\n  if (ds >= this.t) {\n    r.t = 0;\n    return;\n  }\n\n  var bs = n % this.DB;\n  var cbs = this.DB - bs;\n  var bm = (1 << bs) - 1;\n  r[0] = this[ds] >> bs;\n\n  for (var i = ds + 1; i < this.t; ++i) {\n    r[i - ds - 1] |= (this[i] & bm) << cbs;\n    r[i - ds] = this[i] >> bs;\n  }\n\n  if (bs > 0) r[this.t - ds - 1] |= (this.s & bm) << cbs;\n  r.t = this.t - ds;\n  r.clamp();\n} // (protected) r = this - a\n\n\nfunction bnpSubTo(a, r) {\n  var i = 0,\n      c = 0,\n      m = Math.min(a.t, this.t);\n\n  while (i < m) {\n    c += this[i] - a[i];\n    r[i++] = c & this.DM;\n    c >>= this.DB;\n  }\n\n  if (a.t < this.t) {\n    c -= a.s;\n\n    while (i < this.t) {\n      c += this[i];\n      r[i++] = c & this.DM;\n      c >>= this.DB;\n    }\n\n    c += this.s;\n  } else {\n    c += this.s;\n\n    while (i < a.t) {\n      c -= a[i];\n      r[i++] = c & this.DM;\n      c >>= this.DB;\n    }\n\n    c -= a.s;\n  }\n\n  r.s = c < 0 ? -1 : 0;\n  if (c < -1) r[i++] = this.DV + c;else if (c > 0) r[i++] = c;\n  r.t = i;\n  r.clamp();\n} // (protected) r = this * a, r != this,a (HAC 14.12)\n// \"this\" should be the larger one if appropriate.\n\n\nfunction bnpMultiplyTo(a, r) {\n  var x = this.abs(),\n      y = a.abs();\n  var i = x.t;\n  r.t = i + y.t;\n\n  while (--i >= 0) {\n    r[i] = 0;\n  }\n\n  for (i = 0; i < y.t; ++i) {\n    r[i + x.t] = x.am(0, y[i], r, i, 0, x.t);\n  }\n\n  r.s = 0;\n  r.clamp();\n  if (this.s != a.s) BigInteger.ZERO.subTo(r, r);\n} // (protected) r = this^2, r != this (HAC 14.16)\n\n\nfunction bnpSquareTo(r) {\n  var x = this.abs();\n  var i = r.t = 2 * x.t;\n\n  while (--i >= 0) {\n    r[i] = 0;\n  }\n\n  for (i = 0; i < x.t - 1; ++i) {\n    var c = x.am(i, x[i], r, 2 * i, 0, 1);\n\n    if ((r[i + x.t] += x.am(i + 1, 2 * x[i], r, 2 * i + 1, c, x.t - i - 1)) >= x.DV) {\n      r[i + x.t] -= x.DV;\n      r[i + x.t + 1] = 1;\n    }\n  }\n\n  if (r.t > 0) r[r.t - 1] += x.am(i, x[i], r, 2 * i, 0, 1);\n  r.s = 0;\n  r.clamp();\n} // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)\n// r != q, this != m.  q or r may be null.\n\n\nfunction bnpDivRemTo(m, q, r) {\n  var pm = m.abs();\n  if (pm.t <= 0) return;\n  var pt = this.abs();\n\n  if (pt.t < pm.t) {\n    if (q != null) q.fromInt(0);\n    if (r != null) this.copyTo(r);\n    return;\n  }\n\n  if (r == null) r = nbi();\n  var y = nbi(),\n      ts = this.s,\n      ms = m.s;\n  var nsh = this.DB - nbits(pm[pm.t - 1]); // normalize modulus\n\n  if (nsh > 0) {\n    pm.lShiftTo(nsh, y);\n    pt.lShiftTo(nsh, r);\n  } else {\n    pm.copyTo(y);\n    pt.copyTo(r);\n  }\n\n  var ys = y.t;\n  var y0 = y[ys - 1];\n  if (y0 == 0) return;\n  var yt = y0 * (1 << this.F1) + (ys > 1 ? y[ys - 2] >> this.F2 : 0);\n  var d1 = this.FV / yt,\n      d2 = (1 << this.F1) / yt,\n      e = 1 << this.F2;\n  var i = r.t,\n      j = i - ys,\n      t = q == null ? nbi() : q;\n  y.dlShiftTo(j, t);\n\n  if (r.compareTo(t) >= 0) {\n    r[r.t++] = 1;\n    r.subTo(t, r);\n  }\n\n  BigInteger.ONE.dlShiftTo(ys, t);\n  t.subTo(y, y); // \"negative\" y so we can replace sub with am later\n\n  while (y.t < ys) {\n    y[y.t++] = 0;\n  }\n\n  while (--j >= 0) {\n    // Estimate quotient digit\n    var qd = r[--i] == y0 ? this.DM : Math.floor(r[i] * d1 + (r[i - 1] + e) * d2);\n\n    if ((r[i] += y.am(0, qd, r, j, 0, ys)) < qd) {\n      // Try it out\n      y.dlShiftTo(j, t);\n      r.subTo(t, r);\n\n      while (r[i] < --qd) {\n        r.subTo(t, r);\n      }\n    }\n  }\n\n  if (q != null) {\n    r.drShiftTo(ys, q);\n    if (ts != ms) BigInteger.ZERO.subTo(q, q);\n  }\n\n  r.t = ys;\n  r.clamp();\n  if (nsh > 0) r.rShiftTo(nsh, r); // Denormalize remainder\n\n  if (ts < 0) BigInteger.ZERO.subTo(r, r);\n} // (public) this mod a\n\n\nfunction bnMod(a) {\n  var r = nbi();\n  this.abs().divRemTo(a, null, r);\n  if (this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r, r);\n  return r;\n} // (protected) return \"-1/this % 2^DB\"; useful for Mont. reduction\n// justification:\n//         xy == 1 (mod m)\n//         xy =  1+km\n//   xy(2-xy) = (1+km)(1-km)\n// x[y(2-xy)] = 1-k^2m^2\n// x[y(2-xy)] == 1 (mod m^2)\n// if y is 1/x mod m, then y(2-xy) is 1/x mod m^2\n// should reduce x and y(2-xy) by m^2 at each step to keep size bounded.\n// JS multiply \"overflows\" differently from C/C++, so care is needed here.\n\n\nfunction bnpInvDigit() {\n  if (this.t < 1) return 0;\n  var x = this[0];\n  if ((x & 1) == 0) return 0;\n  var y = x & 3; // y == 1/x mod 2^2\n\n  y = y * (2 - (x & 0xf) * y) & 0xf; // y == 1/x mod 2^4\n\n  y = y * (2 - (x & 0xff) * y) & 0xff; // y == 1/x mod 2^8\n\n  y = y * (2 - ((x & 0xffff) * y & 0xffff)) & 0xffff; // y == 1/x mod 2^16\n  // last step - calculate inverse mod DV directly;\n  // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints\n\n  y = y * (2 - x * y % this.DV) % this.DV; // y == 1/x mod 2^dbits\n  // we really want the negative inverse, and -DV < y < DV\n\n  return y > 0 ? this.DV - y : -y;\n}\n\nfunction bnEquals(a) {\n  return this.compareTo(a) == 0;\n} // (protected) r = this + a\n\n\nfunction bnpAddTo(a, r) {\n  var i = 0,\n      c = 0,\n      m = Math.min(a.t, this.t);\n\n  while (i < m) {\n    c += this[i] + a[i];\n    r[i++] = c & this.DM;\n    c >>= this.DB;\n  }\n\n  if (a.t < this.t) {\n    c += a.s;\n\n    while (i < this.t) {\n      c += this[i];\n      r[i++] = c & this.DM;\n      c >>= this.DB;\n    }\n\n    c += this.s;\n  } else {\n    c += this.s;\n\n    while (i < a.t) {\n      c += a[i];\n      r[i++] = c & this.DM;\n      c >>= this.DB;\n    }\n\n    c += a.s;\n  }\n\n  r.s = c < 0 ? -1 : 0;\n  if (c > 0) r[i++] = c;else if (c < -1) r[i++] = this.DV + c;\n  r.t = i;\n  r.clamp();\n} // (public) this + a\n\n\nfunction bnAdd(a) {\n  var r = nbi();\n  this.addTo(a, r);\n  return r;\n} // (public) this - a\n\n\nfunction bnSubtract(a) {\n  var r = nbi();\n  this.subTo(a, r);\n  return r;\n} // (public) this * a\n\n\nfunction bnMultiply(a) {\n  var r = nbi();\n  this.multiplyTo(a, r);\n  return r;\n} // (public) this / a\n\n\nfunction bnDivide(a) {\n  var r = nbi();\n  this.divRemTo(a, r, null);\n  return r;\n} // Montgomery reduction\n\n\nfunction Montgomery(m) {\n  this.m = m;\n  this.mp = m.invDigit();\n  this.mpl = this.mp & 0x7fff;\n  this.mph = this.mp >> 15;\n  this.um = (1 << m.DB - 15) - 1;\n  this.mt2 = 2 * m.t;\n} // xR mod m\n\n\nfunction montConvert(x) {\n  var r = nbi();\n  x.abs().dlShiftTo(this.m.t, r);\n  r.divRemTo(this.m, null, r);\n  if (x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r, r);\n  return r;\n} // x/R mod m\n\n\nfunction montRevert(x) {\n  var r = nbi();\n  x.copyTo(r);\n  this.reduce(r);\n  return r;\n} // x = x/R mod m (HAC 14.32)\n\n\nfunction montReduce(x) {\n  while (x.t <= this.mt2) {\n    // pad x so am has enough room later\n    x[x.t++] = 0;\n  }\n\n  for (var i = 0; i < this.m.t; ++i) {\n    // faster way of calculating u0 = x[i]*mp mod DV\n    var j = x[i] & 0x7fff;\n    var u0 = j * this.mpl + ((j * this.mph + (x[i] >> 15) * this.mpl & this.um) << 15) & x.DM; // use am to combine the multiply-shift-add into one call\n\n    j = i + this.m.t;\n    x[j] += this.m.am(0, u0, x, i, 0, this.m.t); // propagate carry\n\n    while (x[j] >= x.DV) {\n      x[j] -= x.DV;\n      x[++j]++;\n    }\n  }\n\n  x.clamp();\n  x.drShiftTo(this.m.t, x);\n  if (x.compareTo(this.m) >= 0) x.subTo(this.m, x);\n} // r = \"x^2/R mod m\"; x != r\n\n\nfunction montSqrTo(x, r) {\n  x.squareTo(r);\n  this.reduce(r);\n} // r = \"xy/R mod m\"; x,y != r\n\n\nfunction montMulTo(x, y, r) {\n  x.multiplyTo(y, r);\n  this.reduce(r);\n}\n\nMontgomery.prototype.convert = montConvert;\nMontgomery.prototype.revert = montRevert;\nMontgomery.prototype.reduce = montReduce;\nMontgomery.prototype.mulTo = montMulTo;\nMontgomery.prototype.sqrTo = montSqrTo; // (public) this^e % m (HAC 14.85)\n\nfunction bnModPow(e, m, callback) {\n  var i = e.bitLength(),\n      k,\n      r = nbv(1),\n      z = new Montgomery(m);\n  if (i <= 0) return r;else if (i < 18) k = 1;else if (i < 48) k = 3;else if (i < 144) k = 4;else if (i < 768) k = 5;else k = 6; // precomputation\n\n  var g = new Array(),\n      n = 3,\n      k1 = k - 1,\n      km = (1 << k) - 1;\n  g[1] = z.convert(this);\n\n  if (k > 1) {\n    var g2 = nbi();\n    z.sqrTo(g[1], g2);\n\n    while (n <= km) {\n      g[n] = nbi();\n      z.mulTo(g2, g[n - 2], g[n]);\n      n += 2;\n    }\n  }\n\n  var j = e.t - 1,\n      w,\n      is1 = true,\n      r2 = nbi(),\n      t;\n  i = nbits(e[j]) - 1;\n\n  while (j >= 0) {\n    if (i >= k1) w = e[j] >> i - k1 & km;else {\n      w = (e[j] & (1 << i + 1) - 1) << k1 - i;\n      if (j > 0) w |= e[j - 1] >> this.DB + i - k1;\n    }\n    n = k;\n\n    while ((w & 1) == 0) {\n      w >>= 1;\n      --n;\n    }\n\n    if ((i -= n) < 0) {\n      i += this.DB;\n      --j;\n    }\n\n    if (is1) {\n      // ret == 1, don't bother squaring or multiplying it\n      g[w].copyTo(r);\n      is1 = false;\n    } else {\n      while (n > 1) {\n        z.sqrTo(r, r2);\n        z.sqrTo(r2, r);\n        n -= 2;\n      }\n\n      if (n > 0) z.sqrTo(r, r2);else {\n        t = r;\n        r = r2;\n        r2 = t;\n      }\n      z.mulTo(r2, g[w], r);\n    }\n\n    while (j >= 0 && (e[j] & 1 << i) == 0) {\n      z.sqrTo(r, r2);\n      t = r;\n      r = r2;\n      r2 = t;\n\n      if (--i < 0) {\n        i = this.DB - 1;\n        --j;\n      }\n    }\n  }\n\n  var result = z.revert(r);\n  callback(null, result);\n  return result;\n} // protected\n\n\nBigInteger.prototype.copyTo = bnpCopyTo;\nBigInteger.prototype.fromInt = bnpFromInt;\nBigInteger.prototype.fromString = bnpFromString;\nBigInteger.prototype.clamp = bnpClamp;\nBigInteger.prototype.dlShiftTo = bnpDLShiftTo;\nBigInteger.prototype.drShiftTo = bnpDRShiftTo;\nBigInteger.prototype.lShiftTo = bnpLShiftTo;\nBigInteger.prototype.rShiftTo = bnpRShiftTo;\nBigInteger.prototype.subTo = bnpSubTo;\nBigInteger.prototype.multiplyTo = bnpMultiplyTo;\nBigInteger.prototype.squareTo = bnpSquareTo;\nBigInteger.prototype.divRemTo = bnpDivRemTo;\nBigInteger.prototype.invDigit = bnpInvDigit;\nBigInteger.prototype.addTo = bnpAddTo; // public\n\nBigInteger.prototype.toString = bnToString;\nBigInteger.prototype.negate = bnNegate;\nBigInteger.prototype.abs = bnAbs;\nBigInteger.prototype.compareTo = bnCompareTo;\nBigInteger.prototype.bitLength = bnBitLength;\nBigInteger.prototype.mod = bnMod;\nBigInteger.prototype.equals = bnEquals;\nBigInteger.prototype.add = bnAdd;\nBigInteger.prototype.subtract = bnSubtract;\nBigInteger.prototype.multiply = bnMultiply;\nBigInteger.prototype.divide = bnDivide;\nBigInteger.prototype.modPow = bnModPow; // \"constants\"\n\nBigInteger.ZERO = nbv(0);\nBigInteger.ONE = nbv(1);","/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Buffer } from 'buffer';\nimport CryptoJS from 'crypto-js/core';\nimport 'crypto-js/lib-typedarrays'; // necessary for crypto js\n\nimport SHA256 from 'crypto-js/sha256';\nimport HmacSHA256 from 'crypto-js/hmac-sha256';\nimport WordArray from './utils/WordArray';\n/**\n * Returns a Buffer with a sequence of random nBytes\n *\n * @param {number} nBytes\n * @returns {Buffer} fixed-length sequence of random bytes\n */\n\nfunction randomBytes(nBytes) {\n  return Buffer.from(new WordArray().random(nBytes).toString(), 'hex');\n}\n\nimport BigInteger from './BigInteger';\n/**\n * Tests if a hex string has it most significant bit set (case-insensitive regex)\n */\n\nvar HEX_MSB_REGEX = /^[89a-f]/i;\nvar initN = 'FFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD1' + '29024E088A67CC74020BBEA63B139B22514A08798E3404DD' + 'EF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C245' + 'E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7ED' + 'EE386BFB5A899FA5AE9F24117C4B1FE649286651ECE45B3D' + 'C2007CB8A163BF0598DA48361C55D39A69163FA8FD24CF5F' + '83655D23DCA3AD961C62F356208552BB9ED529077096966D' + '670C354E4ABC9804F1746C08CA18217C32905E462E36CE3B' + 'E39E772C180E86039B2783A2EC07A28FB5C55DF06F4C52C9' + 'DE2BCBF6955817183995497CEA956AE515D2261898FA0510' + '15728E5A8AAAC42DAD33170D04507A33A85521ABDF1CBA64' + 'ECFB850458DBEF0A8AEA71575D060C7DB3970F85A6E1E4C7' + 'ABF5AE8CDB0933D71E8C94E04A25619DCEE3D2261AD2EE6B' + 'F12FFA06D98A0864D87602733EC86A64521F2B18177B200C' + 'BBE117577A615D6C770988C0BAD946E208E24FA074E5AB31' + '43DB5BFCE0FD108E4B82D120A93AD2CAFFFFFFFFFFFFFFFF';\nvar newPasswordRequiredChallengeUserAttributePrefix = 'userAttributes.';\n/** @class */\n\nvar AuthenticationHelper = /*#__PURE__*/function () {\n  /**\n   * Constructs a new AuthenticationHelper object\n   * @param {string} PoolName Cognito user pool name.\n   */\n  function AuthenticationHelper(PoolName) {\n    this.N = new BigInteger(initN, 16);\n    this.g = new BigInteger('2', 16);\n    this.k = new BigInteger(this.hexHash(\"\" + this.padHex(this.N) + this.padHex(this.g)), 16);\n    this.smallAValue = this.generateRandomSmallA();\n    this.getLargeAValue(function () {});\n    this.infoBits = Buffer.from('Caldera Derived Key', 'utf8');\n    this.poolName = PoolName;\n  }\n  /**\n   * @returns {BigInteger} small A, a random number\n   */\n\n\n  var _proto = AuthenticationHelper.prototype;\n\n  _proto.getSmallAValue = function getSmallAValue() {\n    return this.smallAValue;\n  }\n  /**\n   * @param {nodeCallback<BigInteger>} callback Called with (err, largeAValue)\n   * @returns {void}\n   */\n  ;\n\n  _proto.getLargeAValue = function getLargeAValue(callback) {\n    var _this = this;\n\n    if (this.largeAValue) {\n      callback(null, this.largeAValue);\n    } else {\n      this.calculateA(this.smallAValue, function (err, largeAValue) {\n        if (err) {\n          callback(err, null);\n        }\n\n        _this.largeAValue = largeAValue;\n        callback(null, _this.largeAValue);\n      });\n    }\n  }\n  /**\n   * helper function to generate a random big integer\n   * @returns {BigInteger} a random value.\n   * @private\n   */\n  ;\n\n  _proto.generateRandomSmallA = function generateRandomSmallA() {\n    // This will be interpreted as a postive 128-bit integer\n    var hexRandom = randomBytes(128).toString('hex');\n    var randomBigInt = new BigInteger(hexRandom, 16); // There is no need to do randomBigInt.mod(this.N - 1) as N (3072-bit) is > 128 bytes (1024-bit)\n\n    return randomBigInt;\n  }\n  /**\n   * helper function to generate a random string\n   * @returns {string} a random value.\n   * @private\n   */\n  ;\n\n  _proto.generateRandomString = function generateRandomString() {\n    return randomBytes(40).toString('base64');\n  }\n  /**\n   * @returns {string} Generated random value included in password hash.\n   */\n  ;\n\n  _proto.getRandomPassword = function getRandomPassword() {\n    return this.randomPassword;\n  }\n  /**\n   * @returns {string} Generated random value included in devices hash.\n   */\n  ;\n\n  _proto.getSaltDevices = function getSaltDevices() {\n    return this.SaltToHashDevices;\n  }\n  /**\n   * @returns {string} Value used to verify devices.\n   */\n  ;\n\n  _proto.getVerifierDevices = function getVerifierDevices() {\n    return this.verifierDevices;\n  }\n  /**\n   * Generate salts and compute verifier.\n   * @param {string} deviceGroupKey Devices to generate verifier for.\n   * @param {string} username User to generate verifier for.\n   * @param {nodeCallback<null>} callback Called with (err, null)\n   * @returns {void}\n   */\n  ;\n\n  _proto.generateHashDevice = function generateHashDevice(deviceGroupKey, username, callback) {\n    var _this2 = this;\n\n    this.randomPassword = this.generateRandomString();\n    var combinedString = \"\" + deviceGroupKey + username + \":\" + this.randomPassword;\n    var hashedString = this.hash(combinedString);\n    var hexRandom = randomBytes(16).toString('hex'); // The random hex will be unambiguously represented as a postive integer\n\n    this.SaltToHashDevices = this.padHex(new BigInteger(hexRandom, 16));\n    this.g.modPow(new BigInteger(this.hexHash(this.SaltToHashDevices + hashedString), 16), this.N, function (err, verifierDevicesNotPadded) {\n      if (err) {\n        callback(err, null);\n      }\n\n      _this2.verifierDevices = _this2.padHex(verifierDevicesNotPadded);\n      callback(null, null);\n    });\n  }\n  /**\n   * Calculate the client's public value A = g^a%N\n   * with the generated random number a\n   * @param {BigInteger} a Randomly generated small A.\n   * @param {nodeCallback<BigInteger>} callback Called with (err, largeAValue)\n   * @returns {void}\n   * @private\n   */\n  ;\n\n  _proto.calculateA = function calculateA(a, callback) {\n    var _this3 = this;\n\n    this.g.modPow(a, this.N, function (err, A) {\n      if (err) {\n        callback(err, null);\n      }\n\n      if (A.mod(_this3.N).equals(BigInteger.ZERO)) {\n        callback(new Error('Illegal paramater. A mod N cannot be 0.'), null);\n      }\n\n      callback(null, A);\n    });\n  }\n  /**\n   * Calculate the client's value U which is the hash of A and B\n   * @param {BigInteger} A Large A value.\n   * @param {BigInteger} B Server B value.\n   * @returns {BigInteger} Computed U value.\n   * @private\n   */\n  ;\n\n  _proto.calculateU = function calculateU(A, B) {\n    this.UHexHash = this.hexHash(this.padHex(A) + this.padHex(B));\n    var finalU = new BigInteger(this.UHexHash, 16);\n    return finalU;\n  }\n  /**\n   * Calculate a hash from a bitArray\n   * @param {Buffer} buf Value to hash.\n   * @returns {String} Hex-encoded hash.\n   * @private\n   */\n  ;\n\n  _proto.hash = function hash(buf) {\n    var str = buf instanceof Buffer ? CryptoJS.lib.WordArray.create(buf) : buf;\n    var hashHex = SHA256(str).toString();\n    return new Array(64 - hashHex.length).join('0') + hashHex;\n  }\n  /**\n   * Calculate a hash from a hex string\n   * @param {String} hexStr Value to hash.\n   * @returns {String} Hex-encoded hash.\n   * @private\n   */\n  ;\n\n  _proto.hexHash = function hexHash(hexStr) {\n    return this.hash(Buffer.from(hexStr, 'hex'));\n  }\n  /**\n   * Standard hkdf algorithm\n   * @param {Buffer} ikm Input key material.\n   * @param {Buffer} salt Salt value.\n   * @returns {Buffer} Strong key material.\n   * @private\n   */\n  ;\n\n  _proto.computehkdf = function computehkdf(ikm, salt) {\n    var infoBitsWordArray = CryptoJS.lib.WordArray.create(Buffer.concat([this.infoBits, Buffer.from(String.fromCharCode(1), 'utf8')]));\n    var ikmWordArray = ikm instanceof Buffer ? CryptoJS.lib.WordArray.create(ikm) : ikm;\n    var saltWordArray = salt instanceof Buffer ? CryptoJS.lib.WordArray.create(salt) : salt;\n    var prk = HmacSHA256(ikmWordArray, saltWordArray);\n    var hmac = HmacSHA256(infoBitsWordArray, prk);\n    return Buffer.from(hmac.toString(), 'hex').slice(0, 16);\n  }\n  /**\n   * Calculates the final hkdf based on computed S value, and computed U value and the key\n   * @param {String} username Username.\n   * @param {String} password Password.\n   * @param {BigInteger} serverBValue Server B value.\n   * @param {BigInteger} salt Generated salt.\n   * @param {nodeCallback<Buffer>} callback Called with (err, hkdfValue)\n   * @returns {void}\n   */\n  ;\n\n  _proto.getPasswordAuthenticationKey = function getPasswordAuthenticationKey(username, password, serverBValue, salt, callback) {\n    var _this4 = this;\n\n    if (serverBValue.mod(this.N).equals(BigInteger.ZERO)) {\n      throw new Error('B cannot be zero.');\n    }\n\n    this.UValue = this.calculateU(this.largeAValue, serverBValue);\n\n    if (this.UValue.equals(BigInteger.ZERO)) {\n      throw new Error('U cannot be zero.');\n    }\n\n    var usernamePassword = \"\" + this.poolName + username + \":\" + password;\n    var usernamePasswordHash = this.hash(usernamePassword);\n    var xValue = new BigInteger(this.hexHash(this.padHex(salt) + usernamePasswordHash), 16);\n    this.calculateS(xValue, serverBValue, function (err, sValue) {\n      if (err) {\n        callback(err, null);\n      }\n\n      var hkdf = _this4.computehkdf(Buffer.from(_this4.padHex(sValue), 'hex'), Buffer.from(_this4.padHex(_this4.UValue), 'hex'));\n\n      callback(null, hkdf);\n    });\n  }\n  /**\n   * Calculates the S value used in getPasswordAuthenticationKey\n   * @param {BigInteger} xValue Salted password hash value.\n   * @param {BigInteger} serverBValue Server B value.\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @returns {void}\n   */\n  ;\n\n  _proto.calculateS = function calculateS(xValue, serverBValue, callback) {\n    var _this5 = this;\n\n    this.g.modPow(xValue, this.N, function (err, gModPowXN) {\n      if (err) {\n        callback(err, null);\n      }\n\n      var intValue2 = serverBValue.subtract(_this5.k.multiply(gModPowXN));\n      intValue2.modPow(_this5.smallAValue.add(_this5.UValue.multiply(xValue)), _this5.N, function (err2, result) {\n        if (err2) {\n          callback(err2, null);\n        }\n\n        callback(null, result.mod(_this5.N));\n      });\n    });\n  }\n  /**\n   * Return constant newPasswordRequiredChallengeUserAttributePrefix\n   * @return {newPasswordRequiredChallengeUserAttributePrefix} constant prefix value\n   */\n  ;\n\n  _proto.getNewPasswordRequiredChallengeUserAttributePrefix = function getNewPasswordRequiredChallengeUserAttributePrefix() {\n    return newPasswordRequiredChallengeUserAttributePrefix;\n  }\n  /**\n   * Returns an unambiguous, even-length hex string of the two's complement encoding of an integer.\n   *\n   * It is compatible with the hex encoding of Java's BigInteger's toByteArray(), wich returns a\n   * byte array containing the two's-complement representation of a BigInteger. The array contains\n   * the minimum number of bytes required to represent the BigInteger, including at least one sign bit.\n   *\n   * Examples showing how ambiguity is avoided by left padding with:\n   * \t\"00\" (for positive values where the most-significant-bit is set)\n   *  \"FF\" (for negative values where the most-significant-bit is set)\n   *\n   * padHex(bigInteger.fromInt(-236))  === \"FF14\"\n   * padHex(bigInteger.fromInt(20))    === \"14\"\n   *\n   * padHex(bigInteger.fromInt(-200))  === \"FF38\"\n   * padHex(bigInteger.fromInt(56))    === \"38\"\n   *\n   * padHex(bigInteger.fromInt(-20))   === \"EC\"\n   * padHex(bigInteger.fromInt(236))   === \"00EC\"\n   *\n   * padHex(bigInteger.fromInt(-56))   === \"C8\"\n   * padHex(bigInteger.fromInt(200))   === \"00C8\"\n   *\n   * @param {BigInteger} bigInt Number to encode.\n   * @returns {String} even-length hex string of the two's complement encoding.\n   */\n  ;\n\n  _proto.padHex = function padHex(bigInt) {\n    if (!(bigInt instanceof BigInteger)) {\n      throw new Error('Not a BigInteger');\n    }\n\n    var isNegative = bigInt.compareTo(BigInteger.ZERO) < 0;\n    /* Get a hex string for abs(bigInt) */\n\n    var hexStr = bigInt.abs().toString(16);\n    /* Pad hex to even length if needed */\n\n    hexStr = hexStr.length % 2 !== 0 ? \"0\" + hexStr : hexStr;\n    /* Prepend \"00\" if the most significant bit is set */\n\n    hexStr = HEX_MSB_REGEX.test(hexStr) ? \"00\" + hexStr : hexStr;\n\n    if (isNegative) {\n      /* Flip the bits of the representation */\n      var invertedNibbles = hexStr.split('').map(function (x) {\n        var invertedNibble = ~parseInt(x, 16) & 0xf;\n        return '0123456789ABCDEF'.charAt(invertedNibble);\n      }).join('');\n      /* After flipping the bits, add one to get the 2's complement representation */\n\n      var flippedBitsBI = new BigInteger(invertedNibbles, 16).add(BigInteger.ONE);\n      hexStr = flippedBitsBI.toString(16);\n      /*\n      For hex strings starting with 'FF8', 'FF' can be dropped, e.g. 0xFFFF80=0xFF80=0x80=-128\n      \t\tAny sequence of '1' bits on the left can always be substituted with a single '1' bit\n      without changing the represented value.\n      \t\tThis only happens in the case when the input is 80...00\n      */\n\n      if (hexStr.toUpperCase().startsWith('FF8')) {\n        hexStr = hexStr.substring(2);\n      }\n    }\n\n    return hexStr;\n  };\n\n  return AuthenticationHelper;\n}();\n\nexport { AuthenticationHelper as default };","/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Buffer } from 'buffer';\n/** @class */\n\nvar CognitoJwtToken = /*#__PURE__*/function () {\n  /**\n   * Constructs a new CognitoJwtToken object\n   * @param {string=} token The JWT token.\n   */\n  function CognitoJwtToken(token) {\n    // Assign object\n    this.jwtToken = token || '';\n    this.payload = this.decodePayload();\n  }\n  /**\n   * @returns {string} the record's token.\n   */\n\n\n  var _proto = CognitoJwtToken.prototype;\n\n  _proto.getJwtToken = function getJwtToken() {\n    return this.jwtToken;\n  }\n  /**\n   * @returns {int} the token's expiration (exp member).\n   */\n  ;\n\n  _proto.getExpiration = function getExpiration() {\n    return this.payload.exp;\n  }\n  /**\n   * @returns {int} the token's \"issued at\" (iat member).\n   */\n  ;\n\n  _proto.getIssuedAt = function getIssuedAt() {\n    return this.payload.iat;\n  }\n  /**\n   * @returns {object} the token's payload.\n   */\n  ;\n\n  _proto.decodePayload = function decodePayload() {\n    var payload = this.jwtToken.split('.')[1];\n\n    try {\n      return JSON.parse(Buffer.from(payload, 'base64').toString('utf8'));\n    } catch (err) {\n      return {};\n    }\n  };\n\n  return CognitoJwtToken;\n}();\n\nexport { CognitoJwtToken as default };","function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/*\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\nimport CognitoJwtToken from './CognitoJwtToken';\n/** @class */\n\nvar CognitoAccessToken = /*#__PURE__*/function (_CognitoJwtToken) {\n  _inheritsLoose(CognitoAccessToken, _CognitoJwtToken);\n\n  /**\n   * Constructs a new CognitoAccessToken object\n   * @param {string=} AccessToken The JWT access token.\n   */\n  function CognitoAccessToken(_temp) {\n    var _ref = _temp === void 0 ? {} : _temp,\n        AccessToken = _ref.AccessToken;\n\n    return _CognitoJwtToken.call(this, AccessToken || '') || this;\n  }\n\n  return CognitoAccessToken;\n}(CognitoJwtToken);\n\nexport { CognitoAccessToken as default };","function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\nimport CognitoJwtToken from './CognitoJwtToken';\n/** @class */\n\nvar CognitoIdToken = /*#__PURE__*/function (_CognitoJwtToken) {\n  _inheritsLoose(CognitoIdToken, _CognitoJwtToken);\n\n  /**\n   * Constructs a new CognitoIdToken object\n   * @param {string=} IdToken The JWT Id token\n   */\n  function CognitoIdToken(_temp) {\n    var _ref = _temp === void 0 ? {} : _temp,\n        IdToken = _ref.IdToken;\n\n    return _CognitoJwtToken.call(this, IdToken || '') || this;\n  }\n\n  return CognitoIdToken;\n}(CognitoJwtToken);\n\nexport { CognitoIdToken as default };","/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @class */\nvar CognitoRefreshToken = /*#__PURE__*/function () {\n  /**\n   * Constructs a new CognitoRefreshToken object\n   * @param {string=} RefreshToken The JWT refresh token.\n   */\n  function CognitoRefreshToken(_temp) {\n    var _ref = _temp === void 0 ? {} : _temp,\n        RefreshToken = _ref.RefreshToken;\n\n    // Assign object\n    this.token = RefreshToken || '';\n  }\n  /**\n   * @returns {string} the record's token.\n   */\n\n\n  var _proto = CognitoRefreshToken.prototype;\n\n  _proto.getToken = function getToken() {\n    return this.token;\n  };\n\n  return CognitoRefreshToken;\n}();\n\nexport { CognitoRefreshToken as default };","/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @class */\nvar CognitoUserSession = /*#__PURE__*/function () {\n  /**\n   * Constructs a new CognitoUserSession object\n   * @param {CognitoIdToken} IdToken The session's Id token.\n   * @param {CognitoRefreshToken=} RefreshToken The session's refresh token.\n   * @param {CognitoAccessToken} AccessToken The session's access token.\n   * @param {int} ClockDrift The saved computer's clock drift or undefined to force calculation.\n   */\n  function CognitoUserSession(_temp) {\n    var _ref = _temp === void 0 ? {} : _temp,\n        IdToken = _ref.IdToken,\n        RefreshToken = _ref.RefreshToken,\n        AccessToken = _ref.AccessToken,\n        ClockDrift = _ref.ClockDrift;\n\n    if (AccessToken == null || IdToken == null) {\n      throw new Error('Id token and Access Token must be present.');\n    }\n\n    this.idToken = IdToken;\n    this.refreshToken = RefreshToken;\n    this.accessToken = AccessToken;\n    this.clockDrift = ClockDrift === undefined ? this.calculateClockDrift() : ClockDrift;\n  }\n  /**\n   * @returns {CognitoIdToken} the session's Id token\n   */\n\n\n  var _proto = CognitoUserSession.prototype;\n\n  _proto.getIdToken = function getIdToken() {\n    return this.idToken;\n  }\n  /**\n   * @returns {CognitoRefreshToken} the session's refresh token\n   */\n  ;\n\n  _proto.getRefreshToken = function getRefreshToken() {\n    return this.refreshToken;\n  }\n  /**\n   * @returns {CognitoAccessToken} the session's access token\n   */\n  ;\n\n  _proto.getAccessToken = function getAccessToken() {\n    return this.accessToken;\n  }\n  /**\n   * @returns {int} the session's clock drift\n   */\n  ;\n\n  _proto.getClockDrift = function getClockDrift() {\n    return this.clockDrift;\n  }\n  /**\n   * @returns {int} the computer's clock drift\n   */\n  ;\n\n  _proto.calculateClockDrift = function calculateClockDrift() {\n    var now = Math.floor(new Date() / 1000);\n    var iat = Math.min(this.accessToken.getIssuedAt(), this.idToken.getIssuedAt());\n    return now - iat;\n  }\n  /**\n   * Checks to see if the session is still valid based on session expiry information found\n   * in tokens and the current time (adjusted with clock drift)\n   * @returns {boolean} if the session is still valid\n   */\n  ;\n\n  _proto.isValid = function isValid() {\n    var now = Math.floor(new Date() / 1000);\n    var adjusted = now - this.clockDrift;\n    return adjusted < this.accessToken.getExpiration() && adjusted < this.idToken.getExpiration();\n  };\n\n  return CognitoUserSession;\n}();\n\nexport { CognitoUserSession as default };","/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\nvar monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\nvar weekNames = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n/** @class */\n\nvar DateHelper = /*#__PURE__*/function () {\n  function DateHelper() {}\n\n  var _proto = DateHelper.prototype;\n\n  /**\n   * @returns {string} The current time in \"ddd MMM D HH:mm:ss UTC YYYY\" format.\n   */\n  _proto.getNowString = function getNowString() {\n    var now = new Date();\n    var weekDay = weekNames[now.getUTCDay()];\n    var month = monthNames[now.getUTCMonth()];\n    var day = now.getUTCDate();\n    var hours = now.getUTCHours();\n\n    if (hours < 10) {\n      hours = \"0\" + hours;\n    }\n\n    var minutes = now.getUTCMinutes();\n\n    if (minutes < 10) {\n      minutes = \"0\" + minutes;\n    }\n\n    var seconds = now.getUTCSeconds();\n\n    if (seconds < 10) {\n      seconds = \"0\" + seconds;\n    }\n\n    var year = now.getUTCFullYear(); // ddd MMM D HH:mm:ss UTC YYYY\n\n    var dateNow = weekDay + \" \" + month + \" \" + day + \" \" + hours + \":\" + minutes + \":\" + seconds + \" UTC \" + year;\n    return dateNow;\n  };\n\n  return DateHelper;\n}();\n\nexport { DateHelper as default };","/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @class */\nvar CognitoUserAttribute = /*#__PURE__*/function () {\n  /**\n   * Constructs a new CognitoUserAttribute object\n   * @param {string=} Name The record's name\n   * @param {string=} Value The record's value\n   */\n  function CognitoUserAttribute(_temp) {\n    var _ref = _temp === void 0 ? {} : _temp,\n        Name = _ref.Name,\n        Value = _ref.Value;\n\n    this.Name = Name || '';\n    this.Value = Value || '';\n  }\n  /**\n   * @returns {string} the record's value.\n   */\n\n\n  var _proto = CognitoUserAttribute.prototype;\n\n  _proto.getValue = function getValue() {\n    return this.Value;\n  }\n  /**\n   * Sets the record's value.\n   * @param {string} value The new value.\n   * @returns {CognitoUserAttribute} The record for method chaining.\n   */\n  ;\n\n  _proto.setValue = function setValue(value) {\n    this.Value = value;\n    return this;\n  }\n  /**\n   * @returns {string} the record's name.\n   */\n  ;\n\n  _proto.getName = function getName() {\n    return this.Name;\n  }\n  /**\n   * Sets the record's name\n   * @param {string} name The new name.\n   * @returns {CognitoUserAttribute} The record for method chaining.\n   */\n  ;\n\n  _proto.setName = function setName(name) {\n    this.Name = name;\n    return this;\n  }\n  /**\n   * @returns {string} a string representation of the record.\n   */\n  ;\n\n  _proto.toString = function toString() {\n    return JSON.stringify(this);\n  }\n  /**\n   * @returns {object} a flat object representing the record.\n   */\n  ;\n\n  _proto.toJSON = function toJSON() {\n    return {\n      Name: this.Name,\n      Value: this.Value\n    };\n  };\n\n  return CognitoUserAttribute;\n}();\n\nexport { CognitoUserAttribute as default };","/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\nvar dataMemory = {};\n/** @class */\n\nexport var MemoryStorage = /*#__PURE__*/function () {\n  function MemoryStorage() {}\n\n  /**\n   * This is used to set a specific item in storage\n   * @param {string} key - the key for the item\n   * @param {object} value - the value\n   * @returns {string} value that was set\n   */\n  MemoryStorage.setItem = function setItem(key, value) {\n    dataMemory[key] = value;\n    return dataMemory[key];\n  }\n  /**\n   * This is used to get a specific key from storage\n   * @param {string} key - the key for the item\n   * This is used to clear the storage\n   * @returns {string} the data item\n   */\n  ;\n\n  MemoryStorage.getItem = function getItem(key) {\n    return Object.prototype.hasOwnProperty.call(dataMemory, key) ? dataMemory[key] : undefined;\n  }\n  /**\n   * This is used to remove an item from storage\n   * @param {string} key - the key being set\n   * @returns {boolean} return true\n   */\n  ;\n\n  MemoryStorage.removeItem = function removeItem(key) {\n    return delete dataMemory[key];\n  }\n  /**\n   * This is used to clear the storage\n   * @returns {string} nothing\n   */\n  ;\n\n  MemoryStorage.clear = function clear() {\n    dataMemory = {};\n    return dataMemory;\n  };\n\n  return MemoryStorage;\n}();\n/** @class */\n\nvar StorageHelper = /*#__PURE__*/function () {\n  /**\n   * This is used to get a storage object\n   * @returns {object} the storage\n   */\n  function StorageHelper() {\n    try {\n      this.storageWindow = window.localStorage;\n      this.storageWindow.setItem('aws.cognito.test-ls', 1);\n      this.storageWindow.removeItem('aws.cognito.test-ls');\n    } catch (exception) {\n      this.storageWindow = MemoryStorage;\n    }\n  }\n  /**\n   * This is used to return the storage\n   * @returns {object} the storage\n   */\n\n\n  var _proto = StorageHelper.prototype;\n\n  _proto.getStorage = function getStorage() {\n    return this.storageWindow;\n  };\n\n  return StorageHelper;\n}();\n\nexport { StorageHelper as default };","/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Buffer } from 'buffer';\nimport CryptoJS from 'crypto-js/core';\nimport TypedArrays from 'crypto-js/lib-typedarrays'; // necessary for crypto js\n\nimport Base64 from 'crypto-js/enc-base64';\nimport HmacSHA256 from 'crypto-js/hmac-sha256';\nimport BigInteger from './BigInteger';\nimport AuthenticationHelper from './AuthenticationHelper';\nimport CognitoAccessToken from './CognitoAccessToken';\nimport CognitoIdToken from './CognitoIdToken';\nimport CognitoRefreshToken from './CognitoRefreshToken';\nimport CognitoUserSession from './CognitoUserSession';\nimport DateHelper from './DateHelper';\nimport CognitoUserAttribute from './CognitoUserAttribute';\nimport StorageHelper from './StorageHelper';\n/**\n * @callback nodeCallback\n * @template T result\n * @param {*} err The operation failure reason, or null.\n * @param {T} result The operation result.\n */\n\n/**\n * @callback onFailure\n * @param {*} err Failure reason.\n */\n\n/**\n * @callback onSuccess\n * @template T result\n * @param {T} result The operation result.\n */\n\n/**\n * @callback mfaRequired\n * @param {*} details MFA challenge details.\n */\n\n/**\n * @callback customChallenge\n * @param {*} details Custom challenge details.\n */\n\n/**\n * @callback inputVerificationCode\n * @param {*} data Server response.\n */\n\n/**\n * @callback authSuccess\n * @param {CognitoUserSession} session The new session.\n * @param {bool=} userConfirmationNecessary User must be confirmed.\n */\n\nvar isBrowser = typeof navigator !== 'undefined';\nvar userAgent = isBrowser ? navigator.userAgent : 'nodejs';\n/** @class */\n\nvar CognitoUser = /*#__PURE__*/function () {\n  /**\n   * Constructs a new CognitoUser object\n   * @param {object} data Creation options\n   * @param {string} data.Username The user's username.\n   * @param {CognitoUserPool} data.Pool Pool containing the user.\n   * @param {object} data.Storage Optional storage object.\n   */\n  function CognitoUser(data) {\n    if (data == null || data.Username == null || data.Pool == null) {\n      throw new Error('Username and Pool information are required.');\n    }\n\n    this.username = data.Username || '';\n    this.pool = data.Pool;\n    this.Session = null;\n    this.client = data.Pool.client;\n    this.signInUserSession = null;\n    this.authenticationFlowType = 'USER_SRP_AUTH';\n    this.storage = data.Storage || new StorageHelper().getStorage();\n    this.keyPrefix = \"CognitoIdentityServiceProvider.\" + this.pool.getClientId();\n    this.userDataKey = this.keyPrefix + \".\" + this.username + \".userData\";\n  }\n  /**\n   * Sets the session for this user\n   * @param {CognitoUserSession} signInUserSession the session\n   * @returns {void}\n   */\n\n\n  var _proto = CognitoUser.prototype;\n\n  _proto.setSignInUserSession = function setSignInUserSession(signInUserSession) {\n    this.clearCachedUserData();\n    this.signInUserSession = signInUserSession;\n    this.cacheTokens();\n  }\n  /**\n   * @returns {CognitoUserSession} the current session for this user\n   */\n  ;\n\n  _proto.getSignInUserSession = function getSignInUserSession() {\n    return this.signInUserSession;\n  }\n  /**\n   * @returns {string} the user's username\n   */\n  ;\n\n  _proto.getUsername = function getUsername() {\n    return this.username;\n  }\n  /**\n   * @returns {String} the authentication flow type\n   */\n  ;\n\n  _proto.getAuthenticationFlowType = function getAuthenticationFlowType() {\n    return this.authenticationFlowType;\n  }\n  /**\n   * sets authentication flow type\n   * @param {string} authenticationFlowType New value.\n   * @returns {void}\n   */\n  ;\n\n  _proto.setAuthenticationFlowType = function setAuthenticationFlowType(authenticationFlowType) {\n    this.authenticationFlowType = authenticationFlowType;\n  }\n  /**\n   * This is used for authenticating the user through the custom authentication flow.\n   * @param {AuthenticationDetails} authDetails Contains the authentication data\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {customChallenge} callback.customChallenge Custom challenge\n   *        response required to continue.\n   * @param {authSuccess} callback.onSuccess Called on success with the new session.\n   * @returns {void}\n   */\n  ;\n\n  _proto.initiateAuth = function initiateAuth(authDetails, callback) {\n    var _this = this;\n\n    var authParameters = authDetails.getAuthParameters();\n    authParameters.USERNAME = this.username;\n    var clientMetaData = Object.keys(authDetails.getValidationData()).length !== 0 ? authDetails.getValidationData() : authDetails.getClientMetadata();\n    var jsonReq = {\n      AuthFlow: 'CUSTOM_AUTH',\n      ClientId: this.pool.getClientId(),\n      AuthParameters: authParameters,\n      ClientMetadata: clientMetaData\n    };\n\n    if (this.getUserContextData()) {\n      jsonReq.UserContextData = this.getUserContextData();\n    }\n\n    this.client.request('InitiateAuth', jsonReq, function (err, data) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n\n      var challengeName = data.ChallengeName;\n      var challengeParameters = data.ChallengeParameters;\n\n      if (challengeName === 'CUSTOM_CHALLENGE') {\n        _this.Session = data.Session;\n        return callback.customChallenge(challengeParameters);\n      }\n\n      _this.signInUserSession = _this.getCognitoUserSession(data.AuthenticationResult);\n\n      _this.cacheTokens();\n\n      return callback.onSuccess(_this.signInUserSession);\n    });\n  }\n  /**\n   * This is used for authenticating the user.\n   * stuff\n   * @param {AuthenticationDetails} authDetails Contains the authentication data\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {newPasswordRequired} callback.newPasswordRequired new\n   *        password and any required attributes are required to continue\n   * @param {mfaRequired} callback.mfaRequired MFA code\n   *        required to continue.\n   * @param {customChallenge} callback.customChallenge Custom challenge\n   *        response required to continue.\n   * @param {authSuccess} callback.onSuccess Called on success with the new session.\n   * @returns {void}\n   */\n  ;\n\n  _proto.authenticateUser = function authenticateUser(authDetails, callback) {\n    if (this.authenticationFlowType === 'USER_PASSWORD_AUTH') {\n      return this.authenticateUserPlainUsernamePassword(authDetails, callback);\n    } else if (this.authenticationFlowType === 'USER_SRP_AUTH' || this.authenticationFlowType === 'CUSTOM_AUTH') {\n      return this.authenticateUserDefaultAuth(authDetails, callback);\n    }\n\n    return callback.onFailure(new Error('Authentication flow type is invalid.'));\n  }\n  /**\n   * PRIVATE ONLY: This is an internal only method and should not\n   * be directly called by the consumers.\n   * It calls the AuthenticationHelper for SRP related\n   * stuff\n   * @param {AuthenticationDetails} authDetails Contains the authentication data\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {newPasswordRequired} callback.newPasswordRequired new\n   *        password and any required attributes are required to continue\n   * @param {mfaRequired} callback.mfaRequired MFA code\n   *        required to continue.\n   * @param {customChallenge} callback.customChallenge Custom challenge\n   *        response required to continue.\n   * @param {authSuccess} callback.onSuccess Called on success with the new session.\n   * @returns {void}\n   */\n  ;\n\n  _proto.authenticateUserDefaultAuth = function authenticateUserDefaultAuth(authDetails, callback) {\n    var _this2 = this;\n\n    var authenticationHelper = new AuthenticationHelper(this.pool.getUserPoolId().split('_')[1]);\n    var dateHelper = new DateHelper();\n    var serverBValue;\n    var salt;\n    var authParameters = {};\n\n    if (this.deviceKey != null) {\n      authParameters.DEVICE_KEY = this.deviceKey;\n    }\n\n    authParameters.USERNAME = this.username;\n    authenticationHelper.getLargeAValue(function (errOnAValue, aValue) {\n      // getLargeAValue callback start\n      if (errOnAValue) {\n        callback.onFailure(errOnAValue);\n      }\n\n      authParameters.SRP_A = aValue.toString(16);\n\n      if (_this2.authenticationFlowType === 'CUSTOM_AUTH') {\n        authParameters.CHALLENGE_NAME = 'SRP_A';\n      }\n\n      var clientMetaData = Object.keys(authDetails.getValidationData()).length !== 0 ? authDetails.getValidationData() : authDetails.getClientMetadata();\n      var jsonReq = {\n        AuthFlow: _this2.authenticationFlowType,\n        ClientId: _this2.pool.getClientId(),\n        AuthParameters: authParameters,\n        ClientMetadata: clientMetaData\n      };\n\n      if (_this2.getUserContextData(_this2.username)) {\n        jsonReq.UserContextData = _this2.getUserContextData(_this2.username);\n      }\n\n      _this2.client.request('InitiateAuth', jsonReq, function (err, data) {\n        if (err) {\n          return callback.onFailure(err);\n        }\n\n        var challengeParameters = data.ChallengeParameters;\n        _this2.username = challengeParameters.USER_ID_FOR_SRP;\n        _this2.userDataKey = _this2.keyPrefix + \".\" + _this2.username + \".userData\";\n        serverBValue = new BigInteger(challengeParameters.SRP_B, 16);\n        salt = new BigInteger(challengeParameters.SALT, 16);\n\n        _this2.getCachedDeviceKeyAndPassword();\n\n        authenticationHelper.getPasswordAuthenticationKey(_this2.username, authDetails.getPassword(), serverBValue, salt, function (errOnHkdf, hkdf) {\n          // getPasswordAuthenticationKey callback start\n          if (errOnHkdf) {\n            callback.onFailure(errOnHkdf);\n          }\n\n          var dateNow = dateHelper.getNowString();\n          var message = CryptoJS.lib.WordArray.create(Buffer.concat([Buffer.from(_this2.pool.getUserPoolId().split('_')[1], 'utf8'), Buffer.from(_this2.username, 'utf8'), Buffer.from(challengeParameters.SECRET_BLOCK, 'base64'), Buffer.from(dateNow, 'utf8')]));\n          var key = CryptoJS.lib.WordArray.create(hkdf);\n          var signatureString = Base64.stringify(HmacSHA256(message, key));\n          var challengeResponses = {};\n          challengeResponses.USERNAME = _this2.username;\n          challengeResponses.PASSWORD_CLAIM_SECRET_BLOCK = challengeParameters.SECRET_BLOCK;\n          challengeResponses.TIMESTAMP = dateNow;\n          challengeResponses.PASSWORD_CLAIM_SIGNATURE = signatureString;\n\n          if (_this2.deviceKey != null) {\n            challengeResponses.DEVICE_KEY = _this2.deviceKey;\n          }\n\n          var respondToAuthChallenge = function respondToAuthChallenge(challenge, challengeCallback) {\n            return _this2.client.request('RespondToAuthChallenge', challenge, function (errChallenge, dataChallenge) {\n              if (errChallenge && errChallenge.code === 'ResourceNotFoundException' && errChallenge.message.toLowerCase().indexOf('device') !== -1) {\n                challengeResponses.DEVICE_KEY = null;\n                _this2.deviceKey = null;\n                _this2.randomPassword = null;\n                _this2.deviceGroupKey = null;\n\n                _this2.clearCachedDeviceKeyAndPassword();\n\n                return respondToAuthChallenge(challenge, challengeCallback);\n              }\n\n              return challengeCallback(errChallenge, dataChallenge);\n            });\n          };\n\n          var jsonReqResp = {\n            ChallengeName: 'PASSWORD_VERIFIER',\n            ClientId: _this2.pool.getClientId(),\n            ChallengeResponses: challengeResponses,\n            Session: data.Session,\n            ClientMetadata: clientMetaData\n          };\n\n          if (_this2.getUserContextData()) {\n            jsonReqResp.UserContextData = _this2.getUserContextData();\n          }\n\n          respondToAuthChallenge(jsonReqResp, function (errAuthenticate, dataAuthenticate) {\n            if (errAuthenticate) {\n              return callback.onFailure(errAuthenticate);\n            }\n\n            return _this2.authenticateUserInternal(dataAuthenticate, authenticationHelper, callback);\n          });\n          return undefined; // getPasswordAuthenticationKey callback end\n        });\n        return undefined;\n      }); // getLargeAValue callback end\n\n    });\n  }\n  /**\n   * PRIVATE ONLY: This is an internal only method and should not\n   * be directly called by the consumers.\n   * @param {AuthenticationDetails} authDetails Contains the authentication data.\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {mfaRequired} callback.mfaRequired MFA code\n   *        required to continue.\n   * @param {authSuccess} callback.onSuccess Called on success with the new session.\n   * @returns {void}\n   */\n  ;\n\n  _proto.authenticateUserPlainUsernamePassword = function authenticateUserPlainUsernamePassword(authDetails, callback) {\n    var _this3 = this;\n\n    var authParameters = {};\n    authParameters.USERNAME = this.username;\n    authParameters.PASSWORD = authDetails.getPassword();\n\n    if (!authParameters.PASSWORD) {\n      callback.onFailure(new Error('PASSWORD parameter is required'));\n      return;\n    }\n\n    var authenticationHelper = new AuthenticationHelper(this.pool.getUserPoolId().split('_')[1]);\n    this.getCachedDeviceKeyAndPassword();\n\n    if (this.deviceKey != null) {\n      authParameters.DEVICE_KEY = this.deviceKey;\n    }\n\n    var clientMetaData = Object.keys(authDetails.getValidationData()).length !== 0 ? authDetails.getValidationData() : authDetails.getClientMetadata();\n    var jsonReq = {\n      AuthFlow: 'USER_PASSWORD_AUTH',\n      ClientId: this.pool.getClientId(),\n      AuthParameters: authParameters,\n      ClientMetadata: clientMetaData\n    };\n\n    if (this.getUserContextData(this.username)) {\n      jsonReq.UserContextData = this.getUserContextData(this.username);\n    } // USER_PASSWORD_AUTH happens in a single round-trip: client sends userName and password,\n    // Cognito UserPools verifies password and returns tokens.\n\n\n    this.client.request('InitiateAuth', jsonReq, function (err, authResult) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n\n      return _this3.authenticateUserInternal(authResult, authenticationHelper, callback);\n    });\n  }\n  /**\n   * PRIVATE ONLY: This is an internal only method and should not\n   * be directly called by the consumers.\n   * @param {object} dataAuthenticate authentication data\n   * @param {object} authenticationHelper helper created\n   * @param {callback} callback passed on from caller\n   * @returns {void}\n   */\n  ;\n\n  _proto.authenticateUserInternal = function authenticateUserInternal(dataAuthenticate, authenticationHelper, callback) {\n    var _this4 = this;\n\n    var challengeName = dataAuthenticate.ChallengeName;\n    var challengeParameters = dataAuthenticate.ChallengeParameters;\n\n    if (challengeName === 'SMS_MFA') {\n      this.Session = dataAuthenticate.Session;\n      return callback.mfaRequired(challengeName, challengeParameters);\n    }\n\n    if (challengeName === 'SELECT_MFA_TYPE') {\n      this.Session = dataAuthenticate.Session;\n      return callback.selectMFAType(challengeName, challengeParameters);\n    }\n\n    if (challengeName === 'MFA_SETUP') {\n      this.Session = dataAuthenticate.Session;\n      return callback.mfaSetup(challengeName, challengeParameters);\n    }\n\n    if (challengeName === 'SOFTWARE_TOKEN_MFA') {\n      this.Session = dataAuthenticate.Session;\n      return callback.totpRequired(challengeName, challengeParameters);\n    }\n\n    if (challengeName === 'CUSTOM_CHALLENGE') {\n      this.Session = dataAuthenticate.Session;\n      return callback.customChallenge(challengeParameters);\n    }\n\n    if (challengeName === 'NEW_PASSWORD_REQUIRED') {\n      this.Session = dataAuthenticate.Session;\n      var userAttributes = null;\n      var rawRequiredAttributes = null;\n      var requiredAttributes = [];\n      var userAttributesPrefix = authenticationHelper.getNewPasswordRequiredChallengeUserAttributePrefix();\n\n      if (challengeParameters) {\n        userAttributes = JSON.parse(dataAuthenticate.ChallengeParameters.userAttributes);\n        rawRequiredAttributes = JSON.parse(dataAuthenticate.ChallengeParameters.requiredAttributes);\n      }\n\n      if (rawRequiredAttributes) {\n        for (var i = 0; i < rawRequiredAttributes.length; i++) {\n          requiredAttributes[i] = rawRequiredAttributes[i].substr(userAttributesPrefix.length);\n        }\n      }\n\n      return callback.newPasswordRequired(userAttributes, requiredAttributes);\n    }\n\n    if (challengeName === 'DEVICE_SRP_AUTH') {\n      this.Session = dataAuthenticate.Session;\n      this.getDeviceResponse(callback);\n      return undefined;\n    }\n\n    this.signInUserSession = this.getCognitoUserSession(dataAuthenticate.AuthenticationResult);\n    this.challengeName = challengeName;\n    this.cacheTokens();\n    var newDeviceMetadata = dataAuthenticate.AuthenticationResult.NewDeviceMetadata;\n\n    if (newDeviceMetadata == null) {\n      return callback.onSuccess(this.signInUserSession);\n    }\n\n    authenticationHelper.generateHashDevice(dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceGroupKey, dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceKey, function (errGenHash) {\n      if (errGenHash) {\n        return callback.onFailure(errGenHash);\n      }\n\n      var deviceSecretVerifierConfig = {\n        Salt: Buffer.from(authenticationHelper.getSaltDevices(), 'hex').toString('base64'),\n        PasswordVerifier: Buffer.from(authenticationHelper.getVerifierDevices(), 'hex').toString('base64')\n      };\n      _this4.verifierDevices = deviceSecretVerifierConfig.PasswordVerifier;\n      _this4.deviceGroupKey = newDeviceMetadata.DeviceGroupKey;\n      _this4.randomPassword = authenticationHelper.getRandomPassword();\n\n      _this4.client.request('ConfirmDevice', {\n        DeviceKey: newDeviceMetadata.DeviceKey,\n        AccessToken: _this4.signInUserSession.getAccessToken().getJwtToken(),\n        DeviceSecretVerifierConfig: deviceSecretVerifierConfig,\n        DeviceName: userAgent\n      }, function (errConfirm, dataConfirm) {\n        if (errConfirm) {\n          return callback.onFailure(errConfirm);\n        }\n\n        _this4.deviceKey = dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceKey;\n\n        _this4.cacheDeviceKeyAndPassword();\n\n        if (dataConfirm.UserConfirmationNecessary === true) {\n          return callback.onSuccess(_this4.signInUserSession, dataConfirm.UserConfirmationNecessary);\n        }\n\n        return callback.onSuccess(_this4.signInUserSession);\n      });\n\n      return undefined;\n    });\n    return undefined;\n  }\n  /**\n   * This method is user to complete the NEW_PASSWORD_REQUIRED challenge.\n   * Pass the new password with any new user attributes to be updated.\n   * User attribute keys must be of format userAttributes.<attribute_name>.\n   * @param {string} newPassword new password for this user\n   * @param {object} requiredAttributeData map with values for all required attributes\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {mfaRequired} callback.mfaRequired MFA code required to continue.\n   * @param {customChallenge} callback.customChallenge Custom challenge\n   *         response required to continue.\n   * @param {authSuccess} callback.onSuccess Called on success with the new session.\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\n   * @returns {void}\n   */\n  ;\n\n  _proto.completeNewPasswordChallenge = function completeNewPasswordChallenge(newPassword, requiredAttributeData, callback, clientMetadata) {\n    var _this5 = this;\n\n    if (!newPassword) {\n      return callback.onFailure(new Error('New password is required.'));\n    }\n\n    var authenticationHelper = new AuthenticationHelper(this.pool.getUserPoolId().split('_')[1]);\n    var userAttributesPrefix = authenticationHelper.getNewPasswordRequiredChallengeUserAttributePrefix();\n    var finalUserAttributes = {};\n\n    if (requiredAttributeData) {\n      Object.keys(requiredAttributeData).forEach(function (key) {\n        finalUserAttributes[userAttributesPrefix + key] = requiredAttributeData[key];\n      });\n    }\n\n    finalUserAttributes.NEW_PASSWORD = newPassword;\n    finalUserAttributes.USERNAME = this.username;\n    var jsonReq = {\n      ChallengeName: 'NEW_PASSWORD_REQUIRED',\n      ClientId: this.pool.getClientId(),\n      ChallengeResponses: finalUserAttributes,\n      Session: this.Session,\n      ClientMetadata: clientMetadata\n    };\n\n    if (this.getUserContextData()) {\n      jsonReq.UserContextData = this.getUserContextData();\n    }\n\n    this.client.request('RespondToAuthChallenge', jsonReq, function (errAuthenticate, dataAuthenticate) {\n      if (errAuthenticate) {\n        return callback.onFailure(errAuthenticate);\n      }\n\n      return _this5.authenticateUserInternal(dataAuthenticate, authenticationHelper, callback);\n    });\n    return undefined;\n  }\n  /**\n   * This is used to get a session using device authentication. It is called at the end of user\n   * authentication\n   *\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {authSuccess} callback.onSuccess Called on success with the new session.\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\n   * @returns {void}\n   * @private\n   */\n  ;\n\n  _proto.getDeviceResponse = function getDeviceResponse(callback, clientMetadata) {\n    var _this6 = this;\n\n    var authenticationHelper = new AuthenticationHelper(this.deviceGroupKey);\n    var dateHelper = new DateHelper();\n    var authParameters = {};\n    authParameters.USERNAME = this.username;\n    authParameters.DEVICE_KEY = this.deviceKey;\n    authenticationHelper.getLargeAValue(function (errAValue, aValue) {\n      // getLargeAValue callback start\n      if (errAValue) {\n        callback.onFailure(errAValue);\n      }\n\n      authParameters.SRP_A = aValue.toString(16);\n      var jsonReq = {\n        ChallengeName: 'DEVICE_SRP_AUTH',\n        ClientId: _this6.pool.getClientId(),\n        ChallengeResponses: authParameters,\n        ClientMetadata: clientMetadata,\n        Session: _this6.Session\n      };\n\n      if (_this6.getUserContextData()) {\n        jsonReq.UserContextData = _this6.getUserContextData();\n      }\n\n      _this6.client.request('RespondToAuthChallenge', jsonReq, function (err, data) {\n        if (err) {\n          return callback.onFailure(err);\n        }\n\n        var challengeParameters = data.ChallengeParameters;\n        var serverBValue = new BigInteger(challengeParameters.SRP_B, 16);\n        var salt = new BigInteger(challengeParameters.SALT, 16);\n        authenticationHelper.getPasswordAuthenticationKey(_this6.deviceKey, _this6.randomPassword, serverBValue, salt, function (errHkdf, hkdf) {\n          // getPasswordAuthenticationKey callback start\n          if (errHkdf) {\n            return callback.onFailure(errHkdf);\n          }\n\n          var dateNow = dateHelper.getNowString();\n          var message = CryptoJS.lib.WordArray.create(Buffer.concat([Buffer.from(_this6.deviceGroupKey, 'utf8'), Buffer.from(_this6.deviceKey, 'utf8'), Buffer.from(challengeParameters.SECRET_BLOCK, 'base64'), Buffer.from(dateNow, 'utf8')]));\n          var key = CryptoJS.lib.WordArray.create(hkdf);\n          var signatureString = Base64.stringify(HmacSHA256(message, key));\n          var challengeResponses = {};\n          challengeResponses.USERNAME = _this6.username;\n          challengeResponses.PASSWORD_CLAIM_SECRET_BLOCK = challengeParameters.SECRET_BLOCK;\n          challengeResponses.TIMESTAMP = dateNow;\n          challengeResponses.PASSWORD_CLAIM_SIGNATURE = signatureString;\n          challengeResponses.DEVICE_KEY = _this6.deviceKey;\n          var jsonReqResp = {\n            ChallengeName: 'DEVICE_PASSWORD_VERIFIER',\n            ClientId: _this6.pool.getClientId(),\n            ChallengeResponses: challengeResponses,\n            Session: data.Session\n          };\n\n          if (_this6.getUserContextData()) {\n            jsonReqResp.UserContextData = _this6.getUserContextData();\n          }\n\n          _this6.client.request('RespondToAuthChallenge', jsonReqResp, function (errAuthenticate, dataAuthenticate) {\n            if (errAuthenticate) {\n              return callback.onFailure(errAuthenticate);\n            }\n\n            _this6.signInUserSession = _this6.getCognitoUserSession(dataAuthenticate.AuthenticationResult);\n\n            _this6.cacheTokens();\n\n            return callback.onSuccess(_this6.signInUserSession);\n          });\n\n          return undefined; // getPasswordAuthenticationKey callback end\n        });\n        return undefined;\n      }); // getLargeAValue callback end\n\n    });\n  }\n  /**\n   * This is used for a certain user to confirm the registration by using a confirmation code\n   * @param {string} confirmationCode Code entered by user.\n   * @param {bool} forceAliasCreation Allow migrating from an existing email / phone number.\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\n   * @returns {void}\n   */\n  ;\n\n  _proto.confirmRegistration = function confirmRegistration(confirmationCode, forceAliasCreation, callback, clientMetadata) {\n    var jsonReq = {\n      ClientId: this.pool.getClientId(),\n      ConfirmationCode: confirmationCode,\n      Username: this.username,\n      ForceAliasCreation: forceAliasCreation,\n      ClientMetadata: clientMetadata\n    };\n\n    if (this.getUserContextData()) {\n      jsonReq.UserContextData = this.getUserContextData();\n    }\n\n    this.client.request('ConfirmSignUp', jsonReq, function (err) {\n      if (err) {\n        return callback(err, null);\n      }\n\n      return callback(null, 'SUCCESS');\n    });\n  }\n  /**\n   * This is used by the user once he has the responses to a custom challenge\n   * @param {string} answerChallenge The custom challenge answer.\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {customChallenge} callback.customChallenge\n   *    Custom challenge response required to continue.\n   * @param {authSuccess} callback.onSuccess Called on success with the new session.\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\n   * @returns {void}\n   */\n  ;\n\n  _proto.sendCustomChallengeAnswer = function sendCustomChallengeAnswer(answerChallenge, callback, clientMetadata) {\n    var _this7 = this;\n\n    var challengeResponses = {};\n    challengeResponses.USERNAME = this.username;\n    challengeResponses.ANSWER = answerChallenge;\n    var authenticationHelper = new AuthenticationHelper(this.pool.getUserPoolId().split('_')[1]);\n    this.getCachedDeviceKeyAndPassword();\n\n    if (this.deviceKey != null) {\n      challengeResponses.DEVICE_KEY = this.deviceKey;\n    }\n\n    var jsonReq = {\n      ChallengeName: 'CUSTOM_CHALLENGE',\n      ChallengeResponses: challengeResponses,\n      ClientId: this.pool.getClientId(),\n      Session: this.Session,\n      ClientMetadata: clientMetadata\n    };\n\n    if (this.getUserContextData()) {\n      jsonReq.UserContextData = this.getUserContextData();\n    }\n\n    this.client.request('RespondToAuthChallenge', jsonReq, function (err, data) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n\n      return _this7.authenticateUserInternal(data, authenticationHelper, callback);\n    });\n  }\n  /**\n   * This is used by the user once he has an MFA code\n   * @param {string} confirmationCode The MFA code entered by the user.\n   * @param {object} callback Result callback map.\n   * @param {string} mfaType The mfa we are replying to.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {authSuccess} callback.onSuccess Called on success with the new session.\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\n   * @returns {void}\n   */\n  ;\n\n  _proto.sendMFACode = function sendMFACode(confirmationCode, callback, mfaType, clientMetadata) {\n    var _this8 = this;\n\n    var challengeResponses = {};\n    challengeResponses.USERNAME = this.username;\n    challengeResponses.SMS_MFA_CODE = confirmationCode;\n    var mfaTypeSelection = mfaType || 'SMS_MFA';\n\n    if (mfaTypeSelection === 'SOFTWARE_TOKEN_MFA') {\n      challengeResponses.SOFTWARE_TOKEN_MFA_CODE = confirmationCode;\n    }\n\n    if (this.deviceKey != null) {\n      challengeResponses.DEVICE_KEY = this.deviceKey;\n    }\n\n    var jsonReq = {\n      ChallengeName: mfaTypeSelection,\n      ChallengeResponses: challengeResponses,\n      ClientId: this.pool.getClientId(),\n      Session: this.Session,\n      ClientMetadata: clientMetadata\n    };\n\n    if (this.getUserContextData()) {\n      jsonReq.UserContextData = this.getUserContextData();\n    }\n\n    this.client.request('RespondToAuthChallenge', jsonReq, function (err, dataAuthenticate) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n\n      var challengeName = dataAuthenticate.ChallengeName;\n\n      if (challengeName === 'DEVICE_SRP_AUTH') {\n        _this8.getDeviceResponse(callback);\n\n        return undefined;\n      }\n\n      _this8.signInUserSession = _this8.getCognitoUserSession(dataAuthenticate.AuthenticationResult);\n\n      _this8.cacheTokens();\n\n      if (dataAuthenticate.AuthenticationResult.NewDeviceMetadata == null) {\n        return callback.onSuccess(_this8.signInUserSession);\n      }\n\n      var authenticationHelper = new AuthenticationHelper(_this8.pool.getUserPoolId().split('_')[1]);\n      authenticationHelper.generateHashDevice(dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceGroupKey, dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceKey, function (errGenHash) {\n        if (errGenHash) {\n          return callback.onFailure(errGenHash);\n        }\n\n        var deviceSecretVerifierConfig = {\n          Salt: Buffer.from(authenticationHelper.getSaltDevices(), 'hex').toString('base64'),\n          PasswordVerifier: Buffer.from(authenticationHelper.getVerifierDevices(), 'hex').toString('base64')\n        };\n        _this8.verifierDevices = deviceSecretVerifierConfig.PasswordVerifier;\n        _this8.deviceGroupKey = dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceGroupKey;\n        _this8.randomPassword = authenticationHelper.getRandomPassword();\n\n        _this8.client.request('ConfirmDevice', {\n          DeviceKey: dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceKey,\n          AccessToken: _this8.signInUserSession.getAccessToken().getJwtToken(),\n          DeviceSecretVerifierConfig: deviceSecretVerifierConfig,\n          DeviceName: userAgent\n        }, function (errConfirm, dataConfirm) {\n          if (errConfirm) {\n            return callback.onFailure(errConfirm);\n          }\n\n          _this8.deviceKey = dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceKey;\n\n          _this8.cacheDeviceKeyAndPassword();\n\n          if (dataConfirm.UserConfirmationNecessary === true) {\n            return callback.onSuccess(_this8.signInUserSession, dataConfirm.UserConfirmationNecessary);\n          }\n\n          return callback.onSuccess(_this8.signInUserSession);\n        });\n\n        return undefined;\n      });\n      return undefined;\n    });\n  }\n  /**\n   * This is used by an authenticated user to change the current password\n   * @param {string} oldUserPassword The current password.\n   * @param {string} newUserPassword The requested new password.\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\n   * @returns {void}\n   */\n  ;\n\n  _proto.changePassword = function changePassword(oldUserPassword, newUserPassword, callback, clientMetadata) {\n    if (!(this.signInUserSession != null && this.signInUserSession.isValid())) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n\n    this.client.request('ChangePassword', {\n      PreviousPassword: oldUserPassword,\n      ProposedPassword: newUserPassword,\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n      ClientMetadata: clientMetadata\n    }, function (err) {\n      if (err) {\n        return callback(err, null);\n      }\n\n      return callback(null, 'SUCCESS');\n    });\n    return undefined;\n  }\n  /**\n   * This is used by an authenticated user to enable MFA for itself\n   * @deprecated\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @returns {void}\n   */\n  ;\n\n  _proto.enableMFA = function enableMFA(callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n\n    var mfaOptions = [];\n    var mfaEnabled = {\n      DeliveryMedium: 'SMS',\n      AttributeName: 'phone_number'\n    };\n    mfaOptions.push(mfaEnabled);\n    this.client.request('SetUserSettings', {\n      MFAOptions: mfaOptions,\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n    }, function (err) {\n      if (err) {\n        return callback(err, null);\n      }\n\n      return callback(null, 'SUCCESS');\n    });\n    return undefined;\n  }\n  /**\n   * This is used by an authenticated user to enable MFA for itself\n   * @param {IMfaSettings} smsMfaSettings the sms mfa settings\n   * @param {IMFASettings} softwareTokenMfaSettings the software token mfa settings\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @returns {void}\n   */\n  ;\n\n  _proto.setUserMfaPreference = function setUserMfaPreference(smsMfaSettings, softwareTokenMfaSettings, callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n\n    this.client.request('SetUserMFAPreference', {\n      SMSMfaSettings: smsMfaSettings,\n      SoftwareTokenMfaSettings: softwareTokenMfaSettings,\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n    }, function (err) {\n      if (err) {\n        return callback(err, null);\n      }\n\n      return callback(null, 'SUCCESS');\n    });\n    return undefined;\n  }\n  /**\n   * This is used by an authenticated user to disable MFA for itself\n   * @deprecated\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @returns {void}\n   */\n  ;\n\n  _proto.disableMFA = function disableMFA(callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n\n    var mfaOptions = [];\n    this.client.request('SetUserSettings', {\n      MFAOptions: mfaOptions,\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n    }, function (err) {\n      if (err) {\n        return callback(err, null);\n      }\n\n      return callback(null, 'SUCCESS');\n    });\n    return undefined;\n  }\n  /**\n   * This is used by an authenticated user to delete itself\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\n   * @returns {void}\n   */\n  ;\n\n  _proto.deleteUser = function deleteUser(callback, clientMetadata) {\n    var _this9 = this;\n\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n\n    this.client.request('DeleteUser', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n      ClientMetadata: clientMetadata\n    }, function (err) {\n      if (err) {\n        return callback(err, null);\n      }\n\n      _this9.clearCachedUser();\n\n      return callback(null, 'SUCCESS');\n    });\n    return undefined;\n  }\n  /**\n   * @typedef {CognitoUserAttribute | { Name:string, Value:string }} AttributeArg\n   */\n\n  /**\n   * This is used by an authenticated user to change a list of attributes\n   * @param {AttributeArg[]} attributes A list of the new user attributes.\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\n   * @returns {void}\n   */\n  ;\n\n  _proto.updateAttributes = function updateAttributes(attributes, callback, clientMetadata) {\n    var _this10 = this;\n\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n\n    this.client.request('UpdateUserAttributes', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n      UserAttributes: attributes,\n      ClientMetadata: clientMetadata\n    }, function (err) {\n      if (err) {\n        return callback(err, null);\n      } // update cached user\n\n\n      return _this10.getUserData(function () {\n        return callback(null, 'SUCCESS');\n      }, {\n        bypassCache: true\n      });\n    });\n    return undefined;\n  }\n  /**\n   * This is used by an authenticated user to get a list of attributes\n   * @param {nodeCallback<CognitoUserAttribute[]>} callback Called on success or error.\n   * @returns {void}\n   */\n  ;\n\n  _proto.getUserAttributes = function getUserAttributes(callback) {\n    if (!(this.signInUserSession != null && this.signInUserSession.isValid())) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n\n    this.client.request('GetUser', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n    }, function (err, userData) {\n      if (err) {\n        return callback(err, null);\n      }\n\n      var attributeList = [];\n\n      for (var i = 0; i < userData.UserAttributes.length; i++) {\n        var attribute = {\n          Name: userData.UserAttributes[i].Name,\n          Value: userData.UserAttributes[i].Value\n        };\n        var userAttribute = new CognitoUserAttribute(attribute);\n        attributeList.push(userAttribute);\n      }\n\n      return callback(null, attributeList);\n    });\n    return undefined;\n  }\n  /**\n   * This was previously used by an authenticated user to get MFAOptions,\n   * but no longer returns a meaningful response. Refer to the documentation for\n   * how to setup and use MFA: https://docs.amplify.aws/lib/auth/mfa/q/platform/js\n   * @deprecated\n   * @param {nodeCallback<MFAOptions>} callback Called on success or error.\n   * @returns {void}\n   */\n  ;\n\n  _proto.getMFAOptions = function getMFAOptions(callback) {\n    if (!(this.signInUserSession != null && this.signInUserSession.isValid())) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n\n    this.client.request('GetUser', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n    }, function (err, userData) {\n      if (err) {\n        return callback(err, null);\n      }\n\n      return callback(null, userData.MFAOptions);\n    });\n    return undefined;\n  }\n  /**\n   * PRIVATE ONLY: This is an internal only method and should not\n   * be directly called by the consumers.\n   */\n  ;\n\n  _proto.createGetUserRequest = function createGetUserRequest() {\n    return this.client.promisifyRequest('GetUser', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n    });\n  }\n  /**\n   * PRIVATE ONLY: This is an internal only method and should not\n   * be directly called by the consumers.\n   */\n  ;\n\n  _proto.refreshSessionIfPossible = function refreshSessionIfPossible(options) {\n    var _this11 = this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    // best effort, if not possible\n    return new Promise(function (resolve) {\n      var refresh = _this11.signInUserSession.getRefreshToken();\n\n      if (refresh && refresh.getToken()) {\n        _this11.refreshSession(refresh, resolve, options.clientMetadata);\n      } else {\n        resolve();\n      }\n    });\n  }\n  /**\n   * @typedef {Object} GetUserDataOptions\n   * @property {boolean} bypassCache - force getting data from Cognito service\n   * @property {Record<string, string>} clientMetadata - clientMetadata for getSession\n   */\n\n  /**\n   * This is used by an authenticated users to get the userData\n   * @param {nodeCallback<UserData>} callback Called on success or error.\n   * @param {GetUserDataOptions} params\n   * @returns {void}\n   */\n  ;\n\n  _proto.getUserData = function getUserData(callback, params) {\n    var _this12 = this;\n\n    if (!(this.signInUserSession != null && this.signInUserSession.isValid())) {\n      this.clearCachedUserData();\n      return callback(new Error('User is not authenticated'), null);\n    }\n\n    var userData = this.getUserDataFromCache();\n\n    if (!userData) {\n      this.fetchUserData().then(function (data) {\n        callback(null, data);\n      })[\"catch\"](callback);\n      return;\n    }\n\n    if (this.isFetchUserDataAndTokenRequired(params)) {\n      this.fetchUserData().then(function (data) {\n        return _this12.refreshSessionIfPossible(params).then(function () {\n          return data;\n        });\n      }).then(function (data) {\n        return callback(null, data);\n      })[\"catch\"](callback);\n      return;\n    }\n\n    try {\n      callback(null, JSON.parse(userData));\n      return;\n    } catch (err) {\n      this.clearCachedUserData();\n      callback(err, null);\n      return;\n    }\n  }\n  /**\n   *\n   * PRIVATE ONLY: This is an internal only method and should not\n   * be directly called by the consumers.\n   */\n  ;\n\n  _proto.getUserDataFromCache = function getUserDataFromCache() {\n    var userData = this.storage.getItem(this.userDataKey);\n    return userData;\n  }\n  /**\n   *\n   * PRIVATE ONLY: This is an internal only method and should not\n   * be directly called by the consumers.\n   */\n  ;\n\n  _proto.isFetchUserDataAndTokenRequired = function isFetchUserDataAndTokenRequired(params) {\n    var _ref = params || {},\n        _ref$bypassCache = _ref.bypassCache,\n        bypassCache = _ref$bypassCache === void 0 ? false : _ref$bypassCache;\n\n    return bypassCache;\n  }\n  /**\n   *\n   * PRIVATE ONLY: This is an internal only method and should not\n   * be directly called by the consumers.\n   */\n  ;\n\n  _proto.fetchUserData = function fetchUserData() {\n    var _this13 = this;\n\n    return this.createGetUserRequest().then(function (data) {\n      _this13.cacheUserData(data);\n\n      return data;\n    });\n  }\n  /**\n   * This is used by an authenticated user to delete a list of attributes\n   * @param {string[]} attributeList Names of the attributes to delete.\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @returns {void}\n   */\n  ;\n\n  _proto.deleteAttributes = function deleteAttributes(attributeList, callback) {\n    var _this14 = this;\n\n    if (!(this.signInUserSession != null && this.signInUserSession.isValid())) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n\n    this.client.request('DeleteUserAttributes', {\n      UserAttributeNames: attributeList,\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n    }, function (err) {\n      if (err) {\n        return callback(err, null);\n      } // update cached user\n\n\n      return _this14.getUserData(function () {\n        return callback(null, 'SUCCESS');\n      }, {\n        bypassCache: true\n      });\n    });\n    return undefined;\n  }\n  /**\n   * This is used by a user to resend a confirmation code\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\n   * @returns {void}\n   */\n  ;\n\n  _proto.resendConfirmationCode = function resendConfirmationCode(callback, clientMetadata) {\n    var jsonReq = {\n      ClientId: this.pool.getClientId(),\n      Username: this.username,\n      ClientMetadata: clientMetadata\n    };\n    this.client.request('ResendConfirmationCode', jsonReq, function (err, result) {\n      if (err) {\n        return callback(err, null);\n      }\n\n      return callback(null, result);\n    });\n  }\n  /**\n   * @typedef {Object} GetSessionOptions\n   * @property {Record<string, string>} clientMetadata - clientMetadata for getSession\n   */\n\n  /**\n   * This is used to get a session, either from the session object\n   * or from  the local storage, or by using a refresh token\n   *\n   * @param {nodeCallback<CognitoUserSession>} callback Called on success or error.\n   * @param {GetSessionOptions} options\n   * @returns {void}\n   */\n  ;\n\n  _proto.getSession = function getSession(callback, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (this.username == null) {\n      return callback(new Error('Username is null. Cannot retrieve a new session'), null);\n    }\n\n    if (this.signInUserSession != null && this.signInUserSession.isValid()) {\n      return callback(null, this.signInUserSession);\n    }\n\n    var keyPrefix = \"CognitoIdentityServiceProvider.\" + this.pool.getClientId() + \".\" + this.username;\n    var idTokenKey = keyPrefix + \".idToken\";\n    var accessTokenKey = keyPrefix + \".accessToken\";\n    var refreshTokenKey = keyPrefix + \".refreshToken\";\n    var clockDriftKey = keyPrefix + \".clockDrift\";\n\n    if (this.storage.getItem(idTokenKey)) {\n      var idToken = new CognitoIdToken({\n        IdToken: this.storage.getItem(idTokenKey)\n      });\n      var accessToken = new CognitoAccessToken({\n        AccessToken: this.storage.getItem(accessTokenKey)\n      });\n      var refreshToken = new CognitoRefreshToken({\n        RefreshToken: this.storage.getItem(refreshTokenKey)\n      });\n      var clockDrift = parseInt(this.storage.getItem(clockDriftKey), 0) || 0;\n      var sessionData = {\n        IdToken: idToken,\n        AccessToken: accessToken,\n        RefreshToken: refreshToken,\n        ClockDrift: clockDrift\n      };\n      var cachedSession = new CognitoUserSession(sessionData);\n\n      if (cachedSession.isValid()) {\n        this.signInUserSession = cachedSession;\n        return callback(null, this.signInUserSession);\n      }\n\n      if (!refreshToken.getToken()) {\n        return callback(new Error('Cannot retrieve a new session. Please authenticate.'), null);\n      }\n\n      this.refreshSession(refreshToken, callback, options.clientMetadata);\n    } else {\n      callback(new Error('Local storage is missing an ID Token, Please authenticate'), null);\n    }\n\n    return undefined;\n  }\n  /**\n   * This uses the refreshToken to retrieve a new session\n   * @param {CognitoRefreshToken} refreshToken A previous session's refresh token.\n   * @param {nodeCallback<CognitoUserSession>} callback Called on success or error.\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\n   * @returns {void}\n   */\n  ;\n\n  _proto.refreshSession = function refreshSession(refreshToken, callback, clientMetadata) {\n    var _this15 = this;\n\n    var wrappedCallback = this.pool.wrapRefreshSessionCallback ? this.pool.wrapRefreshSessionCallback(callback) : callback;\n    var authParameters = {};\n    authParameters.REFRESH_TOKEN = refreshToken.getToken();\n    var keyPrefix = \"CognitoIdentityServiceProvider.\" + this.pool.getClientId();\n    var lastUserKey = keyPrefix + \".LastAuthUser\";\n\n    if (this.storage.getItem(lastUserKey)) {\n      this.username = this.storage.getItem(lastUserKey);\n      var deviceKeyKey = keyPrefix + \".\" + this.username + \".deviceKey\";\n      this.deviceKey = this.storage.getItem(deviceKeyKey);\n      authParameters.DEVICE_KEY = this.deviceKey;\n    }\n\n    var jsonReq = {\n      ClientId: this.pool.getClientId(),\n      AuthFlow: 'REFRESH_TOKEN_AUTH',\n      AuthParameters: authParameters,\n      ClientMetadata: clientMetadata\n    };\n\n    if (this.getUserContextData()) {\n      jsonReq.UserContextData = this.getUserContextData();\n    }\n\n    this.client.request('InitiateAuth', jsonReq, function (err, authResult) {\n      if (err) {\n        if (err.code === 'NotAuthorizedException') {\n          _this15.clearCachedUser();\n        }\n\n        return wrappedCallback(err, null);\n      }\n\n      if (authResult) {\n        var authenticationResult = authResult.AuthenticationResult;\n\n        if (!Object.prototype.hasOwnProperty.call(authenticationResult, 'RefreshToken')) {\n          authenticationResult.RefreshToken = refreshToken.getToken();\n        }\n\n        _this15.signInUserSession = _this15.getCognitoUserSession(authenticationResult);\n\n        _this15.cacheTokens();\n\n        return wrappedCallback(null, _this15.signInUserSession);\n      }\n\n      return undefined;\n    });\n  }\n  /**\n   * This is used to save the session tokens to local storage\n   * @returns {void}\n   */\n  ;\n\n  _proto.cacheTokens = function cacheTokens() {\n    var keyPrefix = \"CognitoIdentityServiceProvider.\" + this.pool.getClientId();\n    var idTokenKey = keyPrefix + \".\" + this.username + \".idToken\";\n    var accessTokenKey = keyPrefix + \".\" + this.username + \".accessToken\";\n    var refreshTokenKey = keyPrefix + \".\" + this.username + \".refreshToken\";\n    var clockDriftKey = keyPrefix + \".\" + this.username + \".clockDrift\";\n    var lastUserKey = keyPrefix + \".LastAuthUser\";\n    this.storage.setItem(idTokenKey, this.signInUserSession.getIdToken().getJwtToken());\n    this.storage.setItem(accessTokenKey, this.signInUserSession.getAccessToken().getJwtToken());\n    this.storage.setItem(refreshTokenKey, this.signInUserSession.getRefreshToken().getToken());\n    this.storage.setItem(clockDriftKey, \"\" + this.signInUserSession.getClockDrift());\n    this.storage.setItem(lastUserKey, this.username);\n  }\n  /**\n   * This is to cache user data\n   */\n  ;\n\n  _proto.cacheUserData = function cacheUserData(userData) {\n    this.storage.setItem(this.userDataKey, JSON.stringify(userData));\n  }\n  /**\n   * This is to remove cached user data\n   */\n  ;\n\n  _proto.clearCachedUserData = function clearCachedUserData() {\n    this.storage.removeItem(this.userDataKey);\n  };\n\n  _proto.clearCachedUser = function clearCachedUser() {\n    this.clearCachedTokens();\n    this.clearCachedUserData();\n  }\n  /**\n   * This is used to cache the device key and device group and device password\n   * @returns {void}\n   */\n  ;\n\n  _proto.cacheDeviceKeyAndPassword = function cacheDeviceKeyAndPassword() {\n    var keyPrefix = \"CognitoIdentityServiceProvider.\" + this.pool.getClientId() + \".\" + this.username;\n    var deviceKeyKey = keyPrefix + \".deviceKey\";\n    var randomPasswordKey = keyPrefix + \".randomPasswordKey\";\n    var deviceGroupKeyKey = keyPrefix + \".deviceGroupKey\";\n    this.storage.setItem(deviceKeyKey, this.deviceKey);\n    this.storage.setItem(randomPasswordKey, this.randomPassword);\n    this.storage.setItem(deviceGroupKeyKey, this.deviceGroupKey);\n  }\n  /**\n   * This is used to get current device key and device group and device password\n   * @returns {void}\n   */\n  ;\n\n  _proto.getCachedDeviceKeyAndPassword = function getCachedDeviceKeyAndPassword() {\n    var keyPrefix = \"CognitoIdentityServiceProvider.\" + this.pool.getClientId() + \".\" + this.username;\n    var deviceKeyKey = keyPrefix + \".deviceKey\";\n    var randomPasswordKey = keyPrefix + \".randomPasswordKey\";\n    var deviceGroupKeyKey = keyPrefix + \".deviceGroupKey\";\n\n    if (this.storage.getItem(deviceKeyKey)) {\n      this.deviceKey = this.storage.getItem(deviceKeyKey);\n      this.randomPassword = this.storage.getItem(randomPasswordKey);\n      this.deviceGroupKey = this.storage.getItem(deviceGroupKeyKey);\n    }\n  }\n  /**\n   * This is used to clear the device key info from local storage\n   * @returns {void}\n   */\n  ;\n\n  _proto.clearCachedDeviceKeyAndPassword = function clearCachedDeviceKeyAndPassword() {\n    var keyPrefix = \"CognitoIdentityServiceProvider.\" + this.pool.getClientId() + \".\" + this.username;\n    var deviceKeyKey = keyPrefix + \".deviceKey\";\n    var randomPasswordKey = keyPrefix + \".randomPasswordKey\";\n    var deviceGroupKeyKey = keyPrefix + \".deviceGroupKey\";\n    this.storage.removeItem(deviceKeyKey);\n    this.storage.removeItem(randomPasswordKey);\n    this.storage.removeItem(deviceGroupKeyKey);\n  }\n  /**\n   * This is used to clear the session tokens from local storage\n   * @returns {void}\n   */\n  ;\n\n  _proto.clearCachedTokens = function clearCachedTokens() {\n    var keyPrefix = \"CognitoIdentityServiceProvider.\" + this.pool.getClientId();\n    var idTokenKey = keyPrefix + \".\" + this.username + \".idToken\";\n    var accessTokenKey = keyPrefix + \".\" + this.username + \".accessToken\";\n    var refreshTokenKey = keyPrefix + \".\" + this.username + \".refreshToken\";\n    var lastUserKey = keyPrefix + \".LastAuthUser\";\n    var clockDriftKey = keyPrefix + \".\" + this.username + \".clockDrift\";\n    this.storage.removeItem(idTokenKey);\n    this.storage.removeItem(accessTokenKey);\n    this.storage.removeItem(refreshTokenKey);\n    this.storage.removeItem(lastUserKey);\n    this.storage.removeItem(clockDriftKey);\n  }\n  /**\n   * This is used to build a user session from tokens retrieved in the authentication result\n   * @param {object} authResult Successful auth response from server.\n   * @returns {CognitoUserSession} The new user session.\n   * @private\n   */\n  ;\n\n  _proto.getCognitoUserSession = function getCognitoUserSession(authResult) {\n    var idToken = new CognitoIdToken(authResult);\n    var accessToken = new CognitoAccessToken(authResult);\n    var refreshToken = new CognitoRefreshToken(authResult);\n    var sessionData = {\n      IdToken: idToken,\n      AccessToken: accessToken,\n      RefreshToken: refreshToken\n    };\n    return new CognitoUserSession(sessionData);\n  }\n  /**\n   * This is used to initiate a forgot password request\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {inputVerificationCode?} callback.inputVerificationCode\n   *    Optional callback raised instead of onSuccess with response data.\n   * @param {onSuccess} callback.onSuccess Called on success.\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\n   * @returns {void}\n   */\n  ;\n\n  _proto.forgotPassword = function forgotPassword(callback, clientMetadata) {\n    var jsonReq = {\n      ClientId: this.pool.getClientId(),\n      Username: this.username,\n      ClientMetadata: clientMetadata\n    };\n\n    if (this.getUserContextData()) {\n      jsonReq.UserContextData = this.getUserContextData();\n    }\n\n    this.client.request('ForgotPassword', jsonReq, function (err, data) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n\n      if (typeof callback.inputVerificationCode === 'function') {\n        return callback.inputVerificationCode(data);\n      }\n\n      return callback.onSuccess(data);\n    });\n  }\n  /**\n   * This is used to confirm a new password using a confirmationCode\n   * @param {string} confirmationCode Code entered by user.\n   * @param {string} newPassword Confirm new password.\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess<void>} callback.onSuccess Called on success.\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\n   * @returns {void}\n   */\n  ;\n\n  _proto.confirmPassword = function confirmPassword(confirmationCode, newPassword, callback, clientMetadata) {\n    var jsonReq = {\n      ClientId: this.pool.getClientId(),\n      Username: this.username,\n      ConfirmationCode: confirmationCode,\n      Password: newPassword,\n      ClientMetadata: clientMetadata\n    };\n\n    if (this.getUserContextData()) {\n      jsonReq.UserContextData = this.getUserContextData();\n    }\n\n    this.client.request('ConfirmForgotPassword', jsonReq, function (err) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n\n      return callback.onSuccess('SUCCESS');\n    });\n  }\n  /**\n   * This is used to initiate an attribute confirmation request\n   * @param {string} attributeName User attribute that needs confirmation.\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {inputVerificationCode} callback.inputVerificationCode Called on success.\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\n   * @returns {void}\n   */\n  ;\n\n  _proto.getAttributeVerificationCode = function getAttributeVerificationCode(attributeName, callback, clientMetadata) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback.onFailure(new Error('User is not authenticated'));\n    }\n\n    this.client.request('GetUserAttributeVerificationCode', {\n      AttributeName: attributeName,\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n      ClientMetadata: clientMetadata\n    }, function (err, data) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n\n      if (typeof callback.inputVerificationCode === 'function') {\n        return callback.inputVerificationCode(data);\n      }\n\n      return callback.onSuccess('SUCCESS');\n    });\n    return undefined;\n  }\n  /**\n   * This is used to confirm an attribute using a confirmation code\n   * @param {string} attributeName Attribute being confirmed.\n   * @param {string} confirmationCode Code entered by user.\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess<string>} callback.onSuccess Called on success.\n   * @returns {void}\n   */\n  ;\n\n  _proto.verifyAttribute = function verifyAttribute(attributeName, confirmationCode, callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback.onFailure(new Error('User is not authenticated'));\n    }\n\n    this.client.request('VerifyUserAttribute', {\n      AttributeName: attributeName,\n      Code: confirmationCode,\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n    }, function (err) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n\n      return callback.onSuccess('SUCCESS');\n    });\n    return undefined;\n  }\n  /**\n   * This is used to get the device information using the current device key\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess<*>} callback.onSuccess Called on success with device data.\n   * @returns {void}\n   */\n  ;\n\n  _proto.getDevice = function getDevice(callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback.onFailure(new Error('User is not authenticated'));\n    }\n\n    this.client.request('GetDevice', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n      DeviceKey: this.deviceKey\n    }, function (err, data) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n\n      return callback.onSuccess(data);\n    });\n    return undefined;\n  }\n  /**\n   * This is used to forget a specific device\n   * @param {string} deviceKey Device key.\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess<string>} callback.onSuccess Called on success.\n   * @returns {void}\n   */\n  ;\n\n  _proto.forgetSpecificDevice = function forgetSpecificDevice(deviceKey, callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback.onFailure(new Error('User is not authenticated'));\n    }\n\n    this.client.request('ForgetDevice', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n      DeviceKey: deviceKey\n    }, function (err) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n\n      return callback.onSuccess('SUCCESS');\n    });\n    return undefined;\n  }\n  /**\n   * This is used to forget the current device\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess<string>} callback.onSuccess Called on success.\n   * @returns {void}\n   */\n  ;\n\n  _proto.forgetDevice = function forgetDevice(callback) {\n    var _this16 = this;\n\n    this.forgetSpecificDevice(this.deviceKey, {\n      onFailure: callback.onFailure,\n      onSuccess: function onSuccess(result) {\n        _this16.deviceKey = null;\n        _this16.deviceGroupKey = null;\n        _this16.randomPassword = null;\n\n        _this16.clearCachedDeviceKeyAndPassword();\n\n        return callback.onSuccess(result);\n      }\n    });\n  }\n  /**\n   * This is used to set the device status as remembered\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess<string>} callback.onSuccess Called on success.\n   * @returns {void}\n   */\n  ;\n\n  _proto.setDeviceStatusRemembered = function setDeviceStatusRemembered(callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback.onFailure(new Error('User is not authenticated'));\n    }\n\n    this.client.request('UpdateDeviceStatus', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n      DeviceKey: this.deviceKey,\n      DeviceRememberedStatus: 'remembered'\n    }, function (err) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n\n      return callback.onSuccess('SUCCESS');\n    });\n    return undefined;\n  }\n  /**\n   * This is used to set the device status as not remembered\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess<string>} callback.onSuccess Called on success.\n   * @returns {void}\n   */\n  ;\n\n  _proto.setDeviceStatusNotRemembered = function setDeviceStatusNotRemembered(callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback.onFailure(new Error('User is not authenticated'));\n    }\n\n    this.client.request('UpdateDeviceStatus', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n      DeviceKey: this.deviceKey,\n      DeviceRememberedStatus: 'not_remembered'\n    }, function (err) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n\n      return callback.onSuccess('SUCCESS');\n    });\n    return undefined;\n  }\n  /**\n   * This is used to list all devices for a user\n   *\n   * @param {int} limit the number of devices returned in a call\n   * @param {string | null} paginationToken the pagination token in case any was returned before\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess<*>} callback.onSuccess Called on success with device list.\n   * @returns {void}\n   */\n  ;\n\n  _proto.listDevices = function listDevices(limit, paginationToken, callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback.onFailure(new Error('User is not authenticated'));\n    }\n\n    var requestParams = {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n      Limit: limit\n    };\n\n    if (paginationToken) {\n      requestParams.PaginationToken = paginationToken;\n    }\n\n    this.client.request('ListDevices', requestParams, function (err, data) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n\n      return callback.onSuccess(data);\n    });\n    return undefined;\n  }\n  /**\n   * This is used to globally revoke all tokens issued to a user\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess<string>} callback.onSuccess Called on success.\n   * @returns {void}\n   */\n  ;\n\n  _proto.globalSignOut = function globalSignOut(callback) {\n    var _this17 = this;\n\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback.onFailure(new Error('User is not authenticated'));\n    }\n\n    this.client.request('GlobalSignOut', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n    }, function (err) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n\n      _this17.clearCachedUser();\n\n      return callback.onSuccess('SUCCESS');\n    });\n    return undefined;\n  }\n  /**\n   * This is used for the user to signOut of the application and clear the cached tokens.\n   * @returns {void}\n   */\n  ;\n\n  _proto.signOut = function signOut(revokeTokenCallback) {\n    var _this18 = this;\n\n    // If tokens won't be revoked, we just clean the client data.\n    if (!revokeTokenCallback || typeof revokeTokenCallback !== 'function') {\n      this.cleanClientData();\n      return;\n    }\n\n    this.getSession(function (error, _session) {\n      if (error) {\n        return revokeTokenCallback(error);\n      }\n\n      _this18.revokeTokens(function (err) {\n        _this18.cleanClientData();\n\n        revokeTokenCallback(err);\n      });\n    });\n  };\n\n  _proto.revokeTokens = function revokeTokens(revokeTokenCallback) {\n    if (revokeTokenCallback === void 0) {\n      revokeTokenCallback = function revokeTokenCallback() {};\n    }\n\n    if (typeof revokeTokenCallback !== 'function') {\n      throw new Error('Invalid revokeTokenCallback. It should be a function.');\n    }\n\n    var tokensToBeRevoked = [];\n\n    if (!this.signInUserSession) {\n      var error = new Error('User is not authenticated');\n      return revokeTokenCallback(error);\n    }\n\n    if (!this.signInUserSession.getAccessToken()) {\n      var _error = new Error('No Access token available');\n\n      return revokeTokenCallback(_error);\n    }\n\n    var refreshToken = this.signInUserSession.getRefreshToken().getToken();\n    var accessToken = this.signInUserSession.getAccessToken();\n\n    if (this.isSessionRevocable(accessToken)) {\n      if (refreshToken) {\n        return this.revokeToken({\n          token: refreshToken,\n          callback: revokeTokenCallback\n        });\n      }\n    }\n\n    revokeTokenCallback();\n  };\n\n  _proto.isSessionRevocable = function isSessionRevocable(token) {\n    if (token && typeof token.decodePayload === 'function') {\n      try {\n        var _token$decodePayload = token.decodePayload(),\n            origin_jti = _token$decodePayload.origin_jti;\n\n        return !!origin_jti;\n      } catch (err) {// Nothing to do, token doesnt have origin_jti claim\n      }\n    }\n\n    return false;\n  };\n\n  _proto.cleanClientData = function cleanClientData() {\n    this.signInUserSession = null;\n    this.clearCachedUser();\n  };\n\n  _proto.revokeToken = function revokeToken(_ref2) {\n    var token = _ref2.token,\n        callback = _ref2.callback;\n    this.client.requestWithRetry('RevokeToken', {\n      Token: token,\n      ClientId: this.pool.getClientId()\n    }, function (err) {\n      if (err) {\n        return callback(err);\n      }\n\n      callback();\n    });\n  }\n  /**\n   * This is used by a user trying to select a given MFA\n   * @param {string} answerChallenge the mfa the user wants\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @returns {void}\n   */\n  ;\n\n  _proto.sendMFASelectionAnswer = function sendMFASelectionAnswer(answerChallenge, callback) {\n    var _this19 = this;\n\n    var challengeResponses = {};\n    challengeResponses.USERNAME = this.username;\n    challengeResponses.ANSWER = answerChallenge;\n    var jsonReq = {\n      ChallengeName: 'SELECT_MFA_TYPE',\n      ChallengeResponses: challengeResponses,\n      ClientId: this.pool.getClientId(),\n      Session: this.Session\n    };\n\n    if (this.getUserContextData()) {\n      jsonReq.UserContextData = this.getUserContextData();\n    }\n\n    this.client.request('RespondToAuthChallenge', jsonReq, function (err, data) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n\n      _this19.Session = data.Session;\n\n      if (answerChallenge === 'SMS_MFA') {\n        return callback.mfaRequired(data.ChallengeName, data.ChallengeParameters);\n      }\n\n      if (answerChallenge === 'SOFTWARE_TOKEN_MFA') {\n        return callback.totpRequired(data.ChallengeName, data.ChallengeParameters);\n      }\n\n      return undefined;\n    });\n  }\n  /**\n   * This returns the user context data for advanced security feature.\n   * @returns {string} the user context data from CognitoUserPool\n   */\n  ;\n\n  _proto.getUserContextData = function getUserContextData() {\n    var pool = this.pool;\n    return pool.getUserContextData(this.username);\n  }\n  /**\n   * This is used by an authenticated or a user trying to authenticate to associate a TOTP MFA\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @returns {void}\n   */\n  ;\n\n  _proto.associateSoftwareToken = function associateSoftwareToken(callback) {\n    var _this20 = this;\n\n    if (!(this.signInUserSession != null && this.signInUserSession.isValid())) {\n      this.client.request('AssociateSoftwareToken', {\n        Session: this.Session\n      }, function (err, data) {\n        if (err) {\n          return callback.onFailure(err);\n        }\n\n        _this20.Session = data.Session;\n        return callback.associateSecretCode(data.SecretCode);\n      });\n    } else {\n      this.client.request('AssociateSoftwareToken', {\n        AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n      }, function (err, data) {\n        if (err) {\n          return callback.onFailure(err);\n        }\n\n        return callback.associateSecretCode(data.SecretCode);\n      });\n    }\n  }\n  /**\n   * This is used by an authenticated or a user trying to authenticate to verify a TOTP MFA\n   * @param {string} totpCode The MFA code entered by the user.\n   * @param {string} friendlyDeviceName The device name we are assigning to the device.\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @returns {void}\n   */\n  ;\n\n  _proto.verifySoftwareToken = function verifySoftwareToken(totpCode, friendlyDeviceName, callback) {\n    var _this21 = this;\n\n    if (!(this.signInUserSession != null && this.signInUserSession.isValid())) {\n      this.client.request('VerifySoftwareToken', {\n        Session: this.Session,\n        UserCode: totpCode,\n        FriendlyDeviceName: friendlyDeviceName\n      }, function (err, data) {\n        if (err) {\n          return callback.onFailure(err);\n        }\n\n        _this21.Session = data.Session;\n        var challengeResponses = {};\n        challengeResponses.USERNAME = _this21.username;\n        var jsonReq = {\n          ChallengeName: 'MFA_SETUP',\n          ClientId: _this21.pool.getClientId(),\n          ChallengeResponses: challengeResponses,\n          Session: _this21.Session\n        };\n\n        if (_this21.getUserContextData()) {\n          jsonReq.UserContextData = _this21.getUserContextData();\n        }\n\n        _this21.client.request('RespondToAuthChallenge', jsonReq, function (errRespond, dataRespond) {\n          if (errRespond) {\n            return callback.onFailure(errRespond);\n          }\n\n          _this21.signInUserSession = _this21.getCognitoUserSession(dataRespond.AuthenticationResult);\n\n          _this21.cacheTokens();\n\n          return callback.onSuccess(_this21.signInUserSession);\n        });\n\n        return undefined;\n      });\n    } else {\n      this.client.request('VerifySoftwareToken', {\n        AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n        UserCode: totpCode,\n        FriendlyDeviceName: friendlyDeviceName\n      }, function (err, data) {\n        if (err) {\n          return callback.onFailure(err);\n        }\n\n        return callback.onSuccess(data);\n      });\n    }\n  };\n\n  return CognitoUser;\n}();\n\nexport { CognitoUser as default };","/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { version } from './version';\nvar BASE_USER_AGENT = \"aws-amplify/\" + version;\nexport var Platform = {\n  userAgent: BASE_USER_AGENT + \" js\",\n  product: '',\n  navigator: null,\n  isReactNative: false\n};\n\nif (typeof navigator !== 'undefined' && navigator.product) {\n  Platform.product = navigator.product || '';\n  Platform.navigator = navigator || null;\n\n  switch (navigator.product) {\n    case 'ReactNative':\n      Platform.userAgent = BASE_USER_AGENT + \" react-native\";\n      Platform.isReactNative = true;\n      break;\n\n    default:\n      Platform.userAgent = BASE_USER_AGENT + \" js\";\n      Platform.isReactNative = false;\n      break;\n  }\n}\n\nexport var getUserAgent = function getUserAgent() {\n  return Platform.userAgent;\n};\n/**\n * @deprecated use named import\n */\n\nexport default Platform;","import { getUserAgent } from \"./Platform\"; // constructor\n\nfunction UserAgent() {} // public\n\n\nUserAgent.prototype.userAgent = getUserAgent();\nexport var appendToCognitoUserAgent = function appendToCognitoUserAgent(content) {\n  if (!content) {\n    return;\n  }\n\n  if (UserAgent.prototype.userAgent && !UserAgent.prototype.userAgent.includes(content)) {\n    UserAgent.prototype.userAgent = UserAgent.prototype.userAgent.concat(' ', content);\n  }\n\n  if (!UserAgent.prototype.userAgent || UserAgent.prototype.userAgent === '') {\n    UserAgent.prototype.userAgent = content;\n  }\n}; // class for defining the amzn user-agent\n\nexport default UserAgent;","function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport 'isomorphic-unfetch';\nimport UserAgent from './UserAgent';\n\nvar CognitoError = /*#__PURE__*/function (_Error) {\n  _inheritsLoose(CognitoError, _Error);\n\n  function CognitoError(message, code, name, statusCode) {\n    var _this;\n\n    _this = _Error.call(this, message) || this;\n    _this.code = code;\n    _this.name = name;\n    _this.statusCode = statusCode;\n    return _this;\n  }\n\n  return CognitoError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n/** @class */\n\n\nvar Client = /*#__PURE__*/function () {\n  /**\n   * Constructs a new AWS Cognito Identity Provider client object\n   * @param {string} region AWS region\n   * @param {string} endpoint endpoint\n   * @param {object} fetchOptions options for fetch API (only credentials is supported)\n   */\n  function Client(region, endpoint, fetchOptions) {\n    this.endpoint = endpoint || \"https://cognito-idp.\" + region + \".amazonaws.com/\";\n\n    var _ref = fetchOptions || {},\n        credentials = _ref.credentials;\n\n    this.fetchOptions = credentials ? {\n      credentials: credentials\n    } : {};\n  }\n  /**\n   * Makes an unauthenticated request on AWS Cognito Identity Provider API\n   * using fetch\n   * @param {string} operation API operation\n   * @param {object} params Input parameters\n   * @returns Promise<object>\n   */\n\n\n  var _proto = Client.prototype;\n\n  _proto.promisifyRequest = function promisifyRequest(operation, params) {\n    var _this2 = this;\n\n    return new Promise(function (resolve, reject) {\n      _this2.request(operation, params, function (err, data) {\n        if (err) {\n          reject(new CognitoError(err.message, err.code, err.name, err.statusCode));\n        } else {\n          resolve(data);\n        }\n      });\n    });\n  };\n\n  _proto.requestWithRetry = function requestWithRetry(operation, params, callback) {\n    var _this3 = this;\n\n    var MAX_DELAY_IN_MILLIS = 5 * 1000;\n    jitteredExponentialRetry(function (p) {\n      return new Promise(function (res, rej) {\n        _this3.request(operation, p, function (error, result) {\n          if (error) {\n            rej(error);\n          } else {\n            res(result);\n          }\n        });\n      });\n    }, [params], MAX_DELAY_IN_MILLIS).then(function (result) {\n      return callback(null, result);\n    })[\"catch\"](function (error) {\n      return callback(error);\n    });\n  }\n  /**\n   * Makes an unauthenticated request on AWS Cognito Identity Provider API\n   * using fetch\n   * @param {string} operation API operation\n   * @param {object} params Input parameters\n   * @param {function} callback Callback called when a response is returned\n   * @returns {void}\n   */\n  ;\n\n  _proto.request = function request(operation, params, callback) {\n    var headers = {\n      'Content-Type': 'application/x-amz-json-1.1',\n      'X-Amz-Target': \"AWSCognitoIdentityProviderService.\" + operation,\n      'X-Amz-User-Agent': UserAgent.prototype.userAgent\n    };\n    var options = Object.assign({}, this.fetchOptions, {\n      headers: headers,\n      method: 'POST',\n      mode: 'cors',\n      cache: 'no-cache',\n      body: JSON.stringify(params)\n    });\n    var response;\n    var responseJsonData;\n    fetch(this.endpoint, options).then(function (resp) {\n      response = resp;\n      return resp;\n    }, function (err) {\n      // If error happens here, the request failed\n      // if it is TypeError throw network error\n      if (err instanceof TypeError) {\n        throw new Error('Network error');\n      }\n\n      throw err;\n    }).then(function (resp) {\n      return resp.json()[\"catch\"](function () {\n        return {};\n      });\n    }).then(function (data) {\n      // return parsed body stream\n      if (response.ok) return callback(null, data);\n      responseJsonData = data; // Taken from aws-sdk-js/lib/protocol/json.js\n      // eslint-disable-next-line no-underscore-dangle\n\n      var code = (data.__type || data.code).split('#').pop();\n      var error = new Error(data.message || data.Message || null);\n      error.name = code;\n      error.code = code;\n      return callback(error);\n    })[\"catch\"](function (err) {\n      // first check if we have a service error\n      if (response && response.headers && response.headers.get('x-amzn-errortype')) {\n        try {\n          var code = response.headers.get('x-amzn-errortype').split(':')[0];\n          var error = new Error(response.status ? response.status.toString() : null);\n          error.code = code;\n          error.name = code;\n          error.statusCode = response.status;\n          return callback(error);\n        } catch (ex) {\n          return callback(err);\n        } // otherwise check if error is Network error\n\n      } else if (err instanceof Error && err.message === 'Network error') {\n        err.code = 'NetworkError';\n      }\n\n      return callback(err);\n    });\n  };\n\n  return Client;\n}();\n\nexport { Client as default };\nvar logger = {\n  debug: function debug() {// Intentionally blank. This package doesn't have logging\n  }\n};\n/**\n * For now, all errors are retryable.\n */\n\nvar NonRetryableError = /*#__PURE__*/function (_Error2) {\n  _inheritsLoose(NonRetryableError, _Error2);\n\n  function NonRetryableError(message) {\n    var _this4;\n\n    _this4 = _Error2.call(this, message) || this;\n    _this4.nonRetryable = true;\n    return _this4;\n  }\n\n  return NonRetryableError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nvar isNonRetryableError = function isNonRetryableError(obj) {\n  var key = 'nonRetryable';\n  return obj && obj[key];\n};\n\nfunction retry(functionToRetry, args, delayFn, attempt) {\n  if (attempt === void 0) {\n    attempt = 1;\n  }\n\n  if (typeof functionToRetry !== 'function') {\n    throw Error('functionToRetry must be a function');\n  }\n\n  logger.debug(functionToRetry.name + \" attempt #\" + attempt + \" with args: \" + JSON.stringify(args));\n  return functionToRetry.apply(void 0, args)[\"catch\"](function (err) {\n    logger.debug(\"error on \" + functionToRetry.name, err);\n\n    if (isNonRetryableError(err)) {\n      logger.debug(functionToRetry.name + \" non retryable error\", err);\n      throw err;\n    }\n\n    var retryIn = delayFn(attempt, args, err);\n    logger.debug(functionToRetry.name + \" retrying in \" + retryIn + \" ms\");\n\n    if (retryIn !== false) {\n      return new Promise(function (res) {\n        return setTimeout(res, retryIn);\n      }).then(function () {\n        return retry(functionToRetry, args, delayFn, attempt + 1);\n      });\n    } else {\n      throw err;\n    }\n  });\n}\n\nfunction jitteredBackoff(maxDelayMs) {\n  var BASE_TIME_MS = 100;\n  var JITTER_FACTOR = 100;\n  return function (attempt) {\n    var delay = Math.pow(2, attempt) * BASE_TIME_MS + JITTER_FACTOR * Math.random();\n    return delay > maxDelayMs ? false : delay;\n  };\n}\n\nvar MAX_DELAY_MS = 5 * 60 * 1000;\n\nfunction jitteredExponentialRetry(functionToRetry, args, maxDelayMs) {\n  if (maxDelayMs === void 0) {\n    maxDelayMs = MAX_DELAY_MS;\n  }\n\n  return retry(functionToRetry, args, jitteredBackoff(maxDelayMs));\n}\n\n;","/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\nimport Client from './Client';\nimport CognitoUser from './CognitoUser';\nimport StorageHelper from './StorageHelper';\nvar USER_POOL_ID_MAX_LENGTH = 55;\n/** @class */\n\nvar CognitoUserPool = /*#__PURE__*/function () {\n  /**\n   * Constructs a new CognitoUserPool object\n   * @param {object} data Creation options.\n   * @param {string} data.UserPoolId Cognito user pool id.\n   * @param {string} data.ClientId User pool application client id.\n   * @param {string} data.endpoint Optional custom service endpoint.\n   * @param {object} data.fetchOptions Optional options for fetch API.\n   *        (only credentials option is supported)\n   * @param {object} data.Storage Optional storage object.\n   * @param {boolean} data.AdvancedSecurityDataCollectionFlag Optional:\n   *        boolean flag indicating if the data collection is enabled\n   *        to support cognito advanced security features. By default, this\n   *        flag is set to true.\n   */\n  function CognitoUserPool(data, wrapRefreshSessionCallback) {\n    var _ref = data || {},\n        UserPoolId = _ref.UserPoolId,\n        ClientId = _ref.ClientId,\n        endpoint = _ref.endpoint,\n        fetchOptions = _ref.fetchOptions,\n        AdvancedSecurityDataCollectionFlag = _ref.AdvancedSecurityDataCollectionFlag;\n\n    if (!UserPoolId || !ClientId) {\n      throw new Error('Both UserPoolId and ClientId are required.');\n    }\n\n    if (UserPoolId.length > USER_POOL_ID_MAX_LENGTH || !/^[\\w-]+_[0-9a-zA-Z]+$/.test(UserPoolId)) {\n      throw new Error('Invalid UserPoolId format.');\n    }\n\n    var region = UserPoolId.split('_')[0];\n    this.userPoolId = UserPoolId;\n    this.clientId = ClientId;\n    this.client = new Client(region, endpoint, fetchOptions);\n    /**\n     * By default, AdvancedSecurityDataCollectionFlag is set to true,\n     * if no input value is provided.\n     */\n\n    this.advancedSecurityDataCollectionFlag = AdvancedSecurityDataCollectionFlag !== false;\n    this.storage = data.Storage || new StorageHelper().getStorage();\n\n    if (wrapRefreshSessionCallback) {\n      this.wrapRefreshSessionCallback = wrapRefreshSessionCallback;\n    }\n  }\n  /**\n   * @returns {string} the user pool id\n   */\n\n\n  var _proto = CognitoUserPool.prototype;\n\n  _proto.getUserPoolId = function getUserPoolId() {\n    return this.userPoolId;\n  }\n  /**\n   * @returns {string} the client id\n   */\n  ;\n\n  _proto.getClientId = function getClientId() {\n    return this.clientId;\n  }\n  /**\n   * @typedef {object} SignUpResult\n   * @property {CognitoUser} user New user.\n   * @property {bool} userConfirmed If the user is already confirmed.\n   */\n\n  /**\n   * method for signing up a user\n   * @param {string} username User's username.\n   * @param {string} password Plain-text initial password entered by user.\n   * @param {(AttributeArg[])=} userAttributes New user attributes.\n   * @param {(AttributeArg[])=} validationData Application metadata.\n   * @param {(AttributeArg[])=} clientMetadata Client metadata.\n   * @param {nodeCallback<SignUpResult>} callback Called on error or with the new user.\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\n   * @returns {void}\n   */\n  ;\n\n  _proto.signUp = function signUp(username, password, userAttributes, validationData, callback, clientMetadata) {\n    var _this = this;\n\n    var jsonReq = {\n      ClientId: this.clientId,\n      Username: username,\n      Password: password,\n      UserAttributes: userAttributes,\n      ValidationData: validationData,\n      ClientMetadata: clientMetadata\n    };\n\n    if (this.getUserContextData(username)) {\n      jsonReq.UserContextData = this.getUserContextData(username);\n    }\n\n    this.client.request('SignUp', jsonReq, function (err, data) {\n      if (err) {\n        return callback(err, null);\n      }\n\n      var cognitoUser = {\n        Username: username,\n        Pool: _this,\n        Storage: _this.storage\n      };\n      var returnData = {\n        user: new CognitoUser(cognitoUser),\n        userConfirmed: data.UserConfirmed,\n        userSub: data.UserSub,\n        codeDeliveryDetails: data.CodeDeliveryDetails\n      };\n      return callback(null, returnData);\n    });\n  }\n  /**\n   * method for getting the current user of the application from the local storage\n   *\n   * @returns {CognitoUser} the user retrieved from storage\n   */\n  ;\n\n  _proto.getCurrentUser = function getCurrentUser() {\n    var lastUserKey = \"CognitoIdentityServiceProvider.\" + this.clientId + \".LastAuthUser\";\n    var lastAuthUser = this.storage.getItem(lastUserKey);\n\n    if (lastAuthUser) {\n      var cognitoUser = {\n        Username: lastAuthUser,\n        Pool: this,\n        Storage: this.storage\n      };\n      return new CognitoUser(cognitoUser);\n    }\n\n    return null;\n  }\n  /**\n   * This method returns the encoded data string used for cognito advanced security feature.\n   * This would be generated only when developer has included the JS used for collecting the\n   * data on their client. Please refer to documentation to know more about using AdvancedSecurity\n   * features\n   * @param {string} username the username for the context data\n   * @returns {string} the user context data\n   **/\n  ;\n\n  _proto.getUserContextData = function getUserContextData(username) {\n    if (typeof AmazonCognitoAdvancedSecurityData === 'undefined') {\n      return undefined;\n    }\n    /* eslint-disable */\n\n\n    var amazonCognitoAdvancedSecurityDataConst = AmazonCognitoAdvancedSecurityData;\n    /* eslint-enable */\n\n    if (this.advancedSecurityDataCollectionFlag) {\n      var advancedSecurityData = amazonCognitoAdvancedSecurityDataConst.getData(username, this.userPoolId, this.clientId);\n\n      if (advancedSecurityData) {\n        var userContextData = {\n          EncodedData: advancedSecurityData\n        };\n        return userContextData;\n      }\n    }\n\n    return {};\n  };\n\n  return CognitoUserPool;\n}();\n\nexport { CognitoUserPool as default };","export enum AuthErrorStrings {\n\tDEFAULT_MSG = 'Authentication Error',\n\tEMPTY_EMAIL = 'Email cannot be empty',\n\tEMPTY_PHONE = 'Phone number cannot be empty',\n\tEMPTY_USERNAME = 'Username cannot be empty',\n\tINVALID_USERNAME = 'The username should either be a string or one of the sign in types',\n\tEMPTY_PASSWORD = 'Password cannot be empty',\n\tEMPTY_CODE = 'Confirmation code cannot be empty',\n\tSIGN_UP_ERROR = 'Error creating account',\n\tNO_MFA = 'No valid MFA method provided',\n\tINVALID_MFA = 'Invalid MFA type',\n\tEMPTY_CHALLENGE = 'Challenge response cannot be empty',\n\tNO_USER_SESSION = 'Failed to get the session because the user is empty',\n\tNETWORK_ERROR = 'Network Error',\n\tDEVICE_CONFIG = 'Device tracking has not been configured in this User Pool',\n}\n","import * as Cookies from 'js-cookie';\n/** @class */\n\nvar CookieStorage = /*#__PURE__*/function () {\n  /**\n   * Constructs a new CookieStorage object\n   * @param {object} data Creation options.\n   * @param {string} data.domain Cookies domain (mandatory).\n   * @param {string} data.path Cookies path (default: '/')\n   * @param {integer} data.expires Cookie expiration (in days, default: 365)\n   * @param {boolean} data.secure Cookie secure flag (default: true)\n   * @param {string} data.sameSite Cookie request behaviour (default: null)\n   */\n  function CookieStorage(data) {\n    if (data.domain) {\n      this.domain = data.domain;\n    } else {\n      throw new Error('The domain of cookieStorage can not be undefined.');\n    }\n\n    if (data.path) {\n      this.path = data.path;\n    } else {\n      this.path = '/';\n    }\n\n    if (Object.prototype.hasOwnProperty.call(data, 'expires')) {\n      this.expires = data.expires;\n    } else {\n      this.expires = 365;\n    }\n\n    if (Object.prototype.hasOwnProperty.call(data, 'secure')) {\n      this.secure = data.secure;\n    } else {\n      this.secure = true;\n    }\n\n    if (Object.prototype.hasOwnProperty.call(data, 'sameSite')) {\n      if (!['strict', 'lax', 'none'].includes(data.sameSite)) {\n        throw new Error('The sameSite value of cookieStorage must be \"lax\", \"strict\" or \"none\".');\n      }\n\n      if (data.sameSite === 'none' && !this.secure) {\n        throw new Error('sameSite = None requires the Secure attribute in latest browser versions.');\n      }\n\n      this.sameSite = data.sameSite;\n    } else {\n      this.sameSite = null;\n    }\n  }\n  /**\n   * This is used to set a specific item in storage\n   * @param {string} key - the key for the item\n   * @param {object} value - the value\n   * @returns {string} value that was set\n   */\n\n\n  var _proto = CookieStorage.prototype;\n\n  _proto.setItem = function setItem(key, value) {\n    var options = {\n      path: this.path,\n      expires: this.expires,\n      domain: this.domain,\n      secure: this.secure\n    };\n\n    if (this.sameSite) {\n      options.sameSite = this.sameSite;\n    }\n\n    Cookies.set(key, value, options);\n    return Cookies.get(key);\n  }\n  /**\n   * This is used to get a specific key from storage\n   * @param {string} key - the key for the item\n   * This is used to clear the storage\n   * @returns {string} the data item\n   */\n  ;\n\n  _proto.getItem = function getItem(key) {\n    return Cookies.get(key);\n  }\n  /**\n   * This is used to remove an item from storage\n   * @param {string} key - the key being set\n   * @returns {string} value - value that was deleted\n   */\n  ;\n\n  _proto.removeItem = function removeItem(key) {\n    var options = {\n      path: this.path,\n      expires: this.expires,\n      domain: this.domain,\n      secure: this.secure\n    };\n\n    if (this.sameSite) {\n      options.sameSite = this.sameSite;\n    }\n\n    return Cookies.remove(key, options);\n  }\n  /**\n   * This is used to clear the storage of optional\n   * items that were previously set\n   * @returns {} an empty object\n   */\n  ;\n\n  _proto.clear = function clear() {\n    var cookies = Cookies.get();\n    var numKeys = Object.keys(cookies).length;\n\n    for (var index = 0; index < numKeys; ++index) {\n      this.removeItem(Object.keys(cookies)[index]);\n    }\n\n    return {};\n  };\n\n  return CookieStorage;\n}();\n\nexport { CookieStorage as default };","/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nconst SELF = '_self';\n\nexport const launchUri = (url: string) => {\n\tconst windowProxy = window.open(url, SELF);\n\tif (windowProxy) {\n\t\treturn Promise.resolve(windowProxy);\n\t} else {\n\t\treturn Promise.reject();\n\t}\n};\n","/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nimport { parse } from 'url'; // Used for OAuth parsing of Cognito Hosted UI\nimport { launchUri } from './urlOpener';\nimport * as oAuthStorage from './oauthStorage';\n\nimport {\n\tOAuthOpts,\n\tisCognitoHostedOpts,\n\tCognitoHostedUIIdentityProvider,\n} from '../types/Auth';\n\nimport { ConsoleLogger as Logger, Hub, urlSafeEncode } from '@aws-amplify/core';\n\nimport sha256 from 'crypto-js/sha256';\nimport Base64 from 'crypto-js/enc-base64';\n\nconst AMPLIFY_SYMBOL = (typeof Symbol !== 'undefined' &&\ntypeof Symbol.for === 'function'\n\t? Symbol.for('amplify_default')\n\t: '@@amplify_default') as Symbol;\n\nconst dispatchAuthEvent = (event: string, data: any, message: string) => {\n\tHub.dispatch('auth', { event, data, message }, 'Auth', AMPLIFY_SYMBOL);\n};\n\nconst logger = new Logger('OAuth');\n\nexport default class OAuth {\n\tprivate _urlOpener;\n\tprivate _config;\n\tprivate _cognitoClientId;\n\tprivate _scopes;\n\n\tconstructor({\n\t\tconfig,\n\t\tcognitoClientId,\n\t\tscopes = [],\n\t}: {\n\t\tscopes: string[];\n\t\tconfig: OAuthOpts;\n\t\tcognitoClientId: string;\n\t}) {\n\t\tthis._urlOpener = config.urlOpener || launchUri;\n\t\tthis._config = config;\n\t\tthis._cognitoClientId = cognitoClientId;\n\n\t\tif (!this.isValidScopes(scopes))\n\t\t\tthrow Error('scopes must be a String Array');\n\t\tthis._scopes = scopes;\n\t}\n\n\tprivate isValidScopes(scopes: string[]) {\n\t\treturn (\n\t\t\tArray.isArray(scopes) && scopes.every(scope => typeof scope === 'string')\n\t\t);\n\t}\n\n\tpublic oauthSignIn(\n\t\tresponseType = 'code',\n\t\tdomain: string,\n\t\tredirectSignIn: string,\n\t\tclientId: string,\n\t\tprovider:\n\t\t\t| CognitoHostedUIIdentityProvider\n\t\t\t| string = CognitoHostedUIIdentityProvider.Cognito,\n\t\tcustomState?: string\n\t) {\n\t\tconst generatedState = this._generateState(32);\n\n\t\t/* encodeURIComponent is not URL safe, use urlSafeEncode instead. Cognito \n\t\tsingle-encodes/decodes url on first sign in and double-encodes/decodes url\n\t\twhen user already signed in. Using encodeURIComponent, Base32, Base64 add \n\t\tcharacters % or = which on further encoding becomes unsafe. '=' create issue \n\t\tfor parsing query params. \n\t\tRefer: https://github.com/aws-amplify/amplify-js/issues/5218 */\n\t\tconst state = customState\n\t\t\t? `${generatedState}-${urlSafeEncode(customState)}`\n\t\t\t: generatedState;\n\n\t\toAuthStorage.setState(state);\n\n\t\tconst pkce_key = this._generateRandom(128);\n\t\toAuthStorage.setPKCE(pkce_key);\n\n\t\tconst code_challenge = this._generateChallenge(pkce_key);\n\t\tconst code_challenge_method = 'S256';\n\n\t\tconst scopesString = this._scopes.join(' ');\n\n\t\tconst queryString = Object.entries({\n\t\t\tredirect_uri: redirectSignIn,\n\t\t\tresponse_type: responseType,\n\t\t\tclient_id: clientId,\n\t\t\tidentity_provider: provider,\n\t\t\tscope: scopesString,\n\t\t\tstate,\n\t\t\t...(responseType === 'code' ? { code_challenge } : {}),\n\t\t\t...(responseType === 'code' ? { code_challenge_method } : {}),\n\t\t})\n\t\t\t.map(([k, v]) => `${encodeURIComponent(k)}=${encodeURIComponent(v)}`)\n\t\t\t.join('&');\n\n\t\tconst URL = `https://${domain}/oauth2/authorize?${queryString}`;\n\t\tlogger.debug(`Redirecting to ${URL}`);\n\t\tthis._urlOpener(URL, redirectSignIn);\n\t}\n\n\tprivate async _handleCodeFlow(currentUrl: string) {\n\t\t/* Convert URL into an object with parameters as keys\n    { redirect_uri: 'http://localhost:3000/', response_type: 'code', ...} */\n\t\tconst { code } = (parse(currentUrl).query || '')\n\t\t\t.split('&')\n\t\t\t.map(pairings => pairings.split('='))\n\t\t\t.reduce((accum, [k, v]) => ({ ...accum, [k]: v }), { code: undefined });\n\n\t\tconst currentUrlPathname = parse(currentUrl).pathname || '/';\n\t\tconst redirectSignInPathname =\n\t\t\tparse(this._config.redirectSignIn).pathname || '/';\n\n\t\tif (!code || currentUrlPathname !== redirectSignInPathname) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst oAuthTokenEndpoint =\n\t\t\t'https://' + this._config.domain + '/oauth2/token';\n\n\t\tdispatchAuthEvent(\n\t\t\t'codeFlow',\n\t\t\t{},\n\t\t\t`Retrieving tokens from ${oAuthTokenEndpoint}`\n\t\t);\n\n\t\tconst client_id = isCognitoHostedOpts(this._config)\n\t\t\t? this._cognitoClientId\n\t\t\t: this._config.clientID;\n\n\t\tconst redirect_uri = isCognitoHostedOpts(this._config)\n\t\t\t? this._config.redirectSignIn\n\t\t\t: this._config.redirectUri;\n\n\t\tconst code_verifier = oAuthStorage.getPKCE();\n\n\t\tconst oAuthTokenBody = {\n\t\t\tgrant_type: 'authorization_code',\n\t\t\tcode,\n\t\t\tclient_id,\n\t\t\tredirect_uri,\n\t\t\t...(code_verifier ? { code_verifier } : {}),\n\t\t};\n\n\t\tlogger.debug(\n\t\t\t`Calling token endpoint: ${oAuthTokenEndpoint} with`,\n\t\t\toAuthTokenBody\n\t\t);\n\n\t\tconst body = Object.entries(oAuthTokenBody)\n\t\t\t.map(([k, v]) => `${encodeURIComponent(k)}=${encodeURIComponent(v)}`)\n\t\t\t.join('&');\n\n\t\tconst {\n\t\t\taccess_token,\n\t\t\trefresh_token,\n\t\t\tid_token,\n\t\t\terror,\n\t\t} = await ((await fetch(oAuthTokenEndpoint, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded',\n\t\t\t},\n\t\t\tbody,\n\t\t})) as any).json();\n\n\t\tif (error) {\n\t\t\tthrow new Error(error);\n\t\t}\n\n\t\treturn {\n\t\t\taccessToken: access_token,\n\t\t\trefreshToken: refresh_token,\n\t\t\tidToken: id_token,\n\t\t};\n\t}\n\n\tprivate async _handleImplicitFlow(currentUrl: string) {\n\t\t// hash is `null` if `#` doesn't exist on URL\n\t\tconst { id_token, access_token } = (parse(currentUrl).hash || '#')\n\t\t\t.substr(1) // Remove # from returned code\n\t\t\t.split('&')\n\t\t\t.map(pairings => pairings.split('='))\n\t\t\t.reduce((accum, [k, v]) => ({ ...accum, [k]: v }), {\n\t\t\t\tid_token: undefined,\n\t\t\t\taccess_token: undefined,\n\t\t\t});\n\n\t\tdispatchAuthEvent('implicitFlow', {}, `Got tokens from ${currentUrl}`);\n\t\tlogger.debug(`Retrieving implicit tokens from ${currentUrl} with`);\n\n\t\treturn {\n\t\t\taccessToken: access_token,\n\t\t\tidToken: id_token,\n\t\t\trefreshToken: null,\n\t\t};\n\t}\n\n\tpublic async handleAuthResponse(currentUrl?: string) {\n\t\ttry {\n\t\t\tconst urlParams = currentUrl\n\t\t\t\t? ({\n\t\t\t\t\t\t...(parse(currentUrl).hash || '#')\n\t\t\t\t\t\t\t.substr(1)\n\t\t\t\t\t\t\t.split('&')\n\t\t\t\t\t\t\t.map(entry => entry.split('='))\n\t\t\t\t\t\t\t.reduce((acc, [k, v]) => ((acc[k] = v), acc), {}),\n\t\t\t\t\t\t...(parse(currentUrl).query || '')\n\t\t\t\t\t\t\t.split('&')\n\t\t\t\t\t\t\t.map(entry => entry.split('='))\n\t\t\t\t\t\t\t.reduce((acc, [k, v]) => ((acc[k] = v), acc), {}),\n\t\t\t\t  } as any)\n\t\t\t\t: {};\n\t\t\tconst { error, error_description } = urlParams;\n\n\t\t\tif (error) {\n\t\t\t\tthrow new Error(error_description);\n\t\t\t}\n\n\t\t\tconst state: string = this._validateState(urlParams);\n\n\t\t\tlogger.debug(\n\t\t\t\t`Starting ${this._config.responseType} flow with ${currentUrl}`\n\t\t\t);\n\t\t\tif (this._config.responseType === 'code') {\n\t\t\t\treturn { ...(await this._handleCodeFlow(currentUrl)), state };\n\t\t\t} else {\n\t\t\t\treturn { ...(await this._handleImplicitFlow(currentUrl)), state };\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tlogger.error(`Error handling auth response.`, e);\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\tprivate _validateState(urlParams: any): string {\n\t\tif (!urlParams) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst savedState = oAuthStorage.getState();\n\t\tconst { state: returnedState } = urlParams;\n\n\t\t// This is because savedState only exists if the flow was initiated by Amplify\n\t\tif (savedState && savedState !== returnedState) {\n\t\t\tthrow new Error('Invalid state in OAuth flow');\n\t\t}\n\t\treturn returnedState;\n\t}\n\n\tpublic async signOut() {\n\t\tlet oAuthLogoutEndpoint = 'https://' + this._config.domain + '/logout?';\n\n\t\tconst client_id = isCognitoHostedOpts(this._config)\n\t\t\t? this._cognitoClientId\n\t\t\t: this._config.oauth.clientID;\n\n\t\tconst signout_uri = isCognitoHostedOpts(this._config)\n\t\t\t? this._config.redirectSignOut\n\t\t\t: this._config.returnTo;\n\n\t\toAuthLogoutEndpoint += Object.entries({\n\t\t\tclient_id,\n\t\t\tlogout_uri: encodeURIComponent(signout_uri),\n\t\t})\n\t\t\t.map(([k, v]) => `${k}=${v}`)\n\t\t\t.join('&');\n\n\t\tdispatchAuthEvent(\n\t\t\t'oAuthSignOut',\n\t\t\t{ oAuth: 'signOut' },\n\t\t\t`Signing out from ${oAuthLogoutEndpoint}`\n\t\t);\n\t\tlogger.debug(`Signing out from ${oAuthLogoutEndpoint}`);\n\n\t\treturn this._urlOpener(oAuthLogoutEndpoint, signout_uri);\n\t}\n\n\tprivate _generateState(length: number) {\n\t\tlet result = '';\n\t\tlet i = length;\n\t\tconst chars =\n\t\t\t'0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\t\tfor (; i > 0; --i)\n\t\t\tresult += chars[Math.round(Math.random() * (chars.length - 1))];\n\t\treturn result;\n\t}\n\n\tprivate _generateChallenge(code: string) {\n\t\treturn this._base64URL(sha256(code));\n\t}\n\n\tprivate _base64URL(string) {\n\t\treturn string\n\t\t\t.toString(Base64)\n\t\t\t.replace(/=/g, '')\n\t\t\t.replace(/\\+/g, '-')\n\t\t\t.replace(/\\//g, '_');\n\t}\n\n\tprivate _generateRandom(size: number) {\n\t\tconst CHARSET =\n\t\t\t'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~';\n\t\tconst buffer = new Uint8Array(size);\n\t\tif (typeof window !== 'undefined' && !!window.crypto) {\n\t\t\twindow.crypto.getRandomValues(buffer);\n\t\t} else {\n\t\t\tfor (let i = 0; i < size; i += 1) {\n\t\t\t\tbuffer[i] = (Math.random() * CHARSET.length) | 0;\n\t\t\t}\n\t\t}\n\t\treturn this._bufferToString(buffer);\n\t}\n\n\tprivate _bufferToString(buffer: Uint8Array) {\n\t\tconst CHARSET =\n\t\t\t'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\t\tconst state = [];\n\t\tfor (let i = 0; i < buffer.byteLength; i += 1) {\n\t\t\tconst index = buffer[i] % CHARSET.length;\n\t\t\tstate.push(CHARSET[index]);\n\t\t}\n\t\treturn state.join('');\n\t}\n}\n","export function urlSafeEncode(str: string) {\n\treturn str\n\t\t.split('')\n\t\t.map(char =>\n\t\t\tchar\n\t\t\t\t.charCodeAt(0)\n\t\t\t\t.toString(16)\n\t\t\t\t.padStart(2, '0')\n\t\t)\n\t\t.join('');\n}\n\nexport function urlSafeDecode(hex: string) {\n\treturn hex\n\t\t.match(/.{2}/g)\n\t\t.map(char => String.fromCharCode(parseInt(char, 16)))\n\t\t.join('');\n}\n","/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nexport const setState = (state: string) => {\n\twindow.sessionStorage.setItem('oauth_state', state);\n};\n\nexport const getState = () => {\n\tconst oauth_state = window.sessionStorage.getItem('oauth_state');\n\twindow.sessionStorage.removeItem('oauth_state');\n\treturn oauth_state;\n};\n\nexport const setPKCE = (private_key: string) => {\n\twindow.sessionStorage.setItem('ouath_pkce_key', private_key);\n};\n\nexport const getPKCE = () => {\n\tconst ouath_pkce_key = window.sessionStorage.getItem('ouath_pkce_key');\n\twindow.sessionStorage.removeItem('ouath_pkce_key');\n\treturn ouath_pkce_key;\n};\n\nexport const clearAll = () => {\n\twindow.sessionStorage.removeItem('ouath_pkce_key');\n\twindow.sessionStorage.removeItem('oauth_state');\n};\n","/*\n * Copyright 2019-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nimport { AuthErrorMessages, AuthErrorTypes } from './types';\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nimport { AuthErrorStrings } from './common/AuthErrorStrings';\n\nconst logger = new Logger('AuthError');\n\nexport class AuthError extends Error {\n\tpublic log: string;\n\tconstructor(type: AuthErrorTypes) {\n\t\tconst { message, log } = authErrorMessages[type];\n\t\tsuper(message);\n\n\t\t// Hack for making the custom error class work when transpiled to es5\n\t\t// TODO: Delete the following 2 lines after we change the build target to >= es2015\n\t\tthis.constructor = AuthError;\n\t\tObject.setPrototypeOf(this, AuthError.prototype);\n\n\t\tthis.name = 'AuthError';\n\t\tthis.log = log || message;\n\n\t\tlogger.error(this.log);\n\t}\n}\n\nexport class NoUserPoolError extends AuthError {\n\tconstructor(type: AuthErrorTypes) {\n\t\tsuper(type);\n\n\t\t// Hack for making the custom error class work when transpiled to es5\n\t\t// TODO: Delete the following 2 lines after we change the build target to >= es2015\n\t\tthis.constructor = NoUserPoolError;\n\t\tObject.setPrototypeOf(this, NoUserPoolError.prototype);\n\n\t\tthis.name = 'NoUserPoolError';\n\t}\n}\n\nexport const authErrorMessages: AuthErrorMessages = {\n\tnoConfig: {\n\t\tmessage: AuthErrorStrings.DEFAULT_MSG,\n\t\tlog: `\n            Error: Amplify has not been configured correctly.\n            This error is typically caused by one of the following scenarios:\n\n            1. Make sure you're passing the awsconfig object to Amplify.configure() in your app's entry point\n                See https://aws-amplify.github.io/docs/js/authentication#configure-your-app for more information\n            \n            2. There might be multiple conflicting versions of amplify packages in your node_modules.\n\t\t\t\tRefer to our docs site for help upgrading Amplify packages (https://docs.amplify.aws/lib/troubleshooting/upgrading/q/platform/js)\n        `,\n\t},\n\tmissingAuthConfig: {\n\t\tmessage: AuthErrorStrings.DEFAULT_MSG,\n\t\tlog: `\n            Error: Amplify has not been configured correctly. \n            The configuration object is missing required auth properties.\n            This error is typically caused by one of the following scenarios:\n\n            1. Did you run \\`amplify push\\` after adding auth via \\`amplify add auth\\`?\n                See https://aws-amplify.github.io/docs/js/authentication#amplify-project-setup for more information\n\n            2. This could also be caused by multiple conflicting versions of amplify packages, see (https://docs.amplify.aws/lib/troubleshooting/upgrading/q/platform/js) for help upgrading Amplify packages.\n        `,\n\t},\n\temptyUsername: {\n\t\tmessage: AuthErrorStrings.EMPTY_USERNAME,\n\t},\n\t// TODO: should include a list of valid sign-in types\n\tinvalidUsername: {\n\t\tmessage: AuthErrorStrings.INVALID_USERNAME,\n\t},\n\temptyPassword: {\n\t\tmessage: AuthErrorStrings.EMPTY_PASSWORD,\n\t},\n\temptyCode: {\n\t\tmessage: AuthErrorStrings.EMPTY_CODE,\n\t},\n\tsignUpError: {\n\t\tmessage: AuthErrorStrings.SIGN_UP_ERROR,\n\t\tlog: 'The first parameter should either be non-null string or object',\n\t},\n\tnoMFA: {\n\t\tmessage: AuthErrorStrings.NO_MFA,\n\t},\n\tinvalidMFA: {\n\t\tmessage: AuthErrorStrings.INVALID_MFA,\n\t},\n\temptyChallengeResponse: {\n\t\tmessage: AuthErrorStrings.EMPTY_CHALLENGE,\n\t},\n\tnoUserSession: {\n\t\tmessage: AuthErrorStrings.NO_USER_SESSION,\n\t},\n\tdeviceConfig: {\n\t\tmessage: AuthErrorStrings.DEVICE_CONFIG,\n\t},\n\tnetworkError: {\n\t\tmessage: AuthErrorStrings.NETWORK_ERROR,\n\t},\n\tdefault: {\n\t\tmessage: AuthErrorStrings.DEFAULT_MSG,\n\t},\n};\n","/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *\t http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nimport {\n\tAuthOptions,\n\tFederatedResponse,\n\tSignUpParams,\n\tFederatedUser,\n\tConfirmSignUpOptions,\n\tSignOutOpts,\n\tCurrentUserOpts,\n\tGetPreferredMFAOpts,\n\tSignInOpts,\n\tisUsernamePasswordOpts,\n\tisCognitoHostedOpts,\n\tisFederatedSignInOptions,\n\tisFederatedSignInOptionsCustom,\n\thasCustomState,\n\tFederatedSignInOptionsCustom,\n\tLegacyProvider,\n\tFederatedSignInOptions,\n\tAwsCognitoOAuthOpts,\n\tClientMetaData,\n} from './types';\n\nimport {\n\tAmplify,\n\tConsoleLogger as Logger,\n\tCredentials,\n\tHub,\n\tStorageHelper,\n\tICredentials,\n\tParser,\n\tJS,\n\tUniversalStorage,\n\turlSafeDecode,\n} from '@aws-amplify/core';\nimport {\n\tCookieStorage,\n\tCognitoUserPool,\n\tAuthenticationDetails,\n\tICognitoUserPoolData,\n\tICognitoUserData,\n\tISignUpResult,\n\tCognitoUser,\n\tMFAOption,\n\tCognitoUserSession,\n\tIAuthenticationCallback,\n\tICognitoUserAttributeData,\n\tCognitoUserAttribute,\n\tCognitoIdToken,\n\tCognitoRefreshToken,\n\tCognitoAccessToken,\n\tNodeCallback,\n} from 'amazon-cognito-identity-js';\n\nimport { parse } from 'url';\nimport OAuth from './OAuth/OAuth';\nimport { default as urlListener } from './urlListener';\nimport { AuthError, NoUserPoolError } from './Errors';\nimport {\n\tAuthErrorTypes,\n\tCognitoHostedUIIdentityProvider,\n\tIAuthDevice,\n} from './types/Auth';\n\nconst logger = new Logger('AuthClass');\nconst USER_ADMIN_SCOPE = 'aws.cognito.signin.user.admin';\n\n// 10 sec, following this guide https://www.nngroup.com/articles/response-times-3-important-limits/\nconst OAUTH_FLOW_MS_TIMEOUT = 10 * 1000;\n\nconst AMPLIFY_SYMBOL = (\n\ttypeof Symbol !== 'undefined' && typeof Symbol.for === 'function'\n\t\t? Symbol.for('amplify_default')\n\t\t: '@@amplify_default'\n) as Symbol;\n\nconst dispatchAuthEvent = (event: string, data: any, message: string) => {\n\tHub.dispatch('auth', { event, data, message }, 'Auth', AMPLIFY_SYMBOL);\n};\n\n// Cognito Documentation for max device\n// tslint:disable-next-line:max-line-length\n// https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_ListDevices.html#API_ListDevices_RequestSyntax\nconst MAX_DEVICES = 60;\n\n/**\n * Provide authentication steps\n */\nexport class AuthClass {\n\tprivate _config: AuthOptions;\n\tprivate userPool: CognitoUserPool = null;\n\tprivate user: any = null;\n\tprivate _oAuthHandler: OAuth;\n\tprivate _storage;\n\tprivate _storageSync;\n\tprivate oAuthFlowInProgress: boolean = false;\n\tprivate pendingSignIn: ReturnType<AuthClass['signInWithPassword']> | null;\n\n\tCredentials = Credentials;\n\n\t/**\n\t * Initialize Auth with AWS configurations\n\t * @param {Object} config - Configuration of the Auth\n\t */\n\tconstructor(config: AuthOptions) {\n\t\tthis.configure(config);\n\t\tthis.currentCredentials = this.currentCredentials.bind(this);\n\t\tthis.currentUserCredentials = this.currentUserCredentials.bind(this);\n\n\t\tHub.listen('auth', ({ payload }) => {\n\t\t\tconst { event } = payload;\n\t\t\tswitch (event) {\n\t\t\t\tcase 'signIn':\n\t\t\t\t\tthis._storage.setItem('amplify-signin-with-hostedUI', 'false');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'signOut':\n\t\t\t\t\tthis._storage.removeItem('amplify-signin-with-hostedUI');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'cognitoHostedUI':\n\t\t\t\t\tthis._storage.setItem('amplify-signin-with-hostedUI', 'true');\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic getModuleName() {\n\t\treturn 'Auth';\n\t}\n\n\tconfigure(config?) {\n\t\tif (!config) return this._config || {};\n\t\tlogger.debug('configure Auth');\n\t\tconst conf = Object.assign(\n\t\t\t{},\n\t\t\tthis._config,\n\t\t\tParser.parseMobilehubConfig(config).Auth,\n\t\t\tconfig\n\t\t);\n\t\tthis._config = conf;\n\t\tconst {\n\t\t\tuserPoolId,\n\t\t\tuserPoolWebClientId,\n\t\t\tcookieStorage,\n\t\t\toauth,\n\t\t\tregion,\n\t\t\tidentityPoolId,\n\t\t\tmandatorySignIn,\n\t\t\trefreshHandlers,\n\t\t\tidentityPoolRegion,\n\t\t\tclientMetadata,\n\t\t\tendpoint,\n\t\t} = this._config;\n\n\t\tif (!this._config.storage) {\n\t\t\t// backward compatability\n\t\t\tif (cookieStorage) this._storage = new CookieStorage(cookieStorage);\n\t\t\telse {\n\t\t\t\tthis._storage = config.ssr\n\t\t\t\t\t? new UniversalStorage()\n\t\t\t\t\t: new StorageHelper().getStorage();\n\t\t\t}\n\t\t} else {\n\t\t\tif (!this._isValidAuthStorage(this._config.storage)) {\n\t\t\t\tlogger.error('The storage in the Auth config is not valid!');\n\t\t\t\tthrow new Error('Empty storage object');\n\t\t\t}\n\t\t\tthis._storage = this._config.storage;\n\t\t}\n\n\t\tthis._storageSync = Promise.resolve();\n\t\tif (typeof this._storage['sync'] === 'function') {\n\t\t\tthis._storageSync = this._storage['sync']();\n\t\t}\n\n\t\tif (userPoolId) {\n\t\t\tconst userPoolData: ICognitoUserPoolData = {\n\t\t\t\tUserPoolId: userPoolId,\n\t\t\t\tClientId: userPoolWebClientId,\n\t\t\t\tendpoint,\n\t\t\t};\n\t\t\tuserPoolData.Storage = this._storage;\n\n\t\t\tthis.userPool = new CognitoUserPool(\n\t\t\t\tuserPoolData,\n\t\t\t\tthis.wrapRefreshSessionCallback\n\t\t\t);\n\t\t}\n\n\t\tthis.Credentials.configure({\n\t\t\tmandatorySignIn,\n\t\t\tregion: identityPoolRegion || region,\n\t\t\tuserPoolId,\n\t\t\tidentityPoolId,\n\t\t\trefreshHandlers,\n\t\t\tstorage: this._storage,\n\t\t});\n\n\t\t// initialize cognitoauth client if hosted ui options provided\n\t\t// to keep backward compatibility:\n\t\tconst cognitoHostedUIConfig = oauth\n\t\t\t? isCognitoHostedOpts(this._config.oauth)\n\t\t\t\t? oauth\n\t\t\t\t: (<any>oauth).awsCognito\n\t\t\t: undefined;\n\n\t\tif (cognitoHostedUIConfig) {\n\t\t\tconst cognitoAuthParams = Object.assign(\n\t\t\t\t{\n\t\t\t\t\tcognitoClientId: userPoolWebClientId,\n\t\t\t\t\tUserPoolId: userPoolId,\n\t\t\t\t\tdomain: cognitoHostedUIConfig['domain'],\n\t\t\t\t\tscopes: cognitoHostedUIConfig['scope'],\n\t\t\t\t\tredirectSignIn: cognitoHostedUIConfig['redirectSignIn'],\n\t\t\t\t\tredirectSignOut: cognitoHostedUIConfig['redirectSignOut'],\n\t\t\t\t\tresponseType: cognitoHostedUIConfig['responseType'],\n\t\t\t\t\tStorage: this._storage,\n\t\t\t\t\turlOpener: cognitoHostedUIConfig['urlOpener'],\n\t\t\t\t\tclientMetadata,\n\t\t\t\t},\n\t\t\t\tcognitoHostedUIConfig['options']\n\t\t\t);\n\n\t\t\tthis._oAuthHandler = new OAuth({\n\t\t\t\tscopes: cognitoAuthParams.scopes,\n\t\t\t\tconfig: cognitoAuthParams,\n\t\t\t\tcognitoClientId: cognitoAuthParams.cognitoClientId,\n\t\t\t});\n\n\t\t\t// **NOTE** - Remove this in a future major release as it is a breaking change\n\t\t\t// Prevents _handleAuthResponse from being called multiple times in Expo\n\t\t\t// See https://github.com/aws-amplify/amplify-js/issues/4388\n\t\t\tconst usedResponseUrls = {};\n\t\t\turlListener(({ url }) => {\n\t\t\t\tif (usedResponseUrls[url]) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tusedResponseUrls[url] = true;\n\t\t\t\tthis._handleAuthResponse(url);\n\t\t\t});\n\t\t}\n\n\t\tdispatchAuthEvent(\n\t\t\t'configured',\n\t\t\tnull,\n\t\t\t`The Auth category has been configured successfully`\n\t\t);\n\t\treturn this._config;\n\t}\n\n\twrapRefreshSessionCallback = (callback: NodeCallback.Any) => {\n\t\tconst wrapped: NodeCallback.Any = (error, data) => {\n\t\t\tif (data) {\n\t\t\t\tdispatchAuthEvent('tokenRefresh', undefined, `New token retrieved`);\n\t\t\t} else {\n\t\t\t\tdispatchAuthEvent(\n\t\t\t\t\t'tokenRefresh_failure',\n\t\t\t\t\terror,\n\t\t\t\t\t`Failed to retrieve new token`\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn callback(error, data);\n\t\t};\n\t\treturn wrapped;\n\t} // prettier-ignore\n\n\t/**\n\t * Sign up with username, password and other attributes like phone, email\n\t * @param {String | object} params - The user attributes used for signin\n\t * @param {String[]} restOfAttrs - for the backward compatability\n\t * @return - A promise resolves callback data if success\n\t */\n\tpublic signUp(\n\t\tparams: string | SignUpParams,\n\t\t...restOfAttrs: string[]\n\t): Promise<ISignUpResult> {\n\t\tif (!this.userPool) {\n\t\t\treturn this.rejectNoUserPool();\n\t\t}\n\n\t\tlet username: string = null;\n\t\tlet password: string = null;\n\t\tconst attributes: CognitoUserAttribute[] = [];\n\t\tlet validationData: CognitoUserAttribute[] = null;\n\t\tlet clientMetadata;\n\n\t\tif (params && typeof params === 'string') {\n\t\t\tusername = params;\n\t\t\tpassword = restOfAttrs ? restOfAttrs[0] : null;\n\t\t\tconst email: string = restOfAttrs ? restOfAttrs[1] : null;\n\t\t\tconst phone_number: string = restOfAttrs ? restOfAttrs[2] : null;\n\n\t\t\tif (email)\n\t\t\t\tattributes.push(\n\t\t\t\t\tnew CognitoUserAttribute({ Name: 'email', Value: email })\n\t\t\t\t);\n\n\t\t\tif (phone_number)\n\t\t\t\tattributes.push(\n\t\t\t\t\tnew CognitoUserAttribute({\n\t\t\t\t\t\tName: 'phone_number',\n\t\t\t\t\t\tValue: phone_number,\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t} else if (params && typeof params === 'object') {\n\t\t\tusername = params['username'];\n\t\t\tpassword = params['password'];\n\n\t\t\tif (params && params.clientMetadata) {\n\t\t\t\tclientMetadata = params.clientMetadata;\n\t\t\t} else if (this._config.clientMetadata) {\n\t\t\t\tclientMetadata = this._config.clientMetadata;\n\t\t\t}\n\n\t\t\tconst attrs = params['attributes'];\n\t\t\tif (attrs) {\n\t\t\t\tObject.keys(attrs).map(key => {\n\t\t\t\t\tattributes.push(\n\t\t\t\t\t\tnew CognitoUserAttribute({ Name: key, Value: attrs[key] })\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst validationDataObject = params['validationData'];\n\t\t\tif (validationDataObject) {\n\t\t\t\tvalidationData = [];\n\t\t\t\tObject.keys(validationDataObject).map(key => {\n\t\t\t\t\tvalidationData.push(\n\t\t\t\t\t\tnew CognitoUserAttribute({\n\t\t\t\t\t\t\tName: key,\n\t\t\t\t\t\t\tValue: validationDataObject[key],\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\treturn this.rejectAuthError(AuthErrorTypes.SignUpError);\n\t\t}\n\n\t\tif (!username) {\n\t\t\treturn this.rejectAuthError(AuthErrorTypes.EmptyUsername);\n\t\t}\n\t\tif (!password) {\n\t\t\treturn this.rejectAuthError(AuthErrorTypes.EmptyPassword);\n\t\t}\n\n\t\tlogger.debug('signUp attrs:', attributes);\n\t\tlogger.debug('signUp validation data:', validationData);\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.userPool.signUp(\n\t\t\t\tusername,\n\t\t\t\tpassword,\n\t\t\t\tattributes,\n\t\t\t\tvalidationData,\n\t\t\t\t(err, data) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tdispatchAuthEvent(\n\t\t\t\t\t\t\t'signUp_failure',\n\t\t\t\t\t\t\terr,\n\t\t\t\t\t\t\t`${username} failed to signup`\n\t\t\t\t\t\t);\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdispatchAuthEvent(\n\t\t\t\t\t\t\t'signUp',\n\t\t\t\t\t\t\tdata,\n\t\t\t\t\t\t\t`${username} has signed up successfully`\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresolve(data);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tclientMetadata\n\t\t\t);\n\t\t});\n\t}\n\n\t/**\n\t * Send the verification code to confirm sign up\n\t * @param {String} username - The username to be confirmed\n\t * @param {String} code - The verification code\n\t * @param {ConfirmSignUpOptions} options - other options for confirm signup\n\t * @return - A promise resolves callback data if success\n\t */\n\tpublic confirmSignUp(\n\t\tusername: string,\n\t\tcode: string,\n\t\toptions?: ConfirmSignUpOptions\n\t): Promise<any> {\n\t\tif (!this.userPool) {\n\t\t\treturn this.rejectNoUserPool();\n\t\t}\n\t\tif (!username) {\n\t\t\treturn this.rejectAuthError(AuthErrorTypes.EmptyUsername);\n\t\t}\n\t\tif (!code) {\n\t\t\treturn this.rejectAuthError(AuthErrorTypes.EmptyCode);\n\t\t}\n\n\t\tconst user = this.createCognitoUser(username);\n\t\tconst forceAliasCreation =\n\t\t\toptions && typeof options.forceAliasCreation === 'boolean'\n\t\t\t\t? options.forceAliasCreation\n\t\t\t\t: true;\n\n\t\tlet clientMetadata;\n\t\tif (options && options.clientMetadata) {\n\t\t\tclientMetadata = options.clientMetadata;\n\t\t} else if (this._config.clientMetadata) {\n\t\t\tclientMetadata = this._config.clientMetadata;\n\t\t}\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tuser.confirmRegistration(\n\t\t\t\tcode,\n\t\t\t\tforceAliasCreation,\n\t\t\t\t(err, data) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve(data);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tclientMetadata\n\t\t\t);\n\t\t});\n\t}\n\n\t/**\n\t * Resend the verification code\n\t * @param {String} username - The username to be confirmed\n\t * @param {ClientMetadata} clientMetadata - Metadata to be passed to Cognito Lambda triggers\n\t * @return - A promise resolves code delivery details if successful\n\t */\n\tpublic resendSignUp(\n\t\tusername: string,\n\t\tclientMetadata: ClientMetaData = this._config.clientMetadata\n\t): Promise<any> {\n\t\tif (!this.userPool) {\n\t\t\treturn this.rejectNoUserPool();\n\t\t}\n\t\tif (!username) {\n\t\t\treturn this.rejectAuthError(AuthErrorTypes.EmptyUsername);\n\t\t}\n\n\t\tconst user = this.createCognitoUser(username);\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tuser.resendConfirmationCode((err, data) => {\n\t\t\t\tif (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t} else {\n\t\t\t\t\tresolve(data);\n\t\t\t\t}\n\t\t\t}, clientMetadata);\n\t\t});\n\t}\n\n\t/**\n\t * Sign in\n\t * @param {String | SignInOpts} usernameOrSignInOpts - The username to be signed in or the sign in options\n\t * @param {String} password - The password of the username\n\t * @return - A promise resolves the CognitoUser\n\t */\n\tpublic signIn(\n\t\tusernameOrSignInOpts: string | SignInOpts,\n\t\tpw?: string,\n\t\tclientMetadata: ClientMetaData = this._config.clientMetadata\n\t): Promise<CognitoUser | any> {\n\t\tif (!this.userPool) {\n\t\t\treturn this.rejectNoUserPool();\n\t\t}\n\n\t\tlet username = null;\n\t\tlet password = null;\n\t\tlet validationData = {};\n\n\t\t// for backward compatibility\n\t\tif (typeof usernameOrSignInOpts === 'string') {\n\t\t\tusername = usernameOrSignInOpts;\n\t\t\tpassword = pw;\n\t\t} else if (isUsernamePasswordOpts(usernameOrSignInOpts)) {\n\t\t\tif (typeof pw !== 'undefined') {\n\t\t\t\tlogger.warn(\n\t\t\t\t\t'The password should be defined under the first parameter object!'\n\t\t\t\t);\n\t\t\t}\n\t\t\tusername = usernameOrSignInOpts.username;\n\t\t\tpassword = usernameOrSignInOpts.password;\n\t\t\tvalidationData = usernameOrSignInOpts.validationData;\n\t\t} else {\n\t\t\treturn this.rejectAuthError(AuthErrorTypes.InvalidUsername);\n\t\t}\n\t\tif (!username) {\n\t\t\treturn this.rejectAuthError(AuthErrorTypes.EmptyUsername);\n\t\t}\n\t\tconst authDetails = new AuthenticationDetails({\n\t\t\tUsername: username,\n\t\t\tPassword: password,\n\t\t\tValidationData: validationData,\n\t\t\tClientMetadata: clientMetadata,\n\t\t});\n\t\tif (password) {\n\t\t\treturn this.signInWithPassword(authDetails);\n\t\t} else {\n\t\t\treturn this.signInWithoutPassword(authDetails);\n\t\t}\n\t}\n\n\t/**\n\t * Return an object with the authentication callbacks\n\t * @param {CognitoUser} user - the cognito user object\n\t * @param {} resolve - function called when resolving the current step\n\t * @param {} reject - function called when rejecting the current step\n\t * @return - an object with the callback methods for user authentication\n\t */\n\tprivate authCallbacks(\n\t\tuser: CognitoUser,\n\t\tresolve: (value?: CognitoUser | any) => void,\n\t\treject: (value?: any) => void\n\t): IAuthenticationCallback {\n\t\tconst that = this;\n\t\treturn {\n\t\t\tonSuccess: async session => {\n\t\t\t\tlogger.debug(session);\n\t\t\t\tdelete user['challengeName'];\n\t\t\t\tdelete user['challengeParam'];\n\t\t\t\ttry {\n\t\t\t\t\tawait this.Credentials.clear();\n\t\t\t\t\tconst cred = await this.Credentials.set(session, 'session');\n\t\t\t\t\tlogger.debug('succeed to get cognito credentials', cred);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tlogger.debug('cannot get cognito credentials', e);\n\t\t\t\t} finally {\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// In order to get user attributes and MFA methods\n\t\t\t\t\t\t// We need to trigger currentUserPoolUser again\n\t\t\t\t\t\tconst currentUser = await this.currentUserPoolUser();\n\t\t\t\t\t\tthat.user = currentUser;\n\t\t\t\t\t\tdispatchAuthEvent(\n\t\t\t\t\t\t\t'signIn',\n\t\t\t\t\t\t\tcurrentUser,\n\t\t\t\t\t\t\t`A user ${user.getUsername()} has been signed in`\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresolve(currentUser);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tlogger.error('Failed to get the signed in user', e);\n\t\t\t\t\t\treject(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tonFailure: err => {\n\t\t\t\tlogger.debug('signIn failure', err);\n\t\t\t\tdispatchAuthEvent(\n\t\t\t\t\t'signIn_failure',\n\t\t\t\t\terr,\n\t\t\t\t\t`${user.getUsername()} failed to signin`\n\t\t\t\t);\n\t\t\t\treject(err);\n\t\t\t},\n\t\t\tcustomChallenge: challengeParam => {\n\t\t\t\tlogger.debug('signIn custom challenge answer required');\n\t\t\t\tuser['challengeName'] = 'CUSTOM_CHALLENGE';\n\t\t\t\tuser['challengeParam'] = challengeParam;\n\t\t\t\tresolve(user);\n\t\t\t},\n\t\t\tmfaRequired: (challengeName, challengeParam) => {\n\t\t\t\tlogger.debug('signIn MFA required');\n\t\t\t\tuser['challengeName'] = challengeName;\n\t\t\t\tuser['challengeParam'] = challengeParam;\n\t\t\t\tresolve(user);\n\t\t\t},\n\t\t\tmfaSetup: (challengeName, challengeParam) => {\n\t\t\t\tlogger.debug('signIn mfa setup', challengeName);\n\t\t\t\tuser['challengeName'] = challengeName;\n\t\t\t\tuser['challengeParam'] = challengeParam;\n\t\t\t\tresolve(user);\n\t\t\t},\n\t\t\tnewPasswordRequired: (userAttributes, requiredAttributes) => {\n\t\t\t\tlogger.debug('signIn new password');\n\t\t\t\tuser['challengeName'] = 'NEW_PASSWORD_REQUIRED';\n\t\t\t\tuser['challengeParam'] = {\n\t\t\t\t\tuserAttributes,\n\t\t\t\t\trequiredAttributes,\n\t\t\t\t};\n\t\t\t\tresolve(user);\n\t\t\t},\n\t\t\ttotpRequired: (challengeName, challengeParam) => {\n\t\t\t\tlogger.debug('signIn totpRequired');\n\t\t\t\tuser['challengeName'] = challengeName;\n\t\t\t\tuser['challengeParam'] = challengeParam;\n\t\t\t\tresolve(user);\n\t\t\t},\n\t\t\tselectMFAType: (challengeName, challengeParam) => {\n\t\t\t\tlogger.debug('signIn selectMFAType', challengeName);\n\t\t\t\tuser['challengeName'] = challengeName;\n\t\t\t\tuser['challengeParam'] = challengeParam;\n\t\t\t\tresolve(user);\n\t\t\t},\n\t\t};\n\t}\n\n\t/**\n\t * Sign in with a password\n\t * @private\n\t * @param {AuthenticationDetails} authDetails - the user sign in data\n\t * @return - A promise resolves the CognitoUser object if success or mfa required\n\t */\n\tprivate signInWithPassword(\n\t\tauthDetails: AuthenticationDetails\n\t): Promise<CognitoUser | any> {\n\t\tif (this.pendingSignIn) {\n\t\t\tthrow new Error('Pending sign-in attempt already in progress');\n\t\t}\n\n\t\tconst user = this.createCognitoUser(authDetails.getUsername());\n\n\t\tthis.pendingSignIn = new Promise((resolve, reject) => {\n\t\t\tuser.authenticateUser(\n\t\t\t\tauthDetails,\n\t\t\t\tthis.authCallbacks(\n\t\t\t\t\tuser,\n\t\t\t\t\tvalue => {\n\t\t\t\t\t\tthis.pendingSignIn = null;\n\t\t\t\t\t\tresolve(value);\n\t\t\t\t\t},\n\t\t\t\t\terror => {\n\t\t\t\t\t\tthis.pendingSignIn = null;\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t);\n\t\t});\n\n\t\treturn this.pendingSignIn;\n\t}\n\n\t/**\n\t * Sign in without a password\n\t * @private\n\t * @param {AuthenticationDetails} authDetails - the user sign in data\n\t * @return - A promise resolves the CognitoUser object if success or mfa required\n\t */\n\tprivate signInWithoutPassword(\n\t\tauthDetails: AuthenticationDetails\n\t): Promise<CognitoUser | any> {\n\t\tconst user = this.createCognitoUser(authDetails.getUsername());\n\t\tuser.setAuthenticationFlowType('CUSTOM_AUTH');\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tuser.initiateAuth(authDetails, this.authCallbacks(user, resolve, reject));\n\t\t});\n\t}\n\n\t/**\n\t * This was previously used by an authenticated user to get MFAOptions,\n\t * but no longer returns a meaningful response. Refer to the documentation for\n\t * how to setup and use MFA: https://docs.amplify.aws/lib/auth/mfa/q/platform/js\n\t * @deprecated\n\t * @param {CognitoUser} user - the current user\n\t * @return - A promise resolves the current preferred mfa option if success\n\t */\n\tpublic getMFAOptions(user: CognitoUser | any): Promise<MFAOption[]> {\n\t\treturn new Promise((res, rej) => {\n\t\t\tuser.getMFAOptions((err, mfaOptions) => {\n\t\t\t\tif (err) {\n\t\t\t\t\tlogger.debug('get MFA Options failed', err);\n\t\t\t\t\trej(err);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tlogger.debug('get MFA options success', mfaOptions);\n\t\t\t\tres(mfaOptions);\n\t\t\t\treturn;\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * get preferred mfa method\n\t * @param {CognitoUser} user - the current cognito user\n\t * @param {GetPreferredMFAOpts} params - options for getting the current user preferred MFA\n\t */\n\tpublic getPreferredMFA(\n\t\tuser: CognitoUser | any,\n\t\tparams?: GetPreferredMFAOpts\n\t): Promise<string> {\n\t\tconst that = this;\n\t\treturn new Promise((res, rej) => {\n\t\t\tconst clientMetadata = this._config.clientMetadata; // TODO: verify behavior if this is override during signIn\n\n\t\t\tconst bypassCache = params ? params.bypassCache : false;\n\t\t\tuser.getUserData(\n\t\t\t\t(err, data) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tlogger.debug('getting preferred mfa failed', err);\n\t\t\t\t\t\trej(err);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst mfaType = that._getMfaTypeFromUserData(data);\n\t\t\t\t\tif (!mfaType) {\n\t\t\t\t\t\trej('invalid MFA Type');\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tres(mfaType);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{ bypassCache, clientMetadata }\n\t\t\t);\n\t\t});\n\t}\n\n\tprivate _getMfaTypeFromUserData(data) {\n\t\tlet ret = null;\n\t\tconst preferredMFA = data.PreferredMfaSetting;\n\t\t// if the user has used Auth.setPreferredMFA() to setup the mfa type\n\t\t// then the \"PreferredMfaSetting\" would exist in the response\n\t\tif (preferredMFA) {\n\t\t\tret = preferredMFA;\n\t\t} else {\n\t\t\t// if mfaList exists but empty, then its noMFA\n\t\t\tconst mfaList = data.UserMFASettingList;\n\t\t\tif (!mfaList) {\n\t\t\t\t// if SMS was enabled by using Auth.enableSMS(),\n\t\t\t\t// the response would contain MFAOptions\n\t\t\t\t// as for now Cognito only supports for SMS, so we will say it is 'SMS_MFA'\n\t\t\t\t// if it does not exist, then it should be NOMFA\n\t\t\t\tconst MFAOptions = data.MFAOptions;\n\t\t\t\tif (MFAOptions) {\n\t\t\t\t\tret = 'SMS_MFA';\n\t\t\t\t} else {\n\t\t\t\t\tret = 'NOMFA';\n\t\t\t\t}\n\t\t\t} else if (mfaList.length === 0) {\n\t\t\t\tret = 'NOMFA';\n\t\t\t} else {\n\t\t\t\tlogger.debug('invalid case for getPreferredMFA', data);\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t}\n\n\tprivate _getUserData(user, params) {\n\t\treturn new Promise((res, rej) => {\n\t\t\tuser.getUserData((err, data) => {\n\t\t\t\tif (err) {\n\t\t\t\t\tlogger.debug('getting user data failed', err);\n\t\t\t\t\trej(err);\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\tres(data);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}, params);\n\t\t});\n\t}\n\n\t/**\n\t * set preferred MFA method\n\t * @param {CognitoUser} user - the current Cognito user\n\t * @param {string} mfaMethod - preferred mfa method\n\t * @return - A promise resolve if success\n\t */\n\tpublic async setPreferredMFA(\n\t\tuser: CognitoUser | any,\n\t\tmfaMethod: 'TOTP' | 'SMS' | 'NOMFA' | 'SMS_MFA' | 'SOFTWARE_TOKEN_MFA'\n\t): Promise<string> {\n\t\tconst clientMetadata = this._config.clientMetadata; // TODO: verify behavior if this is override during signIn\n\n\t\tconst userData = await this._getUserData(user, {\n\t\t\tbypassCache: true,\n\t\t\tclientMetadata,\n\t\t});\n\t\tlet smsMfaSettings = null;\n\t\tlet totpMfaSettings = null;\n\n\t\tswitch (mfaMethod) {\n\t\t\tcase 'TOTP':\n\t\t\tcase 'SOFTWARE_TOKEN_MFA':\n\t\t\t\ttotpMfaSettings = {\n\t\t\t\t\tPreferredMfa: true,\n\t\t\t\t\tEnabled: true,\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\tcase 'SMS':\n\t\t\tcase 'SMS_MFA':\n\t\t\t\tsmsMfaSettings = {\n\t\t\t\t\tPreferredMfa: true,\n\t\t\t\t\tEnabled: true,\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\tcase 'NOMFA':\n\t\t\t\tconst mfaList = userData['UserMFASettingList'];\n\t\t\t\tconst currentMFAType = await this._getMfaTypeFromUserData(userData);\n\t\t\t\tif (currentMFAType === 'NOMFA') {\n\t\t\t\t\treturn Promise.resolve('No change for mfa type');\n\t\t\t\t} else if (currentMFAType === 'SMS_MFA') {\n\t\t\t\t\tsmsMfaSettings = {\n\t\t\t\t\t\tPreferredMfa: false,\n\t\t\t\t\t\tEnabled: false,\n\t\t\t\t\t};\n\t\t\t\t} else if (currentMFAType === 'SOFTWARE_TOKEN_MFA') {\n\t\t\t\t\ttotpMfaSettings = {\n\t\t\t\t\t\tPreferredMfa: false,\n\t\t\t\t\t\tEnabled: false,\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\treturn this.rejectAuthError(AuthErrorTypes.InvalidMFA);\n\t\t\t\t}\n\t\t\t\t// if there is a UserMFASettingList in the response\n\t\t\t\t// we need to disable every mfa type in that list\n\t\t\t\tif (mfaList && mfaList.length !== 0) {\n\t\t\t\t\t// to disable SMS or TOTP if exists in that list\n\t\t\t\t\tmfaList.forEach(mfaType => {\n\t\t\t\t\t\tif (mfaType === 'SMS_MFA') {\n\t\t\t\t\t\t\tsmsMfaSettings = {\n\t\t\t\t\t\t\t\tPreferredMfa: false,\n\t\t\t\t\t\t\t\tEnabled: false,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} else if (mfaType === 'SOFTWARE_TOKEN_MFA') {\n\t\t\t\t\t\t\ttotpMfaSettings = {\n\t\t\t\t\t\t\t\tPreferredMfa: false,\n\t\t\t\t\t\t\t\tEnabled: false,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tlogger.debug('no validmfa method provided');\n\t\t\t\treturn this.rejectAuthError(AuthErrorTypes.NoMFA);\n\t\t}\n\n\t\tconst that = this;\n\t\treturn new Promise<string>((res, rej) => {\n\t\t\tuser.setUserMfaPreference(\n\t\t\t\tsmsMfaSettings,\n\t\t\t\ttotpMfaSettings,\n\t\t\t\t(err, result) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tlogger.debug('Set user mfa preference error', err);\n\t\t\t\t\t\treturn rej(err);\n\t\t\t\t\t}\n\t\t\t\t\tlogger.debug('Set user mfa success', result);\n\t\t\t\t\tlogger.debug('Caching the latest user data into local');\n\t\t\t\t\t// cache the latest result into user data\n\t\t\t\t\tuser.getUserData(\n\t\t\t\t\t\t(err, data) => {\n\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\tlogger.debug('getting user data failed', err);\n\t\t\t\t\t\t\t\treturn rej(err);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn res(result);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tbypassCache: true,\n\t\t\t\t\t\t\tclientMetadata,\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t}\n\n\t/**\n\t * disable SMS\n\t * @deprecated\n\t * @param {CognitoUser} user - the current user\n\t * @return - A promise resolves is success\n\t */\n\tpublic disableSMS(user: CognitoUser): Promise<string> {\n\t\treturn new Promise((res, rej) => {\n\t\t\tuser.disableMFA((err, data) => {\n\t\t\t\tif (err) {\n\t\t\t\t\tlogger.debug('disable mfa failed', err);\n\t\t\t\t\trej(err);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tlogger.debug('disable mfa succeed', data);\n\t\t\t\tres(data);\n\t\t\t\treturn;\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * enable SMS\n\t * @deprecated\n\t * @param {CognitoUser} user - the current user\n\t * @return - A promise resolves is success\n\t */\n\tpublic enableSMS(user: CognitoUser): Promise<string> {\n\t\treturn new Promise((res, rej) => {\n\t\t\tuser.enableMFA((err, data) => {\n\t\t\t\tif (err) {\n\t\t\t\t\tlogger.debug('enable mfa failed', err);\n\t\t\t\t\trej(err);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tlogger.debug('enable mfa succeed', data);\n\t\t\t\tres(data);\n\t\t\t\treturn;\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Setup TOTP\n\t * @param {CognitoUser} user - the current user\n\t * @return - A promise resolves with the secret code if success\n\t */\n\tpublic setupTOTP(user: CognitoUser | any): Promise<string> {\n\t\treturn new Promise((res, rej) => {\n\t\t\tuser.associateSoftwareToken({\n\t\t\t\tonFailure: err => {\n\t\t\t\t\tlogger.debug('associateSoftwareToken failed', err);\n\t\t\t\t\trej(err);\n\t\t\t\t\treturn;\n\t\t\t\t},\n\t\t\t\tassociateSecretCode: secretCode => {\n\t\t\t\t\tlogger.debug('associateSoftwareToken sucess', secretCode);\n\t\t\t\t\tres(secretCode);\n\t\t\t\t\treturn;\n\t\t\t\t},\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * verify TOTP setup\n\t * @param {CognitoUser} user - the current user\n\t * @param {string} challengeAnswer - challenge answer\n\t * @return - A promise resolves is success\n\t */\n\tpublic verifyTotpToken(\n\t\tuser: CognitoUser | any,\n\t\tchallengeAnswer: string\n\t): Promise<CognitoUserSession> {\n\t\tlogger.debug('verification totp token', user, challengeAnswer);\n\t\treturn new Promise((res, rej) => {\n\t\t\tuser.verifySoftwareToken(challengeAnswer, 'My TOTP device', {\n\t\t\t\tonFailure: err => {\n\t\t\t\t\tlogger.debug('verifyTotpToken failed', err);\n\t\t\t\t\trej(err);\n\t\t\t\t\treturn;\n\t\t\t\t},\n\t\t\t\tonSuccess: data => {\n\t\t\t\t\tdispatchAuthEvent(\n\t\t\t\t\t\t'signIn',\n\t\t\t\t\t\tuser,\n\t\t\t\t\t\t`A user ${user.getUsername()} has been signed in`\n\t\t\t\t\t);\n\t\t\t\t\tlogger.debug('verifyTotpToken success', data);\n\t\t\t\t\tres(data);\n\t\t\t\t\treturn;\n\t\t\t\t},\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Send MFA code to confirm sign in\n\t * @param {Object} user - The CognitoUser object\n\t * @param {String} code - The confirmation code\n\t */\n\tpublic confirmSignIn(\n\t\tuser: CognitoUser | any,\n\t\tcode: string,\n\t\tmfaType?: 'SMS_MFA' | 'SOFTWARE_TOKEN_MFA' | null,\n\t\tclientMetadata: ClientMetaData = this._config.clientMetadata\n\t): Promise<CognitoUser | any> {\n\t\tif (!code) {\n\t\t\treturn this.rejectAuthError(AuthErrorTypes.EmptyCode);\n\t\t}\n\n\t\tconst that = this;\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tuser.sendMFACode(\n\t\t\t\tcode,\n\t\t\t\t{\n\t\t\t\t\tonSuccess: async session => {\n\t\t\t\t\t\tlogger.debug(session);\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tawait this.Credentials.clear();\n\t\t\t\t\t\t\tconst cred = await this.Credentials.set(session, 'session');\n\t\t\t\t\t\t\tlogger.debug('succeed to get cognito credentials', cred);\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tlogger.debug('cannot get cognito credentials', e);\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\tthat.user = user;\n\n\t\t\t\t\t\t\tdispatchAuthEvent(\n\t\t\t\t\t\t\t\t'signIn',\n\t\t\t\t\t\t\t\tuser,\n\t\t\t\t\t\t\t\t`A user ${user.getUsername()} has been signed in`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresolve(user);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tonFailure: err => {\n\t\t\t\t\t\tlogger.debug('confirm signIn failure', err);\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tmfaType,\n\t\t\t\tclientMetadata\n\t\t\t);\n\t\t});\n\t}\n\n\tpublic completeNewPassword(\n\t\tuser: CognitoUser | any,\n\t\tpassword: string,\n\t\trequiredAttributes: any = {},\n\t\tclientMetadata: ClientMetaData = this._config.clientMetadata\n\t): Promise<CognitoUser | any> {\n\t\tif (!password) {\n\t\t\treturn this.rejectAuthError(AuthErrorTypes.EmptyPassword);\n\t\t}\n\n\t\tconst that = this;\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tuser.completeNewPasswordChallenge(\n\t\t\t\tpassword,\n\t\t\t\trequiredAttributes,\n\t\t\t\t{\n\t\t\t\t\tonSuccess: async session => {\n\t\t\t\t\t\tlogger.debug(session);\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tawait this.Credentials.clear();\n\t\t\t\t\t\t\tconst cred = await this.Credentials.set(session, 'session');\n\t\t\t\t\t\t\tlogger.debug('succeed to get cognito credentials', cred);\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tlogger.debug('cannot get cognito credentials', e);\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\tthat.user = user;\n\t\t\t\t\t\t\tdispatchAuthEvent(\n\t\t\t\t\t\t\t\t'signIn',\n\t\t\t\t\t\t\t\tuser,\n\t\t\t\t\t\t\t\t`A user ${user.getUsername()} has been signed in`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresolve(user);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tonFailure: err => {\n\t\t\t\t\t\tlogger.debug('completeNewPassword failure', err);\n\t\t\t\t\t\tdispatchAuthEvent(\n\t\t\t\t\t\t\t'completeNewPassword_failure',\n\t\t\t\t\t\t\terr,\n\t\t\t\t\t\t\t`${this.user} failed to complete the new password flow`\n\t\t\t\t\t\t);\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t},\n\t\t\t\t\tmfaRequired: (challengeName, challengeParam) => {\n\t\t\t\t\t\tlogger.debug('signIn MFA required');\n\t\t\t\t\t\tuser['challengeName'] = challengeName;\n\t\t\t\t\t\tuser['challengeParam'] = challengeParam;\n\t\t\t\t\t\tresolve(user);\n\t\t\t\t\t},\n\t\t\t\t\tmfaSetup: (challengeName, challengeParam) => {\n\t\t\t\t\t\tlogger.debug('signIn mfa setup', challengeName);\n\t\t\t\t\t\tuser['challengeName'] = challengeName;\n\t\t\t\t\t\tuser['challengeParam'] = challengeParam;\n\t\t\t\t\t\tresolve(user);\n\t\t\t\t\t},\n\t\t\t\t\ttotpRequired: (challengeName, challengeParam) => {\n\t\t\t\t\t\tlogger.debug('signIn mfa setup', challengeName);\n\t\t\t\t\t\tuser['challengeName'] = challengeName;\n\t\t\t\t\t\tuser['challengeParam'] = challengeParam;\n\t\t\t\t\t\tresolve(user);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tclientMetadata\n\t\t\t);\n\t\t});\n\t}\n\n\t/**\n\t * Send the answer to a custom challenge\n\t * @param {CognitoUser} user - The CognitoUser object\n\t * @param {String} challengeResponses - The confirmation code\n\t */\n\tpublic sendCustomChallengeAnswer(\n\t\tuser: CognitoUser | any,\n\t\tchallengeResponses: string,\n\t\tclientMetadata: ClientMetaData = this._config.clientMetadata\n\t): Promise<CognitoUser | any> {\n\t\tif (!this.userPool) {\n\t\t\treturn this.rejectNoUserPool();\n\t\t}\n\t\tif (!challengeResponses) {\n\t\t\treturn this.rejectAuthError(AuthErrorTypes.EmptyChallengeResponse);\n\t\t}\n\n\t\tconst that = this;\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tuser.sendCustomChallengeAnswer(\n\t\t\t\tchallengeResponses,\n\t\t\t\tthis.authCallbacks(user, resolve, reject),\n\t\t\t\tclientMetadata\n\t\t\t);\n\t\t});\n\t}\n\n\t/**\n\t * Delete an authenticated users' attributes\n\t * @param {CognitoUser} - The currently logged in user object\n\t * @return {Promise}\n\t **/\n\tpublic deleteUserAttributes(\n\t\tuser: CognitoUser | any,\n\t\tattributeNames: string[]\n\t) {\n\t\tconst that = this;\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthat.userSession(user).then(session => {\n\t\t\t\tuser.deleteAttributes(attributeNames, (err, result) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn reject(err);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn resolve(result);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Delete the current authenticated user\n\t * @return {Promise}\n\t **/\n\t//TODO: Check return type void\n\tpublic async deleteUser(): Promise<string | void> {\n\t\ttry {\n\t\t\tawait this._storageSync;\n\t\t} catch (e) {\n\t\t\tlogger.debug('Failed to sync cache info into memory', e);\n\t\t\tthrow new Error(e);\n\t\t}\n\n\t\tconst isSignedInHostedUI =\n\t\t\tthis._oAuthHandler &&\n\t\t\tthis._storage.getItem('amplify-signin-with-hostedUI') === 'true';\n\n\t\treturn new Promise(async (res, rej) => {\n\t\t\tif (this.userPool) {\n\t\t\t\tconst user = this.userPool.getCurrentUser();\n\n\t\t\t\tif (!user) {\n\t\t\t\t\tlogger.debug('Failed to get user from user pool');\n\t\t\t\t\treturn rej(new Error('No current user.'));\n\t\t\t\t} else {\n\t\t\t\t\tuser.getSession(async (err, session) => {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\tlogger.debug('Failed to get the user session', err);\n\t\t\t\t\t\t\treturn rej(err);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tuser.deleteUser((err, result: string) => {\n\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\trej(err);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tdispatchAuthEvent(\n\t\t\t\t\t\t\t\t\t\t'userDeleted',\n\t\t\t\t\t\t\t\t\t\tresult,\n\t\t\t\t\t\t\t\t\t\t'The authenticated user has been deleted.'\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tuser.signOut();\n\t\t\t\t\t\t\t\t\tthis.user = null;\n\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\tthis.cleanCachedItems(); // clean aws credentials\n\t\t\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\t\t\t// TODO: change to rejects in refactor\n\t\t\t\t\t\t\t\t\t\tlogger.debug('failed to clear cached items');\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif (isSignedInHostedUI) {\n\t\t\t\t\t\t\t\t\t\tthis.oAuthSignOutRedirect(res, rej);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tdispatchAuthEvent(\n\t\t\t\t\t\t\t\t\t\t\t'signOut',\n\t\t\t\t\t\t\t\t\t\t\tthis.user,\n\t\t\t\t\t\t\t\t\t\t\t`A user has been signed out`\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\tres(result);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlogger.debug('no Congito User pool');\n\t\t\t\trej(new Error('Cognito User pool does not exist'));\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Update an authenticated users' attributes\n\t * @param {CognitoUser} - The currently logged in user object\n\t * @return {Promise}\n\t **/\n\tpublic updateUserAttributes(\n\t\tuser: CognitoUser | any,\n\t\tattributes: object,\n\t\tclientMetadata: ClientMetaData = this._config.clientMetadata\n\t): Promise<string> {\n\t\tconst attributeList: ICognitoUserAttributeData[] = [];\n\t\tconst that = this;\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthat.userSession(user).then(session => {\n\t\t\t\tfor (const key in attributes) {\n\t\t\t\t\tif (key !== 'sub' && key.indexOf('_verified') < 0) {\n\t\t\t\t\t\tconst attr: ICognitoUserAttributeData = {\n\t\t\t\t\t\t\tName: key,\n\t\t\t\t\t\t\tValue: attributes[key],\n\t\t\t\t\t\t};\n\t\t\t\t\t\tattributeList.push(attr);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tuser.updateAttributes(\n\t\t\t\t\tattributeList,\n\t\t\t\t\t(err, result) => {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\treturn reject(err);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn resolve(result);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tclientMetadata\n\t\t\t\t);\n\t\t\t});\n\t\t});\n\t}\n\t/**\n\t * Return user attributes\n\t * @param {Object} user - The CognitoUser object\n\t * @return - A promise resolves to user attributes if success\n\t */\n\tpublic userAttributes(\n\t\tuser: CognitoUser | any\n\t): Promise<CognitoUserAttribute[]> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.userSession(user).then(session => {\n\t\t\t\tuser.getUserAttributes((err, attributes) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve(attributes);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic verifiedContact(user: CognitoUser | any) {\n\t\tconst that = this;\n\t\treturn this.userAttributes(user).then(attributes => {\n\t\t\tconst attrs = that.attributesToObject(attributes);\n\t\t\tconst unverified = {};\n\t\t\tconst verified = {};\n\t\t\tif (attrs['email']) {\n\t\t\t\tif (attrs['email_verified']) {\n\t\t\t\t\tverified['email'] = attrs['email'];\n\t\t\t\t} else {\n\t\t\t\t\tunverified['email'] = attrs['email'];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (attrs['phone_number']) {\n\t\t\t\tif (attrs['phone_number_verified']) {\n\t\t\t\t\tverified['phone_number'] = attrs['phone_number'];\n\t\t\t\t} else {\n\t\t\t\t\tunverified['phone_number'] = attrs['phone_number'];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tverified,\n\t\t\t\tunverified,\n\t\t\t};\n\t\t});\n\t}\n\n\t/**\n\t * Get current authenticated user\n\t * @return - A promise resolves to current authenticated CognitoUser if success\n\t */\n\tpublic currentUserPoolUser(\n\t\tparams?: CurrentUserOpts\n\t): Promise<CognitoUser | any> {\n\t\tif (!this.userPool) {\n\t\t\treturn this.rejectNoUserPool();\n\t\t}\n\n\t\treturn new Promise((res, rej) => {\n\t\t\tthis._storageSync\n\t\t\t\t.then(async () => {\n\t\t\t\t\tif (this.isOAuthInProgress()) {\n\t\t\t\t\t\tlogger.debug('OAuth signIn in progress, waiting for resolution...');\n\n\t\t\t\t\t\tawait new Promise(res => {\n\t\t\t\t\t\t\tconst timeoutId = setTimeout(() => {\n\t\t\t\t\t\t\t\tlogger.debug('OAuth signIn in progress timeout');\n\n\t\t\t\t\t\t\t\tHub.remove('auth', hostedUISignCallback);\n\n\t\t\t\t\t\t\t\tres();\n\t\t\t\t\t\t\t}, OAUTH_FLOW_MS_TIMEOUT);\n\n\t\t\t\t\t\t\tHub.listen('auth', hostedUISignCallback);\n\n\t\t\t\t\t\t\tfunction hostedUISignCallback({ payload }) {\n\t\t\t\t\t\t\t\tconst { event } = payload;\n\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tevent === 'cognitoHostedUI' ||\n\t\t\t\t\t\t\t\t\tevent === 'cognitoHostedUI_failure'\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\tlogger.debug(`OAuth signIn resolved: ${event}`);\n\t\t\t\t\t\t\t\t\tclearTimeout(timeoutId);\n\n\t\t\t\t\t\t\t\t\tHub.remove('auth', hostedUISignCallback);\n\n\t\t\t\t\t\t\t\t\tres();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tconst user = this.userPool.getCurrentUser();\n\n\t\t\t\t\tif (!user) {\n\t\t\t\t\t\tlogger.debug('Failed to get user from user pool');\n\t\t\t\t\t\trej('No current user');\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst clientMetadata = this._config.clientMetadata; // TODO: verify behavior if this is override during signIn\n\n\t\t\t\t\t// refresh the session if the session expired.\n\t\t\t\t\tuser.getSession(\n\t\t\t\t\t\tasync (err, session) => {\n\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\tlogger.debug('Failed to get the user session', err);\n\t\t\t\t\t\t\t\trej(err);\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// get user data from Cognito\n\t\t\t\t\t\t\tconst bypassCache = params ? params.bypassCache : false;\n\n\t\t\t\t\t\t\tif (bypassCache) {\n\t\t\t\t\t\t\t\tawait this.Credentials.clear();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst clientMetadata = this._config.clientMetadata; // TODO: verify behavior if this is override during signIn\n\n\t\t\t\t\t\t\t// validate the token's scope first before calling this function\n\t\t\t\t\t\t\tconst { scope = '' } = session.getAccessToken().decodePayload();\n\t\t\t\t\t\t\tif (scope.split(' ').includes(USER_ADMIN_SCOPE)) {\n\t\t\t\t\t\t\t\tuser.getUserData(\n\t\t\t\t\t\t\t\t\t(err, data) => {\n\t\t\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\t\t\tlogger.debug('getting user data failed', err);\n\t\t\t\t\t\t\t\t\t\t\t// Make sure the user is still valid\n\t\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\t\terr.message === 'User is disabled.' ||\n\t\t\t\t\t\t\t\t\t\t\t\terr.message === 'User does not exist.' ||\n\t\t\t\t\t\t\t\t\t\t\t\terr.message === 'Access Token has been revoked' // Session revoked by another app\n\t\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\t\trej(err);\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t// the error may also be thrown when lack of permissions to get user info etc\n\t\t\t\t\t\t\t\t\t\t\t\t// in that case we just bypass the error\n\t\t\t\t\t\t\t\t\t\t\t\tres(user);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tconst preferredMFA = data.PreferredMfaSetting || 'NOMFA';\n\t\t\t\t\t\t\t\t\t\tconst attributeList = [];\n\n\t\t\t\t\t\t\t\t\t\tfor (let i = 0; i < data.UserAttributes.length; i++) {\n\t\t\t\t\t\t\t\t\t\t\tconst attribute = {\n\t\t\t\t\t\t\t\t\t\t\t\tName: data.UserAttributes[i].Name,\n\t\t\t\t\t\t\t\t\t\t\t\tValue: data.UserAttributes[i].Value,\n\t\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\t\tconst userAttribute = new CognitoUserAttribute(attribute);\n\t\t\t\t\t\t\t\t\t\t\tattributeList.push(userAttribute);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tconst attributes = this.attributesToObject(attributeList);\n\t\t\t\t\t\t\t\t\t\tObject.assign(user, { attributes, preferredMFA });\n\t\t\t\t\t\t\t\t\t\treturn res(user);\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{ bypassCache, clientMetadata }\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tlogger.debug(\n\t\t\t\t\t\t\t\t\t`Unable to get the user data because the ${USER_ADMIN_SCOPE} ` +\n\t\t\t\t\t\t\t\t\t\t`is not in the scopes of the access token`\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\treturn res(user);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ clientMetadata }\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t\t.catch(e => {\n\t\t\t\t\tlogger.debug('Failed to sync cache info into memory', e);\n\t\t\t\t\treturn rej(e);\n\t\t\t\t});\n\t\t});\n\t}\n\n\tprivate isOAuthInProgress(): boolean {\n\t\treturn this.oAuthFlowInProgress;\n\t}\n\n\t/**\n\t * Get current authenticated user\n\t * @param {CurrentUserOpts} - options for getting the current user\n\t * @return - A promise resolves to current authenticated CognitoUser if success\n\t */\n\tpublic async currentAuthenticatedUser(\n\t\tparams?: CurrentUserOpts\n\t): Promise<CognitoUser | any> {\n\t\tlogger.debug('getting current authenticated user');\n\t\tlet federatedUser = null;\n\t\ttry {\n\t\t\tawait this._storageSync;\n\t\t} catch (e) {\n\t\t\tlogger.debug('Failed to sync cache info into memory', e);\n\t\t\tthrow e;\n\t\t}\n\n\t\ttry {\n\t\t\tconst federatedInfo = JSON.parse(\n\t\t\t\tthis._storage.getItem('aws-amplify-federatedInfo')\n\t\t\t);\n\t\t\tif (federatedInfo) {\n\t\t\t\tfederatedUser = {\n\t\t\t\t\t...federatedInfo.user,\n\t\t\t\t\ttoken: federatedInfo.token,\n\t\t\t\t};\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tlogger.debug('cannot load federated user from auth storage');\n\t\t}\n\n\t\tif (federatedUser) {\n\t\t\tthis.user = federatedUser;\n\t\t\tlogger.debug('get current authenticated federated user', this.user);\n\t\t\treturn this.user;\n\t\t} else {\n\t\t\tlogger.debug('get current authenticated userpool user');\n\t\t\tlet user = null;\n\t\t\ttry {\n\t\t\t\tuser = await this.currentUserPoolUser(params);\n\t\t\t} catch (e) {\n\t\t\t\tif (e === 'No userPool') {\n\t\t\t\t\tlogger.error(\n\t\t\t\t\t\t'Cannot get the current user because the user pool is missing. ' +\n\t\t\t\t\t\t\t'Please make sure the Auth module is configured with a valid Cognito User Pool ID'\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tlogger.debug('The user is not authenticated by the error', e);\n\t\t\t\treturn Promise.reject('The user is not authenticated');\n\t\t\t}\n\t\t\tthis.user = user;\n\t\t\treturn this.user;\n\t\t}\n\t}\n\n\t/**\n\t * Get current user's session\n\t * @return - A promise resolves to session object if success\n\t */\n\tpublic currentSession(): Promise<CognitoUserSession> {\n\t\tconst that = this;\n\t\tlogger.debug('Getting current session');\n\t\t// Purposely not calling the reject method here because we don't need a console error\n\t\tif (!this.userPool) {\n\t\t\treturn Promise.reject();\n\t\t}\n\n\t\treturn new Promise((res, rej) => {\n\t\t\tthat\n\t\t\t\t.currentUserPoolUser()\n\t\t\t\t.then(user => {\n\t\t\t\t\tthat\n\t\t\t\t\t\t.userSession(user)\n\t\t\t\t\t\t.then(session => {\n\t\t\t\t\t\t\tres(session);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(e => {\n\t\t\t\t\t\t\tlogger.debug('Failed to get the current session', e);\n\t\t\t\t\t\t\trej(e);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.catch(e => {\n\t\t\t\t\tlogger.debug('Failed to get the current user', e);\n\t\t\t\t\trej(e);\n\t\t\t\t\treturn;\n\t\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Get the corresponding user session\n\t * @param {Object} user - The CognitoUser object\n\t * @return - A promise resolves to the session\n\t */\n\tpublic userSession(user): Promise<CognitoUserSession> {\n\t\tif (!user) {\n\t\t\tlogger.debug('the user is null');\n\t\t\treturn this.rejectAuthError(AuthErrorTypes.NoUserSession);\n\t\t}\n\t\tconst clientMetadata = this._config.clientMetadata; // TODO: verify behavior if this is override during signIn\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlogger.debug('Getting the session from this user:', user);\n\t\t\tuser.getSession(\n\t\t\t\t(err, session) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tlogger.debug('Failed to get the session from user', user);\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlogger.debug('Succeed to get the user session', session);\n\t\t\t\t\t\tresolve(session);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{ clientMetadata }\n\t\t\t);\n\t\t});\n\t}\n\n\t/**\n\t * Get authenticated credentials of current user.\n\t * @return - A promise resolves to be current user's credentials\n\t */\n\tpublic async currentUserCredentials(): Promise<ICredentials> {\n\t\tlogger.debug('Getting current user credentials');\n\n\t\ttry {\n\t\t\tawait this._storageSync;\n\t\t} catch (e) {\n\t\t\tlogger.debug('Failed to sync cache info into memory', e);\n\t\t\tthrow e;\n\t\t}\n\n\t\t// first to check whether there is federation info in the auth storage\n\t\tlet federatedInfo = null;\n\t\ttry {\n\t\t\tfederatedInfo = JSON.parse(\n\t\t\t\tthis._storage.getItem('aws-amplify-federatedInfo')\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tlogger.debug('failed to get or parse item aws-amplify-federatedInfo', e);\n\t\t}\n\n\t\tif (federatedInfo) {\n\t\t\t// refresh the jwt token here if necessary\n\t\t\treturn this.Credentials.refreshFederatedToken(federatedInfo);\n\t\t} else {\n\t\t\treturn this.currentSession()\n\t\t\t\t.then(session => {\n\t\t\t\t\tlogger.debug('getting session success', session);\n\t\t\t\t\treturn this.Credentials.set(session, 'session');\n\t\t\t\t})\n\t\t\t\t.catch(error => {\n\t\t\t\t\tlogger.debug('getting session failed', error);\n\t\t\t\t\treturn this.Credentials.set(null, 'guest');\n\t\t\t\t});\n\t\t}\n\t}\n\n\tpublic currentCredentials(): Promise<ICredentials> {\n\t\tlogger.debug('getting current credentials');\n\t\treturn this.Credentials.get();\n\t}\n\n\t/**\n\t * Initiate an attribute confirmation request\n\t * @param {Object} user - The CognitoUser\n\t * @param {Object} attr - The attributes to be verified\n\t * @return - A promise resolves to callback data if success\n\t */\n\tpublic verifyUserAttribute(\n\t\tuser: CognitoUser | any,\n\t\tattr: string,\n\t\tclientMetadata: ClientMetaData = this._config.clientMetadata\n\t): Promise<void> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tuser.getAttributeVerificationCode(\n\t\t\t\tattr,\n\t\t\t\t{\n\t\t\t\t\tonSuccess(success) {\n\t\t\t\t\t\treturn resolve(success);\n\t\t\t\t\t},\n\t\t\t\t\tonFailure(err) {\n\t\t\t\t\t\treturn reject(err);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tclientMetadata\n\t\t\t);\n\t\t});\n\t}\n\n\t/**\n\t * Confirm an attribute using a confirmation code\n\t * @param {Object} user - The CognitoUser\n\t * @param {Object} attr - The attribute to be verified\n\t * @param {String} code - The confirmation code\n\t * @return - A promise resolves to callback data if success\n\t */\n\tpublic verifyUserAttributeSubmit(\n\t\tuser: CognitoUser | any,\n\t\tattr: string,\n\t\tcode: string\n\t): Promise<string> {\n\t\tif (!code) {\n\t\t\treturn this.rejectAuthError(AuthErrorTypes.EmptyCode);\n\t\t}\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tuser.verifyAttribute(attr, code, {\n\t\t\t\tonSuccess(data) {\n\t\t\t\t\tresolve(data);\n\t\t\t\t\treturn;\n\t\t\t\t},\n\t\t\t\tonFailure(err) {\n\t\t\t\t\treject(err);\n\t\t\t\t\treturn;\n\t\t\t\t},\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic verifyCurrentUserAttribute(attr: string): Promise<void> {\n\t\tconst that = this;\n\t\treturn that\n\t\t\t.currentUserPoolUser()\n\t\t\t.then(user => that.verifyUserAttribute(user, attr));\n\t}\n\n\t/**\n\t * Confirm current user's attribute using a confirmation code\n\t * @param {Object} attr - The attribute to be verified\n\t * @param {String} code - The confirmation code\n\t * @return - A promise resolves to callback data if success\n\t */\n\tverifyCurrentUserAttributeSubmit(\n\t\tattr: string,\n\t\tcode: string\n\t): Promise<string> {\n\t\tconst that = this;\n\t\treturn that\n\t\t\t.currentUserPoolUser()\n\t\t\t.then(user => that.verifyUserAttributeSubmit(user, attr, code));\n\t}\n\n\tprivate async cognitoIdentitySignOut(\n\t\topts: SignOutOpts,\n\t\tuser: CognitoUser | any\n\t) {\n\t\ttry {\n\t\t\tawait this._storageSync;\n\t\t} catch (e) {\n\t\t\tlogger.debug('Failed to sync cache info into memory', e);\n\t\t\tthrow e;\n\t\t}\n\n\t\tconst isSignedInHostedUI =\n\t\t\tthis._oAuthHandler &&\n\t\t\tthis._storage.getItem('amplify-signin-with-hostedUI') === 'true';\n\n\t\treturn new Promise((res, rej) => {\n\t\t\tif (opts && opts.global) {\n\t\t\t\tlogger.debug('user global sign out', user);\n\t\t\t\t// in order to use global signout\n\t\t\t\t// we must validate the user as an authenticated user by using getSession\n\t\t\t\tconst clientMetadata = this._config.clientMetadata; // TODO: verify behavior if this is override during signIn\n\n\t\t\t\tuser.getSession(\n\t\t\t\t\t(err, result) => {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\tlogger.debug('failed to get the user session', err);\n\t\t\t\t\t\t\treturn rej(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tuser.globalSignOut({\n\t\t\t\t\t\t\tonSuccess: data => {\n\t\t\t\t\t\t\t\tlogger.debug('global sign out success');\n\t\t\t\t\t\t\t\tif (isSignedInHostedUI) {\n\t\t\t\t\t\t\t\t\tthis.oAuthSignOutRedirect(res, rej);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn res();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tonFailure: err => {\n\t\t\t\t\t\t\t\tlogger.debug('global sign out failed', err);\n\t\t\t\t\t\t\t\treturn rej(err);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\t{ clientMetadata }\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tlogger.debug('user sign out', user);\n\t\t\t\tuser.signOut(() => {\n\t\t\t\t\tif (isSignedInHostedUI) {\n\t\t\t\t\t\tthis.oAuthSignOutRedirect(res, rej);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn res();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate oAuthSignOutRedirect(\n\t\tresolve: () => void,\n\t\treject: (reason?: any) => void\n\t) {\n\t\tconst { isBrowser } = JS.browserOrNode();\n\n\t\tif (isBrowser) {\n\t\t\tthis.oAuthSignOutRedirectOrReject(reject);\n\t\t} else {\n\t\t\tthis.oAuthSignOutAndResolve(resolve);\n\t\t}\n\t}\n\n\tprivate oAuthSignOutAndResolve(resolve: () => void) {\n\t\tthis._oAuthHandler.signOut();\n\t\tresolve();\n\t}\n\n\tprivate oAuthSignOutRedirectOrReject(reject: (reason?: any) => void) {\n\t\tthis._oAuthHandler.signOut(); // this method redirects url\n\n\t\t// App should be redirected to another url otherwise it will reject\n\t\tsetTimeout(() => reject('Signout timeout fail'), 3000);\n\t}\n\n\t/**\n\t * Sign out method\n\t * @\n\t * @return - A promise resolved if success\n\t */\n\tpublic async signOut(opts?: SignOutOpts): Promise<any> {\n\t\ttry {\n\t\t\tawait this.cleanCachedItems();\n\t\t} catch (e) {\n\t\t\tlogger.debug('failed to clear cached items');\n\t\t}\n\n\t\tif (this.userPool) {\n\t\t\tconst user = this.userPool.getCurrentUser();\n\t\t\tif (user) {\n\t\t\t\tawait this.cognitoIdentitySignOut(opts, user);\n\t\t\t} else {\n\t\t\t\tlogger.debug('no current Cognito user');\n\t\t\t}\n\t\t} else {\n\t\t\tlogger.debug('no Congito User pool');\n\t\t}\n\n\t\t/**\n\t\t * Note for future refactor - no reliable way to get username with\n\t\t * Cognito User Pools vs Identity when federating with Social Providers\n\t\t * This is why we need a well structured session object that can be inspected\n\t\t * and information passed back in the message below for Hub dispatch\n\t\t */\n\t\tdispatchAuthEvent('signOut', this.user, `A user has been signed out`);\n\t\tthis.user = null;\n\t}\n\n\tprivate async cleanCachedItems() {\n\t\t// clear cognito cached item\n\t\tawait this.Credentials.clear();\n\t}\n\n\t/**\n\t * Change a password for an authenticated user\n\t * @param {Object} user - The CognitoUser object\n\t * @param {String} oldPassword - the current password\n\t * @param {String} newPassword - the requested new password\n\t * @return - A promise resolves if success\n\t */\n\tpublic changePassword(\n\t\tuser: CognitoUser | any,\n\t\toldPassword: string,\n\t\tnewPassword: string,\n\t\tclientMetadata: ClientMetaData = this._config.clientMetadata\n\t): Promise<'SUCCESS'> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.userSession(user).then(session => {\n\t\t\t\tuser.changePassword(\n\t\t\t\t\toldPassword,\n\t\t\t\t\tnewPassword,\n\t\t\t\t\t(err, data) => {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\tlogger.debug('change password failure', err);\n\t\t\t\t\t\t\treturn reject(err);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn resolve(data);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tclientMetadata\n\t\t\t\t);\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Initiate a forgot password request\n\t * @param {String} username - the username to change password\n\t * @return - A promise resolves if success\n\t */\n\tpublic forgotPassword(\n\t\tusername: string,\n\t\tclientMetadata: ClientMetaData = this._config.clientMetadata\n\t): Promise<any> {\n\t\tif (!this.userPool) {\n\t\t\treturn this.rejectNoUserPool();\n\t\t}\n\t\tif (!username) {\n\t\t\treturn this.rejectAuthError(AuthErrorTypes.EmptyUsername);\n\t\t}\n\n\t\tconst user = this.createCognitoUser(username);\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tuser.forgotPassword(\n\t\t\t\t{\n\t\t\t\t\tonSuccess: () => {\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t},\n\t\t\t\t\tonFailure: err => {\n\t\t\t\t\t\tlogger.debug('forgot password failure', err);\n\t\t\t\t\t\tdispatchAuthEvent(\n\t\t\t\t\t\t\t'forgotPassword_failure',\n\t\t\t\t\t\t\terr,\n\t\t\t\t\t\t\t`${username} forgotPassword failed`\n\t\t\t\t\t\t);\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t},\n\t\t\t\t\tinputVerificationCode: data => {\n\t\t\t\t\t\tdispatchAuthEvent(\n\t\t\t\t\t\t\t'forgotPassword',\n\t\t\t\t\t\t\tuser,\n\t\t\t\t\t\t\t`${username} has initiated forgot password flow`\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresolve(data);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tclientMetadata\n\t\t\t);\n\t\t});\n\t}\n\n\t/**\n\t * Confirm a new password using a confirmation Code\n\t * @param {String} username - The username\n\t * @param {String} code - The confirmation code\n\t * @param {String} password - The new password\n\t * @return - A promise that resolves if success\n\t */\n\tpublic forgotPasswordSubmit(\n\t\tusername: string,\n\t\tcode: string,\n\t\tpassword: string,\n\t\tclientMetadata: ClientMetaData = this._config.clientMetadata\n\t): Promise<string> {\n\t\tif (!this.userPool) {\n\t\t\treturn this.rejectNoUserPool();\n\t\t}\n\t\tif (!username) {\n\t\t\treturn this.rejectAuthError(AuthErrorTypes.EmptyUsername);\n\t\t}\n\t\tif (!code) {\n\t\t\treturn this.rejectAuthError(AuthErrorTypes.EmptyCode);\n\t\t}\n\t\tif (!password) {\n\t\t\treturn this.rejectAuthError(AuthErrorTypes.EmptyPassword);\n\t\t}\n\n\t\tconst user = this.createCognitoUser(username);\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tuser.confirmPassword(\n\t\t\t\tcode,\n\t\t\t\tpassword,\n\t\t\t\t{\n\t\t\t\t\tonSuccess: success => {\n\t\t\t\t\t\tdispatchAuthEvent(\n\t\t\t\t\t\t\t'forgotPasswordSubmit',\n\t\t\t\t\t\t\tuser,\n\t\t\t\t\t\t\t`${username} forgotPasswordSubmit successful`\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresolve(success);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t},\n\t\t\t\t\tonFailure: err => {\n\t\t\t\t\t\tdispatchAuthEvent(\n\t\t\t\t\t\t\t'forgotPasswordSubmit_failure',\n\t\t\t\t\t\t\terr,\n\t\t\t\t\t\t\t`${username} forgotPasswordSubmit failed`\n\t\t\t\t\t\t);\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tclientMetadata\n\t\t\t);\n\t\t});\n\t}\n\n\t/**\n\t * Get user information\n\t * @async\n\t * @return {Object }- current User's information\n\t */\n\tpublic async currentUserInfo() {\n\t\tconst source = this.Credentials.getCredSource();\n\n\t\tif (!source || source === 'aws' || source === 'userPool') {\n\t\t\tconst user = await this.currentUserPoolUser().catch(err =>\n\t\t\t\tlogger.error(err)\n\t\t\t);\n\t\t\tif (!user) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tconst attributes = await this.userAttributes(user);\n\t\t\t\tconst userAttrs: object = this.attributesToObject(attributes);\n\t\t\t\tlet credentials = null;\n\t\t\t\ttry {\n\t\t\t\t\tcredentials = await this.currentCredentials();\n\t\t\t\t} catch (e) {\n\t\t\t\t\tlogger.debug(\n\t\t\t\t\t\t'Failed to retrieve credentials while getting current user info',\n\t\t\t\t\t\te\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tconst info = {\n\t\t\t\t\tid: credentials ? credentials.identityId : undefined,\n\t\t\t\t\tusername: user.getUsername(),\n\t\t\t\t\tattributes: userAttrs,\n\t\t\t\t};\n\t\t\t\treturn info;\n\t\t\t} catch (err) {\n\t\t\t\tlogger.error('currentUserInfo error', err);\n\t\t\t\treturn {};\n\t\t\t}\n\t\t}\n\n\t\tif (source === 'federated') {\n\t\t\tconst user = this.user;\n\t\t\treturn user ? user : {};\n\t\t}\n\t}\n\n\tpublic async federatedSignIn(\n\t\toptions?: FederatedSignInOptions\n\t): Promise<ICredentials>;\n\tpublic async federatedSignIn(\n\t\tprovider: LegacyProvider,\n\t\tresponse: FederatedResponse,\n\t\tuser: FederatedUser\n\t): Promise<ICredentials>;\n\tpublic async federatedSignIn(\n\t\toptions?: FederatedSignInOptionsCustom\n\t): Promise<ICredentials>;\n\tpublic async federatedSignIn(\n\t\tproviderOrOptions:\n\t\t\t| LegacyProvider\n\t\t\t| FederatedSignInOptions\n\t\t\t| FederatedSignInOptionsCustom,\n\t\tresponse?: FederatedResponse,\n\t\tuser?: FederatedUser\n\t): Promise<ICredentials> {\n\t\tif (!this._config.identityPoolId && !this._config.userPoolId) {\n\t\t\tthrow new Error(\n\t\t\t\t`Federation requires either a User Pool or Identity Pool in config`\n\t\t\t);\n\t\t}\n\n\t\t// Ensure backwards compatability\n\t\tif (typeof providerOrOptions === 'undefined') {\n\t\t\tif (this._config.identityPoolId && !this._config.userPoolId) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`Federation with Identity Pools requires tokens passed as arguments`\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tif (\n\t\t\tisFederatedSignInOptions(providerOrOptions) ||\n\t\t\tisFederatedSignInOptionsCustom(providerOrOptions) ||\n\t\t\thasCustomState(providerOrOptions) ||\n\t\t\ttypeof providerOrOptions === 'undefined'\n\t\t) {\n\t\t\tconst options = providerOrOptions || {\n\t\t\t\tprovider: CognitoHostedUIIdentityProvider.Cognito,\n\t\t\t};\n\t\t\tconst provider = isFederatedSignInOptions(options)\n\t\t\t\t? options.provider\n\t\t\t\t: (options as FederatedSignInOptionsCustom).customProvider;\n\n\t\t\tconst customState = isFederatedSignInOptions(options)\n\t\t\t\t? options.customState\n\t\t\t\t: (options as FederatedSignInOptionsCustom).customState;\n\n\t\t\tif (this._config.userPoolId) {\n\t\t\t\tconst client_id = isCognitoHostedOpts(this._config.oauth)\n\t\t\t\t\t? this._config.userPoolWebClientId\n\t\t\t\t\t: this._config.oauth.clientID;\n\t\t\t\t/*Note: Invenstigate automatically adding trailing slash */\n\t\t\t\tconst redirect_uri = isCognitoHostedOpts(this._config.oauth)\n\t\t\t\t\t? this._config.oauth.redirectSignIn\n\t\t\t\t\t: this._config.oauth.redirectUri;\n\n\t\t\t\tthis._oAuthHandler.oauthSignIn(\n\t\t\t\t\tthis._config.oauth.responseType,\n\t\t\t\t\tthis._config.oauth.domain,\n\t\t\t\t\tredirect_uri,\n\t\t\t\t\tclient_id,\n\t\t\t\t\tprovider,\n\t\t\t\t\tcustomState\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tconst provider = providerOrOptions;\n\t\t\t// To check if the user is already logged in\n\t\t\ttry {\n\t\t\t\tconst loggedInUser = JSON.stringify(\n\t\t\t\t\tJSON.parse(this._storage.getItem('aws-amplify-federatedInfo')).user\n\t\t\t\t);\n\t\t\t\tif (loggedInUser) {\n\t\t\t\t\tlogger.warn(`There is already a signed in user: ${loggedInUser} in your app.\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tYou should not call Auth.federatedSignIn method again as it may cause unexpected behavior.`);\n\t\t\t\t}\n\t\t\t} catch (e) {}\n\n\t\t\tconst { token, identity_id, expires_at } = response;\n\t\t\t// Because this.Credentials.set would update the user info with identity id\n\t\t\t// So we need to retrieve the user again.\n\t\t\tconst credentials = await this.Credentials.set(\n\t\t\t\t{ provider, token, identity_id, user, expires_at },\n\t\t\t\t'federation'\n\t\t\t);\n\t\t\tconst currentUser = await this.currentAuthenticatedUser();\n\t\t\tdispatchAuthEvent(\n\t\t\t\t'signIn',\n\t\t\t\tcurrentUser,\n\t\t\t\t`A user ${currentUser.username} has been signed in`\n\t\t\t);\n\t\t\tlogger.debug('federated sign in credentials', credentials);\n\t\t\treturn credentials;\n\t\t}\n\t}\n\n\t/**\n\t * Used to complete the OAuth flow with or without the Cognito Hosted UI\n\t * @param {String} URL - optional parameter for customers to pass in the response URL\n\t */\n\tprivate async _handleAuthResponse(URL?: string) {\n\t\tif (this.oAuthFlowInProgress) {\n\t\t\tlogger.debug(`Skipping URL ${URL} current flow in progress`);\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tthis.oAuthFlowInProgress = true;\n\t\t\tif (!this._config.userPoolId) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`OAuth responses require a User Pool defined in config`\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tdispatchAuthEvent(\n\t\t\t\t'parsingCallbackUrl',\n\t\t\t\t{ url: URL },\n\t\t\t\t`The callback url is being parsed`\n\t\t\t);\n\n\t\t\tconst currentUrl =\n\t\t\t\tURL || (JS.browserOrNode().isBrowser ? window.location.href : '');\n\n\t\t\tconst hasCodeOrError = !!(parse(currentUrl).query || '')\n\t\t\t\t.split('&')\n\t\t\t\t.map(entry => entry.split('='))\n\t\t\t\t.find(([k]) => k === 'code' || k === 'error');\n\n\t\t\tconst hasTokenOrError = !!(parse(currentUrl).hash || '#')\n\t\t\t\t.substr(1)\n\t\t\t\t.split('&')\n\t\t\t\t.map(entry => entry.split('='))\n\t\t\t\t.find(([k]) => k === 'access_token' || k === 'error');\n\n\t\t\tif (hasCodeOrError || hasTokenOrError) {\n\t\t\t\tthis._storage.setItem('amplify-redirected-from-hosted-ui', 'true');\n\t\t\t\ttry {\n\t\t\t\t\tconst { accessToken, idToken, refreshToken, state } =\n\t\t\t\t\t\tawait this._oAuthHandler.handleAuthResponse(currentUrl);\n\t\t\t\t\tconst session = new CognitoUserSession({\n\t\t\t\t\t\tIdToken: new CognitoIdToken({ IdToken: idToken }),\n\t\t\t\t\t\tRefreshToken: new CognitoRefreshToken({\n\t\t\t\t\t\t\tRefreshToken: refreshToken,\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tAccessToken: new CognitoAccessToken({\n\t\t\t\t\t\t\tAccessToken: accessToken,\n\t\t\t\t\t\t}),\n\t\t\t\t\t});\n\n\t\t\t\t\tlet credentials;\n\t\t\t\t\t// Get AWS Credentials & store if Identity Pool is defined\n\t\t\t\t\tif (this._config.identityPoolId) {\n\t\t\t\t\t\tcredentials = await this.Credentials.set(session, 'session');\n\t\t\t\t\t\tlogger.debug('AWS credentials', credentials);\n\t\t\t\t\t}\n\n\t\t\t\t\t/* \n\t\t\t\tPrior to the request we do sign the custom state along with the state we set. This check will verify\n\t\t\t\tif there is a dash indicated when setting custom state from the request. If a dash is contained\n\t\t\t\tthen there is custom state present on the state string.\n\t\t\t\t*/\n\t\t\t\t\tconst isCustomStateIncluded = /-/.test(state);\n\n\t\t\t\t\t/*\n\t\t\t\tThe following is to create a user for the Cognito Identity SDK to store the tokens\n\t\t\t\tWhen we remove this SDK later that logic will have to be centralized in our new version\n\t\t\t\t*/\n\t\t\t\t\t//#region\n\t\t\t\t\tconst currentUser = this.createCognitoUser(\n\t\t\t\t\t\tsession.getIdToken().decodePayload()['cognito:username']\n\t\t\t\t\t);\n\n\t\t\t\t\t// This calls cacheTokens() in Cognito SDK\n\t\t\t\t\tcurrentUser.setSignInUserSession(session);\n\n\t\t\t\t\tif (window && typeof window.history !== 'undefined') {\n\t\t\t\t\t\twindow.history.replaceState(\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t(this._config.oauth as AwsCognitoOAuthOpts).redirectSignIn\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tdispatchAuthEvent(\n\t\t\t\t\t\t'signIn',\n\t\t\t\t\t\tcurrentUser,\n\t\t\t\t\t\t`A user ${currentUser.getUsername()} has been signed in`\n\t\t\t\t\t);\n\t\t\t\t\tdispatchAuthEvent(\n\t\t\t\t\t\t'cognitoHostedUI',\n\t\t\t\t\t\tcurrentUser,\n\t\t\t\t\t\t`A user ${currentUser.getUsername()} has been signed in via Cognito Hosted UI`\n\t\t\t\t\t);\n\n\t\t\t\t\tif (isCustomStateIncluded) {\n\t\t\t\t\t\tconst customState = state.split('-').splice(1).join('-');\n\n\t\t\t\t\t\tdispatchAuthEvent(\n\t\t\t\t\t\t\t'customOAuthState',\n\t\t\t\t\t\t\turlSafeDecode(customState),\n\t\t\t\t\t\t\t`State for user ${currentUser.getUsername()}`\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t//#endregion\n\n\t\t\t\t\treturn credentials;\n\t\t\t\t} catch (err) {\n\t\t\t\t\tlogger.debug('Error in cognito hosted auth response', err);\n\n\t\t\t\t\t// Just like a successful handling of `?code`, replace the window history to \"dispose\" of the `code`.\n\t\t\t\t\t// Otherwise, reloading the page will throw errors as the `code` has already been spent.\n\t\t\t\t\tif (window && typeof window.history !== 'undefined') {\n\t\t\t\t\t\twindow.history.replaceState(\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t(this._config.oauth as AwsCognitoOAuthOpts).redirectSignIn\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tdispatchAuthEvent(\n\t\t\t\t\t\t'signIn_failure',\n\t\t\t\t\t\terr,\n\t\t\t\t\t\t`The OAuth response flow failed`\n\t\t\t\t\t);\n\t\t\t\t\tdispatchAuthEvent(\n\t\t\t\t\t\t'cognitoHostedUI_failure',\n\t\t\t\t\t\terr,\n\t\t\t\t\t\t`A failure occurred when returning to the Cognito Hosted UI`\n\t\t\t\t\t);\n\t\t\t\t\tdispatchAuthEvent(\n\t\t\t\t\t\t'customState_failure',\n\t\t\t\t\t\terr,\n\t\t\t\t\t\t`A failure occurred when returning state`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t} finally {\n\t\t\tthis.oAuthFlowInProgress = false;\n\t\t}\n\t}\n\n\t/**\n\t * Compact version of credentials\n\t * @param {Object} credentials\n\t * @return {Object} - Credentials\n\t */\n\tpublic essentialCredentials(credentials): ICredentials {\n\t\treturn {\n\t\t\taccessKeyId: credentials.accessKeyId,\n\t\t\tsessionToken: credentials.sessionToken,\n\t\t\tsecretAccessKey: credentials.secretAccessKey,\n\t\t\tidentityId: credentials.identityId,\n\t\t\tauthenticated: credentials.authenticated,\n\t\t};\n\t}\n\n\tprivate attributesToObject(attributes) {\n\t\tconst obj = {};\n\t\tif (attributes) {\n\t\t\tattributes.map(attribute => {\n\t\t\t\tif (\n\t\t\t\t\tattribute.Name === 'email_verified' ||\n\t\t\t\t\tattribute.Name === 'phone_number_verified'\n\t\t\t\t) {\n\t\t\t\t\tobj[attribute.Name] =\n\t\t\t\t\t\tthis.isTruthyString(attribute.Value) || attribute.Value === true;\n\t\t\t\t} else {\n\t\t\t\t\tobj[attribute.Name] = attribute.Value;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn obj;\n\t}\n\n\tprivate isTruthyString(value: any): boolean {\n\t\treturn (\n\t\t\ttypeof value.toLowerCase === 'function' && value.toLowerCase() === 'true'\n\t\t);\n\t}\n\n\tprivate createCognitoUser(username: string): CognitoUser {\n\t\tconst userData: ICognitoUserData = {\n\t\t\tUsername: username,\n\t\t\tPool: this.userPool,\n\t\t};\n\t\tuserData.Storage = this._storage;\n\n\t\tconst { authenticationFlowType } = this._config;\n\n\t\tconst user = new CognitoUser(userData);\n\t\tif (authenticationFlowType) {\n\t\t\tuser.setAuthenticationFlowType(authenticationFlowType);\n\t\t}\n\t\treturn user;\n\t}\n\n\tprivate _isValidAuthStorage(obj) {\n\t\t// We need to check if the obj has the functions of Storage\n\t\treturn (\n\t\t\t!!obj &&\n\t\t\ttypeof obj.getItem === 'function' &&\n\t\t\ttypeof obj.setItem === 'function' &&\n\t\t\ttypeof obj.removeItem === 'function' &&\n\t\t\ttypeof obj.clear === 'function'\n\t\t);\n\t}\n\n\tprivate noUserPoolErrorHandler(config: AuthOptions): AuthErrorTypes {\n\t\tif (config) {\n\t\t\tif (!config.userPoolId || !config.identityPoolId) {\n\t\t\t\treturn AuthErrorTypes.MissingAuthConfig;\n\t\t\t}\n\t\t}\n\t\treturn AuthErrorTypes.NoConfig;\n\t}\n\n\tprivate rejectAuthError(type: AuthErrorTypes): Promise<never> {\n\t\treturn Promise.reject(new AuthError(type));\n\t}\n\n\tprivate rejectNoUserPool(): Promise<never> {\n\t\tconst type = this.noUserPoolErrorHandler(this._config);\n\t\treturn Promise.reject(new NoUserPoolError(type));\n\t}\n\n\tpublic async rememberDevice(): Promise<string | AuthError> {\n\t\tlet currUser;\n\n\t\ttry {\n\t\t\tcurrUser = await this.currentUserPoolUser();\n\t\t} catch (error) {\n\t\t\tlogger.debug('The user is not authenticated by the error', error);\n\t\t\treturn Promise.reject('The user is not authenticated');\n\t\t}\n\n\t\tcurrUser.getCachedDeviceKeyAndPassword();\n\t\treturn new Promise((res, rej) => {\n\t\t\tcurrUser.setDeviceStatusRemembered({\n\t\t\t\tonSuccess: data => {\n\t\t\t\t\tres(data);\n\t\t\t\t},\n\t\t\t\tonFailure: err => {\n\t\t\t\t\tif (err.code === 'InvalidParameterException') {\n\t\t\t\t\t\trej(new AuthError(AuthErrorTypes.DeviceConfig));\n\t\t\t\t\t} else if (err.code === 'NetworkError') {\n\t\t\t\t\t\trej(new AuthError(AuthErrorTypes.NetworkError));\n\t\t\t\t\t} else {\n\t\t\t\t\t\trej(err);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic async forgetDevice(): Promise<void> {\n\t\tlet currUser;\n\n\t\ttry {\n\t\t\tcurrUser = await this.currentUserPoolUser();\n\t\t} catch (error) {\n\t\t\tlogger.debug('The user is not authenticated by the error', error);\n\t\t\treturn Promise.reject('The user is not authenticated');\n\t\t}\n\n\t\tcurrUser.getCachedDeviceKeyAndPassword();\n\t\treturn new Promise((res, rej) => {\n\t\t\tcurrUser.forgetDevice({\n\t\t\t\tonSuccess: data => {\n\t\t\t\t\tres(data);\n\t\t\t\t},\n\t\t\t\tonFailure: err => {\n\t\t\t\t\tif (err.code === 'InvalidParameterException') {\n\t\t\t\t\t\trej(new AuthError(AuthErrorTypes.DeviceConfig));\n\t\t\t\t\t} else if (err.code === 'NetworkError') {\n\t\t\t\t\t\trej(new AuthError(AuthErrorTypes.NetworkError));\n\t\t\t\t\t} else {\n\t\t\t\t\t\trej(err);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic async fetchDevices(): Promise<IAuthDevice[]> {\n\t\tlet currUser;\n\n\t\ttry {\n\t\t\tcurrUser = await this.currentUserPoolUser();\n\t\t} catch (error) {\n\t\t\tlogger.debug('The user is not authenticated by the error', error);\n\t\t\tthrow new Error('The user is not authenticated');\n\t\t}\n\n\t\tcurrUser.getCachedDeviceKeyAndPassword();\n\t\treturn new Promise((res, rej) => {\n\t\t\tconst cb = {\n\t\t\t\tonSuccess(data) {\n\t\t\t\t\tconst deviceList: IAuthDevice[] = data.Devices.map(device => {\n\t\t\t\t\t\tconst deviceName =\n\t\t\t\t\t\t\tdevice.DeviceAttributes.find(\n\t\t\t\t\t\t\t\t({ Name }) => Name === 'device_name'\n\t\t\t\t\t\t\t) || {};\n\n\t\t\t\t\t\tconst deviceInfo: IAuthDevice = {\n\t\t\t\t\t\t\tid: device.DeviceKey,\n\t\t\t\t\t\t\tname: deviceName.Value,\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn deviceInfo;\n\t\t\t\t\t});\n\t\t\t\t\tres(deviceList);\n\t\t\t\t},\n\t\t\t\tonFailure: err => {\n\t\t\t\t\tif (err.code === 'InvalidParameterException') {\n\t\t\t\t\t\trej(new AuthError(AuthErrorTypes.DeviceConfig));\n\t\t\t\t\t} else if (err.code === 'NetworkError') {\n\t\t\t\t\t\trej(new AuthError(AuthErrorTypes.NetworkError));\n\t\t\t\t\t} else {\n\t\t\t\t\t\trej(err);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t};\n\t\t\tcurrUser.listDevices(MAX_DEVICES, null, cb);\n\t\t});\n\t}\n}\n\nexport const Auth = new AuthClass(null);\n\nAmplify.register(Auth);\n","/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { JS } from '@aws-amplify/core';\n\nexport default callback => {\n\tif (JS.browserOrNode().isBrowser && window.location) {\n\t\tconst url = window.location.href;\n\n\t\tcallback({ url });\n\t} else if (JS.browserOrNode().isNode) {\n\t\t// continue building on ssr\n\t\t() => {}; // noop\n\t} else {\n\t\tthrow new Error('Not supported');\n\t}\n};\n","/*\r\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\r\n * the License. A copy of the License is located at\r\n *\r\n *     http://aws.amazon.com/apache2.0/\r\n *\r\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\r\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\r\n * and limitations under the License.\r\n */\r\n\r\nimport { CacheConfig, CacheItem, CacheItemOptions } from '../types';\r\nimport { StorageHelper } from '@aws-amplify/core';\r\n/**\r\n * Default cache config\r\n */\r\nexport const defaultConfig: CacheConfig = {\r\n\tkeyPrefix: 'aws-amplify-cache',\r\n\tcapacityInBytes: 1048576, // 1MB\r\n\titemMaxSize: 210000, // about 200kb\r\n\tdefaultTTL: 259200000, // about 3 days\r\n\tdefaultPriority: 5,\r\n\twarningThreshold: 0.8,\r\n\t// the storage helper will check if localStorage exists,\r\n\t// if not, will use a in-memory object instead\r\n\tstorage: new StorageHelper().getStorage(),\r\n};\r\n\r\n/**\r\n * return the byte size of the string\r\n * @param str\r\n */\r\nexport function getByteLength(str: string): number {\r\n\tlet ret: number = 0;\r\n\tret = str.length;\r\n\r\n\tfor (let i = str.length; i >= 0; i -= 1) {\r\n\t\tconst charCode: number = str.charCodeAt(i);\r\n\t\tif (charCode > 0x7f && charCode <= 0x7ff) {\r\n\t\t\tret += 1;\r\n\t\t} else if (charCode > 0x7ff && charCode <= 0xffff) {\r\n\t\t\tret += 2;\r\n\t\t}\r\n\t\t// trail surrogate\r\n\t\tif (charCode >= 0xdc00 && charCode <= 0xdfff) {\r\n\t\t\ti -= 1;\r\n\t\t}\r\n\t}\r\n\r\n\treturn ret;\r\n}\r\n\r\n/**\r\n * get current time\r\n */\r\nexport function getCurrTime(): number {\r\n\tconst currTime = new Date();\r\n\treturn currTime.getTime();\r\n}\r\n\r\n/**\r\n * check if passed value is an integer\r\n */\r\nexport function isInteger(value): boolean {\r\n\tif (Number.isInteger) {\r\n\t\treturn Number.isInteger(value);\r\n\t}\r\n\r\n\treturn _isInteger(value);\r\n}\r\n\r\nfunction _isInteger(value): boolean {\r\n\treturn (\r\n\t\ttypeof value === 'number' && isFinite(value) && Math.floor(value) === value\r\n\t);\r\n}\r\n\r\n/**\r\n * provide an object as the in-memory cache\r\n */\r\nlet store = {};\r\nexport class CacheObject {\r\n\tstatic clear(): void {\r\n\t\tstore = {};\r\n\t}\r\n\r\n\tstatic getItem(key: string): string | null {\r\n\t\treturn store[key] || null;\r\n\t}\r\n\r\n\tstatic setItem(key: string, value: string): void {\r\n\t\tstore[key] = value;\r\n\t}\r\n\r\n\tstatic removeItem(key: string): void {\r\n\t\tdelete store[key];\r\n\t}\r\n}\r\n","/*\r\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\r\n * the License. A copy of the License is located at\r\n *\r\n *     http://aws.amazon.com/apache2.0/\r\n *\r\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\r\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\r\n * and limitations under the License.\r\n */\r\n\r\nimport { getCurrTime, getByteLength, defaultConfig, isInteger } from './Utils';\r\n\r\nimport { CacheConfig, CacheItem, CacheItemOptions } from './types';\r\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\r\n\r\nconst logger = new Logger('StorageCache');\r\n\r\n/**\r\n * Initialization of the cache\r\n *\r\n */\r\nexport class StorageCache {\r\n\tprotected cacheCurSizeKey: string;\r\n\tprotected config: CacheConfig;\r\n\r\n\t/**\r\n\t * Initialize the cache\r\n\t * @param config - the configuration of the cache\r\n\t */\r\n\tconstructor(config: CacheConfig) {\r\n\t\tthis.config = Object.assign({}, config);\r\n\t\tthis.cacheCurSizeKey = this.config.keyPrefix + 'CurSize';\r\n\t\tthis.checkConfig();\r\n\t}\r\n\r\n\tpublic getModuleName() {\r\n\t\treturn 'Cache';\r\n\t}\r\n\r\n\tprivate checkConfig(): void {\r\n\t\t// check configuration\r\n\t\tif (!isInteger(this.config.capacityInBytes)) {\r\n\t\t\tlogger.error(\r\n\t\t\t\t'Invalid parameter: capacityInBytes. It should be an Integer. Setting back to default.'\r\n\t\t\t);\r\n\t\t\tthis.config.capacityInBytes = defaultConfig.capacityInBytes;\r\n\t\t}\r\n\r\n\t\tif (!isInteger(this.config.itemMaxSize)) {\r\n\t\t\tlogger.error(\r\n\t\t\t\t'Invalid parameter: itemMaxSize. It should be an Integer. Setting back to default.'\r\n\t\t\t);\r\n\t\t\tthis.config.itemMaxSize = defaultConfig.itemMaxSize;\r\n\t\t}\r\n\r\n\t\tif (!isInteger(this.config.defaultTTL)) {\r\n\t\t\tlogger.error(\r\n\t\t\t\t'Invalid parameter: defaultTTL. It should be an Integer. Setting back to default.'\r\n\t\t\t);\r\n\t\t\tthis.config.defaultTTL = defaultConfig.defaultTTL;\r\n\t\t}\r\n\r\n\t\tif (!isInteger(this.config.defaultPriority)) {\r\n\t\t\tlogger.error(\r\n\t\t\t\t'Invalid parameter: defaultPriority. It should be an Integer. Setting back to default.'\r\n\t\t\t);\r\n\t\t\tthis.config.defaultPriority = defaultConfig.defaultPriority;\r\n\t\t}\r\n\r\n\t\tif (this.config.itemMaxSize > this.config.capacityInBytes) {\r\n\t\t\tlogger.error(\r\n\t\t\t\t'Invalid parameter: itemMaxSize. It should be smaller than capacityInBytes. Setting back to default.'\r\n\t\t\t);\r\n\t\t\tthis.config.itemMaxSize = defaultConfig.itemMaxSize;\r\n\t\t}\r\n\r\n\t\tif (this.config.defaultPriority > 5 || this.config.defaultPriority < 1) {\r\n\t\t\tlogger.error(\r\n\t\t\t\t'Invalid parameter: defaultPriority. It should be between 1 and 5. Setting back to default.'\r\n\t\t\t);\r\n\t\t\tthis.config.defaultPriority = defaultConfig.defaultPriority;\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\tNumber(this.config.warningThreshold) > 1 ||\r\n\t\t\tNumber(this.config.warningThreshold) < 0\r\n\t\t) {\r\n\t\t\tlogger.error(\r\n\t\t\t\t'Invalid parameter: warningThreshold. It should be between 0 and 1. Setting back to default.'\r\n\t\t\t);\r\n\t\t\tthis.config.warningThreshold = defaultConfig.warningThreshold;\r\n\t\t}\r\n\t\t// set 5MB limit\r\n\t\tconst cacheLimit: number = 5 * 1024 * 1024;\r\n\t\tif (this.config.capacityInBytes > cacheLimit) {\r\n\t\t\tlogger.error(\r\n\t\t\t\t'Cache Capacity should be less than 5MB. Setting back to default. Setting back to default.'\r\n\t\t\t);\r\n\t\t\tthis.config.capacityInBytes = defaultConfig.capacityInBytes;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * produce a JSON object with meta-data and data value\r\n\t * @param value - the value of the item\r\n\t * @param options - optional, the specified meta-data\r\n\t *\r\n\t * @return - the item which has the meta-data and the value\r\n\t */\r\n\tprotected fillCacheItem(\r\n\t\tkey: string,\r\n\t\tvalue: object | number | string | boolean,\r\n\t\toptions: CacheItemOptions\r\n\t): CacheItem {\r\n\t\tconst ret: CacheItem = {\r\n\t\t\tkey,\r\n\t\t\tdata: value,\r\n\t\t\ttimestamp: getCurrTime(),\r\n\t\t\tvisitedTime: getCurrTime(),\r\n\t\t\tpriority: options.priority,\r\n\t\t\texpires: options.expires,\r\n\t\t\ttype: typeof value,\r\n\t\t\tbyteSize: 0,\r\n\t\t};\r\n\r\n\t\tret.byteSize = getByteLength(JSON.stringify(ret));\r\n\r\n\t\t// for accurate size\r\n\t\tret.byteSize = getByteLength(JSON.stringify(ret));\r\n\t\treturn ret;\r\n\t}\r\n\r\n\t/**\r\n\t * set cache with customized configuration\r\n\t * @param config - customized configuration\r\n\t *\r\n\t * @return - the current configuration\r\n\t */\r\n\tpublic configure(config?: CacheConfig): CacheConfig {\r\n\t\tif (!config) {\r\n\t\t\treturn this.config;\r\n\t\t}\r\n\t\tif (config.keyPrefix) {\r\n\t\t\tlogger.warn(`Don't try to configure keyPrefix!`);\r\n\t\t}\r\n\r\n\t\tthis.config = Object.assign({}, this.config, config, config.Cache);\r\n\t\tthis.checkConfig();\r\n\t\treturn this.config;\r\n\t}\r\n}\r\n\r\n/**\r\n * @deprecated use named import\r\n */\r\nexport default StorageCache;\r\n","/*\r\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\r\n * the License. A copy of the License is located at\r\n *\r\n *     http://aws.amazon.com/apache2.0/\r\n *\r\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\r\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\r\n * and limitations under the License.\r\n */\r\n\r\nimport { defaultConfig, getCurrTime } from './Utils';\r\n\r\nimport { StorageCache } from './StorageCache';\r\nimport { ICache, CacheConfig, CacheItem, CacheItemOptions } from './types';\r\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\r\n\r\nconst logger = new Logger('Cache');\r\n\r\n/**\r\n * Customized storage based on the SessionStorage or LocalStorage with LRU implemented\r\n */\r\nexport class BrowserStorageCacheClass extends StorageCache implements ICache {\r\n\t/**\r\n\t * initialize the cache\r\n\t * @param config - the configuration of the cache\r\n\t */\r\n\tconstructor(config?: CacheConfig) {\r\n\t\tconst cacheConfig = config\r\n\t\t\t? Object.assign({}, defaultConfig, config)\r\n\t\t\t: defaultConfig;\r\n\t\tsuper(cacheConfig);\r\n\t\tthis.config.storage = cacheConfig.storage;\r\n\t\tthis.getItem = this.getItem.bind(this);\r\n\t\tthis.setItem = this.setItem.bind(this);\r\n\t\tthis.removeItem = this.removeItem.bind(this);\r\n\t}\r\n\r\n\t/**\r\n\t * decrease current size of the cache\r\n\t *\r\n\t * @private\r\n\t * @param amount - the amount of the cache size which needs to be decreased\r\n\t */\r\n\tprivate _decreaseCurSizeInBytes(amount: number): void {\r\n\t\tconst curSize: number = this.getCacheCurSize();\r\n\t\tthis.config.storage.setItem(\r\n\t\t\tthis.cacheCurSizeKey,\r\n\t\t\t(curSize - amount).toString()\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * increase current size of the cache\r\n\t *\r\n\t * @private\r\n\t * @param amount - the amount of the cache szie which need to be increased\r\n\t */\r\n\tprivate _increaseCurSizeInBytes(amount: number): void {\r\n\t\tconst curSize: number = this.getCacheCurSize();\r\n\t\tthis.config.storage.setItem(\r\n\t\t\tthis.cacheCurSizeKey,\r\n\t\t\t(curSize + amount).toString()\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * update the visited time if item has been visited\r\n\t *\r\n\t * @private\r\n\t * @param item - the item which need to be refreshed\r\n\t * @param prefixedKey - the key of the item\r\n\t *\r\n\t * @return the refreshed item\r\n\t */\r\n\tprivate _refreshItem(item: CacheItem, prefixedKey: string): CacheItem {\r\n\t\titem.visitedTime = getCurrTime();\r\n\t\tthis.config.storage.setItem(prefixedKey, JSON.stringify(item));\r\n\t\treturn item;\r\n\t}\r\n\r\n\t/**\r\n\t * check wether item is expired\r\n\t *\r\n\t * @private\r\n\t * @param key - the key of the item\r\n\t *\r\n\t * @return true if the item is expired.\r\n\t */\r\n\tprivate _isExpired(key: string): boolean {\r\n\t\tconst text: string | null = this.config.storage.getItem(key);\r\n\t\tconst item: CacheItem = JSON.parse(text);\r\n\t\tif (getCurrTime() >= item.expires) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * delete item from cache\r\n\t *\r\n\t * @private\r\n\t * @param prefixedKey - the key of the item\r\n\t * @param size - optional, the byte size of the item\r\n\t */\r\n\tprivate _removeItem(prefixedKey: string, size?: number): void {\r\n\t\tconst itemSize: number = size\r\n\t\t\t? size\r\n\t\t\t: JSON.parse(this.config.storage.getItem(prefixedKey)).byteSize;\r\n\t\tthis._decreaseCurSizeInBytes(itemSize);\r\n\t\t// remove the cache item\r\n\t\tthis.config.storage.removeItem(prefixedKey);\r\n\t}\r\n\r\n\t/**\r\n\t * put item into cache\r\n\t *\r\n\t * @private\r\n\t * @param prefixedKey - the key of the item\r\n\t * @param itemData - the value of the item\r\n\t * @param itemSizeInBytes - the byte size of the item\r\n\t */\r\n\tprivate _setItem(prefixedKey: string, item: CacheItem): void {\r\n\t\t// update the cache size\r\n\t\tthis._increaseCurSizeInBytes(item.byteSize);\r\n\r\n\t\ttry {\r\n\t\t\tthis.config.storage.setItem(prefixedKey, JSON.stringify(item));\r\n\t\t} catch (setItemErr) {\r\n\t\t\t// if failed, we need to rollback the cache size\r\n\t\t\tthis._decreaseCurSizeInBytes(item.byteSize);\r\n\t\t\tlogger.error(`Failed to set item ${setItemErr}`);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * total space needed when poping out items\r\n\t *\r\n\t * @private\r\n\t * @param itemSize\r\n\t *\r\n\t * @return total space needed\r\n\t */\r\n\tprivate _sizeToPop(itemSize: number): number {\r\n\t\tconst spaceItemNeed =\r\n\t\t\tthis.getCacheCurSize() + itemSize - this.config.capacityInBytes;\r\n\t\tconst cacheThresholdSpace =\r\n\t\t\t(1 - this.config.warningThreshold) * this.config.capacityInBytes;\r\n\t\treturn spaceItemNeed > cacheThresholdSpace\r\n\t\t\t? spaceItemNeed\r\n\t\t\t: cacheThresholdSpace;\r\n\t}\r\n\r\n\t/**\r\n\t * see whether cache is full\r\n\t *\r\n\t * @private\r\n\t * @param itemSize\r\n\t *\r\n\t * @return true if cache is full\r\n\t */\r\n\tprivate _isCacheFull(itemSize: number): boolean {\r\n\t\treturn itemSize + this.getCacheCurSize() > this.config.capacityInBytes;\r\n\t}\r\n\r\n\t/**\r\n\t * scan the storage and find out all the keys owned by this cache\r\n\t * also clean the expired keys while scanning\r\n\t *\r\n\t * @private\r\n\t *\r\n\t * @return array of keys\r\n\t */\r\n\tprivate _findValidKeys(): string[] {\r\n\t\tconst keys: string[] = [];\r\n\t\tconst keyInCache: string[] = [];\r\n\t\t// get all keys in Storage\r\n\t\tfor (let i = 0; i < this.config.storage.length; i += 1) {\r\n\t\t\tkeyInCache.push(this.config.storage.key(i));\r\n\t\t}\r\n\r\n\t\t// find those items which belong to our cache and also clean those expired items\r\n\t\tfor (let i = 0; i < keyInCache.length; i += 1) {\r\n\t\t\tconst key: string = keyInCache[i];\r\n\t\t\tif (\r\n\t\t\t\tkey.indexOf(this.config.keyPrefix) === 0 &&\r\n\t\t\t\tkey !== this.cacheCurSizeKey\r\n\t\t\t) {\r\n\t\t\t\tif (this._isExpired(key)) {\r\n\t\t\t\t\tthis._removeItem(key);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tkeys.push(key);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn keys;\r\n\t}\r\n\r\n\t/**\r\n\t * get all the items we have, sort them by their priority,\r\n\t * if priority is same, sort them by their last visited time\r\n\t * pop out items from the low priority (5 is the lowest)\r\n\t *\r\n\t * @private\r\n\t * @param keys - all the keys in this cache\r\n\t * @param sizeToPop - the total size of the items which needed to be poped out\r\n\t */\r\n\tprivate _popOutItems(keys: string[], sizeToPop: number): void {\r\n\t\tconst items: CacheItem[] = [];\r\n\t\tlet remainedSize: number = sizeToPop;\r\n\t\t// get the items from Storage\r\n\t\tfor (let i = 0; i < keys.length; i += 1) {\r\n\t\t\tconst val: string | null = this.config.storage.getItem(keys[i]);\r\n\t\t\tif (val != null) {\r\n\t\t\t\tconst item: CacheItem = JSON.parse(val);\r\n\t\t\t\titems.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// first compare priority\r\n\t\t// then compare visited time\r\n\t\titems.sort((a, b) => {\r\n\t\t\tif (a.priority > b.priority) {\r\n\t\t\t\treturn -1;\r\n\t\t\t} else if (a.priority < b.priority) {\r\n\t\t\t\treturn 1;\r\n\t\t\t} else {\r\n\t\t\t\tif (a.visitedTime < b.visitedTime) {\r\n\t\t\t\t\treturn -1;\r\n\t\t\t\t} else return 1;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tfor (let i = 0; i < items.length; i += 1) {\r\n\t\t\t// pop out items until we have enough room for new item\r\n\t\t\tthis._removeItem(items[i].key, items[i].byteSize);\r\n\t\t\tremainedSize -= items[i].byteSize;\r\n\t\t\tif (remainedSize <= 0) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set item into cache. You can put number, string, boolean or object.\r\n\t * The cache will first check whether has the same key.\r\n\t * If it has, it will delete the old item and then put the new item in\r\n\t * The cache will pop out items if it is full\r\n\t * You can specify the cache item options. The cache will abort and output a warning:\r\n\t * If the key is invalid\r\n\t * If the size of the item exceeds itemMaxSize.\r\n\t * If the value is undefined\r\n\t * If incorrect cache item configuration\r\n\t * If error happened with browser storage\r\n\t *\r\n\t * @param key - the key of the item\r\n\t * @param value - the value of the item\r\n\t * @param {Object} [options] - optional, the specified meta-data\r\n\t */\r\n\tpublic setItem(\r\n\t\tkey: string,\r\n\t\tvalue: object | number | string | boolean,\r\n\t\toptions?: CacheItemOptions\r\n\t): void {\r\n\t\tlogger.log(\r\n\t\t\t`Set item: key is ${key}, value is ${value} with options: ${options}`\r\n\t\t);\r\n\t\tconst prefixedKey: string = this.config.keyPrefix + key;\r\n\t\t// invalid keys\r\n\t\tif (\r\n\t\t\tprefixedKey === this.config.keyPrefix ||\r\n\t\t\tprefixedKey === this.cacheCurSizeKey\r\n\t\t) {\r\n\t\t\tlogger.warn(`Invalid key: should not be empty or 'CurSize'`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (typeof value === 'undefined') {\r\n\t\t\tlogger.warn(`The value of item should not be undefined!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst cacheItemOptions: CacheItemOptions = {\r\n\t\t\tpriority:\r\n\t\t\t\toptions && options.priority !== undefined\r\n\t\t\t\t\t? options.priority\r\n\t\t\t\t\t: this.config.defaultPriority,\r\n\t\t\texpires:\r\n\t\t\t\toptions && options.expires !== undefined\r\n\t\t\t\t\t? options.expires\r\n\t\t\t\t\t: this.config.defaultTTL + getCurrTime(),\r\n\t\t};\r\n\r\n\t\tif (cacheItemOptions.priority < 1 || cacheItemOptions.priority > 5) {\r\n\t\t\tlogger.warn(\r\n\t\t\t\t`Invalid parameter: priority due to out or range. It should be within 1 and 5.`\r\n\t\t\t);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst item: CacheItem = this.fillCacheItem(\r\n\t\t\tprefixedKey,\r\n\t\t\tvalue,\r\n\t\t\tcacheItemOptions\r\n\t\t);\r\n\r\n\t\t// check wether this item is too big;\r\n\t\tif (item.byteSize > this.config.itemMaxSize) {\r\n\t\t\tlogger.warn(\r\n\t\t\t\t`Item with key: ${key} you are trying to put into is too big!`\r\n\t\t\t);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\t// first look into the storage, if it exists, delete it.\r\n\t\t\tconst val: string | null = this.config.storage.getItem(prefixedKey);\r\n\t\t\tif (val) {\r\n\t\t\t\tthis._removeItem(prefixedKey, JSON.parse(val).byteSize);\r\n\t\t\t}\r\n\r\n\t\t\t// check whether the cache is full\r\n\t\t\tif (this._isCacheFull(item.byteSize)) {\r\n\t\t\t\tconst validKeys: string[] = this._findValidKeys();\r\n\t\t\t\t// check again and then pop out items\r\n\t\t\t\tif (this._isCacheFull(item.byteSize)) {\r\n\t\t\t\t\tconst sizeToPop: number = this._sizeToPop(item.byteSize);\r\n\t\t\t\t\tthis._popOutItems(validKeys, sizeToPop);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// put item in the cache\r\n\t\t\t// may failed due to storage full\r\n\t\t\tthis._setItem(prefixedKey, item);\r\n\t\t} catch (e) {\r\n\t\t\tlogger.warn(`setItem failed! ${e}`);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get item from cache. It will return null if item doesn’t exist or it has been expired.\r\n\t * If you specified callback function in the options,\r\n\t * then the function will be executed if no such item in the cache\r\n\t * and finally put the return value into cache.\r\n\t * Please make sure the callback function will return the value you want to put into the cache.\r\n\t * The cache will abort output a warning:\r\n\t * If the key is invalid\r\n\t * If error happened with browser storage\r\n\t *\r\n\t * @param key - the key of the item\r\n\t * @param {Object} [options] - the options of callback function\r\n\t *\r\n\t * @return - return the value of the item\r\n\t */\r\n\tpublic getItem(key: string, options?: CacheItemOptions): any {\r\n\t\tlogger.log(`Get item: key is ${key} with options ${options}`);\r\n\t\tlet ret: string | null = null;\r\n\t\tconst prefixedKey: string = this.config.keyPrefix + key;\r\n\r\n\t\tif (\r\n\t\t\tprefixedKey === this.config.keyPrefix ||\r\n\t\t\tprefixedKey === this.cacheCurSizeKey\r\n\t\t) {\r\n\t\t\tlogger.warn(`Invalid key: should not be empty or 'CurSize'`);\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tret = this.config.storage.getItem(prefixedKey);\r\n\t\t\tif (ret != null) {\r\n\t\t\t\tif (this._isExpired(prefixedKey)) {\r\n\t\t\t\t\t// if expired, remove that item and return null\r\n\t\t\t\t\tthis._removeItem(prefixedKey, JSON.parse(ret).byteSize);\r\n\t\t\t\t\tret = null;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// if not expired, great, return the value and refresh it\r\n\t\t\t\t\tlet item: CacheItem = JSON.parse(ret);\r\n\t\t\t\t\titem = this._refreshItem(item, prefixedKey);\r\n\t\t\t\t\treturn item.data;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (options && options.callback !== undefined) {\r\n\t\t\t\tconst val: object | string | number | boolean = options.callback();\r\n\t\t\t\tif (val !== null) {\r\n\t\t\t\t\tthis.setItem(key, val, options);\r\n\t\t\t\t}\r\n\t\t\t\treturn val;\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t} catch (e) {\r\n\t\t\tlogger.warn(`getItem failed! ${e}`);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * remove item from the cache\r\n\t * The cache will abort output a warning:\r\n\t * If error happened with browser storage\r\n\t * @param key - the key of the item\r\n\t */\r\n\tpublic removeItem(key: string): void {\r\n\t\tlogger.log(`Remove item: key is ${key}`);\r\n\t\tconst prefixedKey: string = this.config.keyPrefix + key;\r\n\r\n\t\tif (\r\n\t\t\tprefixedKey === this.config.keyPrefix ||\r\n\t\t\tprefixedKey === this.cacheCurSizeKey\r\n\t\t) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tconst val: string | null = this.config.storage.getItem(prefixedKey);\r\n\t\t\tif (val) {\r\n\t\t\t\tthis._removeItem(prefixedKey, JSON.parse(val).byteSize);\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tlogger.warn(`removeItem failed! ${e}`);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * clear the entire cache\r\n\t * The cache will abort output a warning:\r\n\t * If error happened with browser storage\r\n\t */\r\n\tpublic clear(): void {\r\n\t\tlogger.log(`Clear Cache`);\r\n\t\tconst keysToRemove: string[] = [];\r\n\r\n\t\tfor (let i = 0; i < this.config.storage.length; i += 1) {\r\n\t\t\tconst key = this.config.storage.key(i);\r\n\t\t\tif (key.indexOf(this.config.keyPrefix) === 0) {\r\n\t\t\t\tkeysToRemove.push(key);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tfor (let i = 0; i < keysToRemove.length; i += 1) {\r\n\t\t\t\tthis.config.storage.removeItem(keysToRemove[i]);\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tlogger.warn(`clear failed! ${e}`);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Return all the keys in the cache.\r\n\t *\r\n\t * @return - all keys in the cache\r\n\t */\r\n\tpublic getAllKeys(): string[] {\r\n\t\tconst keys: string[] = [];\r\n\t\tfor (let i = 0; i < this.config.storage.length; i += 1) {\r\n\t\t\tconst key = this.config.storage.key(i);\r\n\t\t\tif (\r\n\t\t\t\tkey.indexOf(this.config.keyPrefix) === 0 &&\r\n\t\t\t\tkey !== this.cacheCurSizeKey\r\n\t\t\t) {\r\n\t\t\t\tkeys.push(key.substring(this.config.keyPrefix.length));\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn keys;\r\n\t}\r\n\r\n\t/**\r\n\t * return the current size of the cache\r\n\t *\r\n\t * @return - current size of the cache\r\n\t */\r\n\tpublic getCacheCurSize(): number {\r\n\t\tlet ret: string | null = this.config.storage.getItem(this.cacheCurSizeKey);\r\n\t\tif (!ret) {\r\n\t\t\tthis.config.storage.setItem(this.cacheCurSizeKey, '0');\r\n\t\t\tret = '0';\r\n\t\t}\r\n\t\treturn Number(ret);\r\n\t}\r\n\r\n\t/**\r\n\t * Return a new instance of cache with customized configuration.\r\n\t * @param config - the customized configuration\r\n\t *\r\n\t * @return - new instance of Cache\r\n\t */\r\n\tpublic createInstance(config: CacheConfig): ICache {\r\n\t\tif (!config.keyPrefix || config.keyPrefix === defaultConfig.keyPrefix) {\r\n\t\t\tlogger.error('invalid keyPrefix, setting keyPrefix with timeStamp');\r\n\t\t\tconfig.keyPrefix = getCurrTime.toString();\r\n\t\t}\r\n\r\n\t\treturn new BrowserStorageCacheClass(config);\r\n\t}\r\n}\r\n\r\nexport const BrowserStorageCache: ICache = new BrowserStorageCacheClass();\r\n\r\n/**\r\n * @deprecated use named import\r\n */\r\nexport default BrowserStorageCache;\r\n","/*\r\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\r\n * the License. A copy of the License is located at\r\n *\r\n *     http://aws.amazon.com/apache2.0/\r\n *\r\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\r\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\r\n * and limitations under the License.\r\n */\r\n\r\nimport { Amplify } from '@aws-amplify/core';\r\nimport { BrowserStorageCache } from './BrowserStorageCache';\r\nimport { InMemoryCache } from './InMemoryCache';\r\nimport { CacheConfig } from './types';\r\n\r\nexport { BrowserStorageCache, InMemoryCache, CacheConfig };\r\n/**\r\n * @deprecated use named import\r\n */\r\nexport default BrowserStorageCache;\r\n\r\nAmplify.register(BrowserStorageCache);\r\n","/**\n * Date & time utility functions to abstract the `aws-sdk` away from users.\n * (v2 => v3 modularization is a breaking change)\n *\n * @see https://github.com/aws/aws-sdk-js/blob/6edf586dcc1de7fe8fbfbbd9a0d2b1847921e6e1/lib/util.js#L262\n */\n\n// Comment - TODO: remove\n\nconst FIVE_MINUTES_IN_MS = 1000 * 60 * 5;\n\nexport const DateUtils = {\n\t/**\n\t * Milliseconds to offset the date to compensate for clock skew between device & services\n\t */\n\tclockOffset: 0,\n\n\tgetDateWithClockOffset() {\n\t\tif (DateUtils.clockOffset) {\n\t\t\treturn new Date(new Date().getTime() + DateUtils.clockOffset);\n\t\t} else {\n\t\t\treturn new Date();\n\t\t}\n\t},\n\n\t/**\n\t * @returns {number} Clock offset in milliseconds\n\t */\n\tgetClockOffset() {\n\t\treturn DateUtils.clockOffset;\n\t},\n\n\tgetHeaderStringFromDate(date: Date = DateUtils.getDateWithClockOffset()) {\n\t\treturn date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n\t},\n\n\tgetDateFromHeaderString(header: string) {\n\t\tconst [, year, month, day, hour, minute, second] = header.match(\n\t\t\t/^(\\d{4})(\\d{2})(\\d{2})T(\\d{2})(\\d{2})(\\d{2}).+/\n\t\t);\n\n\t\treturn new Date(\n\t\t\tDate.UTC(\n\t\t\t\tNumber(year),\n\t\t\t\tNumber(month) - 1,\n\t\t\t\tNumber(day),\n\t\t\t\tNumber(hour),\n\t\t\t\tNumber(minute),\n\t\t\t\tNumber(second)\n\t\t\t)\n\t\t);\n\t},\n\n\tisClockSkewed(serverDate: Date) {\n\t\t// API gateway permits client calls that are off by no more than ±5 minutes\n\t\treturn (\n\t\t\tMath.abs(\n\t\t\t\tserverDate.getTime() - DateUtils.getDateWithClockOffset().getTime()\n\t\t\t) >= FIVE_MINUTES_IN_MS\n\t\t);\n\t},\n\n\tisClockSkewError(error: any) {\n\t\tif (!error.response || !error.response.headers) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst { headers } = error.response;\n\n\t\treturn Boolean(\n\t\t\t['BadRequestException', 'InvalidSignatureException'].includes(\n\t\t\t\theaders['x-amzn-errortype']\n\t\t\t) &&\n\t\t\t\t(headers.date || headers.Date)\n\t\t);\n\t},\n\n\t/**\n\t * @param {number} offset Clock offset in milliseconds\n\t */\n\tsetClockOffset(offset: number) {\n\t\tDateUtils.clockOffset = offset;\n\t},\n};\n","/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nimport { ConsoleLogger as Logger } from './Logger';\nimport { Sha256 as jsSha256 } from '@aws-crypto/sha256-js';\nimport { toHex } from '@aws-sdk/util-hex-encoding';\nimport { parse, format } from 'url';\nimport { DateUtils } from './Util';\n\nconst logger = new Logger('Signer');\n\nconst DEFAULT_ALGORITHM = 'AWS4-HMAC-SHA256';\nconst IOT_SERVICE_NAME = 'iotdevicegateway';\n\nconst encrypt = function(key, src) {\n\tconst hash = new jsSha256(key);\n\thash.update(src);\n\treturn hash.digestSync();\n};\n\nconst hash = function(src) {\n\tconst arg = src || '';\n\tconst hash = new jsSha256();\n\thash.update(arg);\n\treturn toHex(hash.digestSync());\n};\n\n/**\n * @private\n * RFC 3986 compliant version of encodeURIComponent\n */\nconst escape_RFC3986 = function(component) {\n\treturn component.replace(/[!'()*]/g, function(c) {\n\t\treturn (\n\t\t\t'%' +\n\t\t\tc\n\t\t\t\t.charCodeAt(0)\n\t\t\t\t.toString(16)\n\t\t\t\t.toUpperCase()\n\t\t);\n\t});\n};\n\n/**\n * @private\n * Create canonical query string\n *\n */\nconst canonical_query = function(query) {\n\tif (!query || query.length === 0) {\n\t\treturn '';\n\t}\n\n\treturn query\n\t\t.split('&')\n\t\t.map(e => {\n\t\t\tconst key_val = e.split('=');\n\n\t\t\tif (key_val.length === 1) {\n\t\t\t\treturn e;\n\t\t\t} else {\n\t\t\t\tconst reencoded_val = escape_RFC3986(key_val[1]);\n\t\t\t\treturn key_val[0] + '=' + reencoded_val;\n\t\t\t}\n\t\t})\n\t\t.sort((a, b) => {\n\t\t\tconst key_a = a.split('=')[0];\n\t\t\tconst key_b = b.split('=')[0];\n\t\t\tif (key_a === key_b) {\n\t\t\t\treturn a < b ? -1 : 1;\n\t\t\t} else {\n\t\t\t\treturn key_a < key_b ? -1 : 1;\n\t\t\t}\n\t\t})\n\t\t.join('&');\n};\n\n/**\n* @private\n* Create canonical headers\n*\n<pre>\nCanonicalHeaders =\n    CanonicalHeadersEntry0 + CanonicalHeadersEntry1 + ... + CanonicalHeadersEntryN\nCanonicalHeadersEntry =\n    Lowercase(HeaderName) + ':' + Trimall(HeaderValue) + '\\n'\n</pre>\n*/\nconst canonical_headers = function(headers) {\n\tif (!headers || Object.keys(headers).length === 0) {\n\t\treturn '';\n\t}\n\n\treturn (\n\t\tObject.keys(headers)\n\t\t\t.map(function(key) {\n\t\t\t\treturn {\n\t\t\t\t\tkey: key.toLowerCase(),\n\t\t\t\t\tvalue: headers[key] ? headers[key].trim().replace(/\\s+/g, ' ') : '',\n\t\t\t\t};\n\t\t\t})\n\t\t\t.sort(function(a, b) {\n\t\t\t\treturn a.key < b.key ? -1 : 1;\n\t\t\t})\n\t\t\t.map(function(item) {\n\t\t\t\treturn item.key + ':' + item.value;\n\t\t\t})\n\t\t\t.join('\\n') + '\\n'\n\t);\n};\n\n/**\n * List of header keys included in the canonical headers.\n * @access private\n */\nconst signed_headers = function(headers) {\n\treturn Object.keys(headers)\n\t\t.map(function(key) {\n\t\t\treturn key.toLowerCase();\n\t\t})\n\t\t.sort()\n\t\t.join(';');\n};\n\n/**\n* @private\n* Create canonical request\n* Refer to\n* {@link http://docs.aws.amazon.com/general/latest/gr/sigv4-create-canonical-request.html|Create a Canonical Request}\n*\n<pre>\nCanonicalRequest =\n    HTTPRequestMethod + '\\n' +\n    CanonicalURI + '\\n' +\n    CanonicalQueryString + '\\n' +\n    CanonicalHeaders + '\\n' +\n    SignedHeaders + '\\n' +\n    HexEncode(Hash(RequestPayload))\n</pre>\n*/\nconst canonical_request = function(request) {\n\tconst url_info = parse(request.url);\n\n\treturn [\n\t\trequest.method || '/',\n\t\tencodeURIComponent(url_info.pathname).replace(/%2F/gi, '/'),\n\t\tcanonical_query(url_info.query),\n\t\tcanonical_headers(request.headers),\n\t\tsigned_headers(request.headers),\n\t\thash(request.data),\n\t].join('\\n');\n};\n\nconst parse_service_info = function(request) {\n\tconst url_info = parse(request.url),\n\t\thost = url_info.host;\n\n\tconst matched = host.match(/([^\\.]+)\\.(?:([^\\.]*)\\.)?amazonaws\\.com$/);\n\tlet parsed = (matched || []).slice(1, 3);\n\n\tif (parsed[1] === 'es') {\n\t\t// Elastic Search\n\t\tparsed = parsed.reverse();\n\t}\n\n\treturn {\n\t\tservice: request.service || parsed[0],\n\t\tregion: request.region || parsed[1],\n\t};\n};\n\nconst credential_scope = function(d_str, region, service) {\n\treturn [d_str, region, service, 'aws4_request'].join('/');\n};\n\n/**\n* @private\n* Create a string to sign\n* Refer to\n* {@link http://docs.aws.amazon.com/general/latest/gr/sigv4-create-string-to-sign.html|Create String to Sign}\n*\n<pre>\nStringToSign =\n    Algorithm + \\n +\n    RequestDateTime + \\n +\n    CredentialScope + \\n +\n    HashedCanonicalRequest\n</pre>\n*/\nconst string_to_sign = function(algorithm, canonical_request, dt_str, scope) {\n\treturn [algorithm, dt_str, scope, hash(canonical_request)].join('\\n');\n};\n\n/**\n* @private\n* Create signing key\n* Refer to\n* {@link http://docs.aws.amazon.com/general/latest/gr/sigv4-calculate-signature.html|Calculate Signature}\n*\n<pre>\nkSecret = your secret access key\nkDate = HMAC(\"AWS4\" + kSecret, Date)\nkRegion = HMAC(kDate, Region)\nkService = HMAC(kRegion, Service)\nkSigning = HMAC(kService, \"aws4_request\")\n</pre>\n*/\nconst get_signing_key = function(secret_key, d_str, service_info) {\n\tlogger.debug(service_info);\n\tconst k = 'AWS4' + secret_key,\n\t\tk_date = encrypt(k, d_str),\n\t\tk_region = encrypt(k_date, service_info.region),\n\t\tk_service = encrypt(k_region, service_info.service),\n\t\tk_signing = encrypt(k_service, 'aws4_request');\n\n\treturn k_signing;\n};\n\nconst get_signature = function(signing_key, str_to_sign) {\n\treturn toHex(encrypt(signing_key, str_to_sign));\n};\n\n/**\n * @private\n * Create authorization header\n * Refer to\n * {@link http://docs.aws.amazon.com/general/latest/gr/sigv4-add-signature-to-request.html|Add the Signing Information}\n */\nconst get_authorization_header = function(\n\talgorithm,\n\taccess_key,\n\tscope,\n\tsigned_headers,\n\tsignature\n) {\n\treturn [\n\t\talgorithm + ' ' + 'Credential=' + access_key + '/' + scope,\n\t\t'SignedHeaders=' + signed_headers,\n\t\t'Signature=' + signature,\n\t].join(', ');\n};\n\nexport class Signer {\n\t/**\n    * Sign a HTTP request, add 'Authorization' header to request param\n    * @method sign\n    * @memberof Signer\n    * @static\n    *\n    * @param {object} request - HTTP request object\n    <pre>\n    request: {\n        method: GET | POST | PUT ...\n        url: ...,\n        headers: {\n            header1: ...\n        },\n        data: data\n    }\n    </pre>\n    * @param {object} access_info - AWS access credential info\n    <pre>\n    access_info: {\n        access_key: ...,\n        secret_key: ...,\n        session_token: ...\n    }\n    </pre>\n    * @param {object} [service_info] - AWS service type and region, optional,\n    *                                  if not provided then parse out from url\n    <pre>\n    service_info: {\n        service: ...,\n        region: ...\n    }\n    </pre>\n    *\n    * @returns {object} Signed HTTP request\n    */\n\tstatic sign(request, access_info, service_info = null) {\n\t\trequest.headers = request.headers || {};\n\n\t\t// datetime string and date string\n\t\tconst dt = DateUtils.getDateWithClockOffset(),\n\t\t\tdt_str = dt.toISOString().replace(/[:\\-]|\\.\\d{3}/g, ''),\n\t\t\td_str = dt_str.substr(0, 8);\n\n\t\tconst url_info = parse(request.url);\n\t\trequest.headers['host'] = url_info.host;\n\t\trequest.headers['x-amz-date'] = dt_str;\n\t\tif (access_info.session_token) {\n\t\t\trequest.headers['X-Amz-Security-Token'] = access_info.session_token;\n\t\t}\n\n\t\t// Task 1: Create a Canonical Request\n\t\tconst request_str = canonical_request(request);\n\t\tlogger.debug(request_str);\n\n\t\t// Task 2: Create a String to Sign\n\t\tconst serviceInfo = service_info || parse_service_info(request),\n\t\t\tscope = credential_scope(d_str, serviceInfo.region, serviceInfo.service),\n\t\t\tstr_to_sign = string_to_sign(\n\t\t\t\tDEFAULT_ALGORITHM,\n\t\t\t\trequest_str,\n\t\t\t\tdt_str,\n\t\t\t\tscope\n\t\t\t);\n\n\t\t// Task 3: Calculate the Signature\n\t\tconst signing_key = get_signing_key(\n\t\t\t\taccess_info.secret_key,\n\t\t\t\td_str,\n\t\t\t\tserviceInfo\n\t\t\t),\n\t\t\tsignature = get_signature(signing_key, str_to_sign);\n\n\t\t// Task 4: Adding the Signing information to the Request\n\t\tconst authorization_header = get_authorization_header(\n\t\t\tDEFAULT_ALGORITHM,\n\t\t\taccess_info.access_key,\n\t\t\tscope,\n\t\t\tsigned_headers(request.headers),\n\t\t\tsignature\n\t\t);\n\t\trequest.headers['Authorization'] = authorization_header;\n\n\t\treturn request;\n\t}\n\n\tstatic signUrl(\n\t\turlToSign: string,\n\t\taccessInfo: any,\n\t\tserviceInfo?: any,\n\t\texpiration?: number\n\t): string;\n\tstatic signUrl(\n\t\trequest: any,\n\t\taccessInfo: any,\n\t\tserviceInfo?: any,\n\t\texpiration?: number\n\t): string;\n\tstatic signUrl(\n\t\turlOrRequest: string | any,\n\t\taccessInfo: any,\n\t\tserviceInfo?: any,\n\t\texpiration?: number\n\t): string {\n\t\tconst urlToSign: string =\n\t\t\ttypeof urlOrRequest === 'object' ? urlOrRequest.url : urlOrRequest;\n\t\tconst method: string =\n\t\t\ttypeof urlOrRequest === 'object' ? urlOrRequest.method : 'GET';\n\t\tconst body: any =\n\t\t\ttypeof urlOrRequest === 'object' ? urlOrRequest.body : undefined;\n\n\t\tconst now = DateUtils.getDateWithClockOffset()\n\t\t\t.toISOString()\n\t\t\t.replace(/[:\\-]|\\.\\d{3}/g, '');\n\t\tconst today = now.substr(0, 8);\n\t\t// Intentionally discarding search\n\t\tconst { search, ...parsedUrl } = parse(urlToSign, true, true);\n\t\tconst { host } = parsedUrl;\n\t\tconst signedHeaders = { host };\n\n\t\tconst { region, service } =\n\t\t\tserviceInfo || parse_service_info({ url: format(parsedUrl) });\n\t\tconst credentialScope = credential_scope(today, region, service);\n\n\t\t// IoT service does not allow the session token in the canonical request\n\t\t// https://docs.aws.amazon.com/general/latest/gr/sigv4-add-signature-to-request.html\n\t\tconst sessionTokenRequired =\n\t\t\taccessInfo.session_token && service !== IOT_SERVICE_NAME;\n\t\tconst queryParams = {\n\t\t\t'X-Amz-Algorithm': DEFAULT_ALGORITHM,\n\t\t\t'X-Amz-Credential': [accessInfo.access_key, credentialScope].join('/'),\n\t\t\t'X-Amz-Date': now.substr(0, 16),\n\t\t\t...(sessionTokenRequired\n\t\t\t\t? { 'X-Amz-Security-Token': `${accessInfo.session_token}` }\n\t\t\t\t: {}),\n\t\t\t...(expiration ? { 'X-Amz-Expires': `${expiration}` } : {}),\n\t\t\t'X-Amz-SignedHeaders': Object.keys(signedHeaders).join(','),\n\t\t};\n\n\t\tconst canonicalRequest = canonical_request({\n\t\t\tmethod,\n\t\t\turl: format({\n\t\t\t\t...parsedUrl,\n\t\t\t\tquery: {\n\t\t\t\t\t...parsedUrl.query,\n\t\t\t\t\t...queryParams,\n\t\t\t\t},\n\t\t\t}),\n\t\t\theaders: signedHeaders,\n\t\t\tdata: body,\n\t\t});\n\n\t\tconst stringToSign = string_to_sign(\n\t\t\tDEFAULT_ALGORITHM,\n\t\t\tcanonicalRequest,\n\t\t\tnow,\n\t\t\tcredentialScope\n\t\t);\n\n\t\tconst signing_key = get_signing_key(accessInfo.secret_key, today, {\n\t\t\tregion,\n\t\t\tservice,\n\t\t});\n\t\tconst signature = get_signature(signing_key, stringToSign);\n\n\t\tconst additionalQueryParams = {\n\t\t\t'X-Amz-Signature': signature,\n\t\t\t...(accessInfo.session_token && {\n\t\t\t\t'X-Amz-Security-Token': accessInfo.session_token,\n\t\t\t}),\n\t\t};\n\n\t\tconst result = format({\n\t\t\tprotocol: parsedUrl.protocol,\n\t\t\tslashes: true,\n\t\t\thostname: parsedUrl.hostname,\n\t\t\tport: parsedUrl.port,\n\t\t\tpathname: parsedUrl.pathname,\n\t\t\tquery: {\n\t\t\t\t...parsedUrl.query,\n\t\t\t\t...queryParams,\n\t\t\t\t...additionalQueryParams,\n\t\t\t},\n\t\t});\n\n\t\treturn result;\n\t}\n}\n\n/**\n * @deprecated use per-function import\n */\nexport default Signer;\n","/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nimport {\n\tConsoleLogger as Logger,\n\tCredentials,\n\tDateUtils,\n\tSigner,\n\tPlatform,\n} from '@aws-amplify/core';\n\nimport { apiOptions, ApiInfo } from './types';\nimport axios, { CancelTokenSource } from 'axios';\nimport { parse, format } from 'url';\n\nconst logger = new Logger('RestClient');\n\n/**\n* HTTP Client for REST requests. Send and receive JSON data.\n* Sign request with AWS credentials if available\n* Usage:\n<pre>\nconst restClient = new RestClient();\nrestClient.get('...')\n    .then(function(data) {\n        console.log(data);\n    })\n    .catch(err => console.log(err));\n</pre>\n*/\nexport class RestClient {\n\tprivate _options;\n\tprivate _region: string = 'us-east-1'; // this will be updated by endpoint function\n\tprivate _service: string = 'execute-api'; // this can be updated by endpoint function\n\tprivate _custom_header = undefined; // this can be updated by endpoint function\n\n\t/**\n\t * This weak map provides functionality to let clients cancel\n\t * in-flight axios requests. https://github.com/axios/axios#cancellation\n\t *\n\t * 1. For every axios request, a unique cancel token is generated and added in the request.\n\t * 2. Promise for fulfilling the request is then mapped to that unique cancel token.\n\t * 3. The promise is returned to the client.\n\t * 4. Clients can either wait for the promise to fulfill or call `API.cancel(promise)` to cancel the request.\n\t * 5. If `API.cancel(promise)` is called, then the corresponding cancel token is retrieved from the map below.\n\t * 6. Promise returned to the client will be in rejected state with the error provided during cancel.\n\t * 7. Clients can check if the error is because of cancelling by calling `API.isCancel(error)`.\n\t *\n\t * For more details, see https://github.com/aws-amplify/amplify-js/pull/3769#issuecomment-552660025\n\t */\n\tprivate _cancelTokenMap: WeakMap<any, CancelTokenSource> = null;\n\n\tCredentials = Credentials;\n\n\t/**\n\t * @param {RestClientOptions} [options] - Instance options\n\t */\n\tconstructor(options: apiOptions) {\n\t\tthis._options = options;\n\t\tlogger.debug('API Options', this._options);\n\t\tif (this._cancelTokenMap == null) {\n\t\t\tthis._cancelTokenMap = new WeakMap();\n\t\t}\n\t}\n\n\t/**\n    * Update AWS credentials\n    * @param {AWSCredentials} credentials - AWS credentials\n    *\n    updateCredentials(credentials: AWSCredentials) {\n        this.options.credentials = credentials;\n    }\n*/\n\t/**\n\t * Basic HTTP request. Customizable\n\t * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information\n\t * @param {string} method - Request HTTP method\n\t * @param {json} [init] - Request extra params\n\t * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n\t */\n\tasync ajax(urlOrApiInfo: string | ApiInfo, method: string, init) {\n\t\tlogger.debug(method, urlOrApiInfo);\n\n\t\tlet parsed_url;\n\t\tlet url: string;\n\t\tlet region: string = 'us-east-1';\n\t\tlet service: string = 'execute-api';\n\t\tlet custom_header: () => {\n\t\t\t[key: string]: string;\n\t\t} = undefined;\n\n\t\tif (typeof urlOrApiInfo === 'string') {\n\t\t\tparsed_url = this._parseUrl(urlOrApiInfo);\n\t\t\turl = urlOrApiInfo;\n\t\t} else {\n\t\t\t({ endpoint: url, custom_header, region, service } = urlOrApiInfo);\n\t\t\tparsed_url = this._parseUrl(urlOrApiInfo.endpoint);\n\t\t}\n\n\t\tconst params = {\n\t\t\tmethod,\n\t\t\turl,\n\t\t\thost: parsed_url.host,\n\t\t\tpath: parsed_url.path,\n\t\t\theaders: {},\n\t\t\tdata: null,\n\t\t\tresponseType: 'json',\n\t\t\ttimeout: 0,\n\t\t\tcancelToken: null,\n\t\t};\n\n\t\tlet libraryHeaders = {};\n\n\t\tif (Platform.isReactNative) {\n\t\t\tconst userAgent = Platform.userAgent || 'aws-amplify/0.1.x';\n\t\t\tlibraryHeaders = {\n\t\t\t\t'User-Agent': userAgent,\n\t\t\t};\n\t\t}\n\n\t\tconst initParams = Object.assign({}, init);\n\t\tconst isAllResponse = initParams.response;\n\t\tif (initParams.body) {\n\t\t\tif (\n\t\t\t\ttypeof FormData === 'function' &&\n\t\t\t\tinitParams.body instanceof FormData\n\t\t\t) {\n\t\t\t\tlibraryHeaders['Content-Type'] = 'multipart/form-data';\n\t\t\t\tparams.data = initParams.body;\n\t\t\t} else {\n\t\t\t\tlibraryHeaders['Content-Type'] = 'application/json; charset=UTF-8';\n\t\t\t\tparams.data = JSON.stringify(initParams.body);\n\t\t\t}\n\t\t}\n\t\tif (initParams.responseType) {\n\t\t\tparams.responseType = initParams.responseType;\n\t\t}\n\t\tif (initParams.withCredentials) {\n\t\t\tparams['withCredentials'] = initParams.withCredentials;\n\t\t}\n\t\tif (initParams.timeout) {\n\t\t\tparams.timeout = initParams.timeout;\n\t\t}\n\t\tif (initParams.cancellableToken) {\n\t\t\tparams.cancelToken = initParams.cancellableToken.token;\n\t\t}\n\n\t\tparams['signerServiceInfo'] = initParams.signerServiceInfo;\n\n\t\t// custom_header callback\n\t\tconst custom_header_obj =\n\t\t\ttypeof custom_header === 'function' ? await custom_header() : undefined;\n\n\t\tparams.headers = {\n\t\t\t...libraryHeaders,\n\t\t\t...custom_header_obj,\n\t\t\t...initParams.headers,\n\t\t};\n\n\t\t// Intentionally discarding search\n\t\tconst { search, ...parsedUrl } = parse(url, true, true);\n\t\tparams.url = format({\n\t\t\t...parsedUrl,\n\t\t\tquery: {\n\t\t\t\t...parsedUrl.query,\n\t\t\t\t...(initParams.queryStringParameters || {}),\n\t\t\t},\n\t\t});\n\n\t\t// Do not sign the request if client has added 'Authorization' header,\n\t\t// which means custom authorizer.\n\t\tif (typeof params.headers['Authorization'] !== 'undefined') {\n\t\t\tparams.headers = Object.keys(params.headers).reduce((acc, k) => {\n\t\t\t\tif (params.headers[k]) {\n\t\t\t\t\tacc[k] = params.headers[k];\n\t\t\t\t}\n\t\t\t\treturn acc;\n\t\t\t\t// tslint:disable-next-line:align\n\t\t\t}, {});\n\t\t\treturn this._request(params, isAllResponse);\n\t\t}\n\n\t\t// Signing the request in case there credentials are available\n\t\treturn this.Credentials.get().then(\n\t\t\tcredentials => {\n\t\t\t\treturn this._signed({ ...params }, credentials, isAllResponse, {\n\t\t\t\t\tregion,\n\t\t\t\t\tservice,\n\t\t\t\t}).catch(error => {\n\t\t\t\t\tif (DateUtils.isClockSkewError(error)) {\n\t\t\t\t\t\tconst { headers } = error.response;\n\t\t\t\t\t\tconst dateHeader = headers && (headers.date || headers.Date);\n\t\t\t\t\t\tconst responseDate = new Date(dateHeader);\n\t\t\t\t\t\tconst requestDate = DateUtils.getDateFromHeaderString(\n\t\t\t\t\t\t\tparams.headers['x-amz-date']\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// Compare local clock to the server clock\n\t\t\t\t\t\tif (DateUtils.isClockSkewed(responseDate)) {\n\t\t\t\t\t\t\tDateUtils.setClockOffset(\n\t\t\t\t\t\t\t\tresponseDate.getTime() - requestDate.getTime()\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\treturn this.ajax(urlOrApiInfo, method, init);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthrow error;\n\t\t\t\t});\n\t\t\t},\n\t\t\terr => {\n\t\t\t\tlogger.debug('No credentials available, the request will be unsigned');\n\t\t\t\treturn this._request(params, isAllResponse);\n\t\t\t}\n\t\t);\n\t}\n\n\t/**\n\t * GET HTTP request\n\t * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information\n\t * @param {JSON} init - Request extra params\n\t * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n\t */\n\tget(urlOrApiInfo: string | ApiInfo, init) {\n\t\treturn this.ajax(urlOrApiInfo, 'GET', init);\n\t}\n\n\t/**\n\t * PUT HTTP request\n\t * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information\n\t * @param {json} init - Request extra params\n\t * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n\t */\n\tput(urlOrApiInfo: string | ApiInfo, init) {\n\t\treturn this.ajax(urlOrApiInfo, 'PUT', init);\n\t}\n\n\t/**\n\t * PATCH HTTP request\n\t * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information\n\t * @param {json} init - Request extra params\n\t * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n\t */\n\tpatch(urlOrApiInfo: string | ApiInfo, init) {\n\t\treturn this.ajax(urlOrApiInfo, 'PATCH', init);\n\t}\n\n\t/**\n\t * POST HTTP request\n\t * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information\n\t * @param {json} init - Request extra params\n\t * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n\t */\n\tpost(urlOrApiInfo: string | ApiInfo, init) {\n\t\treturn this.ajax(urlOrApiInfo, 'POST', init);\n\t}\n\n\t/**\n\t * DELETE HTTP request\n\t * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information\n\t * @param {json} init - Request extra params\n\t * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n\t */\n\tdel(urlOrApiInfo: string | ApiInfo, init) {\n\t\treturn this.ajax(urlOrApiInfo, 'DELETE', init);\n\t}\n\n\t/**\n\t * HEAD HTTP request\n\t * @param {string | ApiInfo } urlOrApiInfo - Full request URL or Api information\n\t * @param {json} init - Request extra params\n\t * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n\t */\n\thead(urlOrApiInfo: string | ApiInfo, init) {\n\t\treturn this.ajax(urlOrApiInfo, 'HEAD', init);\n\t}\n\n\t/**\n\t * Cancel an inflight API request\n\t * @param {Promise<any>} request - The request promise to cancel\n\t * @param {string} [message] - A message to include in the cancelation exception\n\t */\n\tcancel(request: Promise<any>, message?: string) {\n\t\tconst source = this._cancelTokenMap.get(request);\n\t\tif (source) {\n\t\t\tsource.cancel(message);\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Checks to see if an error thrown is from an api request cancellation\n\t * @param {any} error - Any error\n\t * @return {boolean} - A boolean indicating if the error was from an api request cancellation\n\t */\n\tisCancel(error): boolean {\n\t\treturn axios.isCancel(error);\n\t}\n\n\t/**\n\t * Retrieves a new and unique cancel token which can be\n\t * provided in an axios request to be cancelled later.\n\t */\n\tgetCancellableToken(): CancelTokenSource {\n\t\treturn axios.CancelToken.source();\n\t}\n\n\t/**\n\t * Updates the weakmap with a response promise and its\n\t * cancel token such that the cancel token can be easily\n\t * retrieved (and used for cancelling the request)\n\t */\n\tupdateRequestToBeCancellable(\n\t\tpromise: Promise<any>,\n\t\tcancelTokenSource: CancelTokenSource\n\t) {\n\t\tthis._cancelTokenMap.set(promise, cancelTokenSource);\n\t}\n\n\t/**\n\t * Getting endpoint for API\n\t * @param {string} apiName - The name of the api\n\t * @return {string} - The endpoint of the api\n\t */\n\tendpoint(apiName: string) {\n\t\tconst cloud_logic_array = this._options.endpoints;\n\t\tlet response = '';\n\n\t\tif (!Array.isArray(cloud_logic_array)) {\n\t\t\treturn response;\n\t\t}\n\n\t\tcloud_logic_array.forEach(v => {\n\t\t\tif (v.name === apiName) {\n\t\t\t\tresponse = v.endpoint;\n\t\t\t\tif (typeof v.region === 'string') {\n\t\t\t\t\tthis._region = v.region;\n\t\t\t\t} else if (typeof this._options.region === 'string') {\n\t\t\t\t\tthis._region = this._options.region;\n\t\t\t\t}\n\t\t\t\tif (typeof v.service === 'string') {\n\t\t\t\t\tthis._service = v.service || 'execute-api';\n\t\t\t\t} else {\n\t\t\t\t\tthis._service = 'execute-api';\n\t\t\t\t}\n\t\t\t\tif (typeof v.custom_header === 'function') {\n\t\t\t\t\tthis._custom_header = v.custom_header;\n\t\t\t\t} else {\n\t\t\t\t\tthis._custom_header = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn response;\n\t}\n\n\t/** private methods **/\n\n\tprivate _signed(params, credentials, isAllResponse, { service, region }) {\n\t\tconst {\n\t\t\tsignerServiceInfo: signerServiceInfoParams,\n\t\t\t...otherParams\n\t\t} = params;\n\n\t\tconst endpoint_region: string =\n\t\t\tregion || this._region || this._options.region;\n\t\tconst endpoint_service: string =\n\t\t\tservice || this._service || this._options.service;\n\n\t\tconst creds = {\n\t\t\tsecret_key: credentials.secretAccessKey,\n\t\t\taccess_key: credentials.accessKeyId,\n\t\t\tsession_token: credentials.sessionToken,\n\t\t};\n\n\t\tconst endpointInfo = {\n\t\t\tregion: endpoint_region,\n\t\t\tservice: endpoint_service,\n\t\t};\n\n\t\tconst signerServiceInfo = Object.assign(\n\t\t\tendpointInfo,\n\t\t\tsignerServiceInfoParams\n\t\t);\n\n\t\tconst signed_params = Signer.sign(otherParams, creds, signerServiceInfo);\n\n\t\tif (signed_params.data) {\n\t\t\tsigned_params.body = signed_params.data;\n\t\t}\n\n\t\tlogger.debug('Signed Request: ', signed_params);\n\n\t\tdelete signed_params.headers['host'];\n\n\t\treturn axios(signed_params)\n\t\t\t.then(response => (isAllResponse ? response : response.data))\n\t\t\t.catch(error => {\n\t\t\t\tlogger.debug(error);\n\t\t\t\tthrow error;\n\t\t\t});\n\t}\n\n\tprivate _request(params, isAllResponse = false) {\n\t\treturn axios(params)\n\t\t\t.then(response => (isAllResponse ? response : response.data))\n\t\t\t.catch(error => {\n\t\t\t\tlogger.debug(error);\n\t\t\t\tthrow error;\n\t\t\t});\n\t}\n\n\tprivate _parseUrl(url) {\n\t\tconst parts = url.split('/');\n\n\t\treturn {\n\t\t\thost: parts[2],\n\t\t\tpath: '/' + parts.slice(3).join('/'),\n\t\t};\n\t}\n}\n","/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { RestClient } from './RestClient';\nimport {\n\tAmplify,\n\tConsoleLogger as Logger,\n\tCredentials,\n} from '@aws-amplify/core';\nimport { ApiInfo } from './types';\n\nconst logger = new Logger('RestAPI');\n\n/**\n * Export Cloud Logic APIs\n */\nexport class RestAPIClass {\n\t/**\n\t * @private\n\t */\n\tprivate _options;\n\tprivate _api: RestClient = null;\n\n\tCredentials = Credentials;\n\n\t/**\n\t * Initialize Rest API with AWS configuration\n\t * @param {Object} options - Configuration object for API\n\t */\n\tconstructor(options) {\n\t\tthis._options = options;\n\t\tlogger.debug('API Options', this._options);\n\t}\n\n\tpublic getModuleName() {\n\t\treturn 'RestAPI';\n\t}\n\n\t/**\n\t * Configure API part with aws configurations\n\t * @param {Object} config - Configuration of the API\n\t * @return {Object} - The current configuration\n\t */\n\tconfigure(options) {\n\t\tconst { API = {}, ...otherOptions } = options || {};\n\t\tlet opt = { ...otherOptions, ...API };\n\t\tlogger.debug('configure Rest API', { opt });\n\n\t\tif (opt['aws_project_region']) {\n\t\t\tif (opt['aws_cloud_logic_custom']) {\n\t\t\t\tconst custom = opt['aws_cloud_logic_custom'];\n\t\t\t\topt.endpoints =\n\t\t\t\t\ttypeof custom === 'string' ? JSON.parse(custom) : custom;\n\t\t\t}\n\n\t\t\topt = Object.assign({}, opt, {\n\t\t\t\tregion: opt['aws_project_region'],\n\t\t\t\theader: {},\n\t\t\t});\n\t\t}\n\n\t\tif (Array.isArray(opt.endpoints)) {\n\t\t\t// Check if endpoints has custom_headers and validate if is a function\n\t\t\topt.endpoints.forEach(endpoint => {\n\t\t\t\tif (\n\t\t\t\t\ttypeof endpoint.custom_header !== 'undefined' &&\n\t\t\t\t\ttypeof endpoint.custom_header !== 'function'\n\t\t\t\t) {\n\t\t\t\t\tlogger.warn(\n\t\t\t\t\t\t'Rest API ' + endpoint.name + ', custom_header should be a function'\n\t\t\t\t\t);\n\t\t\t\t\tendpoint.custom_header = undefined;\n\t\t\t\t}\n\t\t\t});\n\t\t} else if (this._options && Array.isArray(this._options.endpoints)) {\n\t\t\topt.endpoints = this._options.endpoints;\n\t\t} else {\n\t\t\topt.endpoints = [];\n\t\t}\n\n\t\tthis._options = Object.assign({}, this._options, opt);\n\n\t\tthis.createInstance();\n\n\t\treturn this._options;\n\t}\n\n\t/**\n\t * Create an instance of API for the library\n\t * @return - A promise of true if Success\n\t */\n\tcreateInstance() {\n\t\tlogger.debug('create Rest API instance');\n\t\tthis._api = new RestClient(this._options);\n\n\t\t// Share Amplify instance with client for SSR\n\t\tthis._api.Credentials = this.Credentials;\n\t\treturn true;\n\t}\n\n\t/**\n\t * Make a GET request\n\t * @param {string} apiName - The api name of the request\n\t * @param {string} path - The path of the request\n\t * @param {json} [init] - Request extra params\n\t * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n\t */\n\tget(apiName, path, init): Promise<any> {\n\t\ttry {\n\t\t\tconst apiInfo = this.getEndpointInfo(apiName, path);\n\n\t\t\tconst cancellableToken = this._api.getCancellableToken();\n\n\t\t\tconst initParams = Object.assign({}, init);\n\t\t\tinitParams.cancellableToken = cancellableToken;\n\n\t\t\tconst responsePromise = this._api.get(apiInfo, initParams);\n\n\t\t\tthis._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n\n\t\t\treturn responsePromise;\n\t\t} catch (err) {\n\t\t\treturn Promise.reject(err.message);\n\t\t}\n\t}\n\n\t/**\n\t * Make a POST request\n\t * @param {string} apiName - The api name of the request\n\t * @param {string} path - The path of the request\n\t * @param {json} [init] - Request extra params\n\t * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n\t */\n\tpost(apiName, path, init): Promise<any> {\n\t\ttry {\n\t\t\tconst apiInfo = this.getEndpointInfo(apiName, path);\n\n\t\t\tconst cancellableToken = this._api.getCancellableToken();\n\n\t\t\tconst initParams = Object.assign({}, init);\n\t\t\tinitParams.cancellableToken = cancellableToken;\n\n\t\t\tconst responsePromise = this._api.post(apiInfo, initParams);\n\n\t\t\tthis._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n\n\t\t\treturn responsePromise;\n\t\t} catch (err) {\n\t\t\treturn Promise.reject(err.message);\n\t\t}\n\t}\n\n\t/**\n\t * Make a PUT request\n\t * @param {string} apiName - The api name of the request\n\t * @param {string} path - The path of the request\n\t * @param {json} [init] - Request extra params\n\t * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n\t */\n\tput(apiName, path, init): Promise<any> {\n\t\ttry {\n\t\t\tconst apiInfo = this.getEndpointInfo(apiName, path);\n\n\t\t\tconst cancellableToken = this._api.getCancellableToken();\n\n\t\t\tconst initParams = Object.assign({}, init);\n\t\t\tinitParams.cancellableToken = cancellableToken;\n\n\t\t\tconst responsePromise = this._api.put(apiInfo, initParams);\n\n\t\t\tthis._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n\n\t\t\treturn responsePromise;\n\t\t} catch (err) {\n\t\t\treturn Promise.reject(err.message);\n\t\t}\n\t}\n\n\t/**\n\t * Make a PATCH request\n\t * @param {string} apiName - The api name of the request\n\t * @param {string} path - The path of the request\n\t * @param {json} [init] - Request extra params\n\t * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n\t */\n\tpatch(apiName, path, init): Promise<any> {\n\t\ttry {\n\t\t\tconst apiInfo = this.getEndpointInfo(apiName, path);\n\n\t\t\tconst cancellableToken = this._api.getCancellableToken();\n\n\t\t\tconst initParams = Object.assign({}, init);\n\t\t\tinitParams.cancellableToken = cancellableToken;\n\n\t\t\tconst responsePromise = this._api.patch(apiInfo, initParams);\n\n\t\t\tthis._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n\n\t\t\treturn responsePromise;\n\t\t} catch (err) {\n\t\t\treturn Promise.reject(err.message);\n\t\t}\n\t}\n\n\t/**\n\t * Make a DEL request\n\t * @param {string} apiName - The api name of the request\n\t * @param {string} path - The path of the request\n\t * @param {json} [init] - Request extra params\n\t * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n\t */\n\tdel(apiName, path, init): Promise<any> {\n\t\ttry {\n\t\t\tconst apiInfo = this.getEndpointInfo(apiName, path);\n\n\t\t\tconst cancellableToken = this._api.getCancellableToken();\n\n\t\t\tconst initParams = Object.assign({}, init);\n\t\t\tinitParams.cancellableToken = cancellableToken;\n\n\t\t\tconst responsePromise = this._api.del(apiInfo, initParams);\n\n\t\t\tthis._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n\n\t\t\treturn responsePromise;\n\t\t} catch (err) {\n\t\t\treturn Promise.reject(err.message);\n\t\t}\n\t}\n\n\t/**\n\t * Make a HEAD request\n\t * @param {string} apiName - The api name of the request\n\t * @param {string} path - The path of the request\n\t * @param {json} [init] - Request extra params\n\t * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n\t */\n\thead(apiName, path, init): Promise<any> {\n\t\ttry {\n\t\t\tconst apiInfo = this.getEndpointInfo(apiName, path);\n\n\t\t\tconst cancellableToken = this._api.getCancellableToken();\n\n\t\t\tconst initParams = Object.assign({}, init);\n\t\t\tinitParams.cancellableToken = cancellableToken;\n\n\t\t\tconst responsePromise = this._api.head(apiInfo, initParams);\n\n\t\t\tthis._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n\n\t\t\treturn responsePromise;\n\t\t} catch (err) {\n\t\t\treturn Promise.reject(err.message);\n\t\t}\n\t}\n\n\t/**\n\t * Checks to see if an error thrown is from an api request cancellation\n\t * @param {any} error - Any error\n\t * @return {boolean} - A boolean indicating if the error was from an api request cancellation\n\t */\n\tisCancel(error) {\n\t\treturn this._api.isCancel(error);\n\t}\n\n\t/**\n\t * Cancels an inflight request\n\t * @param {any} request - request to cancel\n\t * @return {boolean} - A boolean indicating if the request was cancelled\n\t */\n\tcancel(request: Promise<any>, message?: string) {\n\t\treturn this._api.cancel(request, message);\n\t}\n\n\t/**\n\t * Getting endpoint for API\n\t * @param {string} apiName - The name of the api\n\t * @return {string} - The endpoint of the api\n\t */\n\tasync endpoint(apiName) {\n\t\treturn this._api.endpoint(apiName);\n\t}\n\n\t/**\n\t * Getting endpoint info for API\n\t * @param {string} apiName - The name of the api\n\t * @param {string} path - The path of the api that is going to accessed\n\t * @return {ApiInfo} - The endpoint information for that api-name\n\t */\n\tprivate getEndpointInfo(apiName: string, path: string): ApiInfo {\n\t\tconst cloud_logic_array = this._options.endpoints;\n\n\t\tif (!Array.isArray(cloud_logic_array)) {\n\t\t\tthrow new Error(`API category not configured`);\n\t\t}\n\n\t\tconst apiConfig = cloud_logic_array.find(api => api.name === apiName);\n\n\t\tif (!apiConfig) {\n\t\t\tthrow new Error(`API ${apiName} does not exist`);\n\t\t}\n\n\t\tconst response: ApiInfo = {\n\t\t\tendpoint: apiConfig.endpoint + path,\n\t\t};\n\n\t\tif (typeof apiConfig.region === 'string') {\n\t\t\tresponse.region = apiConfig.region;\n\t\t} else if (typeof this._options.region === 'string') {\n\t\t\tresponse.region = this._options.region;\n\t\t}\n\n\t\tif (typeof apiConfig.service === 'string') {\n\t\t\tresponse.service = apiConfig.service || 'execute-api';\n\t\t} else {\n\t\t\tresponse.service = 'execute-api';\n\t\t}\n\n\t\tif (typeof apiConfig.custom_header === 'function') {\n\t\t\tresponse.custom_header = apiConfig.custom_header;\n\t\t} else {\n\t\t\tresponse.custom_header = undefined;\n\t\t}\n\n\t\treturn response;\n\t}\n}\n\nexport const RestAPI = new RestAPIClass(null);\nAmplify.register(RestAPI);\n","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Return true if `value` is object-like. A value is object-like if it's not\n * `null` and has a `typeof` result of \"object\".\n */\nexport default function isObjectLike(value) {\n  return _typeof(value) == 'object' && value !== null;\n}\n","// In ES2015 (or a polyfilled) environment, this will be Symbol.iterator\n// istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\nexport var SYMBOL_ITERATOR = typeof Symbol === 'function' && Symbol.iterator != null ? Symbol.iterator : '@@iterator'; // In ES2017 (or a polyfilled) environment, this will be Symbol.asyncIterator\n// istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\n\nexport var SYMBOL_ASYNC_ITERATOR = typeof Symbol === 'function' && Symbol.asyncIterator != null ? Symbol.asyncIterator : '@@asyncIterator'; // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\n\nexport var SYMBOL_TO_STRING_TAG = typeof Symbol === 'function' && Symbol.toStringTag != null ? Symbol.toStringTag : '@@toStringTag';\n","/**\n * Represents a location in a Source.\n */\n\n/**\n * Takes a Source and a UTF-8 character offset, and returns the corresponding\n * line and column as a SourceLocation.\n */\nexport function getLocation(source, position) {\n  var lineRegexp = /\\r\\n|[\\n\\r]/g;\n  var line = 1;\n  var column = position + 1;\n  var match;\n\n  while ((match = lineRegexp.exec(source.body)) && match.index < position) {\n    line += 1;\n    column = position + 1 - (match.index + match[0].length);\n  }\n\n  return {\n    line: line,\n    column: column\n  };\n}\n","import { getLocation } from \"./location.mjs\";\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printLocation(location) {\n  return printSourceLocation(location.source, getLocation(location.source, location.start));\n}\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printSourceLocation(source, sourceLocation) {\n  var firstLineColumnOffset = source.locationOffset.column - 1;\n  var body = whitespace(firstLineColumnOffset) + source.body;\n  var lineIndex = sourceLocation.line - 1;\n  var lineOffset = source.locationOffset.line - 1;\n  var lineNum = sourceLocation.line + lineOffset;\n  var columnOffset = sourceLocation.line === 1 ? firstLineColumnOffset : 0;\n  var columnNum = sourceLocation.column + columnOffset;\n  var locationStr = \"\".concat(source.name, \":\").concat(lineNum, \":\").concat(columnNum, \"\\n\");\n  var lines = body.split(/\\r\\n|[\\n\\r]/g);\n  var locationLine = lines[lineIndex]; // Special case for minified documents\n\n  if (locationLine.length > 120) {\n    var subLineIndex = Math.floor(columnNum / 80);\n    var subLineColumnNum = columnNum % 80;\n    var subLines = [];\n\n    for (var i = 0; i < locationLine.length; i += 80) {\n      subLines.push(locationLine.slice(i, i + 80));\n    }\n\n    return locationStr + printPrefixedLines([[\"\".concat(lineNum), subLines[0]]].concat(subLines.slice(1, subLineIndex + 1).map(function (subLine) {\n      return ['', subLine];\n    }), [[' ', whitespace(subLineColumnNum - 1) + '^'], ['', subLines[subLineIndex + 1]]]));\n  }\n\n  return locationStr + printPrefixedLines([// Lines specified like this: [\"prefix\", \"string\"],\n  [\"\".concat(lineNum - 1), lines[lineIndex - 1]], [\"\".concat(lineNum), locationLine], ['', whitespace(columnNum - 1) + '^'], [\"\".concat(lineNum + 1), lines[lineIndex + 1]]]);\n}\n\nfunction printPrefixedLines(lines) {\n  var existingLines = lines.filter(function (_ref) {\n    var _ = _ref[0],\n        line = _ref[1];\n    return line !== undefined;\n  });\n  var padLen = Math.max.apply(Math, existingLines.map(function (_ref2) {\n    var prefix = _ref2[0];\n    return prefix.length;\n  }));\n  return existingLines.map(function (_ref3) {\n    var prefix = _ref3[0],\n        line = _ref3[1];\n    return leftPad(padLen, prefix) + (line ? ' | ' + line : ' |');\n  }).join('\\n');\n}\n\nfunction whitespace(len) {\n  return Array(len + 1).join(' ');\n}\n\nfunction leftPad(len, str) {\n  return whitespace(len - str.length) + str;\n}\n","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport isObjectLike from \"../jsutils/isObjectLike.mjs\";\nimport { SYMBOL_TO_STRING_TAG } from \"../polyfills/symbols.mjs\";\nimport { getLocation } from \"../language/location.mjs\";\nimport { printLocation, printSourceLocation } from \"../language/printLocation.mjs\";\n/**\n * A GraphQLError describes an Error found during the parse, validate, or\n * execute phases of performing a GraphQL operation. In addition to a message\n * and stack trace, it also includes information about the locations in a\n * GraphQL document and/or execution result that correspond to the Error.\n */\n\nexport var GraphQLError = /*#__PURE__*/function (_Error) {\n  _inherits(GraphQLError, _Error);\n\n  var _super = _createSuper(GraphQLError);\n\n  /**\n   * An array of { line, column } locations within the source GraphQL document\n   * which correspond to this error.\n   *\n   * Errors during validation often contain multiple locations, for example to\n   * point out two things with the same name. Errors during execution include a\n   * single location, the field which produced the error.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array describing the JSON-path into the execution response which\n   * corresponds to this error. Only included for errors during execution.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array of GraphQL AST Nodes corresponding to this error.\n   */\n\n  /**\n   * The source GraphQL document for the first location of this error.\n   *\n   * Note that if this Error represents more than one node, the source may not\n   * represent nodes after the first node.\n   */\n\n  /**\n   * An array of character offsets within the source GraphQL document\n   * which correspond to this error.\n   */\n\n  /**\n   * The original error thrown from a field resolver during execution.\n   */\n\n  /**\n   * Extension fields to add to the formatted error.\n   */\n  function GraphQLError(message, nodes, source, positions, path, originalError, extensions) {\n    var _nodeLocations, _nodeLocations2, _nodeLocations3;\n\n    var _this;\n\n    _classCallCheck(this, GraphQLError);\n\n    _this = _super.call(this, message);\n    _this.name = 'GraphQLError';\n    _this.originalError = originalError !== null && originalError !== void 0 ? originalError : undefined; // Compute list of blame nodes.\n\n    _this.nodes = undefinedIfEmpty(Array.isArray(nodes) ? nodes : nodes ? [nodes] : undefined);\n    var nodeLocations = [];\n\n    for (var _i2 = 0, _ref3 = (_this$nodes = _this.nodes) !== null && _this$nodes !== void 0 ? _this$nodes : []; _i2 < _ref3.length; _i2++) {\n      var _this$nodes;\n\n      var _ref4 = _ref3[_i2];\n      var loc = _ref4.loc;\n\n      if (loc != null) {\n        nodeLocations.push(loc);\n      }\n    }\n\n    nodeLocations = undefinedIfEmpty(nodeLocations); // Compute locations in the source for the given nodes/positions.\n\n    _this.source = source !== null && source !== void 0 ? source : (_nodeLocations = nodeLocations) === null || _nodeLocations === void 0 ? void 0 : _nodeLocations[0].source;\n    _this.positions = positions !== null && positions !== void 0 ? positions : (_nodeLocations2 = nodeLocations) === null || _nodeLocations2 === void 0 ? void 0 : _nodeLocations2.map(function (loc) {\n      return loc.start;\n    });\n    _this.locations = positions && source ? positions.map(function (pos) {\n      return getLocation(source, pos);\n    }) : (_nodeLocations3 = nodeLocations) === null || _nodeLocations3 === void 0 ? void 0 : _nodeLocations3.map(function (loc) {\n      return getLocation(loc.source, loc.start);\n    });\n    _this.path = path !== null && path !== void 0 ? path : undefined;\n    var originalExtensions = originalError === null || originalError === void 0 ? void 0 : originalError.extensions;\n\n    if (extensions == null && isObjectLike(originalExtensions)) {\n      _this.extensions = _objectSpread({}, originalExtensions);\n    } else {\n      _this.extensions = extensions !== null && extensions !== void 0 ? extensions : {};\n    } // By being enumerable, JSON.stringify will include bellow properties in the resulting output.\n    // This ensures that the simplest possible GraphQL service adheres to the spec.\n\n\n    Object.defineProperties(_assertThisInitialized(_this), {\n      message: {\n        enumerable: true\n      },\n      locations: {\n        enumerable: _this.locations != null\n      },\n      path: {\n        enumerable: _this.path != null\n      },\n      extensions: {\n        enumerable: _this.extensions != null && Object.keys(_this.extensions).length > 0\n      },\n      name: {\n        enumerable: false\n      },\n      nodes: {\n        enumerable: false\n      },\n      source: {\n        enumerable: false\n      },\n      positions: {\n        enumerable: false\n      },\n      originalError: {\n        enumerable: false\n      }\n    }); // Include (non-enumerable) stack trace.\n\n    if (originalError !== null && originalError !== void 0 && originalError.stack) {\n      Object.defineProperty(_assertThisInitialized(_this), 'stack', {\n        value: originalError.stack,\n        writable: true,\n        configurable: true\n      });\n      return _possibleConstructorReturn(_this);\n    } // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\n\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(_assertThisInitialized(_this), GraphQLError);\n    } else {\n      Object.defineProperty(_assertThisInitialized(_this), 'stack', {\n        value: Error().stack,\n        writable: true,\n        configurable: true\n      });\n    }\n\n    return _this;\n  }\n\n  _createClass(GraphQLError, [{\n    key: \"toString\",\n    value: function toString() {\n      return printError(this);\n    } // FIXME: workaround to not break chai comparisons, should be remove in v16\n    // $FlowFixMe[unsupported-syntax] Flow doesn't support computed properties yet\n\n  }, {\n    key: SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'Object';\n    }\n  }]);\n\n  return GraphQLError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nfunction undefinedIfEmpty(array) {\n  return array === undefined || array.length === 0 ? undefined : array;\n}\n/**\n * Prints a GraphQLError to a string, representing useful location information\n * about the error's position in the source.\n */\n\n\nexport function printError(error) {\n  var output = error.message;\n\n  if (error.nodes) {\n    for (var _i4 = 0, _error$nodes2 = error.nodes; _i4 < _error$nodes2.length; _i4++) {\n      var node = _error$nodes2[_i4];\n\n      if (node.loc) {\n        output += '\\n\\n' + printLocation(node.loc);\n      }\n    }\n  } else if (error.source && error.locations) {\n    for (var _i6 = 0, _error$locations2 = error.locations; _i6 < _error$locations2.length; _i6++) {\n      var location = _error$locations2[_i6];\n      output += '\\n\\n' + printSourceLocation(error.source, location);\n    }\n  }\n\n  return output;\n}\n","import { GraphQLError } from \"./GraphQLError.mjs\";\n/**\n * Produces a GraphQLError representing a syntax error, containing useful\n * descriptive information about the syntax error's position in the source.\n */\n\nexport function syntaxError(source, position, description) {\n  return new GraphQLError(\"Syntax Error: \".concat(description), undefined, source, [position]);\n}\n","/**\n * The set of allowed kind values for AST nodes.\n */\nexport var Kind = Object.freeze({\n  // Name\n  NAME: 'Name',\n  // Document\n  DOCUMENT: 'Document',\n  OPERATION_DEFINITION: 'OperationDefinition',\n  VARIABLE_DEFINITION: 'VariableDefinition',\n  SELECTION_SET: 'SelectionSet',\n  FIELD: 'Field',\n  ARGUMENT: 'Argument',\n  // Fragments\n  FRAGMENT_SPREAD: 'FragmentSpread',\n  INLINE_FRAGMENT: 'InlineFragment',\n  FRAGMENT_DEFINITION: 'FragmentDefinition',\n  // Values\n  VARIABLE: 'Variable',\n  INT: 'IntValue',\n  FLOAT: 'FloatValue',\n  STRING: 'StringValue',\n  BOOLEAN: 'BooleanValue',\n  NULL: 'NullValue',\n  ENUM: 'EnumValue',\n  LIST: 'ListValue',\n  OBJECT: 'ObjectValue',\n  OBJECT_FIELD: 'ObjectField',\n  // Directives\n  DIRECTIVE: 'Directive',\n  // Types\n  NAMED_TYPE: 'NamedType',\n  LIST_TYPE: 'ListType',\n  NON_NULL_TYPE: 'NonNullType',\n  // Type System Definitions\n  SCHEMA_DEFINITION: 'SchemaDefinition',\n  OPERATION_TYPE_DEFINITION: 'OperationTypeDefinition',\n  // Type Definitions\n  SCALAR_TYPE_DEFINITION: 'ScalarTypeDefinition',\n  OBJECT_TYPE_DEFINITION: 'ObjectTypeDefinition',\n  FIELD_DEFINITION: 'FieldDefinition',\n  INPUT_VALUE_DEFINITION: 'InputValueDefinition',\n  INTERFACE_TYPE_DEFINITION: 'InterfaceTypeDefinition',\n  UNION_TYPE_DEFINITION: 'UnionTypeDefinition',\n  ENUM_TYPE_DEFINITION: 'EnumTypeDefinition',\n  ENUM_VALUE_DEFINITION: 'EnumValueDefinition',\n  INPUT_OBJECT_TYPE_DEFINITION: 'InputObjectTypeDefinition',\n  // Directive Definitions\n  DIRECTIVE_DEFINITION: 'DirectiveDefinition',\n  // Type System Extensions\n  SCHEMA_EXTENSION: 'SchemaExtension',\n  // Type Extensions\n  SCALAR_TYPE_EXTENSION: 'ScalarTypeExtension',\n  OBJECT_TYPE_EXTENSION: 'ObjectTypeExtension',\n  INTERFACE_TYPE_EXTENSION: 'InterfaceTypeExtension',\n  UNION_TYPE_EXTENSION: 'UnionTypeExtension',\n  ENUM_TYPE_EXTENSION: 'EnumTypeExtension',\n  INPUT_OBJECT_TYPE_EXTENSION: 'InputObjectTypeExtension'\n});\n/**\n * The enum type representing the possible kind values of AST nodes.\n */\n","// istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\nvar nodejsCustomInspectSymbol = typeof Symbol === 'function' && typeof Symbol.for === 'function' ? Symbol.for('nodejs.util.inspect.custom') : undefined;\nexport default nodejsCustomInspectSymbol;\n","import invariant from \"./invariant.mjs\";\nimport nodejsCustomInspectSymbol from \"./nodejsCustomInspectSymbol.mjs\";\n/**\n * The `defineInspect()` function defines `inspect()` prototype method as alias of `toJSON`\n */\n\nexport default function defineInspect(classObject) {\n  var fn = classObject.prototype.toJSON;\n  typeof fn === 'function' || invariant(0);\n  classObject.prototype.inspect = fn; // istanbul ignore else (See: 'https://github.com/graphql/graphql-js/issues/2317')\n\n  if (nodejsCustomInspectSymbol) {\n    classObject.prototype[nodejsCustomInspectSymbol] = fn;\n  }\n}\n","export default function invariant(condition, message) {\n  var booleanCondition = Boolean(condition); // istanbul ignore else (See transformation done in './resources/inlineInvariant.js')\n\n  if (!booleanCondition) {\n    throw new Error(message != null ? message : 'Unexpected invariant triggered.');\n  }\n}\n","import defineInspect from \"../jsutils/defineInspect.mjs\";\n\n/**\n * Contains a range of UTF-8 character offsets and token references that\n * identify the region of the source from which the AST derived.\n */\nexport var Location = /*#__PURE__*/function () {\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The Token at which this Node begins.\n   */\n\n  /**\n   * The Token at which this Node ends.\n   */\n\n  /**\n   * The Source document the AST represents.\n   */\n  function Location(startToken, endToken, source) {\n    this.start = startToken.start;\n    this.end = endToken.end;\n    this.startToken = startToken;\n    this.endToken = endToken;\n    this.source = source;\n  }\n\n  var _proto = Location.prototype;\n\n  _proto.toJSON = function toJSON() {\n    return {\n      start: this.start,\n      end: this.end\n    };\n  };\n\n  return Location;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\ndefineInspect(Location);\n/**\n * Represents a range of characters represented by a lexical token\n * within a Source.\n */\n\nexport var Token = /*#__PURE__*/function () {\n  /**\n   * The kind of Token.\n   */\n\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The 1-indexed line number on which this Token appears.\n   */\n\n  /**\n   * The 1-indexed column number at which this Token begins.\n   */\n\n  /**\n   * For non-punctuation tokens, represents the interpreted value of the token.\n   */\n\n  /**\n   * Tokens exist as nodes in a double-linked-list amongst all tokens\n   * including ignored tokens. <SOF> is always the first node and <EOF>\n   * the last.\n   */\n  function Token(kind, start, end, line, column, prev, value) {\n    this.kind = kind;\n    this.start = start;\n    this.end = end;\n    this.line = line;\n    this.column = column;\n    this.value = value;\n    this.prev = prev;\n    this.next = null;\n  }\n\n  var _proto2 = Token.prototype;\n\n  _proto2.toJSON = function toJSON() {\n    return {\n      kind: this.kind,\n      value: this.value,\n      line: this.line,\n      column: this.column\n    };\n  };\n\n  return Token;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\ndefineInspect(Token);\n/**\n * @internal\n */\n\nexport function isNode(maybeNode) {\n  return maybeNode != null && typeof maybeNode.kind === 'string';\n}\n/**\n * The list of all possible AST node types.\n */\n","/**\n * An exported enum describing the different kinds of tokens that the\n * lexer emits.\n */\nexport var TokenKind = Object.freeze({\n  SOF: '<SOF>',\n  EOF: '<EOF>',\n  BANG: '!',\n  DOLLAR: '$',\n  AMP: '&',\n  PAREN_L: '(',\n  PAREN_R: ')',\n  SPREAD: '...',\n  COLON: ':',\n  EQUALS: '=',\n  AT: '@',\n  BRACKET_L: '[',\n  BRACKET_R: ']',\n  BRACE_L: '{',\n  PIPE: '|',\n  BRACE_R: '}',\n  NAME: 'Name',\n  INT: 'Int',\n  FLOAT: 'Float',\n  STRING: 'String',\n  BLOCK_STRING: 'BlockString',\n  COMMENT: 'Comment'\n});\n/**\n * The enum type representing the token kinds values.\n */\n","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/* eslint-disable flowtype/no-weak-types */\nimport nodejsCustomInspectSymbol from \"./nodejsCustomInspectSymbol.mjs\";\nvar MAX_ARRAY_LENGTH = 10;\nvar MAX_RECURSIVE_DEPTH = 2;\n/**\n * Used to print values in error messages.\n */\n\nexport default function inspect(value) {\n  return formatValue(value, []);\n}\n\nfunction formatValue(value, seenValues) {\n  switch (_typeof(value)) {\n    case 'string':\n      return JSON.stringify(value);\n\n    case 'function':\n      return value.name ? \"[function \".concat(value.name, \"]\") : '[function]';\n\n    case 'object':\n      if (value === null) {\n        return 'null';\n      }\n\n      return formatObjectValue(value, seenValues);\n\n    default:\n      return String(value);\n  }\n}\n\nfunction formatObjectValue(value, previouslySeenValues) {\n  if (previouslySeenValues.indexOf(value) !== -1) {\n    return '[Circular]';\n  }\n\n  var seenValues = [].concat(previouslySeenValues, [value]);\n  var customInspectFn = getCustomFn(value);\n\n  if (customInspectFn !== undefined) {\n    var customValue = customInspectFn.call(value); // check for infinite recursion\n\n    if (customValue !== value) {\n      return typeof customValue === 'string' ? customValue : formatValue(customValue, seenValues);\n    }\n  } else if (Array.isArray(value)) {\n    return formatArray(value, seenValues);\n  }\n\n  return formatObject(value, seenValues);\n}\n\nfunction formatObject(object, seenValues) {\n  var keys = Object.keys(object);\n\n  if (keys.length === 0) {\n    return '{}';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[' + getObjectTag(object) + ']';\n  }\n\n  var properties = keys.map(function (key) {\n    var value = formatValue(object[key], seenValues);\n    return key + ': ' + value;\n  });\n  return '{ ' + properties.join(', ') + ' }';\n}\n\nfunction formatArray(array, seenValues) {\n  if (array.length === 0) {\n    return '[]';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[Array]';\n  }\n\n  var len = Math.min(MAX_ARRAY_LENGTH, array.length);\n  var remaining = array.length - len;\n  var items = [];\n\n  for (var i = 0; i < len; ++i) {\n    items.push(formatValue(array[i], seenValues));\n  }\n\n  if (remaining === 1) {\n    items.push('... 1 more item');\n  } else if (remaining > 1) {\n    items.push(\"... \".concat(remaining, \" more items\"));\n  }\n\n  return '[' + items.join(', ') + ']';\n}\n\nfunction getCustomFn(object) {\n  var customInspectFn = object[String(nodejsCustomInspectSymbol)];\n\n  if (typeof customInspectFn === 'function') {\n    return customInspectFn;\n  }\n\n  if (typeof object.inspect === 'function') {\n    return object.inspect;\n  }\n}\n\nfunction getObjectTag(object) {\n  var tag = Object.prototype.toString.call(object).replace(/^\\[object /, '').replace(/]$/, '');\n\n  if (tag === 'Object' && typeof object.constructor === 'function') {\n    var name = object.constructor.name;\n\n    if (typeof name === 'string' && name !== '') {\n      return name;\n    }\n  }\n\n  return tag;\n}\n","export default function devAssert(condition, message) {\n  var booleanCondition = Boolean(condition); // istanbul ignore else (See transformation done in './resources/inlineInvariant.js')\n\n  if (!booleanCondition) {\n    throw new Error(message);\n  }\n}\n","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport inspect from \"./inspect.mjs\";\n/**\n * A replacement for instanceof which includes an error warning when multi-realm\n * constructors are detected.\n */\n\n// See: https://expressjs.com/en/advanced/best-practice-performance.html#set-node_env-to-production\n// See: https://webpack.js.org/guides/production/\nexport default process.env.NODE_ENV === 'production' ? // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\n// eslint-disable-next-line no-shadow\nfunction instanceOf(value, constructor) {\n  return value instanceof constructor;\n} : // eslint-disable-next-line no-shadow\nfunction instanceOf(value, constructor) {\n  if (value instanceof constructor) {\n    return true;\n  }\n\n  if (_typeof(value) === 'object' && value !== null) {\n    var _value$constructor;\n\n    var className = constructor.prototype[Symbol.toStringTag];\n    var valueClassName = // We still need to support constructor's name to detect conflicts with older versions of this library.\n    Symbol.toStringTag in value ? value[Symbol.toStringTag] : (_value$constructor = value.constructor) === null || _value$constructor === void 0 ? void 0 : _value$constructor.name;\n\n    if (className === valueClassName) {\n      var stringifiedValue = inspect(value);\n      throw new Error(\"Cannot use \".concat(className, \" \\\"\").concat(stringifiedValue, \"\\\" from another module or realm.\\n\\nEnsure that there is only one instance of \\\"graphql\\\" in the node_modules\\ndirectory. If different versions of \\\"graphql\\\" are the dependencies of other\\nrelied on modules, use \\\"resolutions\\\" to ensure only one version is installed.\\n\\nhttps://yarnpkg.com/en/docs/selective-version-resolutions\\n\\nDuplicate \\\"graphql\\\" modules cannot be used at the same time since different\\nversions may have different capabilities and behavior. The data from one\\nversion used in the function from another could produce confusing and\\nspurious results.\"));\n    }\n  }\n\n  return false;\n};\n","function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport { SYMBOL_TO_STRING_TAG } from \"../polyfills/symbols.mjs\";\nimport inspect from \"../jsutils/inspect.mjs\";\nimport devAssert from \"../jsutils/devAssert.mjs\";\nimport instanceOf from \"../jsutils/instanceOf.mjs\";\n\n/**\n * A representation of source input to GraphQL. The `name` and `locationOffset` parameters are\n * optional, but they are useful for clients who store GraphQL documents in source files.\n * For example, if the GraphQL input starts at line 40 in a file named `Foo.graphql`, it might\n * be useful for `name` to be `\"Foo.graphql\"` and location to be `{ line: 40, column: 1 }`.\n * The `line` and `column` properties in `locationOffset` are 1-indexed.\n */\nexport var Source = /*#__PURE__*/function () {\n  function Source(body) {\n    var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'GraphQL request';\n    var locationOffset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n      line: 1,\n      column: 1\n    };\n    typeof body === 'string' || devAssert(0, \"Body must be a string. Received: \".concat(inspect(body), \".\"));\n    this.body = body;\n    this.name = name;\n    this.locationOffset = locationOffset;\n    this.locationOffset.line > 0 || devAssert(0, 'line in locationOffset is 1-indexed and must be positive.');\n    this.locationOffset.column > 0 || devAssert(0, 'column in locationOffset is 1-indexed and must be positive.');\n  } // $FlowFixMe[unsupported-syntax] Flow doesn't support computed properties yet\n\n\n  _createClass(Source, [{\n    key: SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'Source';\n    }\n  }]);\n\n  return Source;\n}();\n/**\n * Test if the given value is a Source object.\n *\n * @internal\n */\n\n// eslint-disable-next-line no-redeclare\nexport function isSource(source) {\n  return instanceOf(source, Source);\n}\n","/**\n * The set of allowed directive location values.\n */\nexport var DirectiveLocation = Object.freeze({\n  // Request Definitions\n  QUERY: 'QUERY',\n  MUTATION: 'MUTATION',\n  SUBSCRIPTION: 'SUBSCRIPTION',\n  FIELD: 'FIELD',\n  FRAGMENT_DEFINITION: 'FRAGMENT_DEFINITION',\n  FRAGMENT_SPREAD: 'FRAGMENT_SPREAD',\n  INLINE_FRAGMENT: 'INLINE_FRAGMENT',\n  VARIABLE_DEFINITION: 'VARIABLE_DEFINITION',\n  // Type System Definitions\n  SCHEMA: 'SCHEMA',\n  SCALAR: 'SCALAR',\n  OBJECT: 'OBJECT',\n  FIELD_DEFINITION: 'FIELD_DEFINITION',\n  ARGUMENT_DEFINITION: 'ARGUMENT_DEFINITION',\n  INTERFACE: 'INTERFACE',\n  UNION: 'UNION',\n  ENUM: 'ENUM',\n  ENUM_VALUE: 'ENUM_VALUE',\n  INPUT_OBJECT: 'INPUT_OBJECT',\n  INPUT_FIELD_DEFINITION: 'INPUT_FIELD_DEFINITION'\n});\n/**\n * The enum type representing the directive location values.\n */\n","/**\n * Produces the value of a block string from its parsed raw value, similar to\n * CoffeeScript's block string, Python's docstring trim or Ruby's strip_heredoc.\n *\n * This implements the GraphQL spec's BlockStringValue() static algorithm.\n *\n * @internal\n */\nexport function dedentBlockStringValue(rawString) {\n  // Expand a block string's raw value into independent lines.\n  var lines = rawString.split(/\\r\\n|[\\n\\r]/g); // Remove common indentation from all lines but first.\n\n  var commonIndent = getBlockStringIndentation(rawString);\n\n  if (commonIndent !== 0) {\n    for (var i = 1; i < lines.length; i++) {\n      lines[i] = lines[i].slice(commonIndent);\n    }\n  } // Remove leading and trailing blank lines.\n\n\n  var startLine = 0;\n\n  while (startLine < lines.length && isBlank(lines[startLine])) {\n    ++startLine;\n  }\n\n  var endLine = lines.length;\n\n  while (endLine > startLine && isBlank(lines[endLine - 1])) {\n    --endLine;\n  } // Return a string of the lines joined with U+000A.\n\n\n  return lines.slice(startLine, endLine).join('\\n');\n}\n\nfunction isBlank(str) {\n  for (var i = 0; i < str.length; ++i) {\n    if (str[i] !== ' ' && str[i] !== '\\t') {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\n * @internal\n */\n\n\nexport function getBlockStringIndentation(value) {\n  var _commonIndent;\n\n  var isFirstLine = true;\n  var isEmptyLine = true;\n  var indent = 0;\n  var commonIndent = null;\n\n  for (var i = 0; i < value.length; ++i) {\n    switch (value.charCodeAt(i)) {\n      case 13:\n        //  \\r\n        if (value.charCodeAt(i + 1) === 10) {\n          ++i; // skip \\r\\n as one symbol\n        }\n\n      // falls through\n\n      case 10:\n        //  \\n\n        isFirstLine = false;\n        isEmptyLine = true;\n        indent = 0;\n        break;\n\n      case 9: //   \\t\n\n      case 32:\n        //  <space>\n        ++indent;\n        break;\n\n      default:\n        if (isEmptyLine && !isFirstLine && (commonIndent === null || indent < commonIndent)) {\n          commonIndent = indent;\n        }\n\n        isEmptyLine = false;\n    }\n  }\n\n  return (_commonIndent = commonIndent) !== null && _commonIndent !== void 0 ? _commonIndent : 0;\n}\n/**\n * Print a block string in the indented block form by adding a leading and\n * trailing blank line. However, if a block string starts with whitespace and is\n * a single-line, adding a leading blank line would strip that whitespace.\n *\n * @internal\n */\n\nexport function printBlockString(value) {\n  var indentation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var preferMultipleLines = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var isSingleLine = value.indexOf('\\n') === -1;\n  var hasLeadingSpace = value[0] === ' ' || value[0] === '\\t';\n  var hasTrailingQuote = value[value.length - 1] === '\"';\n  var hasTrailingSlash = value[value.length - 1] === '\\\\';\n  var printAsMultipleLines = !isSingleLine || hasTrailingQuote || hasTrailingSlash || preferMultipleLines;\n  var result = ''; // Format a multi-line block quote to account for leading space.\n\n  if (printAsMultipleLines && !(isSingleLine && hasLeadingSpace)) {\n    result += '\\n' + indentation;\n  }\n\n  result += indentation ? value.replace(/\\n/g, '\\n' + indentation) : value;\n\n  if (printAsMultipleLines) {\n    result += '\\n';\n  }\n\n  return '\"\"\"' + result.replace(/\"\"\"/g, '\\\\\"\"\"') + '\"\"\"';\n}\n","import { syntaxError } from \"../error/syntaxError.mjs\";\nimport { Token } from \"./ast.mjs\";\nimport { TokenKind } from \"./tokenKind.mjs\";\nimport { dedentBlockStringValue } from \"./blockString.mjs\";\n/**\n * Given a Source object, creates a Lexer for that source.\n * A Lexer is a stateful stream generator in that every time\n * it is advanced, it returns the next token in the Source. Assuming the\n * source lexes, the final Token emitted by the lexer will be of kind\n * EOF, after which the lexer will repeatedly return the same EOF token\n * whenever called.\n */\n\nexport var Lexer = /*#__PURE__*/function () {\n  /**\n   * The previously focused non-ignored token.\n   */\n\n  /**\n   * The currently focused non-ignored token.\n   */\n\n  /**\n   * The (1-indexed) line containing the current token.\n   */\n\n  /**\n   * The character offset at which the current line begins.\n   */\n  function Lexer(source) {\n    var startOfFileToken = new Token(TokenKind.SOF, 0, 0, 0, 0, null);\n    this.source = source;\n    this.lastToken = startOfFileToken;\n    this.token = startOfFileToken;\n    this.line = 1;\n    this.lineStart = 0;\n  }\n  /**\n   * Advances the token stream to the next non-ignored token.\n   */\n\n\n  var _proto = Lexer.prototype;\n\n  _proto.advance = function advance() {\n    this.lastToken = this.token;\n    var token = this.token = this.lookahead();\n    return token;\n  }\n  /**\n   * Looks ahead and returns the next non-ignored token, but does not change\n   * the state of Lexer.\n   */\n  ;\n\n  _proto.lookahead = function lookahead() {\n    var token = this.token;\n\n    if (token.kind !== TokenKind.EOF) {\n      do {\n        var _token$next;\n\n        // Note: next is only mutable during parsing, so we cast to allow this.\n        token = (_token$next = token.next) !== null && _token$next !== void 0 ? _token$next : token.next = readToken(this, token);\n      } while (token.kind === TokenKind.COMMENT);\n    }\n\n    return token;\n  };\n\n  return Lexer;\n}();\n/**\n * @internal\n */\n\nexport function isPunctuatorTokenKind(kind) {\n  return kind === TokenKind.BANG || kind === TokenKind.DOLLAR || kind === TokenKind.AMP || kind === TokenKind.PAREN_L || kind === TokenKind.PAREN_R || kind === TokenKind.SPREAD || kind === TokenKind.COLON || kind === TokenKind.EQUALS || kind === TokenKind.AT || kind === TokenKind.BRACKET_L || kind === TokenKind.BRACKET_R || kind === TokenKind.BRACE_L || kind === TokenKind.PIPE || kind === TokenKind.BRACE_R;\n}\n\nfunction printCharCode(code) {\n  return (// NaN/undefined represents access beyond the end of the file.\n    isNaN(code) ? TokenKind.EOF : // Trust JSON for ASCII.\n    code < 0x007f ? JSON.stringify(String.fromCharCode(code)) : // Otherwise print the escaped form.\n    \"\\\"\\\\u\".concat(('00' + code.toString(16).toUpperCase()).slice(-4), \"\\\"\")\n  );\n}\n/**\n * Gets the next token from the source starting at the given position.\n *\n * This skips over whitespace until it finds the next lexable token, then lexes\n * punctuators immediately or calls the appropriate helper function for more\n * complicated tokens.\n */\n\n\nfunction readToken(lexer, prev) {\n  var source = lexer.source;\n  var body = source.body;\n  var bodyLength = body.length;\n  var pos = prev.end;\n\n  while (pos < bodyLength) {\n    var code = body.charCodeAt(pos);\n    var _line = lexer.line;\n\n    var _col = 1 + pos - lexer.lineStart; // SourceCharacter\n\n\n    switch (code) {\n      case 0xfeff: // <BOM>\n\n      case 9: //   \\t\n\n      case 32: //  <space>\n\n      case 44:\n        //  ,\n        ++pos;\n        continue;\n\n      case 10:\n        //  \\n\n        ++pos;\n        ++lexer.line;\n        lexer.lineStart = pos;\n        continue;\n\n      case 13:\n        //  \\r\n        if (body.charCodeAt(pos + 1) === 10) {\n          pos += 2;\n        } else {\n          ++pos;\n        }\n\n        ++lexer.line;\n        lexer.lineStart = pos;\n        continue;\n\n      case 33:\n        //  !\n        return new Token(TokenKind.BANG, pos, pos + 1, _line, _col, prev);\n\n      case 35:\n        //  #\n        return readComment(source, pos, _line, _col, prev);\n\n      case 36:\n        //  $\n        return new Token(TokenKind.DOLLAR, pos, pos + 1, _line, _col, prev);\n\n      case 38:\n        //  &\n        return new Token(TokenKind.AMP, pos, pos + 1, _line, _col, prev);\n\n      case 40:\n        //  (\n        return new Token(TokenKind.PAREN_L, pos, pos + 1, _line, _col, prev);\n\n      case 41:\n        //  )\n        return new Token(TokenKind.PAREN_R, pos, pos + 1, _line, _col, prev);\n\n      case 46:\n        //  .\n        if (body.charCodeAt(pos + 1) === 46 && body.charCodeAt(pos + 2) === 46) {\n          return new Token(TokenKind.SPREAD, pos, pos + 3, _line, _col, prev);\n        }\n\n        break;\n\n      case 58:\n        //  :\n        return new Token(TokenKind.COLON, pos, pos + 1, _line, _col, prev);\n\n      case 61:\n        //  =\n        return new Token(TokenKind.EQUALS, pos, pos + 1, _line, _col, prev);\n\n      case 64:\n        //  @\n        return new Token(TokenKind.AT, pos, pos + 1, _line, _col, prev);\n\n      case 91:\n        //  [\n        return new Token(TokenKind.BRACKET_L, pos, pos + 1, _line, _col, prev);\n\n      case 93:\n        //  ]\n        return new Token(TokenKind.BRACKET_R, pos, pos + 1, _line, _col, prev);\n\n      case 123:\n        // {\n        return new Token(TokenKind.BRACE_L, pos, pos + 1, _line, _col, prev);\n\n      case 124:\n        // |\n        return new Token(TokenKind.PIPE, pos, pos + 1, _line, _col, prev);\n\n      case 125:\n        // }\n        return new Token(TokenKind.BRACE_R, pos, pos + 1, _line, _col, prev);\n\n      case 34:\n        //  \"\n        if (body.charCodeAt(pos + 1) === 34 && body.charCodeAt(pos + 2) === 34) {\n          return readBlockString(source, pos, _line, _col, prev, lexer);\n        }\n\n        return readString(source, pos, _line, _col, prev);\n\n      case 45: //  -\n\n      case 48: //  0\n\n      case 49: //  1\n\n      case 50: //  2\n\n      case 51: //  3\n\n      case 52: //  4\n\n      case 53: //  5\n\n      case 54: //  6\n\n      case 55: //  7\n\n      case 56: //  8\n\n      case 57:\n        //  9\n        return readNumber(source, pos, code, _line, _col, prev);\n\n      case 65: //  A\n\n      case 66: //  B\n\n      case 67: //  C\n\n      case 68: //  D\n\n      case 69: //  E\n\n      case 70: //  F\n\n      case 71: //  G\n\n      case 72: //  H\n\n      case 73: //  I\n\n      case 74: //  J\n\n      case 75: //  K\n\n      case 76: //  L\n\n      case 77: //  M\n\n      case 78: //  N\n\n      case 79: //  O\n\n      case 80: //  P\n\n      case 81: //  Q\n\n      case 82: //  R\n\n      case 83: //  S\n\n      case 84: //  T\n\n      case 85: //  U\n\n      case 86: //  V\n\n      case 87: //  W\n\n      case 88: //  X\n\n      case 89: //  Y\n\n      case 90: //  Z\n\n      case 95: //  _\n\n      case 97: //  a\n\n      case 98: //  b\n\n      case 99: //  c\n\n      case 100: // d\n\n      case 101: // e\n\n      case 102: // f\n\n      case 103: // g\n\n      case 104: // h\n\n      case 105: // i\n\n      case 106: // j\n\n      case 107: // k\n\n      case 108: // l\n\n      case 109: // m\n\n      case 110: // n\n\n      case 111: // o\n\n      case 112: // p\n\n      case 113: // q\n\n      case 114: // r\n\n      case 115: // s\n\n      case 116: // t\n\n      case 117: // u\n\n      case 118: // v\n\n      case 119: // w\n\n      case 120: // x\n\n      case 121: // y\n\n      case 122:\n        // z\n        return readName(source, pos, _line, _col, prev);\n    }\n\n    throw syntaxError(source, pos, unexpectedCharacterMessage(code));\n  }\n\n  var line = lexer.line;\n  var col = 1 + pos - lexer.lineStart;\n  return new Token(TokenKind.EOF, bodyLength, bodyLength, line, col, prev);\n}\n/**\n * Report a message that an unexpected character was encountered.\n */\n\n\nfunction unexpectedCharacterMessage(code) {\n  if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n    return \"Cannot contain the invalid character \".concat(printCharCode(code), \".\");\n  }\n\n  if (code === 39) {\n    // '\n    return 'Unexpected single quote character (\\'), did you mean to use a double quote (\")?';\n  }\n\n  return \"Cannot parse the unexpected character \".concat(printCharCode(code), \".\");\n}\n/**\n * Reads a comment token from the source file.\n *\n * #[\\u0009\\u0020-\\uFFFF]*\n */\n\n\nfunction readComment(source, start, line, col, prev) {\n  var body = source.body;\n  var code;\n  var position = start;\n\n  do {\n    code = body.charCodeAt(++position);\n  } while (!isNaN(code) && ( // SourceCharacter but not LineTerminator\n  code > 0x001f || code === 0x0009));\n\n  return new Token(TokenKind.COMMENT, start, position, line, col, prev, body.slice(start + 1, position));\n}\n/**\n * Reads a number token from the source file, either a float\n * or an int depending on whether a decimal point appears.\n *\n * Int:   -?(0|[1-9][0-9]*)\n * Float: -?(0|[1-9][0-9]*)(\\.[0-9]+)?((E|e)(+|-)?[0-9]+)?\n */\n\n\nfunction readNumber(source, start, firstCode, line, col, prev) {\n  var body = source.body;\n  var code = firstCode;\n  var position = start;\n  var isFloat = false;\n\n  if (code === 45) {\n    // -\n    code = body.charCodeAt(++position);\n  }\n\n  if (code === 48) {\n    // 0\n    code = body.charCodeAt(++position);\n\n    if (code >= 48 && code <= 57) {\n      throw syntaxError(source, position, \"Invalid number, unexpected digit after 0: \".concat(printCharCode(code), \".\"));\n    }\n  } else {\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  }\n\n  if (code === 46) {\n    // .\n    isFloat = true;\n    code = body.charCodeAt(++position);\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  }\n\n  if (code === 69 || code === 101) {\n    // E e\n    isFloat = true;\n    code = body.charCodeAt(++position);\n\n    if (code === 43 || code === 45) {\n      // + -\n      code = body.charCodeAt(++position);\n    }\n\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  } // Numbers cannot be followed by . or NameStart\n\n\n  if (code === 46 || isNameStart(code)) {\n    throw syntaxError(source, position, \"Invalid number, expected digit but got: \".concat(printCharCode(code), \".\"));\n  }\n\n  return new Token(isFloat ? TokenKind.FLOAT : TokenKind.INT, start, position, line, col, prev, body.slice(start, position));\n}\n/**\n * Returns the new position in the source after reading digits.\n */\n\n\nfunction readDigits(source, start, firstCode) {\n  var body = source.body;\n  var position = start;\n  var code = firstCode;\n\n  if (code >= 48 && code <= 57) {\n    // 0 - 9\n    do {\n      code = body.charCodeAt(++position);\n    } while (code >= 48 && code <= 57); // 0 - 9\n\n\n    return position;\n  }\n\n  throw syntaxError(source, position, \"Invalid number, expected digit but got: \".concat(printCharCode(code), \".\"));\n}\n/**\n * Reads a string token from the source file.\n *\n * \"([^\"\\\\\\u000A\\u000D]|(\\\\(u[0-9a-fA-F]{4}|[\"\\\\/bfnrt])))*\"\n */\n\n\nfunction readString(source, start, line, col, prev) {\n  var body = source.body;\n  var position = start + 1;\n  var chunkStart = position;\n  var code = 0;\n  var value = '';\n\n  while (position < body.length && !isNaN(code = body.charCodeAt(position)) && // not LineTerminator\n  code !== 0x000a && code !== 0x000d) {\n    // Closing Quote (\")\n    if (code === 34) {\n      value += body.slice(chunkStart, position);\n      return new Token(TokenKind.STRING, start, position + 1, line, col, prev, value);\n    } // SourceCharacter\n\n\n    if (code < 0x0020 && code !== 0x0009) {\n      throw syntaxError(source, position, \"Invalid character within String: \".concat(printCharCode(code), \".\"));\n    }\n\n    ++position;\n\n    if (code === 92) {\n      // \\\n      value += body.slice(chunkStart, position - 1);\n      code = body.charCodeAt(position);\n\n      switch (code) {\n        case 34:\n          value += '\"';\n          break;\n\n        case 47:\n          value += '/';\n          break;\n\n        case 92:\n          value += '\\\\';\n          break;\n\n        case 98:\n          value += '\\b';\n          break;\n\n        case 102:\n          value += '\\f';\n          break;\n\n        case 110:\n          value += '\\n';\n          break;\n\n        case 114:\n          value += '\\r';\n          break;\n\n        case 116:\n          value += '\\t';\n          break;\n\n        case 117:\n          {\n            // uXXXX\n            var charCode = uniCharCode(body.charCodeAt(position + 1), body.charCodeAt(position + 2), body.charCodeAt(position + 3), body.charCodeAt(position + 4));\n\n            if (charCode < 0) {\n              var invalidSequence = body.slice(position + 1, position + 5);\n              throw syntaxError(source, position, \"Invalid character escape sequence: \\\\u\".concat(invalidSequence, \".\"));\n            }\n\n            value += String.fromCharCode(charCode);\n            position += 4;\n            break;\n          }\n\n        default:\n          throw syntaxError(source, position, \"Invalid character escape sequence: \\\\\".concat(String.fromCharCode(code), \".\"));\n      }\n\n      ++position;\n      chunkStart = position;\n    }\n  }\n\n  throw syntaxError(source, position, 'Unterminated string.');\n}\n/**\n * Reads a block string token from the source file.\n *\n * \"\"\"(\"?\"?(\\\\\"\"\"|\\\\(?!=\"\"\")|[^\"\\\\]))*\"\"\"\n */\n\n\nfunction readBlockString(source, start, line, col, prev, lexer) {\n  var body = source.body;\n  var position = start + 3;\n  var chunkStart = position;\n  var code = 0;\n  var rawValue = '';\n\n  while (position < body.length && !isNaN(code = body.charCodeAt(position))) {\n    // Closing Triple-Quote (\"\"\")\n    if (code === 34 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34) {\n      rawValue += body.slice(chunkStart, position);\n      return new Token(TokenKind.BLOCK_STRING, start, position + 3, line, col, prev, dedentBlockStringValue(rawValue));\n    } // SourceCharacter\n\n\n    if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n      throw syntaxError(source, position, \"Invalid character within String: \".concat(printCharCode(code), \".\"));\n    }\n\n    if (code === 10) {\n      // new line\n      ++position;\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if (code === 13) {\n      // carriage return\n      if (body.charCodeAt(position + 1) === 10) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if ( // Escape Triple-Quote (\\\"\"\")\n    code === 92 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34 && body.charCodeAt(position + 3) === 34) {\n      rawValue += body.slice(chunkStart, position) + '\"\"\"';\n      position += 4;\n      chunkStart = position;\n    } else {\n      ++position;\n    }\n  }\n\n  throw syntaxError(source, position, 'Unterminated string.');\n}\n/**\n * Converts four hexadecimal chars to the integer that the\n * string represents. For example, uniCharCode('0','0','0','f')\n * will return 15, and uniCharCode('0','0','f','f') returns 255.\n *\n * Returns a negative number on error, if a char was invalid.\n *\n * This is implemented by noting that char2hex() returns -1 on error,\n * which means the result of ORing the char2hex() will also be negative.\n */\n\n\nfunction uniCharCode(a, b, c, d) {\n  return char2hex(a) << 12 | char2hex(b) << 8 | char2hex(c) << 4 | char2hex(d);\n}\n/**\n * Converts a hex character to its integer value.\n * '0' becomes 0, '9' becomes 9\n * 'A' becomes 10, 'F' becomes 15\n * 'a' becomes 10, 'f' becomes 15\n *\n * Returns -1 on error.\n */\n\n\nfunction char2hex(a) {\n  return a >= 48 && a <= 57 ? a - 48 // 0-9\n  : a >= 65 && a <= 70 ? a - 55 // A-F\n  : a >= 97 && a <= 102 ? a - 87 // a-f\n  : -1;\n}\n/**\n * Reads an alphanumeric + underscore name from the source.\n *\n * [_A-Za-z][_0-9A-Za-z]*\n */\n\n\nfunction readName(source, start, line, col, prev) {\n  var body = source.body;\n  var bodyLength = body.length;\n  var position = start + 1;\n  var code = 0;\n\n  while (position !== bodyLength && !isNaN(code = body.charCodeAt(position)) && (code === 95 || // _\n  code >= 48 && code <= 57 || // 0-9\n  code >= 65 && code <= 90 || // A-Z\n  code >= 97 && code <= 122) // a-z\n  ) {\n    ++position;\n  }\n\n  return new Token(TokenKind.NAME, start, position, line, col, prev, body.slice(start, position));\n} // _ A-Z a-z\n\n\nfunction isNameStart(code) {\n  return code === 95 || code >= 65 && code <= 90 || code >= 97 && code <= 122;\n}\n","import { syntaxError } from \"../error/syntaxError.mjs\";\nimport { Kind } from \"./kinds.mjs\";\nimport { Location } from \"./ast.mjs\";\nimport { TokenKind } from \"./tokenKind.mjs\";\nimport { Source, isSource } from \"./source.mjs\";\nimport { DirectiveLocation } from \"./directiveLocation.mjs\";\nimport { Lexer, isPunctuatorTokenKind } from \"./lexer.mjs\";\n/**\n * Configuration options to control parser behavior\n */\n\n/**\n * Given a GraphQL source, parses it into a Document.\n * Throws GraphQLError if a syntax error is encountered.\n */\nexport function parse(source, options) {\n  var parser = new Parser(source, options);\n  return parser.parseDocument();\n}\n/**\n * Given a string containing a GraphQL value (ex. `[42]`), parse the AST for\n * that value.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Values directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: valueFromAST().\n */\n\nexport function parseValue(source, options) {\n  var parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  var value = parser.parseValueLiteral(false);\n  parser.expectToken(TokenKind.EOF);\n  return value;\n}\n/**\n * Given a string containing a GraphQL Type (ex. `[Int!]`), parse the AST for\n * that type.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Types directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: typeFromAST().\n */\n\nexport function parseType(source, options) {\n  var parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  var type = parser.parseTypeReference();\n  parser.expectToken(TokenKind.EOF);\n  return type;\n}\n/**\n * This class is exported only to assist people in implementing their own parsers\n * without duplicating too much code and should be used only as last resort for cases\n * such as experimental syntax or if certain features could not be contributed upstream.\n *\n * It is still part of the internal API and is versioned, so any changes to it are never\n * considered breaking changes. If you still need to support multiple versions of the\n * library, please use the `versionInfo` variable for version detection.\n *\n * @internal\n */\n\nexport var Parser = /*#__PURE__*/function () {\n  function Parser(source, options) {\n    var sourceObj = isSource(source) ? source : new Source(source);\n    this._lexer = new Lexer(sourceObj);\n    this._options = options;\n  }\n  /**\n   * Converts a name lex token into a name parse node.\n   */\n\n\n  var _proto = Parser.prototype;\n\n  _proto.parseName = function parseName() {\n    var token = this.expectToken(TokenKind.NAME);\n    return {\n      kind: Kind.NAME,\n      value: token.value,\n      loc: this.loc(token)\n    };\n  } // Implements the parsing rules in the Document section.\n\n  /**\n   * Document : Definition+\n   */\n  ;\n\n  _proto.parseDocument = function parseDocument() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.DOCUMENT,\n      definitions: this.many(TokenKind.SOF, this.parseDefinition, TokenKind.EOF),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Definition :\n   *   - ExecutableDefinition\n   *   - TypeSystemDefinition\n   *   - TypeSystemExtension\n   *\n   * ExecutableDefinition :\n   *   - OperationDefinition\n   *   - FragmentDefinition\n   */\n  ;\n\n  _proto.parseDefinition = function parseDefinition() {\n    if (this.peek(TokenKind.NAME)) {\n      switch (this._lexer.token.value) {\n        case 'query':\n        case 'mutation':\n        case 'subscription':\n          return this.parseOperationDefinition();\n\n        case 'fragment':\n          return this.parseFragmentDefinition();\n\n        case 'schema':\n        case 'scalar':\n        case 'type':\n        case 'interface':\n        case 'union':\n        case 'enum':\n        case 'input':\n        case 'directive':\n          return this.parseTypeSystemDefinition();\n\n        case 'extend':\n          return this.parseTypeSystemExtension();\n      }\n    } else if (this.peek(TokenKind.BRACE_L)) {\n      return this.parseOperationDefinition();\n    } else if (this.peekDescription()) {\n      return this.parseTypeSystemDefinition();\n    }\n\n    throw this.unexpected();\n  } // Implements the parsing rules in the Operations section.\n\n  /**\n   * OperationDefinition :\n   *  - SelectionSet\n   *  - OperationType Name? VariableDefinitions? Directives? SelectionSet\n   */\n  ;\n\n  _proto.parseOperationDefinition = function parseOperationDefinition() {\n    var start = this._lexer.token;\n\n    if (this.peek(TokenKind.BRACE_L)) {\n      return {\n        kind: Kind.OPERATION_DEFINITION,\n        operation: 'query',\n        name: undefined,\n        variableDefinitions: [],\n        directives: [],\n        selectionSet: this.parseSelectionSet(),\n        loc: this.loc(start)\n      };\n    }\n\n    var operation = this.parseOperationType();\n    var name;\n\n    if (this.peek(TokenKind.NAME)) {\n      name = this.parseName();\n    }\n\n    return {\n      kind: Kind.OPERATION_DEFINITION,\n      operation: operation,\n      name: name,\n      variableDefinitions: this.parseVariableDefinitions(),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * OperationType : one of query mutation subscription\n   */\n  ;\n\n  _proto.parseOperationType = function parseOperationType() {\n    var operationToken = this.expectToken(TokenKind.NAME);\n\n    switch (operationToken.value) {\n      case 'query':\n        return 'query';\n\n      case 'mutation':\n        return 'mutation';\n\n      case 'subscription':\n        return 'subscription';\n    }\n\n    throw this.unexpected(operationToken);\n  }\n  /**\n   * VariableDefinitions : ( VariableDefinition+ )\n   */\n  ;\n\n  _proto.parseVariableDefinitions = function parseVariableDefinitions() {\n    return this.optionalMany(TokenKind.PAREN_L, this.parseVariableDefinition, TokenKind.PAREN_R);\n  }\n  /**\n   * VariableDefinition : Variable : Type DefaultValue? Directives[Const]?\n   */\n  ;\n\n  _proto.parseVariableDefinition = function parseVariableDefinition() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.VARIABLE_DEFINITION,\n      variable: this.parseVariable(),\n      type: (this.expectToken(TokenKind.COLON), this.parseTypeReference()),\n      defaultValue: this.expectOptionalToken(TokenKind.EQUALS) ? this.parseValueLiteral(true) : undefined,\n      directives: this.parseDirectives(true),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Variable : $ Name\n   */\n  ;\n\n  _proto.parseVariable = function parseVariable() {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.DOLLAR);\n    return {\n      kind: Kind.VARIABLE,\n      name: this.parseName(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * SelectionSet : { Selection+ }\n   */\n  ;\n\n  _proto.parseSelectionSet = function parseSelectionSet() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.SELECTION_SET,\n      selections: this.many(TokenKind.BRACE_L, this.parseSelection, TokenKind.BRACE_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Selection :\n   *   - Field\n   *   - FragmentSpread\n   *   - InlineFragment\n   */\n  ;\n\n  _proto.parseSelection = function parseSelection() {\n    return this.peek(TokenKind.SPREAD) ? this.parseFragment() : this.parseField();\n  }\n  /**\n   * Field : Alias? Name Arguments? Directives? SelectionSet?\n   *\n   * Alias : Name :\n   */\n  ;\n\n  _proto.parseField = function parseField() {\n    var start = this._lexer.token;\n    var nameOrAlias = this.parseName();\n    var alias;\n    var name;\n\n    if (this.expectOptionalToken(TokenKind.COLON)) {\n      alias = nameOrAlias;\n      name = this.parseName();\n    } else {\n      name = nameOrAlias;\n    }\n\n    return {\n      kind: Kind.FIELD,\n      alias: alias,\n      name: name,\n      arguments: this.parseArguments(false),\n      directives: this.parseDirectives(false),\n      selectionSet: this.peek(TokenKind.BRACE_L) ? this.parseSelectionSet() : undefined,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Arguments[Const] : ( Argument[?Const]+ )\n   */\n  ;\n\n  _proto.parseArguments = function parseArguments(isConst) {\n    var item = isConst ? this.parseConstArgument : this.parseArgument;\n    return this.optionalMany(TokenKind.PAREN_L, item, TokenKind.PAREN_R);\n  }\n  /**\n   * Argument[Const] : Name : Value[?Const]\n   */\n  ;\n\n  _proto.parseArgument = function parseArgument() {\n    var start = this._lexer.token;\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return {\n      kind: Kind.ARGUMENT,\n      name: name,\n      value: this.parseValueLiteral(false),\n      loc: this.loc(start)\n    };\n  };\n\n  _proto.parseConstArgument = function parseConstArgument() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.ARGUMENT,\n      name: this.parseName(),\n      value: (this.expectToken(TokenKind.COLON), this.parseValueLiteral(true)),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Fragments section.\n\n  /**\n   * Corresponds to both FragmentSpread and InlineFragment in the spec.\n   *\n   * FragmentSpread : ... FragmentName Directives?\n   *\n   * InlineFragment : ... TypeCondition? Directives? SelectionSet\n   */\n  ;\n\n  _proto.parseFragment = function parseFragment() {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.SPREAD);\n    var hasTypeCondition = this.expectOptionalKeyword('on');\n\n    if (!hasTypeCondition && this.peek(TokenKind.NAME)) {\n      return {\n        kind: Kind.FRAGMENT_SPREAD,\n        name: this.parseFragmentName(),\n        directives: this.parseDirectives(false),\n        loc: this.loc(start)\n      };\n    }\n\n    return {\n      kind: Kind.INLINE_FRAGMENT,\n      typeCondition: hasTypeCondition ? this.parseNamedType() : undefined,\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * FragmentDefinition :\n   *   - fragment FragmentName on TypeCondition Directives? SelectionSet\n   *\n   * TypeCondition : NamedType\n   */\n  ;\n\n  _proto.parseFragmentDefinition = function parseFragmentDefinition() {\n    var _this$_options;\n\n    var start = this._lexer.token;\n    this.expectKeyword('fragment'); // Experimental support for defining variables within fragments changes\n    // the grammar of FragmentDefinition:\n    //   - fragment FragmentName VariableDefinitions? on TypeCondition Directives? SelectionSet\n\n    if (((_this$_options = this._options) === null || _this$_options === void 0 ? void 0 : _this$_options.experimentalFragmentVariables) === true) {\n      return {\n        kind: Kind.FRAGMENT_DEFINITION,\n        name: this.parseFragmentName(),\n        variableDefinitions: this.parseVariableDefinitions(),\n        typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n        directives: this.parseDirectives(false),\n        selectionSet: this.parseSelectionSet(),\n        loc: this.loc(start)\n      };\n    }\n\n    return {\n      kind: Kind.FRAGMENT_DEFINITION,\n      name: this.parseFragmentName(),\n      typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * FragmentName : Name but not `on`\n   */\n  ;\n\n  _proto.parseFragmentName = function parseFragmentName() {\n    if (this._lexer.token.value === 'on') {\n      throw this.unexpected();\n    }\n\n    return this.parseName();\n  } // Implements the parsing rules in the Values section.\n\n  /**\n   * Value[Const] :\n   *   - [~Const] Variable\n   *   - IntValue\n   *   - FloatValue\n   *   - StringValue\n   *   - BooleanValue\n   *   - NullValue\n   *   - EnumValue\n   *   - ListValue[?Const]\n   *   - ObjectValue[?Const]\n   *\n   * BooleanValue : one of `true` `false`\n   *\n   * NullValue : `null`\n   *\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n  ;\n\n  _proto.parseValueLiteral = function parseValueLiteral(isConst) {\n    var token = this._lexer.token;\n\n    switch (token.kind) {\n      case TokenKind.BRACKET_L:\n        return this.parseList(isConst);\n\n      case TokenKind.BRACE_L:\n        return this.parseObject(isConst);\n\n      case TokenKind.INT:\n        this._lexer.advance();\n\n        return {\n          kind: Kind.INT,\n          value: token.value,\n          loc: this.loc(token)\n        };\n\n      case TokenKind.FLOAT:\n        this._lexer.advance();\n\n        return {\n          kind: Kind.FLOAT,\n          value: token.value,\n          loc: this.loc(token)\n        };\n\n      case TokenKind.STRING:\n      case TokenKind.BLOCK_STRING:\n        return this.parseStringLiteral();\n\n      case TokenKind.NAME:\n        this._lexer.advance();\n\n        switch (token.value) {\n          case 'true':\n            return {\n              kind: Kind.BOOLEAN,\n              value: true,\n              loc: this.loc(token)\n            };\n\n          case 'false':\n            return {\n              kind: Kind.BOOLEAN,\n              value: false,\n              loc: this.loc(token)\n            };\n\n          case 'null':\n            return {\n              kind: Kind.NULL,\n              loc: this.loc(token)\n            };\n\n          default:\n            return {\n              kind: Kind.ENUM,\n              value: token.value,\n              loc: this.loc(token)\n            };\n        }\n\n      case TokenKind.DOLLAR:\n        if (!isConst) {\n          return this.parseVariable();\n        }\n\n        break;\n    }\n\n    throw this.unexpected();\n  };\n\n  _proto.parseStringLiteral = function parseStringLiteral() {\n    var token = this._lexer.token;\n\n    this._lexer.advance();\n\n    return {\n      kind: Kind.STRING,\n      value: token.value,\n      block: token.kind === TokenKind.BLOCK_STRING,\n      loc: this.loc(token)\n    };\n  }\n  /**\n   * ListValue[Const] :\n   *   - [ ]\n   *   - [ Value[?Const]+ ]\n   */\n  ;\n\n  _proto.parseList = function parseList(isConst) {\n    var _this = this;\n\n    var start = this._lexer.token;\n\n    var item = function item() {\n      return _this.parseValueLiteral(isConst);\n    };\n\n    return {\n      kind: Kind.LIST,\n      values: this.any(TokenKind.BRACKET_L, item, TokenKind.BRACKET_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectValue[Const] :\n   *   - { }\n   *   - { ObjectField[?Const]+ }\n   */\n  ;\n\n  _proto.parseObject = function parseObject(isConst) {\n    var _this2 = this;\n\n    var start = this._lexer.token;\n\n    var item = function item() {\n      return _this2.parseObjectField(isConst);\n    };\n\n    return {\n      kind: Kind.OBJECT,\n      fields: this.any(TokenKind.BRACE_L, item, TokenKind.BRACE_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectField[Const] : Name : Value[?Const]\n   */\n  ;\n\n  _proto.parseObjectField = function parseObjectField(isConst) {\n    var start = this._lexer.token;\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return {\n      kind: Kind.OBJECT_FIELD,\n      name: name,\n      value: this.parseValueLiteral(isConst),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Directives section.\n\n  /**\n   * Directives[Const] : Directive[?Const]+\n   */\n  ;\n\n  _proto.parseDirectives = function parseDirectives(isConst) {\n    var directives = [];\n\n    while (this.peek(TokenKind.AT)) {\n      directives.push(this.parseDirective(isConst));\n    }\n\n    return directives;\n  }\n  /**\n   * Directive[Const] : @ Name Arguments[?Const]?\n   */\n  ;\n\n  _proto.parseDirective = function parseDirective(isConst) {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.AT);\n    return {\n      kind: Kind.DIRECTIVE,\n      name: this.parseName(),\n      arguments: this.parseArguments(isConst),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Types section.\n\n  /**\n   * Type :\n   *   - NamedType\n   *   - ListType\n   *   - NonNullType\n   */\n  ;\n\n  _proto.parseTypeReference = function parseTypeReference() {\n    var start = this._lexer.token;\n    var type;\n\n    if (this.expectOptionalToken(TokenKind.BRACKET_L)) {\n      type = this.parseTypeReference();\n      this.expectToken(TokenKind.BRACKET_R);\n      type = {\n        kind: Kind.LIST_TYPE,\n        type: type,\n        loc: this.loc(start)\n      };\n    } else {\n      type = this.parseNamedType();\n    }\n\n    if (this.expectOptionalToken(TokenKind.BANG)) {\n      return {\n        kind: Kind.NON_NULL_TYPE,\n        type: type,\n        loc: this.loc(start)\n      };\n    }\n\n    return type;\n  }\n  /**\n   * NamedType : Name\n   */\n  ;\n\n  _proto.parseNamedType = function parseNamedType() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.NAMED_TYPE,\n      name: this.parseName(),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Type Definition section.\n\n  /**\n   * TypeSystemDefinition :\n   *   - SchemaDefinition\n   *   - TypeDefinition\n   *   - DirectiveDefinition\n   *\n   * TypeDefinition :\n   *   - ScalarTypeDefinition\n   *   - ObjectTypeDefinition\n   *   - InterfaceTypeDefinition\n   *   - UnionTypeDefinition\n   *   - EnumTypeDefinition\n   *   - InputObjectTypeDefinition\n   */\n  ;\n\n  _proto.parseTypeSystemDefinition = function parseTypeSystemDefinition() {\n    // Many definitions begin with a description and require a lookahead.\n    var keywordToken = this.peekDescription() ? this._lexer.lookahead() : this._lexer.token;\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaDefinition();\n\n        case 'scalar':\n          return this.parseScalarTypeDefinition();\n\n        case 'type':\n          return this.parseObjectTypeDefinition();\n\n        case 'interface':\n          return this.parseInterfaceTypeDefinition();\n\n        case 'union':\n          return this.parseUnionTypeDefinition();\n\n        case 'enum':\n          return this.parseEnumTypeDefinition();\n\n        case 'input':\n          return this.parseInputObjectTypeDefinition();\n\n        case 'directive':\n          return this.parseDirectiveDefinition();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  };\n\n  _proto.peekDescription = function peekDescription() {\n    return this.peek(TokenKind.STRING) || this.peek(TokenKind.BLOCK_STRING);\n  }\n  /**\n   * Description : StringValue\n   */\n  ;\n\n  _proto.parseDescription = function parseDescription() {\n    if (this.peekDescription()) {\n      return this.parseStringLiteral();\n    }\n  }\n  /**\n   * SchemaDefinition : Description? schema Directives[Const]? { OperationTypeDefinition+ }\n   */\n  ;\n\n  _proto.parseSchemaDefinition = function parseSchemaDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('schema');\n    var directives = this.parseDirectives(true);\n    var operationTypes = this.many(TokenKind.BRACE_L, this.parseOperationTypeDefinition, TokenKind.BRACE_R);\n    return {\n      kind: Kind.SCHEMA_DEFINITION,\n      description: description,\n      directives: directives,\n      operationTypes: operationTypes,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * OperationTypeDefinition : OperationType : NamedType\n   */\n  ;\n\n  _proto.parseOperationTypeDefinition = function parseOperationTypeDefinition() {\n    var start = this._lexer.token;\n    var operation = this.parseOperationType();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseNamedType();\n    return {\n      kind: Kind.OPERATION_TYPE_DEFINITION,\n      operation: operation,\n      type: type,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ScalarTypeDefinition : Description? scalar Name Directives[Const]?\n   */\n  ;\n\n  _proto.parseScalarTypeDefinition = function parseScalarTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('scalar');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.SCALAR_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectTypeDefinition :\n   *   Description?\n   *   type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition?\n   */\n  ;\n\n  _proto.parseObjectTypeDefinition = function parseObjectTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('type');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n    return {\n      kind: Kind.OBJECT_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ImplementsInterfaces :\n   *   - implements `&`? NamedType\n   *   - ImplementsInterfaces & NamedType\n   */\n  ;\n\n  _proto.parseImplementsInterfaces = function parseImplementsInterfaces() {\n    var _this$_options2;\n\n    if (!this.expectOptionalKeyword('implements')) {\n      return [];\n    }\n\n    if (((_this$_options2 = this._options) === null || _this$_options2 === void 0 ? void 0 : _this$_options2.allowLegacySDLImplementsInterfaces) === true) {\n      var types = []; // Optional leading ampersand\n\n      this.expectOptionalToken(TokenKind.AMP);\n\n      do {\n        types.push(this.parseNamedType());\n      } while (this.expectOptionalToken(TokenKind.AMP) || this.peek(TokenKind.NAME));\n\n      return types;\n    }\n\n    return this.delimitedMany(TokenKind.AMP, this.parseNamedType);\n  }\n  /**\n   * FieldsDefinition : { FieldDefinition+ }\n   */\n  ;\n\n  _proto.parseFieldsDefinition = function parseFieldsDefinition() {\n    var _this$_options3;\n\n    // Legacy support for the SDL?\n    if (((_this$_options3 = this._options) === null || _this$_options3 === void 0 ? void 0 : _this$_options3.allowLegacySDLEmptyFields) === true && this.peek(TokenKind.BRACE_L) && this._lexer.lookahead().kind === TokenKind.BRACE_R) {\n      this._lexer.advance();\n\n      this._lexer.advance();\n\n      return [];\n    }\n\n    return this.optionalMany(TokenKind.BRACE_L, this.parseFieldDefinition, TokenKind.BRACE_R);\n  }\n  /**\n   * FieldDefinition :\n   *   - Description? Name ArgumentsDefinition? : Type Directives[Const]?\n   */\n  ;\n\n  _proto.parseFieldDefinition = function parseFieldDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    var args = this.parseArgumentDefs();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseTypeReference();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.FIELD_DEFINITION,\n      description: description,\n      name: name,\n      arguments: args,\n      type: type,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ArgumentsDefinition : ( InputValueDefinition+ )\n   */\n  ;\n\n  _proto.parseArgumentDefs = function parseArgumentDefs() {\n    return this.optionalMany(TokenKind.PAREN_L, this.parseInputValueDef, TokenKind.PAREN_R);\n  }\n  /**\n   * InputValueDefinition :\n   *   - Description? Name : Type DefaultValue? Directives[Const]?\n   */\n  ;\n\n  _proto.parseInputValueDef = function parseInputValueDef() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseTypeReference();\n    var defaultValue;\n\n    if (this.expectOptionalToken(TokenKind.EQUALS)) {\n      defaultValue = this.parseValueLiteral(true);\n    }\n\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.INPUT_VALUE_DEFINITION,\n      description: description,\n      name: name,\n      type: type,\n      defaultValue: defaultValue,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InterfaceTypeDefinition :\n   *   - Description? interface Name Directives[Const]? FieldsDefinition?\n   */\n  ;\n\n  _proto.parseInterfaceTypeDefinition = function parseInterfaceTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('interface');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n    return {\n      kind: Kind.INTERFACE_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionTypeDefinition :\n   *   - Description? union Name Directives[Const]? UnionMemberTypes?\n   */\n  ;\n\n  _proto.parseUnionTypeDefinition = function parseUnionTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('union');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var types = this.parseUnionMemberTypes();\n    return {\n      kind: Kind.UNION_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      types: types,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionMemberTypes :\n   *   - = `|`? NamedType\n   *   - UnionMemberTypes | NamedType\n   */\n  ;\n\n  _proto.parseUnionMemberTypes = function parseUnionMemberTypes() {\n    return this.expectOptionalToken(TokenKind.EQUALS) ? this.delimitedMany(TokenKind.PIPE, this.parseNamedType) : [];\n  }\n  /**\n   * EnumTypeDefinition :\n   *   - Description? enum Name Directives[Const]? EnumValuesDefinition?\n   */\n  ;\n\n  _proto.parseEnumTypeDefinition = function parseEnumTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('enum');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var values = this.parseEnumValuesDefinition();\n    return {\n      kind: Kind.ENUM_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      values: values,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * EnumValuesDefinition : { EnumValueDefinition+ }\n   */\n  ;\n\n  _proto.parseEnumValuesDefinition = function parseEnumValuesDefinition() {\n    return this.optionalMany(TokenKind.BRACE_L, this.parseEnumValueDefinition, TokenKind.BRACE_R);\n  }\n  /**\n   * EnumValueDefinition : Description? EnumValue Directives[Const]?\n   *\n   * EnumValue : Name\n   */\n  ;\n\n  _proto.parseEnumValueDefinition = function parseEnumValueDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.ENUM_VALUE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputObjectTypeDefinition :\n   *   - Description? input Name Directives[Const]? InputFieldsDefinition?\n   */\n  ;\n\n  _proto.parseInputObjectTypeDefinition = function parseInputObjectTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('input');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseInputFieldsDefinition();\n    return {\n      kind: Kind.INPUT_OBJECT_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputFieldsDefinition : { InputValueDefinition+ }\n   */\n  ;\n\n  _proto.parseInputFieldsDefinition = function parseInputFieldsDefinition() {\n    return this.optionalMany(TokenKind.BRACE_L, this.parseInputValueDef, TokenKind.BRACE_R);\n  }\n  /**\n   * TypeSystemExtension :\n   *   - SchemaExtension\n   *   - TypeExtension\n   *\n   * TypeExtension :\n   *   - ScalarTypeExtension\n   *   - ObjectTypeExtension\n   *   - InterfaceTypeExtension\n   *   - UnionTypeExtension\n   *   - EnumTypeExtension\n   *   - InputObjectTypeDefinition\n   */\n  ;\n\n  _proto.parseTypeSystemExtension = function parseTypeSystemExtension() {\n    var keywordToken = this._lexer.lookahead();\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaExtension();\n\n        case 'scalar':\n          return this.parseScalarTypeExtension();\n\n        case 'type':\n          return this.parseObjectTypeExtension();\n\n        case 'interface':\n          return this.parseInterfaceTypeExtension();\n\n        case 'union':\n          return this.parseUnionTypeExtension();\n\n        case 'enum':\n          return this.parseEnumTypeExtension();\n\n        case 'input':\n          return this.parseInputObjectTypeExtension();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  }\n  /**\n   * SchemaExtension :\n   *  - extend schema Directives[Const]? { OperationTypeDefinition+ }\n   *  - extend schema Directives[Const]\n   */\n  ;\n\n  _proto.parseSchemaExtension = function parseSchemaExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('schema');\n    var directives = this.parseDirectives(true);\n    var operationTypes = this.optionalMany(TokenKind.BRACE_L, this.parseOperationTypeDefinition, TokenKind.BRACE_R);\n\n    if (directives.length === 0 && operationTypes.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.SCHEMA_EXTENSION,\n      directives: directives,\n      operationTypes: operationTypes,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ScalarTypeExtension :\n   *   - extend scalar Name Directives[Const]\n   */\n  ;\n\n  _proto.parseScalarTypeExtension = function parseScalarTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('scalar');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n\n    if (directives.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.SCALAR_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectTypeExtension :\n   *  - extend type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend type Name ImplementsInterfaces? Directives[Const]\n   *  - extend type Name ImplementsInterfaces\n   */\n  ;\n\n  _proto.parseObjectTypeExtension = function parseObjectTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('type');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n\n    if (interfaces.length === 0 && directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.OBJECT_TYPE_EXTENSION,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InterfaceTypeExtension :\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]\n   *  - extend interface Name ImplementsInterfaces\n   */\n  ;\n\n  _proto.parseInterfaceTypeExtension = function parseInterfaceTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('interface');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n\n    if (interfaces.length === 0 && directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.INTERFACE_TYPE_EXTENSION,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionTypeExtension :\n   *   - extend union Name Directives[Const]? UnionMemberTypes\n   *   - extend union Name Directives[Const]\n   */\n  ;\n\n  _proto.parseUnionTypeExtension = function parseUnionTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('union');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var types = this.parseUnionMemberTypes();\n\n    if (directives.length === 0 && types.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.UNION_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      types: types,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * EnumTypeExtension :\n   *   - extend enum Name Directives[Const]? EnumValuesDefinition\n   *   - extend enum Name Directives[Const]\n   */\n  ;\n\n  _proto.parseEnumTypeExtension = function parseEnumTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('enum');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var values = this.parseEnumValuesDefinition();\n\n    if (directives.length === 0 && values.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.ENUM_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      values: values,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputObjectTypeExtension :\n   *   - extend input Name Directives[Const]? InputFieldsDefinition\n   *   - extend input Name Directives[Const]\n   */\n  ;\n\n  _proto.parseInputObjectTypeExtension = function parseInputObjectTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('input');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseInputFieldsDefinition();\n\n    if (directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.INPUT_OBJECT_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * DirectiveDefinition :\n   *   - Description? directive @ Name ArgumentsDefinition? `repeatable`? on DirectiveLocations\n   */\n  ;\n\n  _proto.parseDirectiveDefinition = function parseDirectiveDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('directive');\n    this.expectToken(TokenKind.AT);\n    var name = this.parseName();\n    var args = this.parseArgumentDefs();\n    var repeatable = this.expectOptionalKeyword('repeatable');\n    this.expectKeyword('on');\n    var locations = this.parseDirectiveLocations();\n    return {\n      kind: Kind.DIRECTIVE_DEFINITION,\n      description: description,\n      name: name,\n      arguments: args,\n      repeatable: repeatable,\n      locations: locations,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * DirectiveLocations :\n   *   - `|`? DirectiveLocation\n   *   - DirectiveLocations | DirectiveLocation\n   */\n  ;\n\n  _proto.parseDirectiveLocations = function parseDirectiveLocations() {\n    return this.delimitedMany(TokenKind.PIPE, this.parseDirectiveLocation);\n  }\n  /*\n   * DirectiveLocation :\n   *   - ExecutableDirectiveLocation\n   *   - TypeSystemDirectiveLocation\n   *\n   * ExecutableDirectiveLocation : one of\n   *   `QUERY`\n   *   `MUTATION`\n   *   `SUBSCRIPTION`\n   *   `FIELD`\n   *   `FRAGMENT_DEFINITION`\n   *   `FRAGMENT_SPREAD`\n   *   `INLINE_FRAGMENT`\n   *\n   * TypeSystemDirectiveLocation : one of\n   *   `SCHEMA`\n   *   `SCALAR`\n   *   `OBJECT`\n   *   `FIELD_DEFINITION`\n   *   `ARGUMENT_DEFINITION`\n   *   `INTERFACE`\n   *   `UNION`\n   *   `ENUM`\n   *   `ENUM_VALUE`\n   *   `INPUT_OBJECT`\n   *   `INPUT_FIELD_DEFINITION`\n   */\n  ;\n\n  _proto.parseDirectiveLocation = function parseDirectiveLocation() {\n    var start = this._lexer.token;\n    var name = this.parseName();\n\n    if (DirectiveLocation[name.value] !== undefined) {\n      return name;\n    }\n\n    throw this.unexpected(start);\n  } // Core parsing utility functions\n\n  /**\n   * Returns a location object, used to identify the place in the source that created a given parsed object.\n   */\n  ;\n\n  _proto.loc = function loc(startToken) {\n    var _this$_options4;\n\n    if (((_this$_options4 = this._options) === null || _this$_options4 === void 0 ? void 0 : _this$_options4.noLocation) !== true) {\n      return new Location(startToken, this._lexer.lastToken, this._lexer.source);\n    }\n  }\n  /**\n   * Determines if the next token is of a given kind\n   */\n  ;\n\n  _proto.peek = function peek(kind) {\n    return this._lexer.token.kind === kind;\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n  ;\n\n  _proto.expectToken = function expectToken(kind) {\n    var token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this._lexer.advance();\n\n      return token;\n    }\n\n    throw syntaxError(this._lexer.source, token.start, \"Expected \".concat(getTokenKindDesc(kind), \", found \").concat(getTokenDesc(token), \".\"));\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing the lexer.\n   * Otherwise, do not change the parser state and return undefined.\n   */\n  ;\n\n  _proto.expectOptionalToken = function expectOptionalToken(kind) {\n    var token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this._lexer.advance();\n\n      return token;\n    }\n\n    return undefined;\n  }\n  /**\n   * If the next token is a given keyword, advance the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n  ;\n\n  _proto.expectKeyword = function expectKeyword(value) {\n    var token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this._lexer.advance();\n    } else {\n      throw syntaxError(this._lexer.source, token.start, \"Expected \\\"\".concat(value, \"\\\", found \").concat(getTokenDesc(token), \".\"));\n    }\n  }\n  /**\n   * If the next token is a given keyword, return \"true\" after advancing the lexer.\n   * Otherwise, do not change the parser state and return \"false\".\n   */\n  ;\n\n  _proto.expectOptionalKeyword = function expectOptionalKeyword(value) {\n    var token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this._lexer.advance();\n\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Helper function for creating an error when an unexpected lexed token is encountered.\n   */\n  ;\n\n  _proto.unexpected = function unexpected(atToken) {\n    var token = atToken !== null && atToken !== void 0 ? atToken : this._lexer.token;\n    return syntaxError(this._lexer.source, token.start, \"Unexpected \".concat(getTokenDesc(token), \".\"));\n  }\n  /**\n   * Returns a possibly empty list of parse nodes, determined by the parseFn.\n   * This list begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.any = function any(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    var nodes = [];\n\n    while (!this.expectOptionalToken(closeKind)) {\n      nodes.push(parseFn.call(this));\n    }\n\n    return nodes;\n  }\n  /**\n   * Returns a list of parse nodes, determined by the parseFn.\n   * It can be empty only if open token is missing otherwise it will always return non-empty list\n   * that begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.optionalMany = function optionalMany(openKind, parseFn, closeKind) {\n    if (this.expectOptionalToken(openKind)) {\n      var nodes = [];\n\n      do {\n        nodes.push(parseFn.call(this));\n      } while (!this.expectOptionalToken(closeKind));\n\n      return nodes;\n    }\n\n    return [];\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by the parseFn.\n   * This list begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.many = function many(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    var nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (!this.expectOptionalToken(closeKind));\n\n    return nodes;\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by the parseFn.\n   * This list may begin with a lex token of delimiterKind followed by items separated by lex tokens of tokenKind.\n   * Advances the parser to the next lex token after last item in the list.\n   */\n  ;\n\n  _proto.delimitedMany = function delimitedMany(delimiterKind, parseFn) {\n    this.expectOptionalToken(delimiterKind);\n    var nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (this.expectOptionalToken(delimiterKind));\n\n    return nodes;\n  };\n\n  return Parser;\n}();\n/**\n * A helper function to describe a token as a string for debugging.\n */\n\nfunction getTokenDesc(token) {\n  var value = token.value;\n  return getTokenKindDesc(token.kind) + (value != null ? \" \\\"\".concat(value, \"\\\"\") : '');\n}\n/**\n * A helper function to describe a token kind as a string for debugging.\n */\n\n\nfunction getTokenKindDesc(kind) {\n  return isPunctuatorTokenKind(kind) ? \"\\\"\".concat(kind, \"\\\"\") : kind;\n}\n","import inspect from \"../jsutils/inspect.mjs\";\nimport { isNode } from \"./ast.mjs\";\n/**\n * A visitor is provided to visit, it contains the collection of\n * relevant functions to be called during the visitor's traversal.\n */\n\nexport var QueryDocumentKeys = {\n  Name: [],\n  Document: ['definitions'],\n  OperationDefinition: ['name', 'variableDefinitions', 'directives', 'selectionSet'],\n  VariableDefinition: ['variable', 'type', 'defaultValue', 'directives'],\n  Variable: ['name'],\n  SelectionSet: ['selections'],\n  Field: ['alias', 'name', 'arguments', 'directives', 'selectionSet'],\n  Argument: ['name', 'value'],\n  FragmentSpread: ['name', 'directives'],\n  InlineFragment: ['typeCondition', 'directives', 'selectionSet'],\n  FragmentDefinition: ['name', // Note: fragment variable definitions are experimental and may be changed\n  // or removed in the future.\n  'variableDefinitions', 'typeCondition', 'directives', 'selectionSet'],\n  IntValue: [],\n  FloatValue: [],\n  StringValue: [],\n  BooleanValue: [],\n  NullValue: [],\n  EnumValue: [],\n  ListValue: ['values'],\n  ObjectValue: ['fields'],\n  ObjectField: ['name', 'value'],\n  Directive: ['name', 'arguments'],\n  NamedType: ['name'],\n  ListType: ['type'],\n  NonNullType: ['type'],\n  SchemaDefinition: ['description', 'directives', 'operationTypes'],\n  OperationTypeDefinition: ['type'],\n  ScalarTypeDefinition: ['description', 'name', 'directives'],\n  ObjectTypeDefinition: ['description', 'name', 'interfaces', 'directives', 'fields'],\n  FieldDefinition: ['description', 'name', 'arguments', 'type', 'directives'],\n  InputValueDefinition: ['description', 'name', 'type', 'defaultValue', 'directives'],\n  InterfaceTypeDefinition: ['description', 'name', 'interfaces', 'directives', 'fields'],\n  UnionTypeDefinition: ['description', 'name', 'directives', 'types'],\n  EnumTypeDefinition: ['description', 'name', 'directives', 'values'],\n  EnumValueDefinition: ['description', 'name', 'directives'],\n  InputObjectTypeDefinition: ['description', 'name', 'directives', 'fields'],\n  DirectiveDefinition: ['description', 'name', 'arguments', 'locations'],\n  SchemaExtension: ['directives', 'operationTypes'],\n  ScalarTypeExtension: ['name', 'directives'],\n  ObjectTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  InterfaceTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  UnionTypeExtension: ['name', 'directives', 'types'],\n  EnumTypeExtension: ['name', 'directives', 'values'],\n  InputObjectTypeExtension: ['name', 'directives', 'fields']\n};\nexport var BREAK = Object.freeze({});\n/**\n * visit() will walk through an AST using a depth-first traversal, calling\n * the visitor's enter function at each node in the traversal, and calling the\n * leave function after visiting that node and all of its child nodes.\n *\n * By returning different values from the enter and leave functions, the\n * behavior of the visitor can be altered, including skipping over a sub-tree of\n * the AST (by returning false), editing the AST by returning a value or null\n * to remove the value, or to stop the whole traversal by returning BREAK.\n *\n * When using visit() to edit an AST, the original AST will not be modified, and\n * a new version of the AST with the changes applied will be returned from the\n * visit function.\n *\n *     const editedAST = visit(ast, {\n *       enter(node, key, parent, path, ancestors) {\n *         // @return\n *         //   undefined: no action\n *         //   false: skip visiting this node\n *         //   visitor.BREAK: stop visiting altogether\n *         //   null: delete this node\n *         //   any value: replace this node with the returned value\n *       },\n *       leave(node, key, parent, path, ancestors) {\n *         // @return\n *         //   undefined: no action\n *         //   false: no action\n *         //   visitor.BREAK: stop visiting altogether\n *         //   null: delete this node\n *         //   any value: replace this node with the returned value\n *       }\n *     });\n *\n * Alternatively to providing enter() and leave() functions, a visitor can\n * instead provide functions named the same as the kinds of AST nodes, or\n * enter/leave visitors at a named key, leading to four permutations of the\n * visitor API:\n *\n * 1) Named visitors triggered when entering a node of a specific kind.\n *\n *     visit(ast, {\n *       Kind(node) {\n *         // enter the \"Kind\" node\n *       }\n *     })\n *\n * 2) Named visitors that trigger upon entering and leaving a node of\n *    a specific kind.\n *\n *     visit(ast, {\n *       Kind: {\n *         enter(node) {\n *           // enter the \"Kind\" node\n *         }\n *         leave(node) {\n *           // leave the \"Kind\" node\n *         }\n *       }\n *     })\n *\n * 3) Generic visitors that trigger upon entering and leaving any node.\n *\n *     visit(ast, {\n *       enter(node) {\n *         // enter any node\n *       },\n *       leave(node) {\n *         // leave any node\n *       }\n *     })\n *\n * 4) Parallel visitors for entering and leaving nodes of a specific kind.\n *\n *     visit(ast, {\n *       enter: {\n *         Kind(node) {\n *           // enter the \"Kind\" node\n *         }\n *       },\n *       leave: {\n *         Kind(node) {\n *           // leave the \"Kind\" node\n *         }\n *       }\n *     })\n */\n\nexport function visit(root, visitor) {\n  var visitorKeys = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : QueryDocumentKeys;\n\n  /* eslint-disable no-undef-init */\n  var stack = undefined;\n  var inArray = Array.isArray(root);\n  var keys = [root];\n  var index = -1;\n  var edits = [];\n  var node = undefined;\n  var key = undefined;\n  var parent = undefined;\n  var path = [];\n  var ancestors = [];\n  var newRoot = root;\n  /* eslint-enable no-undef-init */\n\n  do {\n    index++;\n    var isLeaving = index === keys.length;\n    var isEdited = isLeaving && edits.length !== 0;\n\n    if (isLeaving) {\n      key = ancestors.length === 0 ? undefined : path[path.length - 1];\n      node = parent;\n      parent = ancestors.pop();\n\n      if (isEdited) {\n        if (inArray) {\n          node = node.slice();\n        } else {\n          var clone = {};\n\n          for (var _i2 = 0, _Object$keys2 = Object.keys(node); _i2 < _Object$keys2.length; _i2++) {\n            var k = _Object$keys2[_i2];\n            clone[k] = node[k];\n          }\n\n          node = clone;\n        }\n\n        var editOffset = 0;\n\n        for (var ii = 0; ii < edits.length; ii++) {\n          var editKey = edits[ii][0];\n          var editValue = edits[ii][1];\n\n          if (inArray) {\n            editKey -= editOffset;\n          }\n\n          if (inArray && editValue === null) {\n            node.splice(editKey, 1);\n            editOffset++;\n          } else {\n            node[editKey] = editValue;\n          }\n        }\n      }\n\n      index = stack.index;\n      keys = stack.keys;\n      edits = stack.edits;\n      inArray = stack.inArray;\n      stack = stack.prev;\n    } else {\n      key = parent ? inArray ? index : keys[index] : undefined;\n      node = parent ? parent[key] : newRoot;\n\n      if (node === null || node === undefined) {\n        continue;\n      }\n\n      if (parent) {\n        path.push(key);\n      }\n    }\n\n    var result = void 0;\n\n    if (!Array.isArray(node)) {\n      if (!isNode(node)) {\n        throw new Error(\"Invalid AST Node: \".concat(inspect(node), \".\"));\n      }\n\n      var visitFn = getVisitFn(visitor, node.kind, isLeaving);\n\n      if (visitFn) {\n        result = visitFn.call(visitor, node, key, parent, path, ancestors);\n\n        if (result === BREAK) {\n          break;\n        }\n\n        if (result === false) {\n          if (!isLeaving) {\n            path.pop();\n            continue;\n          }\n        } else if (result !== undefined) {\n          edits.push([key, result]);\n\n          if (!isLeaving) {\n            if (isNode(result)) {\n              node = result;\n            } else {\n              path.pop();\n              continue;\n            }\n          }\n        }\n      }\n    }\n\n    if (result === undefined && isEdited) {\n      edits.push([key, node]);\n    }\n\n    if (isLeaving) {\n      path.pop();\n    } else {\n      var _visitorKeys$node$kin;\n\n      stack = {\n        inArray: inArray,\n        index: index,\n        keys: keys,\n        edits: edits,\n        prev: stack\n      };\n      inArray = Array.isArray(node);\n      keys = inArray ? node : (_visitorKeys$node$kin = visitorKeys[node.kind]) !== null && _visitorKeys$node$kin !== void 0 ? _visitorKeys$node$kin : [];\n      index = -1;\n      edits = [];\n\n      if (parent) {\n        ancestors.push(parent);\n      }\n\n      parent = node;\n    }\n  } while (stack !== undefined);\n\n  if (edits.length !== 0) {\n    newRoot = edits[edits.length - 1][1];\n  }\n\n  return newRoot;\n}\n/**\n * Creates a new visitor instance which delegates to many visitors to run in\n * parallel. Each visitor will be visited for each node before moving on.\n *\n * If a prior visitor edits a node, no following visitors will see that node.\n */\n\nexport function visitInParallel(visitors) {\n  var skipping = new Array(visitors.length);\n  return {\n    enter: function enter(node) {\n      for (var i = 0; i < visitors.length; i++) {\n        if (skipping[i] == null) {\n          var fn = getVisitFn(visitors[i], node.kind,\n          /* isLeaving */\n          false);\n\n          if (fn) {\n            var result = fn.apply(visitors[i], arguments);\n\n            if (result === false) {\n              skipping[i] = node;\n            } else if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined) {\n              return result;\n            }\n          }\n        }\n      }\n    },\n    leave: function leave(node) {\n      for (var i = 0; i < visitors.length; i++) {\n        if (skipping[i] == null) {\n          var fn = getVisitFn(visitors[i], node.kind,\n          /* isLeaving */\n          true);\n\n          if (fn) {\n            var result = fn.apply(visitors[i], arguments);\n\n            if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined && result !== false) {\n              return result;\n            }\n          }\n        } else if (skipping[i] === node) {\n          skipping[i] = null;\n        }\n      }\n    }\n  };\n}\n/**\n * Given a visitor instance, if it is leaving or not, and a node kind, return\n * the function the visitor runtime should call.\n */\n\nexport function getVisitFn(visitor, kind, isLeaving) {\n  var kindVisitor = visitor[kind];\n\n  if (kindVisitor) {\n    if (!isLeaving && typeof kindVisitor === 'function') {\n      // { Kind() {} }\n      return kindVisitor;\n    }\n\n    var kindSpecificVisitor = isLeaving ? kindVisitor.leave : kindVisitor.enter;\n\n    if (typeof kindSpecificVisitor === 'function') {\n      // { Kind: { enter() {}, leave() {} } }\n      return kindSpecificVisitor;\n    }\n  } else {\n    var specificVisitor = isLeaving ? visitor.leave : visitor.enter;\n\n    if (specificVisitor) {\n      if (typeof specificVisitor === 'function') {\n        // { enter() {}, leave() {} }\n        return specificVisitor;\n      }\n\n      var specificKindVisitor = specificVisitor[kind];\n\n      if (typeof specificKindVisitor === 'function') {\n        // { enter: { Kind() {} }, leave: { Kind() {} } }\n        return specificKindVisitor;\n      }\n    }\n  }\n}\n","import { visit } from \"./visitor.mjs\";\nimport { printBlockString } from \"./blockString.mjs\";\n/**\n * Converts an AST into a string, using one set of reasonable\n * formatting rules.\n */\n\nexport function print(ast) {\n  return visit(ast, {\n    leave: printDocASTReducer\n  });\n}\nvar MAX_LINE_LENGTH = 80; // TODO: provide better type coverage in future\n\nvar printDocASTReducer = {\n  Name: function Name(node) {\n    return node.value;\n  },\n  Variable: function Variable(node) {\n    return '$' + node.name;\n  },\n  // Document\n  Document: function Document(node) {\n    return join(node.definitions, '\\n\\n') + '\\n';\n  },\n  OperationDefinition: function OperationDefinition(node) {\n    var op = node.operation;\n    var name = node.name;\n    var varDefs = wrap('(', join(node.variableDefinitions, ', '), ')');\n    var directives = join(node.directives, ' ');\n    var selectionSet = node.selectionSet; // Anonymous queries with no directives or variable definitions can use\n    // the query short form.\n\n    return !name && !directives && !varDefs && op === 'query' ? selectionSet : join([op, join([name, varDefs]), directives, selectionSet], ' ');\n  },\n  VariableDefinition: function VariableDefinition(_ref) {\n    var variable = _ref.variable,\n        type = _ref.type,\n        defaultValue = _ref.defaultValue,\n        directives = _ref.directives;\n    return variable + ': ' + type + wrap(' = ', defaultValue) + wrap(' ', join(directives, ' '));\n  },\n  SelectionSet: function SelectionSet(_ref2) {\n    var selections = _ref2.selections;\n    return block(selections);\n  },\n  Field: function Field(_ref3) {\n    var alias = _ref3.alias,\n        name = _ref3.name,\n        args = _ref3.arguments,\n        directives = _ref3.directives,\n        selectionSet = _ref3.selectionSet;\n    var prefix = wrap('', alias, ': ') + name;\n    var argsLine = prefix + wrap('(', join(args, ', '), ')');\n\n    if (argsLine.length > MAX_LINE_LENGTH) {\n      argsLine = prefix + wrap('(\\n', indent(join(args, '\\n')), '\\n)');\n    }\n\n    return join([argsLine, join(directives, ' '), selectionSet], ' ');\n  },\n  Argument: function Argument(_ref4) {\n    var name = _ref4.name,\n        value = _ref4.value;\n    return name + ': ' + value;\n  },\n  // Fragments\n  FragmentSpread: function FragmentSpread(_ref5) {\n    var name = _ref5.name,\n        directives = _ref5.directives;\n    return '...' + name + wrap(' ', join(directives, ' '));\n  },\n  InlineFragment: function InlineFragment(_ref6) {\n    var typeCondition = _ref6.typeCondition,\n        directives = _ref6.directives,\n        selectionSet = _ref6.selectionSet;\n    return join(['...', wrap('on ', typeCondition), join(directives, ' '), selectionSet], ' ');\n  },\n  FragmentDefinition: function FragmentDefinition(_ref7) {\n    var name = _ref7.name,\n        typeCondition = _ref7.typeCondition,\n        variableDefinitions = _ref7.variableDefinitions,\n        directives = _ref7.directives,\n        selectionSet = _ref7.selectionSet;\n    return (// Note: fragment variable definitions are experimental and may be changed\n      // or removed in the future.\n      \"fragment \".concat(name).concat(wrap('(', join(variableDefinitions, ', '), ')'), \" \") + \"on \".concat(typeCondition, \" \").concat(wrap('', join(directives, ' '), ' ')) + selectionSet\n    );\n  },\n  // Value\n  IntValue: function IntValue(_ref8) {\n    var value = _ref8.value;\n    return value;\n  },\n  FloatValue: function FloatValue(_ref9) {\n    var value = _ref9.value;\n    return value;\n  },\n  StringValue: function StringValue(_ref10, key) {\n    var value = _ref10.value,\n        isBlockString = _ref10.block;\n    return isBlockString ? printBlockString(value, key === 'description' ? '' : '  ') : JSON.stringify(value);\n  },\n  BooleanValue: function BooleanValue(_ref11) {\n    var value = _ref11.value;\n    return value ? 'true' : 'false';\n  },\n  NullValue: function NullValue() {\n    return 'null';\n  },\n  EnumValue: function EnumValue(_ref12) {\n    var value = _ref12.value;\n    return value;\n  },\n  ListValue: function ListValue(_ref13) {\n    var values = _ref13.values;\n    return '[' + join(values, ', ') + ']';\n  },\n  ObjectValue: function ObjectValue(_ref14) {\n    var fields = _ref14.fields;\n    return '{' + join(fields, ', ') + '}';\n  },\n  ObjectField: function ObjectField(_ref15) {\n    var name = _ref15.name,\n        value = _ref15.value;\n    return name + ': ' + value;\n  },\n  // Directive\n  Directive: function Directive(_ref16) {\n    var name = _ref16.name,\n        args = _ref16.arguments;\n    return '@' + name + wrap('(', join(args, ', '), ')');\n  },\n  // Type\n  NamedType: function NamedType(_ref17) {\n    var name = _ref17.name;\n    return name;\n  },\n  ListType: function ListType(_ref18) {\n    var type = _ref18.type;\n    return '[' + type + ']';\n  },\n  NonNullType: function NonNullType(_ref19) {\n    var type = _ref19.type;\n    return type + '!';\n  },\n  // Type System Definitions\n  SchemaDefinition: addDescription(function (_ref20) {\n    var directives = _ref20.directives,\n        operationTypes = _ref20.operationTypes;\n    return join(['schema', join(directives, ' '), block(operationTypes)], ' ');\n  }),\n  OperationTypeDefinition: function OperationTypeDefinition(_ref21) {\n    var operation = _ref21.operation,\n        type = _ref21.type;\n    return operation + ': ' + type;\n  },\n  ScalarTypeDefinition: addDescription(function (_ref22) {\n    var name = _ref22.name,\n        directives = _ref22.directives;\n    return join(['scalar', name, join(directives, ' ')], ' ');\n  }),\n  ObjectTypeDefinition: addDescription(function (_ref23) {\n    var name = _ref23.name,\n        interfaces = _ref23.interfaces,\n        directives = _ref23.directives,\n        fields = _ref23.fields;\n    return join(['type', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  }),\n  FieldDefinition: addDescription(function (_ref24) {\n    var name = _ref24.name,\n        args = _ref24.arguments,\n        type = _ref24.type,\n        directives = _ref24.directives;\n    return name + (hasMultilineItems(args) ? wrap('(\\n', indent(join(args, '\\n')), '\\n)') : wrap('(', join(args, ', '), ')')) + ': ' + type + wrap(' ', join(directives, ' '));\n  }),\n  InputValueDefinition: addDescription(function (_ref25) {\n    var name = _ref25.name,\n        type = _ref25.type,\n        defaultValue = _ref25.defaultValue,\n        directives = _ref25.directives;\n    return join([name + ': ' + type, wrap('= ', defaultValue), join(directives, ' ')], ' ');\n  }),\n  InterfaceTypeDefinition: addDescription(function (_ref26) {\n    var name = _ref26.name,\n        interfaces = _ref26.interfaces,\n        directives = _ref26.directives,\n        fields = _ref26.fields;\n    return join(['interface', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  }),\n  UnionTypeDefinition: addDescription(function (_ref27) {\n    var name = _ref27.name,\n        directives = _ref27.directives,\n        types = _ref27.types;\n    return join(['union', name, join(directives, ' '), types && types.length !== 0 ? '= ' + join(types, ' | ') : ''], ' ');\n  }),\n  EnumTypeDefinition: addDescription(function (_ref28) {\n    var name = _ref28.name,\n        directives = _ref28.directives,\n        values = _ref28.values;\n    return join(['enum', name, join(directives, ' '), block(values)], ' ');\n  }),\n  EnumValueDefinition: addDescription(function (_ref29) {\n    var name = _ref29.name,\n        directives = _ref29.directives;\n    return join([name, join(directives, ' ')], ' ');\n  }),\n  InputObjectTypeDefinition: addDescription(function (_ref30) {\n    var name = _ref30.name,\n        directives = _ref30.directives,\n        fields = _ref30.fields;\n    return join(['input', name, join(directives, ' '), block(fields)], ' ');\n  }),\n  DirectiveDefinition: addDescription(function (_ref31) {\n    var name = _ref31.name,\n        args = _ref31.arguments,\n        repeatable = _ref31.repeatable,\n        locations = _ref31.locations;\n    return 'directive @' + name + (hasMultilineItems(args) ? wrap('(\\n', indent(join(args, '\\n')), '\\n)') : wrap('(', join(args, ', '), ')')) + (repeatable ? ' repeatable' : '') + ' on ' + join(locations, ' | ');\n  }),\n  SchemaExtension: function SchemaExtension(_ref32) {\n    var directives = _ref32.directives,\n        operationTypes = _ref32.operationTypes;\n    return join(['extend schema', join(directives, ' '), block(operationTypes)], ' ');\n  },\n  ScalarTypeExtension: function ScalarTypeExtension(_ref33) {\n    var name = _ref33.name,\n        directives = _ref33.directives;\n    return join(['extend scalar', name, join(directives, ' ')], ' ');\n  },\n  ObjectTypeExtension: function ObjectTypeExtension(_ref34) {\n    var name = _ref34.name,\n        interfaces = _ref34.interfaces,\n        directives = _ref34.directives,\n        fields = _ref34.fields;\n    return join(['extend type', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  },\n  InterfaceTypeExtension: function InterfaceTypeExtension(_ref35) {\n    var name = _ref35.name,\n        interfaces = _ref35.interfaces,\n        directives = _ref35.directives,\n        fields = _ref35.fields;\n    return join(['extend interface', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  },\n  UnionTypeExtension: function UnionTypeExtension(_ref36) {\n    var name = _ref36.name,\n        directives = _ref36.directives,\n        types = _ref36.types;\n    return join(['extend union', name, join(directives, ' '), types && types.length !== 0 ? '= ' + join(types, ' | ') : ''], ' ');\n  },\n  EnumTypeExtension: function EnumTypeExtension(_ref37) {\n    var name = _ref37.name,\n        directives = _ref37.directives,\n        values = _ref37.values;\n    return join(['extend enum', name, join(directives, ' '), block(values)], ' ');\n  },\n  InputObjectTypeExtension: function InputObjectTypeExtension(_ref38) {\n    var name = _ref38.name,\n        directives = _ref38.directives,\n        fields = _ref38.fields;\n    return join(['extend input', name, join(directives, ' '), block(fields)], ' ');\n  }\n};\n\nfunction addDescription(cb) {\n  return function (node) {\n    return join([node.description, cb(node)], '\\n');\n  };\n}\n/**\n * Given maybeArray, print an empty string if it is null or empty, otherwise\n * print all items together separated by separator if provided\n */\n\n\nfunction join(maybeArray) {\n  var _maybeArray$filter$jo;\n\n  var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  return (_maybeArray$filter$jo = maybeArray === null || maybeArray === void 0 ? void 0 : maybeArray.filter(function (x) {\n    return x;\n  }).join(separator)) !== null && _maybeArray$filter$jo !== void 0 ? _maybeArray$filter$jo : '';\n}\n/**\n * Given array, print each item on its own line, wrapped in an\n * indented \"{ }\" block.\n */\n\n\nfunction block(array) {\n  return wrap('{\\n', indent(join(array, '\\n')), '\\n}');\n}\n/**\n * If maybeString is not null or empty, then wrap with start and end, otherwise print an empty string.\n */\n\n\nfunction wrap(start, maybeString) {\n  var end = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  return maybeString != null && maybeString !== '' ? start + maybeString + end : '';\n}\n\nfunction indent(str) {\n  return wrap('  ', str.replace(/\\n/g, '\\n  '));\n}\n\nfunction isMultiline(str) {\n  return str.indexOf('\\n') !== -1;\n}\n\nfunction hasMultilineItems(maybeArray) {\n  return maybeArray != null && maybeArray.some(isMultiline);\n}\n","/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nimport { I18nOptions } from './types';\nimport { ConsoleLogger as Logger } from '../Logger';\n\nconst logger = new Logger('I18n');\n\n/**\n * Language transition class\n */\nexport class I18n {\n\t/**\n\t * @private\n\t */\n\t_options: I18nOptions = null;\n\n\t/**\n\t * @private\n\t */\n\t_lang = null;\n\n\t/**\n\t * @private\n\t */\n\t_dict = {};\n\n\t/**\n\t * @constructor\n\t * Initialize with configurations\n\t * @param {Object} options\n\t */\n\tconstructor(options: I18nOptions) {\n\t\tthis._options = Object.assign({}, options);\n\t\tthis._lang = this._options.language;\n\n\t\tif (\n\t\t\t!this._lang &&\n\t\t\ttypeof window !== 'undefined' &&\n\t\t\twindow &&\n\t\t\twindow.navigator\n\t\t) {\n\t\t\tthis._lang = window.navigator.language;\n\t\t}\n\n\t\tlogger.debug(this._lang);\n\t}\n\n\t/**\n\t * @method\n\t * Explicitly setting language\n\t * @param {String} lang\n\t */\n\tsetLanguage(lang: string) {\n\t\tthis._lang = lang;\n\t}\n\n\t/**\n\t * @method\n\t * Get value\n\t * @param {String} key\n\t * @param {String} defVal - Default value\n\t */\n\tget(key, defVal = undefined) {\n\t\tif (!this._lang) {\n\t\t\treturn typeof defVal !== 'undefined' ? defVal : key;\n\t\t}\n\n\t\tconst lang = this._lang;\n\t\tlet val = this.getByLanguage(key, lang);\n\t\tif (val) {\n\t\t\treturn val;\n\t\t}\n\n\t\tif (lang.indexOf('-') > 0) {\n\t\t\tval = this.getByLanguage(key, lang.split('-')[0]);\n\t\t}\n\t\tif (val) {\n\t\t\treturn val;\n\t\t}\n\n\t\treturn typeof defVal !== 'undefined' ? defVal : key;\n\t}\n\n\t/**\n\t * @method\n\t * Get value according to specified language\n\t * @param {String} key\n\t * @param {String} language - Specified langurage to be used\n\t * @param {String} defVal - Default value\n\t */\n\tgetByLanguage(key, language, defVal = null) {\n\t\tif (!language) {\n\t\t\treturn defVal;\n\t\t}\n\n\t\tconst lang_dict = this._dict[language];\n\t\tif (!lang_dict) {\n\t\t\treturn defVal;\n\t\t}\n\n\t\treturn lang_dict[key];\n\t}\n\n\t/**\n\t * @method\n\t * Add vocabularies for one language\n\t * @param {String} language - Language of the dictionary\n\t * @param {Object} vocabularies - Object that has key-value as dictionary entry\n\t */\n\tputVocabulariesForLanguage(language, vocabularies) {\n\t\tlet lang_dict = this._dict[language];\n\t\tif (!lang_dict) {\n\t\t\tlang_dict = this._dict[language] = {};\n\t\t}\n\t\tObject.assign(lang_dict, vocabularies);\n\t}\n\n\t/**\n\t * @method\n\t * Add vocabularies for one language\n\t * @param {Object} vocabularies - Object that has language as key,\n\t *                                vocabularies of each language as value\n\t */\n\tputVocabularies(vocabularies) {\n\t\tObject.keys(vocabularies).map(key => {\n\t\t\tthis.putVocabulariesForLanguage(key, vocabularies[key]);\n\t\t});\n\t}\n}\n","/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nimport { I18n as I18nClass } from './I18n';\n\nimport { ConsoleLogger as Logger } from '../Logger';\nimport { Amplify } from '../Amplify';\n\nconst logger = new Logger('I18n');\n\nlet _config = null;\nlet _i18n = null;\n\n/**\n * Export I18n APIs\n */\nexport class I18n {\n\t/**\n\t * @static\n\t * @method\n\t * Configure I18n part\n\t * @param {Object} config - Configuration of the I18n\n\t */\n\tstatic configure(config) {\n\t\tlogger.debug('configure I18n');\n\t\tif (!config) {\n\t\t\treturn _config;\n\t\t}\n\n\t\t_config = Object.assign({}, _config, config.I18n || config);\n\n\t\tI18n.createInstance();\n\n\t\treturn _config;\n\t}\n\n\tstatic getModuleName() {\n\t\treturn 'I18n';\n\t}\n\n\t/**\n\t * @static\n\t * @method\n\t * Create an instance of I18n for the library\n\t */\n\tstatic createInstance() {\n\t\tlogger.debug('create I18n instance');\n\t\tif (_i18n) {\n\t\t\treturn;\n\t\t}\n\t\t_i18n = new I18nClass(_config);\n\t}\n\n\t/**\n\t * @static @method\n\t * Explicitly setting language\n\t * @param {String} lang\n\t */\n\tstatic setLanguage(lang) {\n\t\tI18n.checkConfig();\n\n\t\treturn _i18n.setLanguage(lang);\n\t}\n\n\t/**\n\t * @static @method\n\t * Get value\n\t * @param {String} key\n\t * @param {String} defVal - Default value\n\t */\n\tstatic get(key, defVal?) {\n\t\tif (!I18n.checkConfig()) {\n\t\t\treturn typeof defVal === 'undefined' ? key : defVal;\n\t\t}\n\n\t\treturn _i18n.get(key, defVal);\n\t}\n\n\t/**\n\t * @static\n\t * @method\n\t * Add vocabularies for one language\n\t * @param {String} langurage - Language of the dictionary\n\t * @param {Object} vocabularies - Object that has key-value as dictionary entry\n\t */\n\tstatic putVocabulariesForLanguage(language, vocabularies) {\n\t\tI18n.checkConfig();\n\n\t\treturn _i18n.putVocabulariesForLanguage(language, vocabularies);\n\t}\n\n\t/**\n\t * @static\n\t * @method\n\t * Add vocabularies for one language\n\t * @param {Object} vocabularies - Object that has language as key,\n\t *                                vocabularies of each language as value\n\t */\n\tstatic putVocabularies(vocabularies) {\n\t\tI18n.checkConfig();\n\n\t\treturn _i18n.putVocabularies(vocabularies);\n\t}\n\n\tpublic static checkConfig() {\n\t\tif (!_i18n) {\n\t\t\t_i18n = new I18nClass(_config);\n\t\t}\n\n\t\treturn true;\n\t}\n}\n\nAmplify.register(I18n);\n\n/**\n * @deprecated use named import\n */\nexport default I18n;\n","/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nimport { Amplify } from './Amplify';\nimport { Platform } from './Platform';\n\nexport { AmplifyClass } from './Amplify';\nexport { ClientDevice } from './ClientDevice';\nexport { ConsoleLogger, ConsoleLogger as Logger } from './Logger';\nexport * from './Errors';\nexport { Hub, HubCapsule, HubCallback, HubPayload } from './Hub';\nexport { I18n } from './I18n';\nexport * from './JS';\nexport { Signer } from './Signer';\nexport * from './Parser';\nexport * from './Providers';\nexport { FacebookOAuth, GoogleOAuth } from './OAuthHelper';\nexport * from './RNComponents';\nexport { Credentials, CredentialsClass } from './Credentials';\nexport { ServiceWorker } from './ServiceWorker';\nexport { ICredentials } from './types';\nexport { StorageHelper, MemoryStorage } from './StorageHelper';\nexport { UniversalStorage } from './UniversalStorage';\nexport { Platform, getAmplifyUserAgent } from './Platform';\nexport * from './constants';\n\nexport const Constants = {\n\tuserAgent: Platform.userAgent,\n};\n\nexport * from './constants';\nexport * from './Util';\n\nexport { Amplify };\n/**\n * @deprecated use named import\n */\nexport default Amplify;\n","/*\n * Copyright 2018-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\n/**\n * This Symbol is used to reference an internal-only PubSub provider that\n * is used for AppSync/GraphQL subscriptions in the API category.\n */\nconst hasSymbol =\n\ttypeof Symbol !== 'undefined' && typeof Symbol.for === 'function';\n\nexport const INTERNAL_AWS_APPSYNC_PUBSUB_PROVIDER = hasSymbol\n\t? Symbol.for('INTERNAL_AWS_APPSYNC_PUBSUB_PROVIDER')\n\t: '@@INTERNAL_AWS_APPSYNC_PUBSUB_PROVIDER';\n\nexport const INTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER = hasSymbol\n\t? Symbol.for('INTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER')\n\t: '@@INTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER';\n\nexport const USER_AGENT_HEADER = 'x-amz-user-agent';\n","/* tslint:disable */\n\nimport zenObservable from 'zen-observable';\n\nnamespace Observable {\n\n}\n\nimport { ZenObservable } from './types';\n\nexport { ZenObservable };\n\nexport type Observer<T> = ZenObservable.Observer<T>;\nexport type Subscriber<T> = ZenObservable.Subscriber<T>;\nexport type ObservableLike<T> = ZenObservable.ObservableLike<T>;\n\nexport const Observable: {\n  new <T>(subscriber: Subscriber<T>): Observable<T>;\n  from<R>(\n    observable: Observable<R> | ZenObservable.ObservableLike<R> | ArrayLike<R>,\n  ): Observable<R>;\n  of<R>(...args: Array<R>): Observable<R>;\n} = <any>zenObservable;\n\nexport interface Observable<T> {\n  subscribe(\n    observerOrNext: ((value: T) => void) | ZenObservable.Observer<T>,\n    error?: (error: any) => void,\n    complete?: () => void,\n  ): ZenObservable.Subscription;\n\n  forEach(fn: (value: T) => void): Promise<void>;\n\n  map<R>(fn: (value: T) => R): Observable<R>;\n\n  filter(fn: (value: T) => boolean): Observable<T>;\n\n  reduce<R = T>(\n    fn: (previousValue: R | T, currentValue: T) => R | T,\n    initialValue?: R | T,\n  ): Observable<R | T>;\n\n  flatMap<R>(fn: (value: T) => ZenObservable.ObservableLike<R>): Observable<R>;\n\n  from<R>(\n    observable: Observable<R> | ZenObservable.ObservableLike<R> | ArrayLike<R>,\n  ): Observable<R>;\n  of<R>(...args: Array<R>): Observable<R>;\n}\n","/*\n * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport Observable from 'zen-observable-ts';\nimport { PubSubProvider, ProvidertOptions } from '../types';\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\n\nconst logger = new Logger('AbstractPubSubProvider');\n\nexport abstract class AbstractPubSubProvider implements PubSubProvider {\n\tprivate _config: ProvidertOptions;\n\n\tconstructor(options: ProvidertOptions = {}) {\n\t\tthis._config = options;\n\t}\n\n\tconfigure(config: ProvidertOptions = {}): ProvidertOptions {\n\t\tthis._config = { ...config, ...this._config };\n\n\t\tlogger.debug(`configure ${this.getProviderName()}`, this._config);\n\n\t\treturn this.options;\n\t}\n\n\tgetCategory() {\n\t\treturn 'PubSub';\n\t}\n\n\tabstract getProviderName(): string;\n\n\tprotected get options(): ProvidertOptions {\n\t\treturn { ...this._config };\n\t}\n\n\tpublic abstract newClient(clientOptions: ProvidertOptions): Promise<any>;\n\n\tpublic abstract publish(\n\t\ttopics: string[] | string,\n\t\tmsg: any,\n\t\toptions?: ProvidertOptions\n\t): void;\n\n\tpublic abstract subscribe(\n\t\ttopics: string[] | string,\n\t\toptions?: ProvidertOptions\n\t): Observable<any>;\n}\n","/*\n * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport * as Paho from 'paho-mqtt';\nimport { v4 as uuid } from 'uuid';\nimport Observable from 'zen-observable-ts';\n\nimport { AbstractPubSubProvider } from './PubSubProvider';\nimport { ProvidertOptions, SubscriptionObserver } from '../types';\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\n\nconst logger = new Logger('MqttOverWSProvider');\n\nexport function mqttTopicMatch(filter: string, topic: string) {\n\tconst filterArray = filter.split('/');\n\tconst length = filterArray.length;\n\tconst topicArray = topic.split('/');\n\n\tfor (let i = 0; i < length; ++i) {\n\t\tconst left = filterArray[i];\n\t\tconst right = topicArray[i];\n\t\tif (left === '#') return topicArray.length >= length;\n\t\tif (left !== '+' && left !== right) return false;\n\t}\n\treturn length === topicArray.length;\n}\n\nexport interface MqttProvidertOptions extends ProvidertOptions {\n\tclientId?: string;\n\turl?: string;\n}\n\nclass ClientsQueue {\n\tprivate promises: Map<string, Promise<any>> = new Map();\n\n\tasync get(clientId: string, clientFactory: (string) => Promise<any>) {\n\t\tlet promise = this.promises.get(clientId);\n\t\tif (promise) {\n\t\t\treturn promise;\n\t\t}\n\n\t\tpromise = clientFactory(clientId);\n\n\t\tthis.promises.set(clientId, promise);\n\n\t\treturn promise;\n\t}\n\n\tget allClients() {\n\t\treturn Array.from(this.promises.keys());\n\t}\n\n\tremove(clientId) {\n\t\tthis.promises.delete(clientId);\n\t}\n}\n\nconst topicSymbol = typeof Symbol !== 'undefined' ? Symbol('topic') : '@@topic';\n\nexport class MqttOverWSProvider extends AbstractPubSubProvider {\n\tprivate _clientsQueue = new ClientsQueue();\n\n\tconstructor(options: MqttProvidertOptions = {}) {\n\t\tsuper({ ...options, clientId: options.clientId || uuid() });\n\t}\n\n\tprotected get clientId() {\n\t\treturn this.options.clientId;\n\t}\n\n\tprotected get endpoint() {\n\t\treturn this.options.aws_pubsub_endpoint;\n\t}\n\n\tprotected get clientsQueue() {\n\t\treturn this._clientsQueue;\n\t}\n\n\tprotected get isSSLEnabled() {\n\t\treturn !this.options\n\t\t\t.aws_appsync_dangerously_connect_to_http_endpoint_for_testing;\n\t}\n\n\tprotected getTopicForValue(value) {\n\t\treturn typeof value === 'object' && value[topicSymbol];\n\t}\n\n\tgetProviderName() {\n\t\treturn 'MqttOverWSProvider';\n\t}\n\n\tpublic onDisconnect({ clientId, errorCode, ...args }) {\n\t\tif (errorCode !== 0) {\n\t\t\tlogger.warn(clientId, JSON.stringify({ errorCode, ...args }, null, 2));\n\n\t\t\tconst topicsToDelete = [];\n\t\t\tconst clientIdObservers = this._clientIdObservers.get(clientId);\n\t\t\tif (!clientIdObservers) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tclientIdObservers.forEach(observer => {\n\t\t\t\tobserver.error('Disconnected, error code: ' + errorCode);\n\t\t\t\t// removing observers for disconnected clientId\n\t\t\t\tthis._topicObservers.forEach((observerForTopic, observerTopic) => {\n\t\t\t\t\tobserverForTopic.delete(observer);\n\t\t\t\t\tif (observerForTopic.size === 0) {\n\t\t\t\t\t\ttopicsToDelete.push(observerTopic);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t// forgiving any trace of clientId\n\t\t\tthis._clientIdObservers.delete(clientId);\n\n\t\t\t// Removing topics that are not listen by an observer\n\t\t\ttopicsToDelete.forEach(topic => {\n\t\t\t\tthis._topicObservers.delete(topic);\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic async newClient({\n\t\turl,\n\t\tclientId,\n\t}: MqttProvidertOptions): Promise<any> {\n\t\tlogger.debug('Creating new MQTT client', clientId);\n\n\t\t// @ts-ignore\n\t\tconst client = new Paho.Client(url, clientId);\n\t\t// client.trace = (args) => logger.debug(clientId, JSON.stringify(args, null, 2));\n\t\tclient.onMessageArrived = ({\n\t\t\tdestinationName: topic,\n\t\t\tpayloadString: msg,\n\t\t}) => {\n\t\t\tthis._onMessage(topic, msg);\n\t\t};\n\t\tclient.onConnectionLost = ({ errorCode, ...args }) => {\n\t\t\tthis.onDisconnect({ clientId, errorCode, ...args });\n\t\t};\n\n\t\tawait new Promise((resolve, reject) => {\n\t\t\tclient.connect({\n\t\t\t\tuseSSL: this.isSSLEnabled,\n\t\t\t\tmqttVersion: 3,\n\t\t\t\tonSuccess: () => resolve(client),\n\t\t\t\tonFailure: reject,\n\t\t\t});\n\t\t});\n\n\t\treturn client;\n\t}\n\n\tprotected async connect(\n\t\tclientId: string,\n\t\toptions: MqttProvidertOptions = {}\n\t): Promise<any> {\n\t\treturn await this.clientsQueue.get(clientId, clientId =>\n\t\t\tthis.newClient({ ...options, clientId })\n\t\t);\n\t}\n\n\tprotected async disconnect(clientId: string): Promise<void> {\n\t\tconst client = await this.clientsQueue.get(clientId, () => null);\n\n\t\tif (client && client.isConnected()) {\n\t\t\tclient.disconnect();\n\t\t}\n\t\tthis.clientsQueue.remove(clientId);\n\t}\n\n\tasync publish(topics: string[] | string, msg: any) {\n\t\tconst targetTopics = ([] as string[]).concat(topics);\n\t\tconst message = JSON.stringify(msg);\n\n\t\tconst url = await this.endpoint;\n\n\t\tconst client = await this.connect(this.clientId, { url });\n\n\t\tlogger.debug('Publishing to topic(s)', targetTopics.join(','), message);\n\t\ttargetTopics.forEach(topic => client.send(topic, message));\n\t}\n\n\tprotected _topicObservers: Map<\n\t\tstring,\n\t\tSet<SubscriptionObserver<any>>\n\t> = new Map();\n\n\tprotected _clientIdObservers: Map<\n\t\tstring,\n\t\tSet<SubscriptionObserver<any>>\n\t> = new Map();\n\n\tprivate _onMessage(topic: string, msg: any) {\n\t\ttry {\n\t\t\tconst matchedTopicObservers = [];\n\t\t\tthis._topicObservers.forEach((observerForTopic, observerTopic) => {\n\t\t\t\tif (mqttTopicMatch(observerTopic, topic)) {\n\t\t\t\t\tmatchedTopicObservers.push(observerForTopic);\n\t\t\t\t}\n\t\t\t});\n\t\t\tconst parsedMessage = JSON.parse(msg);\n\n\t\t\tif (typeof parsedMessage === 'object') {\n\t\t\t\tparsedMessage[topicSymbol] = topic;\n\t\t\t}\n\n\t\t\tmatchedTopicObservers.forEach(observersForTopic => {\n\t\t\t\tobserversForTopic.forEach(observer => observer.next(parsedMessage));\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tlogger.warn('Error handling message', error, msg);\n\t\t}\n\t}\n\n\tsubscribe(\n\t\ttopics: string[] | string,\n\t\toptions: MqttProvidertOptions = {}\n\t): Observable<any> {\n\t\tconst targetTopics = ([] as string[]).concat(topics);\n\t\tlogger.debug('Subscribing to topic(s)', targetTopics.join(','));\n\n\t\treturn new Observable(observer => {\n\t\t\ttargetTopics.forEach(topic => {\n\t\t\t\t// this._topicObservers is used to notify the observers according to the topic received on the message\n\t\t\t\tlet observersForTopic = this._topicObservers.get(topic);\n\n\t\t\t\tif (!observersForTopic) {\n\t\t\t\t\tobserversForTopic = new Set();\n\n\t\t\t\t\tthis._topicObservers.set(topic, observersForTopic);\n\t\t\t\t}\n\n\t\t\t\tobserversForTopic.add(observer);\n\t\t\t});\n\n\t\t\t// @ts-ignore\n\t\t\tlet client: Paho.Client;\n\t\t\tconst { clientId = this.clientId } = options;\n\n\t\t\t// this._clientIdObservers is used to close observers when client gets disconnected\n\t\t\tlet observersForClientId = this._clientIdObservers.get(clientId);\n\t\t\tif (!observersForClientId) {\n\t\t\t\tobserversForClientId = new Set();\n\t\t\t}\n\t\t\tobserversForClientId.add(observer);\n\t\t\tthis._clientIdObservers.set(clientId, observersForClientId);\n\n\t\t\t(async () => {\n\t\t\t\tconst { url = await this.endpoint } = options;\n\n\t\t\t\ttry {\n\t\t\t\t\tclient = await this.connect(clientId, { url });\n\t\t\t\t\ttargetTopics.forEach(topic => {\n\t\t\t\t\t\tclient.subscribe(topic);\n\t\t\t\t\t});\n\t\t\t\t} catch (e) {\n\t\t\t\t\tobserver.error(e);\n\t\t\t\t}\n\t\t\t})();\n\n\t\t\treturn () => {\n\t\t\t\tlogger.debug('Unsubscribing from topic(s)', targetTopics.join(','));\n\n\t\t\t\tif (client) {\n\t\t\t\t\tthis._clientIdObservers.get(clientId).delete(observer);\n\t\t\t\t\t// No more observers per client => client not needed anymore\n\t\t\t\t\tif (this._clientIdObservers.get(clientId).size === 0) {\n\t\t\t\t\t\tthis.disconnect(clientId);\n\t\t\t\t\t\tthis._clientIdObservers.delete(clientId);\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetTopics.forEach(topic => {\n\t\t\t\t\t\tconst observersForTopic =\n\t\t\t\t\t\t\tthis._topicObservers.get(topic) ||\n\t\t\t\t\t\t\t(new Set() as Set<SubscriptionObserver<any>>);\n\n\t\t\t\t\t\tobserversForTopic.delete(observer);\n\n\t\t\t\t\t\t// if no observers exists for the topic, topic should be removed\n\t\t\t\t\t\tif (observersForTopic.size === 0) {\n\t\t\t\t\t\t\tthis._topicObservers.delete(topic);\n\t\t\t\t\t\t\tif (client.isConnected()) {\n\t\t\t\t\t\t\t\tclient.unsubscribe(topic);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\t\t\t};\n\t\t});\n\t}\n}\n","/*\n * Copyright 2017-2021 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport Observable, { ZenObservable } from 'zen-observable-ts';\nimport { GraphQLError } from 'graphql';\nimport * as url from 'url';\nimport { v4 as uuid } from 'uuid';\nimport { Buffer } from 'buffer';\nimport { ProvidertOptions } from '../types';\nimport {\n\tLogger,\n\tCredentials,\n\tSigner,\n\tHub,\n\tConstants,\n\tUSER_AGENT_HEADER,\n\tjitteredExponentialRetry,\n\tNonRetryableError,\n} from '@aws-amplify/core';\nimport Cache from '@aws-amplify/cache';\nimport Auth from '@aws-amplify/auth';\nimport { AbstractPubSubProvider } from './PubSubProvider';\nimport { CONTROL_MSG } from '../index';\n\nconst logger = new Logger('AWSAppSyncRealTimeProvider');\n\nconst AMPLIFY_SYMBOL = (typeof Symbol !== 'undefined' &&\ntypeof Symbol.for === 'function'\n\t? Symbol.for('amplify_default')\n\t: '@@amplify_default') as Symbol;\n\nconst dispatchApiEvent = (event: string, data: any, message: string) => {\n\tHub.dispatch('api', { event, data, message }, 'PubSub', AMPLIFY_SYMBOL);\n};\n\nconst MAX_DELAY_MS = 5000;\n\nconst NON_RETRYABLE_CODES = [400, 401, 403];\n\ntype ObserverQuery = {\n\tobserver: ZenObservable.SubscriptionObserver<any>;\n\tquery: string;\n\tvariables: object;\n\tsubscriptionState: SUBSCRIPTION_STATUS;\n\tsubscriptionReadyCallback?: Function;\n\tsubscriptionFailedCallback?: Function;\n\tstartAckTimeoutId?;\n};\n\nenum MESSAGE_TYPES {\n\t/**\n\t * Client -> Server message.\n\t * This message type is the first message after handshake and this will initialize AWS AppSync RealTime communication\n\t */\n\tGQL_CONNECTION_INIT = 'connection_init',\n\t/**\n\t * Server -> Client message\n\t * This message type is in case there is an issue with AWS AppSync RealTime when establishing connection\n\t */\n\tGQL_CONNECTION_ERROR = 'connection_error',\n\t/**\n\t * Server -> Client message.\n\t * This message type is for the ack response from AWS AppSync RealTime for GQL_CONNECTION_INIT message\n\t */\n\tGQL_CONNECTION_ACK = 'connection_ack',\n\t/**\n\t * Client -> Server message.\n\t * This message type is for register subscriptions with AWS AppSync RealTime\n\t */\n\tGQL_START = 'start',\n\t/**\n\t * Server -> Client message.\n\t * This message type is for the ack response from AWS AppSync RealTime for GQL_START message\n\t */\n\tGQL_START_ACK = 'start_ack',\n\t/**\n\t * Server -> Client message.\n\t * This message type is for subscription message from AWS AppSync RealTime\n\t */\n\tGQL_DATA = 'data',\n\t/**\n\t * Server -> Client message.\n\t * This message type helps the client to know is still receiving messages from AWS AppSync RealTime\n\t */\n\tGQL_CONNECTION_KEEP_ALIVE = 'ka',\n\t/**\n\t * Client -> Server message.\n\t * This message type is for unregister subscriptions with AWS AppSync RealTime\n\t */\n\tGQL_STOP = 'stop',\n\t/**\n\t * Server -> Client message.\n\t * This message type is for the ack response from AWS AppSync RealTime for GQL_STOP message\n\t */\n\tGQL_COMPLETE = 'complete',\n\t/**\n\t * Server -> Client message.\n\t * This message type is for sending error messages from AWS AppSync RealTime to the client\n\t */\n\tGQL_ERROR = 'error', // Server -> Client\n}\n\nenum SUBSCRIPTION_STATUS {\n\tPENDING,\n\tCONNECTED,\n\tFAILED,\n}\n\nenum SOCKET_STATUS {\n\tCLOSED,\n\tREADY,\n\tCONNECTING,\n}\n\nconst AWS_APPSYNC_REALTIME_HEADERS = {\n\taccept: 'application/json, text/javascript',\n\t'content-encoding': 'amz-1.0',\n\t'content-type': 'application/json; charset=UTF-8',\n};\n\n/**\n * Time in milleseconds to wait for GQL_CONNECTION_INIT message\n */\nconst CONNECTION_INIT_TIMEOUT = 15000;\n\n/**\n * Time in milleseconds to wait for GQL_START_ACK message\n */\nconst START_ACK_TIMEOUT = 15000;\n\n/**\n * Default Time in milleseconds to wait for GQL_CONNECTION_KEEP_ALIVE message\n */\nconst DEFAULT_KEEP_ALIVE_TIMEOUT = 5 * 60 * 1000;\n\nconst standardDomainPattern = /^https:\\/\\/\\w{26}\\.appsync\\-api\\.\\w{2}(?:(?:\\-\\w{2,})+)\\-\\d\\.amazonaws.com\\/graphql$/i;\n\nconst customDomainPath = '/realtime';\n\nexport class AWSAppSyncRealTimeProvider extends AbstractPubSubProvider {\n\tprivate awsRealTimeSocket: WebSocket;\n\tprivate socketStatus: SOCKET_STATUS = SOCKET_STATUS.CLOSED;\n\tprivate keepAliveTimeoutId;\n\tprivate keepAliveTimeout = DEFAULT_KEEP_ALIVE_TIMEOUT;\n\tprivate subscriptionObserverMap: Map<string, ObserverQuery> = new Map();\n\tprivate promiseArray: Array<{ res: Function; rej: Function }> = [];\n\n\tgetProviderName() {\n\t\treturn 'AWSAppSyncRealTimeProvider';\n\t}\n\n\tnewClient(): Promise<any> {\n\t\tthrow new Error('Not used here');\n\t}\n\n\tpublic async publish(_topics: string[] | string, _msg: any, _options?: any) {\n\t\tthrow new Error('Operation not supported');\n\t}\n\n\t// Check if url matches standard domain pattern\n\tprivate isCustomDomain(url: string): boolean {\n\t\treturn url.match(standardDomainPattern) === null;\n\t}\n\n\tsubscribe(\n\t\t_topics: string[] | string,\n\t\toptions?: ProvidertOptions\n\t): Observable<any> {\n\t\tconst { appSyncGraphqlEndpoint } = options;\n\n\t\treturn new Observable(observer => {\n\t\t\tif (!appSyncGraphqlEndpoint) {\n\t\t\t\tobserver.error({\n\t\t\t\t\terrors: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t...new GraphQLError(\n\t\t\t\t\t\t\t\t`Subscribe only available for AWS AppSync endpoint`\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t});\n\t\t\t\tobserver.complete();\n\t\t\t} else {\n\t\t\t\tconst subscriptionId = uuid();\n\t\t\t\tthis._startSubscriptionWithAWSAppSyncRealTime({\n\t\t\t\t\toptions,\n\t\t\t\t\tobserver,\n\t\t\t\t\tsubscriptionId,\n\t\t\t\t}).catch(err => {\n\t\t\t\t\tobserver.error({\n\t\t\t\t\t\terrors: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t...new GraphQLError(\n\t\t\t\t\t\t\t\t\t`${CONTROL_MSG.REALTIME_SUBSCRIPTION_INIT_ERROR}: ${err}`\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t});\n\t\t\t\t\tobserver.complete();\n\t\t\t\t});\n\n\t\t\t\treturn async () => {\n\t\t\t\t\t// Cleanup after unsubscribing or observer.complete was called after _startSubscriptionWithAWSAppSyncRealTime\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// Waiting that subscription has been connected before trying to unsubscribe\n\t\t\t\t\t\tawait this._waitForSubscriptionToBeConnected(subscriptionId);\n\n\t\t\t\t\t\tconst { subscriptionState } =\n\t\t\t\t\t\t\tthis.subscriptionObserverMap.get(subscriptionId) || {};\n\n\t\t\t\t\t\tif (!subscriptionState) {\n\t\t\t\t\t\t\t// subscription already unsubscribed\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (subscriptionState === SUBSCRIPTION_STATUS.CONNECTED) {\n\t\t\t\t\t\t\tthis._sendUnsubscriptionMessage(subscriptionId);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new Error('Subscription never connected');\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\tlogger.debug(`Error while unsubscribing ${err}`);\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tthis._removeSubscriptionObserver(subscriptionId);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected get isSSLEnabled() {\n\t\treturn !this.options\n\t\t\t.aws_appsync_dangerously_connect_to_http_endpoint_for_testing;\n\t}\n\tprivate async _startSubscriptionWithAWSAppSyncRealTime({\n\t\toptions,\n\t\tobserver,\n\t\tsubscriptionId,\n\t}) {\n\t\tconst {\n\t\t\tappSyncGraphqlEndpoint,\n\t\t\tauthenticationType,\n\t\t\tquery,\n\t\t\tvariables,\n\t\t\tapiKey,\n\t\t\tregion,\n\t\t\tgraphql_headers = () => ({}),\n\t\t\tadditionalHeaders = {},\n\t\t} = options;\n\n\t\tconst subscriptionState: SUBSCRIPTION_STATUS = SUBSCRIPTION_STATUS.PENDING;\n\t\tconst data = {\n\t\t\tquery,\n\t\t\tvariables,\n\t\t};\n\t\t// Having a subscription id map will make it simple to forward messages received\n\t\tthis.subscriptionObserverMap.set(subscriptionId, {\n\t\t\tobserver,\n\t\t\tquery,\n\t\t\tvariables,\n\t\t\tsubscriptionState,\n\t\t\tstartAckTimeoutId: null,\n\t\t});\n\n\t\t// Preparing payload for subscription message\n\n\t\tconst dataString = JSON.stringify(data);\n\t\tconst headerObj = {\n\t\t\t...(await this._awsRealTimeHeaderBasedAuth({\n\t\t\t\tapiKey,\n\t\t\t\tappSyncGraphqlEndpoint,\n\t\t\t\tauthenticationType,\n\t\t\t\tpayload: dataString,\n\t\t\t\tcanonicalUri: '',\n\t\t\t\tregion,\n\t\t\t\tadditionalHeaders,\n\t\t\t})),\n\t\t\t...(await graphql_headers()),\n\t\t\t...additionalHeaders,\n\t\t\t[USER_AGENT_HEADER]: Constants.userAgent,\n\t\t};\n\n\t\tconst subscriptionMessage = {\n\t\t\tid: subscriptionId,\n\t\t\tpayload: {\n\t\t\t\tdata: dataString,\n\t\t\t\textensions: {\n\t\t\t\t\tauthorization: {\n\t\t\t\t\t\t...headerObj,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\ttype: MESSAGE_TYPES.GQL_START,\n\t\t};\n\n\t\tconst stringToAWSRealTime = JSON.stringify(subscriptionMessage);\n\n\t\ttry {\n\t\t\tawait this._initializeWebSocketConnection({\n\t\t\t\tapiKey,\n\t\t\t\tappSyncGraphqlEndpoint,\n\t\t\t\tauthenticationType,\n\t\t\t\tregion,\n\t\t\t\tadditionalHeaders,\n\t\t\t});\n\t\t} catch (err) {\n\t\t\tlogger.debug({ err });\n\t\t\tconst { message = '' } = err;\n\t\t\tobserver.error({\n\t\t\t\terrors: [\n\t\t\t\t\t{\n\t\t\t\t\t\t...new GraphQLError(`${CONTROL_MSG.CONNECTION_FAILED}: ${message}`),\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t});\n\t\t\tobserver.complete();\n\n\t\t\tconst { subscriptionFailedCallback } =\n\t\t\t\tthis.subscriptionObserverMap.get(subscriptionId) || {};\n\n\t\t\t// Notify concurrent unsubscription\n\t\t\tif (typeof subscriptionFailedCallback === 'function') {\n\t\t\t\tsubscriptionFailedCallback();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// Potential race condition can occur when unsubscribe is called during _initializeWebSocketConnection.\n\t\t// E.g.unsubscribe gets invoked prior to finishing WebSocket handshake or START_ACK.\n\t\t// Both subscriptionFailedCallback and subscriptionReadyCallback are used to synchronized this.\n\n\t\tconst {\n\t\t\tsubscriptionFailedCallback,\n\t\t\tsubscriptionReadyCallback,\n\t\t} = this.subscriptionObserverMap.get(subscriptionId);\n\n\t\t// This must be done before sending the message in order to be listening immediately\n\t\tthis.subscriptionObserverMap.set(subscriptionId, {\n\t\t\tobserver,\n\t\t\tsubscriptionState,\n\t\t\tvariables,\n\t\t\tquery,\n\t\t\tsubscriptionReadyCallback,\n\t\t\tsubscriptionFailedCallback,\n\t\t\tstartAckTimeoutId: setTimeout(() => {\n\t\t\t\tthis._timeoutStartSubscriptionAck.call(this, subscriptionId);\n\t\t\t}, START_ACK_TIMEOUT),\n\t\t});\n\t\tif (this.awsRealTimeSocket) {\n\t\t\tthis.awsRealTimeSocket.send(stringToAWSRealTime);\n\t\t}\n\t}\n\n\t// Waiting that subscription has been connected before trying to unsubscribe\n\tprivate async _waitForSubscriptionToBeConnected(subscriptionId) {\n\t\tconst { subscriptionState } = this.subscriptionObserverMap.get(\n\t\t\tsubscriptionId\n\t\t);\n\t\t// This in case unsubscribe is invoked before sending start subscription message\n\t\tif (subscriptionState === SUBSCRIPTION_STATUS.PENDING) {\n\t\t\treturn new Promise((res, rej) => {\n\t\t\t\tconst {\n\t\t\t\t\tobserver,\n\t\t\t\t\tsubscriptionState,\n\t\t\t\t\tvariables,\n\t\t\t\t\tquery,\n\t\t\t\t} = this.subscriptionObserverMap.get(subscriptionId);\n\t\t\t\tthis.subscriptionObserverMap.set(subscriptionId, {\n\t\t\t\t\tobserver,\n\t\t\t\t\tsubscriptionState,\n\t\t\t\t\tvariables,\n\t\t\t\t\tquery,\n\t\t\t\t\tsubscriptionReadyCallback: res,\n\t\t\t\t\tsubscriptionFailedCallback: rej,\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate _sendUnsubscriptionMessage(subscriptionId) {\n\t\ttry {\n\t\t\tif (\n\t\t\t\tthis.awsRealTimeSocket &&\n\t\t\t\tthis.awsRealTimeSocket.readyState === WebSocket.OPEN &&\n\t\t\t\tthis.socketStatus === SOCKET_STATUS.READY\n\t\t\t) {\n\t\t\t\t// Preparing unsubscribe message to stop receiving messages for that subscription\n\t\t\t\tconst unsubscribeMessage = {\n\t\t\t\t\tid: subscriptionId,\n\t\t\t\t\ttype: MESSAGE_TYPES.GQL_STOP,\n\t\t\t\t};\n\t\t\t\tconst stringToAWSRealTime = JSON.stringify(unsubscribeMessage);\n\t\t\t\tthis.awsRealTimeSocket.send(stringToAWSRealTime);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\t// If GQL_STOP is not sent because of disconnection issue, then there is nothing the client can do\n\t\t\tlogger.debug({ err });\n\t\t}\n\t}\n\n\tprivate _removeSubscriptionObserver(subscriptionId) {\n\t\tthis.subscriptionObserverMap.delete(subscriptionId);\n\n\t\t// Verifying 1000ms after removing subscription in case there are new subscription unmount/mount\n\t\tsetTimeout(this._closeSocketIfRequired.bind(this), 1000);\n\t}\n\n\tprivate _closeSocketIfRequired() {\n\t\tif (this.subscriptionObserverMap.size > 0) {\n\t\t\t// Active subscriptions on the WebSocket\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.awsRealTimeSocket) {\n\t\t\tthis.socketStatus = SOCKET_STATUS.CLOSED;\n\t\t\treturn;\n\t\t}\n\t\tif (this.awsRealTimeSocket.bufferedAmount > 0) {\n\t\t\t// Still data on the WebSocket\n\t\t\tsetTimeout(this._closeSocketIfRequired.bind(this), 1000);\n\t\t} else {\n\t\t\tlogger.debug('closing WebSocket...');\n\t\t\tclearTimeout(this.keepAliveTimeoutId);\n\t\t\tconst tempSocket = this.awsRealTimeSocket;\n\t\t\t// Cleaning callbacks to avoid race condition, socket still exists\n\t\t\ttempSocket.onclose = undefined;\n\t\t\ttempSocket.onerror = undefined;\n\t\t\ttempSocket.close(1000);\n\t\t\tthis.awsRealTimeSocket = null;\n\t\t\tthis.socketStatus = SOCKET_STATUS.CLOSED;\n\t\t}\n\t}\n\n\tprivate _handleIncomingSubscriptionMessage(message: MessageEvent) {\n\t\tlogger.debug(\n\t\t\t`subscription message from AWS AppSync RealTime: ${message.data}`\n\t\t);\n\t\tconst { id = '', payload, type } = JSON.parse(message.data);\n\t\tconst {\n\t\t\tobserver = null,\n\t\t\tquery = '',\n\t\t\tvariables = {},\n\t\t\tstartAckTimeoutId,\n\t\t\tsubscriptionReadyCallback,\n\t\t\tsubscriptionFailedCallback,\n\t\t} = this.subscriptionObserverMap.get(id) || {};\n\n\t\tlogger.debug({ id, observer, query, variables });\n\n\t\tif (type === MESSAGE_TYPES.GQL_DATA && payload && payload.data) {\n\t\t\tif (observer) {\n\t\t\t\tobserver.next(payload);\n\t\t\t} else {\n\t\t\t\tlogger.debug(`observer not found for id: ${id}`);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (type === MESSAGE_TYPES.GQL_START_ACK) {\n\t\t\tlogger.debug(\n\t\t\t\t`subscription ready for ${JSON.stringify({ query, variables })}`\n\t\t\t);\n\t\t\tif (typeof subscriptionReadyCallback === 'function') {\n\t\t\t\tsubscriptionReadyCallback();\n\t\t\t}\n\t\t\tclearTimeout(startAckTimeoutId);\n\t\t\tdispatchApiEvent(\n\t\t\t\tCONTROL_MSG.SUBSCRIPTION_ACK,\n\t\t\t\t{ query, variables },\n\t\t\t\t'Connection established for subscription'\n\t\t\t);\n\t\t\tconst subscriptionState = SUBSCRIPTION_STATUS.CONNECTED;\n\t\t\tthis.subscriptionObserverMap.set(id, {\n\t\t\t\tobserver,\n\t\t\t\tquery,\n\t\t\t\tvariables,\n\t\t\t\tstartAckTimeoutId: null,\n\t\t\t\tsubscriptionState,\n\t\t\t\tsubscriptionReadyCallback,\n\t\t\t\tsubscriptionFailedCallback,\n\t\t\t});\n\n\t\t\t// TODO: emit event on hub but it requires to store the id first\n\t\t\treturn;\n\t\t}\n\n\t\tif (type === MESSAGE_TYPES.GQL_CONNECTION_KEEP_ALIVE) {\n\t\t\tclearTimeout(this.keepAliveTimeoutId);\n\t\t\tthis.keepAliveTimeoutId = setTimeout(\n\t\t\t\tthis._errorDisconnect.bind(this, CONTROL_MSG.TIMEOUT_DISCONNECT),\n\t\t\t\tthis.keepAliveTimeout\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tif (type === MESSAGE_TYPES.GQL_ERROR) {\n\t\t\tconst subscriptionState = SUBSCRIPTION_STATUS.FAILED;\n\t\t\tthis.subscriptionObserverMap.set(id, {\n\t\t\t\tobserver,\n\t\t\t\tquery,\n\t\t\t\tvariables,\n\t\t\t\tstartAckTimeoutId,\n\t\t\t\tsubscriptionReadyCallback,\n\t\t\t\tsubscriptionFailedCallback,\n\t\t\t\tsubscriptionState,\n\t\t\t});\n\n\t\t\tobserver.error({\n\t\t\t\terrors: [\n\t\t\t\t\t{\n\t\t\t\t\t\t...new GraphQLError(\n\t\t\t\t\t\t\t`${CONTROL_MSG.CONNECTION_FAILED}: ${JSON.stringify(payload)}`\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t});\n\t\t\tclearTimeout(startAckTimeoutId);\n\n\t\t\tobserver.complete();\n\t\t\tif (typeof subscriptionFailedCallback === 'function') {\n\t\t\t\tsubscriptionFailedCallback();\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _errorDisconnect(msg: string) {\n\t\tlogger.debug(`Disconnect error: ${msg}`);\n\t\tthis.subscriptionObserverMap.forEach(({ observer }) => {\n\t\t\tif (observer && !observer.closed) {\n\t\t\t\tobserver.error({\n\t\t\t\t\terrors: [{ ...new GraphQLError(msg) }],\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\tthis.subscriptionObserverMap.clear();\n\t\tif (this.awsRealTimeSocket) {\n\t\t\tthis.awsRealTimeSocket.close();\n\t\t}\n\n\t\tthis.socketStatus = SOCKET_STATUS.CLOSED;\n\t}\n\n\tprivate _timeoutStartSubscriptionAck(subscriptionId) {\n\t\tconst { observer, query, variables } =\n\t\t\tthis.subscriptionObserverMap.get(subscriptionId) || {};\n\t\tif (!observer) {\n\t\t\treturn;\n\t\t}\n\t\tthis.subscriptionObserverMap.set(subscriptionId, {\n\t\t\tobserver,\n\t\t\tquery,\n\t\t\tvariables,\n\t\t\tsubscriptionState: SUBSCRIPTION_STATUS.FAILED,\n\t\t});\n\n\t\tif (observer && !observer.closed) {\n\t\t\tobserver.error({\n\t\t\t\terrors: [\n\t\t\t\t\t{\n\t\t\t\t\t\t...new GraphQLError(\n\t\t\t\t\t\t\t`Subscription timeout ${JSON.stringify({\n\t\t\t\t\t\t\t\tquery,\n\t\t\t\t\t\t\t\tvariables,\n\t\t\t\t\t\t\t})}`\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t});\n\t\t\t// Cleanup will be automatically executed\n\t\t\tobserver.complete();\n\t\t}\n\t\tlogger.debug(\n\t\t\t'timeoutStartSubscription',\n\t\t\tJSON.stringify({ query, variables })\n\t\t);\n\t}\n\n\tprivate _initializeWebSocketConnection({\n\t\tappSyncGraphqlEndpoint,\n\t\tauthenticationType,\n\t\tapiKey,\n\t\tregion,\n\t\tadditionalHeaders,\n\t}) {\n\t\tif (this.socketStatus === SOCKET_STATUS.READY) {\n\t\t\treturn;\n\t\t}\n\t\treturn new Promise(async (res, rej) => {\n\t\t\tthis.promiseArray.push({ res, rej });\n\n\t\t\tif (this.socketStatus === SOCKET_STATUS.CLOSED) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.socketStatus = SOCKET_STATUS.CONNECTING;\n\n\t\t\t\t\tconst payloadString = '{}';\n\t\t\t\t\tconst headerString = JSON.stringify(\n\t\t\t\t\t\tawait this._awsRealTimeHeaderBasedAuth({\n\t\t\t\t\t\t\tauthenticationType,\n\t\t\t\t\t\t\tpayload: payloadString,\n\t\t\t\t\t\t\tcanonicalUri: '/connect',\n\t\t\t\t\t\t\tapiKey,\n\t\t\t\t\t\t\tappSyncGraphqlEndpoint,\n\t\t\t\t\t\t\tregion,\n\t\t\t\t\t\t\tadditionalHeaders,\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t\tconst headerQs = Buffer.from(headerString).toString('base64');\n\n\t\t\t\t\tconst payloadQs = Buffer.from(payloadString).toString('base64');\n\n\t\t\t\t\tlet discoverableEndpoint = appSyncGraphqlEndpoint;\n\n\t\t\t\t\tif (this.isCustomDomain(discoverableEndpoint)) {\n\t\t\t\t\t\tdiscoverableEndpoint = discoverableEndpoint.concat(\n\t\t\t\t\t\t\tcustomDomainPath\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdiscoverableEndpoint = discoverableEndpoint.replace('appsync-api', 'appsync-realtime-api').replace('gogi-beta', 'grt-beta');\n\t\t\t\t\t}\n\n\t\t\t\t    // Creating websocket url with required query strings\n\t\t\t\t\tconst protocol = this.isSSLEnabled ? 'wss://' : 'ws://';\n\t\t\t\t\tdiscoverableEndpoint = discoverableEndpoint\n\t\t\t\t\t\t.replace('https://', protocol)\n\t\t\t\t\t\t.replace('http://', protocol);\n\n\t\t\t\t\tconst awsRealTimeUrl = `${discoverableEndpoint}?header=${headerQs}&payload=${payloadQs}`;\n\n\t\t\t\t\tawait this._initializeRetryableHandshake({ awsRealTimeUrl });\n\n\t\t\t\t\tthis.promiseArray.forEach(({ res }) => {\n\t\t\t\t\t\tlogger.debug('Notifying connection successful');\n\t\t\t\t\t\tres();\n\t\t\t\t\t});\n\t\t\t\t\tthis.socketStatus = SOCKET_STATUS.READY;\n\t\t\t\t\tthis.promiseArray = [];\n\t\t\t\t} catch (err) {\n\t\t\t\t\tthis.promiseArray.forEach(({ rej }) => rej(err));\n\t\t\t\t\tthis.promiseArray = [];\n\t\t\t\t\tif (\n\t\t\t\t\t\tthis.awsRealTimeSocket &&\n\t\t\t\t\t\tthis.awsRealTimeSocket.readyState === WebSocket.OPEN\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.awsRealTimeSocket.close(3001);\n\t\t\t\t\t}\n\t\t\t\t\tthis.awsRealTimeSocket = null;\n\t\t\t\t\tthis.socketStatus = SOCKET_STATUS.CLOSED;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate async _initializeRetryableHandshake({ awsRealTimeUrl }) {\n\t\tlogger.debug(`Initializaling retryable Handshake`);\n\t\tawait jitteredExponentialRetry(\n\t\t\tthis._initializeHandshake.bind(this),\n\t\t\t[{ awsRealTimeUrl }],\n\t\t\tMAX_DELAY_MS\n\t\t);\n\t}\n\n\tprivate async _initializeHandshake({ awsRealTimeUrl }) {\n\t\tlogger.debug(`Initializing handshake ${awsRealTimeUrl}`);\n\t\t// Because connecting the socket is async, is waiting until connection is open\n\t\t// Step 1: connect websocket\n\t\ttry {\n\t\t\tawait (() => {\n\t\t\t\treturn new Promise<void>((res, rej) => {\n\t\t\t\t\tconst newSocket = new WebSocket(awsRealTimeUrl, 'graphql-ws');\n\t\t\t\t\tnewSocket.onerror = () => {\n\t\t\t\t\t\tlogger.debug(`WebSocket connection error`);\n\t\t\t\t\t};\n\t\t\t\t\tnewSocket.onclose = () => {\n\t\t\t\t\t\trej(new Error('Connection handshake error'));\n\t\t\t\t\t};\n\t\t\t\t\tnewSocket.onopen = () => {\n\t\t\t\t\t\tthis.awsRealTimeSocket = newSocket;\n\t\t\t\t\t\treturn res();\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t})();\n\n\t\t\t// Step 2: wait for ack from AWS AppSyncReaTime after sending init\n\t\t\tawait (() => {\n\t\t\t\treturn new Promise((res, rej) => {\n\t\t\t\t\tlet ackOk = false;\n\t\t\t\t\tthis.awsRealTimeSocket.onerror = error => {\n\t\t\t\t\t\tlogger.debug(`WebSocket error ${JSON.stringify(error)}`);\n\t\t\t\t\t};\n\t\t\t\t\tthis.awsRealTimeSocket.onclose = event => {\n\t\t\t\t\t\tlogger.debug(`WebSocket closed ${event.reason}`);\n\t\t\t\t\t\trej(new Error(JSON.stringify(event)));\n\t\t\t\t\t};\n\n\t\t\t\t\tthis.awsRealTimeSocket.onmessage = (message: MessageEvent) => {\n\t\t\t\t\t\tlogger.debug(\n\t\t\t\t\t\t\t`subscription message from AWS AppSyncRealTime: ${message.data} `\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst data = JSON.parse(message.data);\n\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\t\tconnectionTimeoutMs = DEFAULT_KEEP_ALIVE_TIMEOUT,\n\t\t\t\t\t\t\t} = {},\n\t\t\t\t\t\t} = data;\n\t\t\t\t\t\tif (type === MESSAGE_TYPES.GQL_CONNECTION_ACK) {\n\t\t\t\t\t\t\tackOk = true;\n\t\t\t\t\t\t\tthis.keepAliveTimeout = connectionTimeoutMs;\n\t\t\t\t\t\t\tthis.awsRealTimeSocket.onmessage = this._handleIncomingSubscriptionMessage.bind(\n\t\t\t\t\t\t\t\tthis\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tthis.awsRealTimeSocket.onerror = err => {\n\t\t\t\t\t\t\t\tlogger.debug(err);\n\t\t\t\t\t\t\t\tthis._errorDisconnect(CONTROL_MSG.CONNECTION_CLOSED);\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tthis.awsRealTimeSocket.onclose = event => {\n\t\t\t\t\t\t\t\tlogger.debug(`WebSocket closed ${event.reason}`);\n\t\t\t\t\t\t\t\tthis._errorDisconnect(CONTROL_MSG.CONNECTION_CLOSED);\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tres('Cool, connected to AWS AppSyncRealTime');\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (type === MESSAGE_TYPES.GQL_CONNECTION_ERROR) {\n\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\t\t\terrors: [{ errorType = '', errorCode = 0 } = {}] = [],\n\t\t\t\t\t\t\t\t} = {},\n\t\t\t\t\t\t\t} = data;\n\n\t\t\t\t\t\t\trej({ errorType, errorCode });\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\tconst gqlInit = {\n\t\t\t\t\t\ttype: MESSAGE_TYPES.GQL_CONNECTION_INIT,\n\t\t\t\t\t};\n\t\t\t\t\tthis.awsRealTimeSocket.send(JSON.stringify(gqlInit));\n\n\t\t\t\t\tfunction checkAckOk() {\n\t\t\t\t\t\tif (!ackOk) {\n\t\t\t\t\t\t\trej(\n\t\t\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t\t\t`Connection timeout: ack from AWSRealTime was not received on ${CONNECTION_INIT_TIMEOUT} ms`\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tsetTimeout(checkAckOk.bind(this), CONNECTION_INIT_TIMEOUT);\n\t\t\t\t});\n\t\t\t})();\n\t\t} catch (err) {\n\t\t\tconst { errorType, errorCode } = err;\n\n\t\t\tif (NON_RETRYABLE_CODES.includes(errorCode)) {\n\t\t\t\tthrow new NonRetryableError(errorType);\n\t\t\t} else if (errorType) {\n\t\t\t\tthrow new Error(errorType);\n\t\t\t} else {\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async _awsRealTimeHeaderBasedAuth({\n\t\tauthenticationType,\n\t\tpayload,\n\t\tcanonicalUri,\n\t\tappSyncGraphqlEndpoint,\n\t\tapiKey,\n\t\tregion,\n\t\tadditionalHeaders,\n\t}): Promise<any> {\n\t\tconst headerHandler = {\n\t\t\tAPI_KEY: this._awsRealTimeApiKeyHeader.bind(this),\n\t\t\tAWS_IAM: this._awsRealTimeIAMHeader.bind(this),\n\t\t\tOPENID_CONNECT: this._awsRealTimeOPENIDHeader.bind(this),\n\t\t\tAMAZON_COGNITO_USER_POOLS: this._awsRealTimeCUPHeader.bind(this),\n\t\t\tAWS_LAMBDA: this._customAuthHeader,\n\t\t};\n\n\t\tconst handler = headerHandler[authenticationType];\n\n\t\tif (typeof handler !== 'function') {\n\t\t\tlogger.debug(`Authentication type ${authenticationType} not supported`);\n\t\t\treturn '';\n\t\t}\n\n\t\tconst { host } = url.parse(appSyncGraphqlEndpoint);\n\n\t\tconst result = await handler({\n\t\t\tpayload,\n\t\t\tcanonicalUri,\n\t\t\tappSyncGraphqlEndpoint,\n\t\t\tapiKey,\n\t\t\tregion,\n\t\t\thost,\n\t\t\tadditionalHeaders,\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tprivate async _awsRealTimeCUPHeader({ host }) {\n\t\tconst session = await Auth.currentSession();\n\t\treturn {\n\t\t\tAuthorization: session.getAccessToken().getJwtToken(),\n\t\t\thost,\n\t\t};\n\t}\n\n\tprivate async _awsRealTimeOPENIDHeader({ host }) {\n\t\tlet token;\n\t\t// backwards compatibility\n\t\tconst federatedInfo = await Cache.getItem('federatedInfo');\n\t\tif (federatedInfo) {\n\t\t\ttoken = federatedInfo.token;\n\t\t} else {\n\t\t\tconst currentUser = await Auth.currentAuthenticatedUser();\n\t\t\tif (currentUser) {\n\t\t\t\ttoken = currentUser.token;\n\t\t\t}\n\t\t}\n\t\tif (!token) {\n\t\t\tthrow new Error('No federated jwt');\n\t\t}\n\t\treturn {\n\t\t\tAuthorization: token,\n\t\t\thost,\n\t\t};\n\t}\n\n\tprivate async _awsRealTimeApiKeyHeader({ apiKey, host }) {\n\t\tconst dt = new Date();\n\t\tconst dtStr = dt.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n\n\t\treturn {\n\t\t\thost,\n\t\t\t'x-amz-date': dtStr,\n\t\t\t'x-api-key': apiKey,\n\t\t};\n\t}\n\n\tprivate async _awsRealTimeIAMHeader({\n\t\tpayload,\n\t\tcanonicalUri,\n\t\tappSyncGraphqlEndpoint,\n\t\tregion,\n\t}) {\n\t\tconst endpointInfo = {\n\t\t\tregion,\n\t\t\tservice: 'appsync',\n\t\t};\n\n\t\tconst credentialsOK = await this._ensureCredentials();\n\t\tif (!credentialsOK) {\n\t\t\tthrow new Error('No credentials');\n\t\t}\n\t\tconst creds = await Credentials.get().then(credentials => ({\n\t\t\tsecret_key: credentials.secretAccessKey,\n\t\t\taccess_key: credentials.accessKeyId,\n\t\t\tsession_token: credentials.sessionToken,\n\t\t}));\n\n\t\tconst request = {\n\t\t\turl: `${appSyncGraphqlEndpoint}${canonicalUri}`,\n\t\t\tdata: payload,\n\t\t\tmethod: 'POST',\n\t\t\theaders: { ...AWS_APPSYNC_REALTIME_HEADERS },\n\t\t};\n\n\t\tconst signed_params = Signer.sign(request, creds, endpointInfo);\n\t\treturn signed_params.headers;\n\t}\n\n\tprivate _customAuthHeader({ host, additionalHeaders }) {\n\t\tif (!additionalHeaders.Authorization) {\n\t\t\tthrow new Error('No auth token specified');\n\t\t}\n\n\t\treturn {\n\t\t\tAuthorization: additionalHeaders.Authorization,\n\t\t\thost,\n\t\t};\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_ensureCredentials() {\n\t\treturn Credentials.get()\n\t\t\t.then(credentials => {\n\t\t\t\tif (!credentials) return false;\n\t\t\t\tconst cred = Credentials.shear(credentials);\n\t\t\t\tlogger.debug('set credentials for AWSAppSyncRealTimeProvider', cred);\n\n\t\t\t\treturn true;\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tlogger.warn('ensure credentials error', err);\n\t\t\t\treturn false;\n\t\t\t});\n\t}\n}\n","/*\n * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { Client } from 'paho-mqtt';\nimport Observable from 'zen-observable-ts';\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\n\nimport { MqttOverWSProvider } from './MqttOverWSProvider';\n\nconst logger = new Logger('AWSAppSyncProvider');\n\nexport class AWSAppSyncProvider extends MqttOverWSProvider {\n\tprotected get endpoint() {\n\t\tthrow new Error('Not supported');\n\t}\n\n\tgetProviderName() {\n\t\treturn 'AWSAppSyncProvider';\n\t}\n\n\tpublic async publish(topics: string[] | string, msg: any, options?: any) {\n\t\tthrow new Error('Operation not supported');\n\t}\n\n\tprivate _cleanUp(clientId: string) {\n\t\tconst topicsForClient = Array.from(this._topicClient.entries())\n\t\t\t.filter(([, c]) => c.clientId === clientId)\n\t\t\t.map(([t]) => t);\n\n\t\ttopicsForClient.forEach(t => this._cleanUpForTopic(t));\n\t}\n\n\tprivate _cleanUpForTopic(topic) {\n\t\tthis._topicClient.delete(topic);\n\t\tthis._topicAlias.delete(topic);\n\t}\n\n\tpublic onDisconnect({ clientId, errorCode, ...args }) {\n\t\tif (errorCode !== 0) {\n\t\t\tconst topicsForClient = Array.from(this._topicClient.entries())\n\t\t\t\t.filter(([, c]) => c.clientId === clientId)\n\t\t\t\t.map(([t]) => t);\n\n\t\t\ttopicsForClient.forEach(topic => {\n\t\t\t\tif (this._topicObservers.has(topic)) {\n\t\t\t\t\tthis._topicObservers.get(topic).forEach(obs => {\n\t\t\t\t\t\tif (!obs.closed) {\n\t\t\t\t\t\t\tobs.error(args);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tthis._topicObservers.delete(topic);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis._cleanUp(clientId);\n\t\t}\n\t}\n\n\tprivate _topicClient: Map<string, Client> = new Map();\n\n\tprivate _topicAlias: Map<string, string> = new Map();\n\n\tprotected async disconnect(clientId: string): Promise<void> {\n\t\tconst client = await this.clientsQueue.get(clientId, () => null);\n\n\t\tawait super.disconnect(clientId);\n\n\t\tthis._cleanUp(clientId);\n\t}\n\n\tsubscribe(topics: string[] | string, options: any = {}): Observable<any> {\n\t\tconst result = new Observable<any>(observer => {\n\t\t\tconst targetTopics = ([] as string[]).concat(topics);\n\t\t\tlogger.debug('Subscribing to topic(s)', targetTopics.join(','));\n\n\t\t\t(async () => {\n\t\t\t\t// Add these topics to map\n\t\t\t\ttargetTopics.forEach(t => {\n\t\t\t\t\tif (!this._topicObservers.has(t)) {\n\t\t\t\t\t\tthis._topicObservers.set(t, new Set());\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._topicObservers.get(t).add(observer);\n\t\t\t\t});\n\n\t\t\t\tconst { mqttConnections = [], newSubscriptions } = options;\n\n\t\t\t\t// creates a map of {\"topic\": \"alias\"}\n\t\t\t\tconst newAliases = Object.entries(\n\t\t\t\t\tnewSubscriptions\n\t\t\t\t).map(([alias, v]: [string, { topic: string }]) => [v.topic, alias]);\n\n\t\t\t\t// Merge new aliases with old ones\n\t\t\t\tthis._topicAlias = new Map([\n\t\t\t\t\t...Array.from(this._topicAlias.entries()),\n\t\t\t\t\t...(newAliases as [string, string][]),\n\t\t\t\t]);\n\n\t\t\t\t// group by urls\n\t\t\t\tconst map: [\n\t\t\t\t\tstring,\n\t\t\t\t\t{ url: string; topics: Set<string> }\n\t\t\t\t][] = Object.entries(\n\t\t\t\t\ttargetTopics.reduce((acc, elem) => {\n\t\t\t\t\t\tconst connectionInfoForTopic = mqttConnections.find(\n\t\t\t\t\t\t\tc => c.topics.indexOf(elem) > -1\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (connectionInfoForTopic) {\n\t\t\t\t\t\t\tconst { client: clientId, url } = connectionInfoForTopic;\n\n\t\t\t\t\t\t\tif (!acc[clientId]) {\n\t\t\t\t\t\t\t\tacc[clientId] = {\n\t\t\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\t\t\ttopics: new Set(),\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tacc[clientId].topics.add(elem);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn acc;\n\t\t\t\t\t}, {})\n\t\t\t\t);\n\n\t\t\t\t// reconnect everything we have in the map\n\t\t\t\tawait Promise.all(\n\t\t\t\t\tmap.map(async ([clientId, { url, topics }]) => {\n\t\t\t\t\t\t// connect to new client\n\t\t\t\t\t\tlet client = null;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tclient = await this.connect(clientId, {\n\t\t\t\t\t\t\t\tclientId,\n\t\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\tobserver.error({ message: 'Failed to connect', error: err });\n\t\t\t\t\t\t\tobserver.complete();\n\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// subscribe to all topics for this client\n\t\t\t\t\t\t// store topic-client mapping\n\t\t\t\t\t\ttopics.forEach(topic => {\n\t\t\t\t\t\t\tif (client.isConnected()) {\n\t\t\t\t\t\t\t\tclient.subscribe(topic);\n\n\t\t\t\t\t\t\t\tthis._topicClient.set(topic, client);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn client;\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t})();\n\n\t\t\treturn () => {\n\t\t\t\tlogger.debug('Unsubscribing from topic(s)', targetTopics.join(','));\n\n\t\t\t\ttargetTopics.forEach(t => {\n\t\t\t\t\tconst client = this._topicClient.get(t);\n\n\t\t\t\t\tif (client && client.isConnected()) {\n\t\t\t\t\t\tclient.unsubscribe(t);\n\t\t\t\t\t\tthis._topicClient.delete(t);\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t!Array.from(this._topicClient.values()).some(c => c === client)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthis.disconnect(client.clientId);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._topicObservers.delete(t);\n\t\t\t\t});\n\t\t\t};\n\t\t});\n\n\t\treturn Observable.from(result).map(value => {\n\t\t\tconst topic = this.getTopicForValue(value);\n\t\t\tconst alias = this._topicAlias.get(topic);\n\n\t\t\tvalue.data = Object.entries(value.data).reduce(\n\t\t\t\t(obj, [origKey, val]) => (\n\t\t\t\t\t(obj[(alias || origKey) as string] = val), obj\n\t\t\t\t),\n\t\t\t\t{}\n\t\t\t);\n\n\t\t\treturn value;\n\t\t});\n\t}\n}\n","/*\r\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\r\n * the License. A copy of the License is located at\r\n *\r\n *     http://aws.amazon.com/apache2.0/\r\n *\r\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\r\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\r\n * and limitations under the License.\r\n */\r\n\r\nimport { Auth } from './Auth';\r\nimport { CognitoHostedUIIdentityProvider, SignUpParams } from './types/Auth';\r\nimport {\r\n\tCognitoUser,\r\n\tCookieStorage,\r\n\tappendToCognitoUserAgent,\r\n} from 'amazon-cognito-identity-js';\r\nimport { AuthErrorStrings } from './common/AuthErrorStrings';\r\n\r\n/**\r\n * @deprecated use named import\r\n */\r\nexport default Auth;\r\nexport {\r\n\tAuth,\r\n\tCognitoUser,\r\n\tCookieStorage,\r\n\tCognitoHostedUIIdentityProvider,\r\n\tSignUpParams,\r\n\tappendToCognitoUserAgent,\r\n\tAuthErrorStrings,\r\n};\r\n","/*\n * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { PubSub } from './PubSub';\n\nexport * from './Providers';\n\nenum CONTROL_MSG {\n\tCONNECTION_CLOSED = 'Connection closed',\n\tCONNECTION_FAILED = 'Connection failed',\n\tREALTIME_SUBSCRIPTION_INIT_ERROR = 'AppSync Realtime subscription init error',\n\tSUBSCRIPTION_ACK = 'Subscription ack',\n\tTIMEOUT_DISCONNECT = 'Timeout disconnect',\n}\n\nexport { PubSub, CONTROL_MSG };\n\n/**\n * @deprecated use named import\n */\nexport default PubSub;\n","/*\n * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n// import '../Common/Polyfills';\nimport Observable from 'zen-observable-ts';\n\nimport {\n\tAmplify,\n\tbrowserOrNode,\n\tConsoleLogger as Logger,\n\tINTERNAL_AWS_APPSYNC_PUBSUB_PROVIDER,\n\tINTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER,\n} from '@aws-amplify/core';\nimport { PubSubProvider, PubSubOptions, ProvidertOptions } from './types';\nimport { AWSAppSyncProvider, AWSAppSyncRealTimeProvider } from './Providers';\n\nconst { isNode } = browserOrNode();\nconst logger = new Logger('PubSub');\n\nexport class PubSubClass {\n\tprivate _options: PubSubOptions;\n\n\tprivate _pluggables: PubSubProvider[];\n\n\t/**\n\t * Internal instance of AWSAppSyncProvider used by the API category to subscribe to AppSync\n\t */\n\tprivate _awsAppSyncProvider: AWSAppSyncProvider;\n\n\t/**\n\t * Internal instance of AWSAppSyncRealTimeProvider used by the API category to subscribe to AppSync\n\t */\n\tprivate _awsAppSyncRealTimeProvider: AWSAppSyncRealTimeProvider;\n\n\t/**\n\t * Lazy instantiate AWSAppSyncProvider when it is required by the API category\n\t */\n\tprivate get awsAppSyncProvider() {\n\t\tif (!this._awsAppSyncProvider) {\n\t\t\tthis._awsAppSyncProvider = new AWSAppSyncProvider(this._options);\n\t\t}\n\t\treturn this._awsAppSyncProvider;\n\t}\n\n\t/**\n\t * Lazy instantiate AWSAppSyncRealTimeProvider when it is required by the API category\n\t */\n\tprivate get awsAppSyncRealTimeProvider() {\n\t\tif (!this._awsAppSyncRealTimeProvider) {\n\t\t\tthis._awsAppSyncRealTimeProvider = new AWSAppSyncRealTimeProvider(\n\t\t\t\tthis._options\n\t\t\t);\n\t\t}\n\t\treturn this._awsAppSyncRealTimeProvider;\n\t}\n\n\t/**\n\t * Initialize PubSub with AWS configurations\n\t *\n\t * @param {PubSubOptions} options - Configuration object for PubSub\n\t */\n\tconstructor(options: PubSubOptions) {\n\t\tthis._options = options;\n\t\tlogger.debug('PubSub Options', this._options);\n\t\tthis._pluggables = [];\n\t\tthis.subscribe = this.subscribe.bind(this);\n\t}\n\n\tpublic getModuleName() {\n\t\treturn 'PubSub';\n\t}\n\n\t/**\n\t * Configure PubSub part with configurations\n\t *\n\t * @param {PubSubOptions} config - Configuration for PubSub\n\t * @return {Object} - The current configuration\n\t */\n\tconfigure(options: PubSubOptions) {\n\t\tconst opt = options ? options.PubSub || options : {};\n\t\tlogger.debug('configure PubSub', { opt });\n\n\t\tthis._options = Object.assign({}, this._options, opt);\n\n\t\tthis._pluggables.map(pluggable => pluggable.configure(this._options));\n\n\t\treturn this._options;\n\t}\n\n\t/**\n\t * add plugin into Analytics category\n\t * @param {Object} pluggable - an instance of the plugin\n\t */\n\tpublic async addPluggable(pluggable: PubSubProvider) {\n\t\tif (pluggable && pluggable.getCategory() === 'PubSub') {\n\t\t\tthis._pluggables.push(pluggable);\n\n\t\t\tconst config = pluggable.configure(this._options);\n\n\t\t\treturn config;\n\t\t}\n\t}\n\n\t/**\n\t * remove plugin from PubSub category\n\t * @param providerName - the name of the plugin\n\t */\n\tremovePluggable(providerName: string): void {\n\t\tthis._pluggables = this._pluggables.filter(\n\t\t\tpluggable => pluggable.getProviderName() !== providerName\n\t\t);\n\t}\n\n\tprivate getProviderByName(providerName) {\n\t\tif (providerName === INTERNAL_AWS_APPSYNC_PUBSUB_PROVIDER) {\n\t\t\treturn this.awsAppSyncProvider;\n\t\t}\n\t\tif (providerName === INTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER) {\n\t\t\treturn this.awsAppSyncRealTimeProvider;\n\t\t}\n\n\t\treturn this._pluggables.find(\n\t\t\tpluggable => pluggable.getProviderName() === providerName\n\t\t);\n\t}\n\n\tprivate getProviders(options: ProvidertOptions = {}) {\n\t\tconst { provider: providerName } = options;\n\t\tif (!providerName) {\n\t\t\treturn this._pluggables;\n\t\t}\n\n\t\tconst provider = this.getProviderByName(providerName);\n\t\tif (!provider) {\n\t\t\tthrow new Error(`Could not find provider named ${providerName}`);\n\t\t}\n\n\t\treturn [provider];\n\t}\n\n\tasync publish(\n\t\ttopics: string[] | string,\n\t\tmsg: any,\n\t\toptions?: ProvidertOptions\n\t) {\n\t\treturn Promise.all(\n\t\t\tthis.getProviders(options).map(provider =>\n\t\t\t\tprovider.publish(topics, msg, options)\n\t\t\t)\n\t\t);\n\t}\n\n\tsubscribe(\n\t\ttopics: string[] | string,\n\t\toptions?: ProvidertOptions\n\t): Observable<any> {\n\t\tif (isNode && this._options && this._options.ssr) {\n\t\t\tthrow new Error(\n\t\t\t\t'Subscriptions are not supported for Server-Side Rendering (SSR)'\n\t\t\t);\n\t\t}\n\n\t\tlogger.debug('subscribe options', options);\n\n\t\tconst providers = this.getProviders(options);\n\n\t\treturn new Observable(observer => {\n\t\t\tconst observables = providers.map(provider => ({\n\t\t\t\tprovider,\n\t\t\t\tobservable: provider.subscribe(topics, options),\n\t\t\t}));\n\n\t\t\tconst subscriptions = observables.map(({ provider, observable }) =>\n\t\t\t\tobservable.subscribe({\n\t\t\t\t\tstart: console.error,\n\t\t\t\t\tnext: value => observer.next({ provider, value }),\n\t\t\t\t\terror: error => observer.error({ provider, error }),\n\t\t\t\t\t// complete: observer.complete, // TODO: when all completed, complete the outer one\n\t\t\t\t})\n\t\t\t);\n\n\t\t\treturn () =>\n\t\t\t\tsubscriptions.forEach(subscription => subscription.unsubscribe());\n\t\t});\n\t}\n}\n\nexport const PubSub = new PubSubClass(null);\nAmplify.register(PubSub);\n","/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n// @ts-ignore\nimport { GraphQLError } from 'graphql/error/GraphQLError';\nimport { DocumentNode } from 'graphql/language/ast';\n\nexport interface GraphQLOptions {\n\tquery: string | DocumentNode;\n\tvariables?: object;\n\tauthMode?: keyof typeof GRAPHQL_AUTH_MODE;\n\tauthToken?: string;\n}\n\nexport enum GRAPHQL_AUTH_MODE {\n\tAPI_KEY = 'API_KEY',\n\tAWS_IAM = 'AWS_IAM',\n\tOPENID_CONNECT = 'OPENID_CONNECT',\n\tAMAZON_COGNITO_USER_POOLS = 'AMAZON_COGNITO_USER_POOLS',\n\tAWS_LAMBDA = 'AWS_LAMBDA',\n}\n\nexport interface GraphQLResult<T = object> {\n\tdata?: T;\n\terrors?: GraphQLError[];\n\textensions?: {\n\t\t[key: string]: any;\n\t};\n}\n\nexport enum GraphQLAuthError {\n\tNO_API_KEY = 'No api-key configured',\n\tNO_CURRENT_USER = 'No current user',\n\tNO_CREDENTIALS = 'No credentials',\n\tNO_FEDERATED_JWT = 'No federated jwt',\n\tNO_AUTH_TOKEN = 'No auth token specified',\n}\n","/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport {\n\tDocumentNode,\n\tOperationDefinitionNode,\n\tprint,\n\tparse,\n\tGraphQLError,\n} from 'graphql';\nimport Observable from 'zen-observable-ts';\nimport {\n\tAmplify,\n\tConsoleLogger as Logger,\n\tConstants,\n\tCredentials,\n\tINTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER,\n} from '@aws-amplify/core';\nimport PubSub from '@aws-amplify/pubsub';\nimport Auth from '@aws-amplify/auth';\nimport Cache from '@aws-amplify/cache';\nimport { GraphQLAuthError, GraphQLOptions, GraphQLResult } from './types';\nimport { RestClient } from '@aws-amplify/api-rest';\nconst USER_AGENT_HEADER = 'x-amz-user-agent';\n\nconst logger = new Logger('GraphQLAPI');\n\nexport const graphqlOperation = (\n\tquery,\n\tvariables = {},\n\tauthToken?: string\n) => ({\n\tquery,\n\tvariables,\n\tauthToken,\n});\n\n/**\n * Export Cloud Logic APIs\n */\nexport class GraphQLAPIClass {\n\t/**\n\t * @private\n\t */\n\tprivate _options;\n\tprivate _api = null;\n\n\tAuth = Auth;\n\tCache = Cache;\n\tCredentials = Credentials;\n\n\t/**\n\t * Initialize GraphQL API with AWS configuration\n\t * @param {Object} options - Configuration object for API\n\t */\n\tconstructor(options) {\n\t\tthis._options = options;\n\t\tlogger.debug('API Options', this._options);\n\t}\n\n\tpublic getModuleName() {\n\t\treturn 'GraphQLAPI';\n\t}\n\n\t/**\n\t * Configure API\n\t * @param {Object} config - Configuration of the API\n\t * @return {Object} - The current configuration\n\t */\n\tconfigure(options) {\n\t\tconst { API = {}, ...otherOptions } = options || {};\n\t\tlet opt = { ...otherOptions, ...API };\n\t\tlogger.debug('configure GraphQL API', { opt });\n\n\t\tif (opt['aws_project_region']) {\n\t\t\topt = Object.assign({}, opt, {\n\t\t\t\tregion: opt['aws_project_region'],\n\t\t\t\theader: {},\n\t\t\t});\n\t\t}\n\n\t\tif (\n\t\t\ttypeof opt.graphql_headers !== 'undefined' &&\n\t\t\ttypeof opt.graphql_headers !== 'function'\n\t\t) {\n\t\t\tlogger.warn('graphql_headers should be a function');\n\t\t\topt.graphql_headers = undefined;\n\t\t}\n\n\t\tthis._options = Object.assign({}, this._options, opt);\n\n\t\tthis.createInstance();\n\n\t\treturn this._options;\n\t}\n\n\t/**\n\t * Create an instance of API for the library\n\t * @return - A promise of true if Success\n\t */\n\tcreateInstance() {\n\t\tlogger.debug('create Rest instance');\n\t\tif (this._options) {\n\t\t\tthis._api = new RestClient(this._options);\n\t\t\t// Share instance Credentials with client for SSR\n\t\t\tthis._api.Credentials = this.Credentials;\n\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn Promise.reject('API not configured');\n\t\t}\n\t}\n\n\tprivate async _headerBasedAuth(\n\t\tdefaultAuthenticationType?,\n\t\tadditionalHeaders: { [key: string]: string } = {}\n\t) {\n\t\tconst {\n\t\t\taws_appsync_authenticationType,\n\t\t\taws_appsync_apiKey: apiKey,\n\t\t} = this._options;\n\t\tconst authenticationType =\n\t\t\tdefaultAuthenticationType || aws_appsync_authenticationType || 'AWS_IAM';\n\t\tlet headers = {};\n\n\t\tswitch (authenticationType) {\n\t\t\tcase 'API_KEY':\n\t\t\t\tif (!apiKey) {\n\t\t\t\t\tthrow new Error(GraphQLAuthError.NO_API_KEY);\n\t\t\t\t}\n\t\t\t\theaders = {\n\t\t\t\t\tAuthorization: null,\n\t\t\t\t\t'X-Api-Key': apiKey,\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\tcase 'AWS_IAM':\n\t\t\t\tconst credentialsOK = await this._ensureCredentials();\n\t\t\t\tif (!credentialsOK) {\n\t\t\t\t\tthrow new Error(GraphQLAuthError.NO_CREDENTIALS);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'OPENID_CONNECT':\n\t\t\t\ttry {\n\t\t\t\t\tlet token;\n\t\t\t\t\t// backwards compatibility\n\t\t\t\t\tconst federatedInfo = await Cache.getItem('federatedInfo');\n\t\t\t\t\tif (federatedInfo) {\n\t\t\t\t\t\ttoken = federatedInfo.token;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst currentUser = await Auth.currentAuthenticatedUser();\n\t\t\t\t\t\tif (currentUser) {\n\t\t\t\t\t\t\ttoken = currentUser.token;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (!token) {\n\t\t\t\t\t\tthrow new Error(GraphQLAuthError.NO_FEDERATED_JWT);\n\t\t\t\t\t}\n\t\t\t\t\theaders = {\n\t\t\t\t\t\tAuthorization: token,\n\t\t\t\t\t};\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthrow new Error(GraphQLAuthError.NO_CURRENT_USER);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'AMAZON_COGNITO_USER_POOLS':\n\t\t\t\ttry {\n\t\t\t\t\tconst session = await this.Auth.currentSession();\n\t\t\t\t\theaders = {\n\t\t\t\t\t\tAuthorization: session.getAccessToken().getJwtToken(),\n\t\t\t\t\t};\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthrow new Error(GraphQLAuthError.NO_CURRENT_USER);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'AWS_LAMBDA':\n\t\t\t\tif (!additionalHeaders.Authorization) {\n\t\t\t\t\tthrow new Error(GraphQLAuthError.NO_AUTH_TOKEN);\n\t\t\t\t}\n\t\t\t\theaders = {\n\t\t\t\t\tAuthorization: additionalHeaders.Authorization,\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\theaders = {\n\t\t\t\t\tAuthorization: null,\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn headers;\n\t}\n\n\t/**\n\t * to get the operation type\n\t * @param operation\n\t */\n\tgetGraphqlOperationType(operation) {\n\t\tconst doc = parse(operation);\n\t\tconst definitions = doc.definitions as ReadonlyArray<\n\t\t\tOperationDefinitionNode\n\t\t>;\n\t\tconst [{ operation: operationType }] = definitions;\n\n\t\treturn operationType;\n\t}\n\n\t/**\n\t * Executes a GraphQL operation\n\t *\n\t * @param {GraphQLOptions} GraphQL Options\n\t * @param {object} additionalHeaders headers to merge in after any `graphql_headers` set in the config\n\t * @returns {Promise<GraphQLResult> | Observable<object>}\n\t */\n\tgraphql(\n\t\t{ query: paramQuery, variables = {}, authMode, authToken }: GraphQLOptions,\n\t\tadditionalHeaders?: { [key: string]: string }\n\t) {\n\t\tconst query =\n\t\t\ttypeof paramQuery === 'string'\n\t\t\t\t? parse(paramQuery)\n\t\t\t\t: parse(print(paramQuery));\n\n\t\tconst [operationDef = {}] = query.definitions.filter(\n\t\t\tdef => def.kind === 'OperationDefinition'\n\t\t);\n\t\tconst {\n\t\t\toperation: operationType,\n\t\t} = operationDef as OperationDefinitionNode;\n\n\t\tconst headers = additionalHeaders || {};\n\n\t\t// if an authorization header is set, have the explicit authToken take precedence\n\t\tif (authToken) {\n\t\t\theaders.Authorization = authToken;\n\t\t}\n\n\t\tswitch (operationType) {\n\t\t\tcase 'query':\n\t\t\tcase 'mutation':\n\t\t\t\tconst cancellableToken = this._api.getCancellableToken();\n\t\t\t\tconst initParams = { cancellableToken };\n\t\t\t\tconst responsePromise = this._graphql(\n\t\t\t\t\t{ query, variables, authMode },\n\t\t\t\t\theaders,\n\t\t\t\t\tinitParams\n\t\t\t\t);\n\t\t\t\tthis._api.updateRequestToBeCancellable(\n\t\t\t\t\tresponsePromise,\n\t\t\t\t\tcancellableToken\n\t\t\t\t);\n\t\t\t\treturn responsePromise;\n\t\t\tcase 'subscription':\n\t\t\t\treturn this._graphqlSubscribe({ query, variables, authMode }, headers);\n\t\t}\n\n\t\tthrow new Error(`invalid operation type: ${operationType}`);\n\t}\n\n\tprivate async _graphql(\n\t\t{ query, variables, authMode }: GraphQLOptions,\n\t\tadditionalHeaders = {},\n\t\tinitParams = {}\n\t): Promise<GraphQLResult> {\n\t\tif (!this._api) {\n\t\t\tawait this.createInstance();\n\t\t}\n\n\t\tconst {\n\t\t\taws_appsync_region: region,\n\t\t\taws_appsync_graphqlEndpoint: appSyncGraphqlEndpoint,\n\t\t\tgraphql_headers = () => ({}),\n\t\t\tgraphql_endpoint: customGraphqlEndpoint,\n\t\t\tgraphql_endpoint_iam_region: customEndpointRegion,\n\t\t} = this._options;\n\n\t\tconst headers = {\n\t\t\t...(!customGraphqlEndpoint &&\n\t\t\t\t(await this._headerBasedAuth(authMode, additionalHeaders))),\n\t\t\t...(customGraphqlEndpoint &&\n\t\t\t\t(customEndpointRegion\n\t\t\t\t\t? await this._headerBasedAuth(authMode, additionalHeaders)\n\t\t\t\t\t: { Authorization: null })),\n\t\t\t...(await graphql_headers({ query, variables })),\n\t\t\t...additionalHeaders,\n\t\t\t...(!customGraphqlEndpoint && {\n\t\t\t\t[USER_AGENT_HEADER]: Constants.userAgent,\n\t\t\t}),\n\t\t};\n\n\t\tconst body = {\n\t\t\tquery: print(query as DocumentNode),\n\t\t\tvariables,\n\t\t};\n\n\t\tconst init = Object.assign(\n\t\t\t{\n\t\t\t\theaders,\n\t\t\t\tbody,\n\t\t\t\tsignerServiceInfo: {\n\t\t\t\t\tservice: !customGraphqlEndpoint ? 'appsync' : 'execute-api',\n\t\t\t\t\tregion: !customGraphqlEndpoint ? region : customEndpointRegion,\n\t\t\t\t},\n\t\t\t},\n\t\t\tinitParams\n\t\t);\n\n\t\tconst endpoint = customGraphqlEndpoint || appSyncGraphqlEndpoint;\n\n\t\tif (!endpoint) {\n\t\t\tconst error = new GraphQLError('No graphql endpoint provided.');\n\n\t\t\tthrow {\n\t\t\t\tdata: {},\n\t\t\t\terrors: [error],\n\t\t\t};\n\t\t}\n\n\t\tlet response;\n\t\ttry {\n\t\t\tresponse = await this._api.post(endpoint, init);\n\t\t} catch (err) {\n\t\t\t// If the exception is because user intentionally\n\t\t\t// cancelled the request, do not modify the exception\n\t\t\t// so that clients can identify the exception correctly.\n\t\t\tif (this._api.isCancel(err)) {\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t\tresponse = {\n\t\t\t\tdata: {},\n\t\t\t\terrors: [new GraphQLError(err.message, null, null, null, null, err)],\n\t\t\t};\n\t\t}\n\n\t\tconst { errors } = response;\n\n\t\tif (errors && errors.length) {\n\t\t\tthrow response;\n\t\t}\n\n\t\treturn response;\n\t}\n\n\t/**\n\t * Checks to see if an error thrown is from an api request cancellation\n\t * @param {any} error - Any error\n\t * @return {boolean} - A boolean indicating if the error was from an api request cancellation\n\t */\n\tisCancel(error) {\n\t\treturn this._api.isCancel(error);\n\t}\n\n\t/**\n\t * Cancels an inflight request. Only applicable for graphql queries and mutations\n\t * @param {any} request - request to cancel\n\t * @return {boolean} - A boolean indicating if the request was cancelled\n\t */\n\tcancel(request: Promise<any>, message?: string) {\n\t\treturn this._api.cancel(request, message);\n\t}\n\n\tprivate _graphqlSubscribe(\n\t\t{\n\t\t\tquery,\n\t\t\tvariables,\n\t\t\tauthMode: defaultAuthenticationType,\n\t\t\tauthToken,\n\t\t}: GraphQLOptions,\n\t\tadditionalHeaders = {}\n\t): Observable<any> {\n\t\tconst {\n\t\t\taws_appsync_region: region,\n\t\t\taws_appsync_graphqlEndpoint: appSyncGraphqlEndpoint,\n\t\t\taws_appsync_authenticationType,\n\t\t\taws_appsync_apiKey: apiKey,\n\t\t\tgraphql_headers = () => ({}),\n\t\t} = this._options;\n\t\tconst authenticationType =\n\t\t\tdefaultAuthenticationType || aws_appsync_authenticationType || 'AWS_IAM';\n\n\t\tif (PubSub && typeof PubSub.subscribe === 'function') {\n\t\t\treturn PubSub.subscribe('', {\n\t\t\t\tprovider: INTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER,\n\t\t\t\tappSyncGraphqlEndpoint,\n\t\t\t\tauthenticationType,\n\t\t\t\tapiKey,\n\t\t\t\tquery: print(query as DocumentNode),\n\t\t\t\tregion,\n\t\t\t\tvariables,\n\t\t\t\tgraphql_headers,\n\t\t\t\tadditionalHeaders,\n\t\t\t\tauthToken,\n\t\t\t});\n\t\t} else {\n\t\t\tlogger.debug('No pubsub module applied for subscription');\n\t\t\tthrow new Error('No pubsub module applied for subscription');\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_ensureCredentials() {\n\t\treturn this.Credentials.get()\n\t\t\t.then(credentials => {\n\t\t\t\tif (!credentials) return false;\n\t\t\t\tconst cred = this.Credentials.shear(credentials);\n\t\t\t\tlogger.debug('set credentials for api', cred);\n\n\t\t\t\treturn true;\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tlogger.warn('ensure credentials error', err);\n\t\t\t\treturn false;\n\t\t\t});\n\t}\n}\n\nexport const GraphQLAPI = new GraphQLAPIClass(null);\nAmplify.register(GraphQLAPI);\n","/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { Auth } from '@aws-amplify/auth';\nimport Cache from '@aws-amplify/cache';\nimport { RestAPIClass } from '@aws-amplify/api-rest';\nimport {\n\tGraphQLAPIClass,\n\tGraphQLOptions,\n\tGraphQLResult,\n} from '@aws-amplify/api-graphql';\nimport {\n\tAmplify,\n\tConsoleLogger as Logger,\n\tCredentials,\n} from '@aws-amplify/core';\nimport Observable from 'zen-observable-ts';\n\nconst logger = new Logger('API');\n/**\n * @deprecated\n * Use RestApi or GraphQLAPI to reduce your application bundle size\n * Export Cloud Logic APIs\n */\nexport class APIClass {\n\t/**\n\t * Initialize API with AWS configuration\n\t * @param {Object} options - Configuration object for API\n\t */\n\tprivate _options;\n\tprivate _restApi: RestAPIClass;\n\tprivate _graphqlApi;\n\n\tAuth = Auth;\n\tCache = Cache;\n\tCredentials = Credentials;\n\n\t/**\n\t * Initialize API with AWS configuration\n\t * @param {Object} options - Configuration object for API\n\t */\n\tconstructor(options) {\n\t\tthis._options = options;\n\t\tthis._restApi = new RestAPIClass(options);\n\t\tthis._graphqlApi = new GraphQLAPIClass(options);\n\t\tlogger.debug('API Options', this._options);\n\t}\n\n\tpublic getModuleName() {\n\t\treturn 'API';\n\t}\n\n\t/**\n\t * Configure API part with aws configurations\n\t * @param {Object} config - Configuration of the API\n\t * @return {Object} - The current configuration\n\t */\n\tconfigure(options) {\n\t\tthis._options = Object.assign({}, this._options, options);\n\n\t\t// Share Amplify instance with client for SSR\n\t\tthis._restApi.Credentials = this.Credentials;\n\n\t\tthis._graphqlApi.Auth = this.Auth;\n\t\tthis._graphqlApi.Cache = this.Cache;\n\t\tthis._graphqlApi.Credentials = this.Credentials;\n\n\t\tconst restAPIConfig = this._restApi.configure(this._options);\n\t\tconst graphQLAPIConfig = this._graphqlApi.configure(this._options);\n\n\t\treturn { ...restAPIConfig, ...graphQLAPIConfig };\n\t}\n\n\t/**\n\t * Make a GET request\n\t * @param {string} apiName - The api name of the request\n\t * @param {string} path - The path of the request\n\t * @param {json} [init] - Request extra params\n\t * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n\t */\n\tget(apiName, path, init): Promise<any> {\n\t\treturn this._restApi.get(apiName, path, init);\n\t}\n\n\t/**\n\t * Make a POST request\n\t * @param {string} apiName - The api name of the request\n\t * @param {string} path - The path of the request\n\t * @param {json} [init] - Request extra params\n\t * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n\t */\n\tpost(apiName, path, init): Promise<any> {\n\t\treturn this._restApi.post(apiName, path, init);\n\t}\n\n\t/**\n\t * Make a PUT request\n\t * @param {string} apiName - The api name of the request\n\t * @param {string} path - The path of the request\n\t * @param {json} [init] - Request extra params\n\t * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n\t */\n\tput(apiName, path, init): Promise<any> {\n\t\treturn this._restApi.put(apiName, path, init);\n\t}\n\n\t/**\n\t * Make a PATCH request\n\t * @param {string} apiName - The api name of the request\n\t * @param {string} path - The path of the request\n\t * @param {json} [init] - Request extra params\n\t * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n\t */\n\tpatch(apiName, path, init): Promise<any> {\n\t\treturn this._restApi.patch(apiName, path, init);\n\t}\n\n\t/**\n\t * Make a DEL request\n\t * @param {string} apiName - The api name of the request\n\t * @param {string} path - The path of the request\n\t * @param {json} [init] - Request extra params\n\t * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n\t */\n\tdel(apiName, path, init): Promise<any> {\n\t\treturn this._restApi.del(apiName, path, init);\n\t}\n\n\t/**\n\t * Make a HEAD request\n\t * @param {string} apiName - The api name of the request\n\t * @param {string} path - The path of the request\n\t * @param {json} [init] - Request extra params\n\t * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n\t */\n\thead(apiName, path, init): Promise<any> {\n\t\treturn this._restApi.head(apiName, path, init);\n\t}\n\n\t/**\n\t * Checks to see if an error thrown is from an api request cancellation\n\t * @param {any} error - Any error\n\t * @return {boolean} - A boolean indicating if the error was from an api request cancellation\n\t */\n\tisCancel(error) {\n\t\treturn this._restApi.isCancel(error);\n\t}\n\t/**\n\t * Cancels an inflight request\n\t * @param {any} request - request to cancel\n\t * @return {boolean} - A boolean indicating if the request was cancelled\n\t */\n\tcancel(request: Promise<any>, message?: string) {\n\t\treturn this._restApi.cancel(request, message);\n\t}\n\n\t/**\n\t * Getting endpoint for API\n\t * @param {string} apiName - The name of the api\n\t * @return {string} - The endpoint of the api\n\t */\n\tasync endpoint(apiName) {\n\t\treturn this._restApi.endpoint(apiName);\n\t}\n\n\t/**\n\t * to get the operation type\n\t * @param operation\n\t */\n\tgetGraphqlOperationType(operation) {\n\t\treturn this._graphqlApi.getGraphqlOperationType(operation);\n\t}\n\n\t/**\n\t * Executes a GraphQL operation\n\t *\n\t * @param {GraphQLOptions} GraphQL Options\n\t * @param {object} additionalHeaders headers to merge in after any `graphql_headers` set in the config\n\t * @returns {Promise<GraphQLResult> | Observable<object>}\n\t */\n\tgraphql(\n\t\toptions: GraphQLOptions,\n\t\tadditionalHeaders?: { [key: string]: string }\n\t): Promise<GraphQLResult> | Observable<object> {\n\t\treturn this._graphqlApi.graphql(options, additionalHeaders);\n\t}\n}\n\nexport const API = new APIClass(null);\nAmplify.register(API);\n","export default class BrowserStorage {\n\n    // ShouldReject - This property determines if the key expect the expirationDate attribute. If yes, and we don't have any, it should reject. Otherwise resolve with the data cached.\n    static getKey(key, shouldReject) {\n        return new Promise((resolve, reject) => {\n            chrome.storage.local.get([key], function (result) {\n                if (result[key]) {\n                    if (result[key][\"expirationDate\"]) {\n                        const currentDate = new Date();\n                        const expirationDate = new Date(result[key][\"expirationDate\"]);\n\n                        if (currentDate >= expirationDate) {\n                            chrome.storage.local.remove([key], function () {\n                                reject();\n                            });\n                        }\n                        else {\n                            resolve(result[key]);\n                        }\n                    }\n                    else {\n                        if (shouldReject === true) {\n                            reject();\n                        } else {\n                            resolve(result[key]);\n                        }\n\n                    }\n                } else {\n                    reject();\n                }\n            })\n        });\n    }\n\n    static getAll() {\n        return new Promise((resolve, _) => {\n            chrome.storage.local.get(null, function(items) {\n                resolve(items);\n            });\n        });\n    }\n\n    static setKey(key, value) {\n        let object = {};\n        object[key] = value;\n\n        return new Promise((resolve, _) => {\n            chrome.storage.local.set(object, function () {\n                resolve();\n            });\n        })\n\n    }\n\n    static clearKey(key) {\n        return new Promise((resolve, _) => {\n            chrome.storage.local.remove(key, function () {\n                resolve();\n            });\n        })\n    }\n\n    static async clearMetricsAndLogs() {\n        await this.clearKey(\"usageMetrics\");\n        await this.clearKey(\"logs\");\n    }\n\n    static clearAll() {\n        return new Promise((resolve, reject) => {\n            chrome.storage.local.clear(function () {\n                var error = chrome.runtime.lastError;\n\n                if (error) {\n                    reject(error)\n                } else {\n                    resolve();\n                }\n            })\n        });\n    }\n\n    static clearAllExceptWithStartingKey(startingKey) {\n        return new Promise((resolve, _) => {    \n            BrowserStorage.getAll().then((items) => {\n\n                const filteredKeys = Object.keys(items).filter( (key) => (key.startsWith(startingKey) === false && key.startsWith(\"PROTECTED\") === false));\n                let result = filteredKeys.map(async (key) => { \n                    BrowserStorage.clearKey(key) \n                });\n\n                Promise.all(result).then(() => {\n                    resolve();\n                });\n                \n            });\n        });\n    }\n\n    static clearAllWithPrefix(startingKey) {\n        return new Promise((resolve, _) => {    \n            BrowserStorage.getAll().then((items) => {\n\n                const filteredKeys = Object.keys(items).filter( (key) => (key.startsWith(startingKey) === true));\n                let result = filteredKeys.map(async (key) => { \n                    BrowserStorage.clearKey(key) \n                });\n\n                Promise.all(result).then(() => {\n                    resolve();\n                });\n                \n            });\n        });\n    }\n    \n}","// Keys prefixed with 'PROTECTED_' are not cleared by clearAllExceptWithStartingKey\r\n\r\nconst Prefixes = {\r\n    Protected: \"PROTECTED_\",\r\n    Analytics: \"ANALYTICS_\",\r\n    KeyManager: \"KM_\",\r\n    Logger: \"LOGGER_\",\r\n    Provider: \"PROVIDER_\",\r\n    Report: \"REPORT_\",\r\n    Tab: \"TAB_\",\r\n    UserPreferences: \"USER_PREFERENCES_\",\r\n    Whitelist: \"WHITELIST_\",\r\n    Entitlement: \"ENTITLEMENT_\",\r\n    Categories: \"CATEGORIES_\"\r\n}\r\n\r\nexport const StorageKeys = {\r\n    UserID: Prefixes.Protected + \"UserID\",\r\n    Cognito: \"Cognito\",\r\n    Analytics: {\r\n        LastDailyExecution: Prefixes.Analytics + \"LAST_DAILY_EXECUTION\",\r\n        LastWeeklyExecution: Prefixes.Analytics + \"LAST_WEEKLY_EXECUTION\",\r\n        LastMonthlyExecution: Prefixes.Analytics + \"LAST_MONTHLY_EXECUTION\"\r\n    },\r\n    KeyManager: {\r\n        DEK: Prefixes.KeyManager + \"DEK\",\r\n        UserKeys: Prefixes.KeyManager + \"USER_KEYS\",\r\n    },\r\n    Logger: {\r\n        Preferences: Prefixes.Logger + \"PREFERENCES\",\r\n        Logs: Prefixes.Logger + \"LOGS\",\r\n        Backlog: Prefixes.Logger + \"BACKLOG\",\r\n        UsageMetrics: Prefixes.Logger + \"USAGE_METRICS\"\r\n    },\r\n    Provider: {\r\n        ProviderDetectors: Prefixes.Provider + \"PROVIDER_DETECTORS\",\r\n        Rules: Prefixes.Provider + \"RULES\",\r\n        // This is dynamic, depends on provider name\r\n        ProviderRulesPrefix: Prefixes.Provider + \"PROVIDER_RULES_\",\r\n    }, \r\n    Report: {\r\n        ReportedSites: Prefixes.Report + \"REPORTED_SITES\",\r\n    }, \r\n    Tab: {\r\n        // Dynamic with tab id\r\n        TabPrefix: Prefixes.Tab\r\n    },\r\n    UserPreferences: {\r\n        Preferences: Prefixes.UserPreferences + \"PREFERENCES\",\r\n    },\r\n    Whitelist: {\r\n        Whitelist: Prefixes.Whitelist + \"WHITELIST\"\r\n    },\r\n    Update: {\r\n        ExtensionUpdated: Prefixes.Protected + \"EXTENSION_UPDATED\"\r\n    },\r\n    Entitlement: {\r\n        HasEntitlement: Prefixes.Entitlement + \"HAS_ENTITLEMENT\",\r\n        IsRCIdSynced: Prefixes.Entitlement + \"IS_RC_ID_SYNCED\",\r\n        NumberOfRuns: Prefixes.Entitlement + \"RUNS_\", // Expect a date key after\r\n        LastReminder: Prefixes.Entitlement + \"LAST_REMINDER\",\r\n        HaveEverReminded: Prefixes.Entitlement + \"HAVE_REMINDED\",\r\n        InstalledAt: Prefixes.Entitlement + \"INSTALLED_AT\",\r\n        PopupShownAt: Prefixes.Entitlement + \"POPUP_SHOWN_AT\",\r\n    },\r\n    Categories: {\r\n        List: Prefixes.Categories + \"CATEGORIES_LIST\"\r\n    }\r\n}\r\n","/* eslint-disable */\n// this is an auto generated file. This will be overwritten\n\nexport const getUserPreferences = /* GraphQL */ `\n  query getUserPreferences {\n    getUserPreferences {\n      advertising\n      functional\n      performance\n      other\n      notifications\n      background\n      enableFilters\n      analyticsOptIn\n      showUpdateNotifications\n  }\n}\n`;","import { Tools } from \"../Tools/Tools\";\r\n\r\nexport default class NativeMessaging {\r\n\r\n    static handleNativeMessageResponse = (response) => {\r\n        Tools.debugLog(\"NativeMessage Response: \");\r\n        Tools.debugLog(response, true);\r\n    }\r\n\r\n    static handleNativeMessageError = (error) => {\r\n        Tools.debugLog(\"NativeMessage Error: \", error);\r\n    }\r\n\r\n    static sendHelloMessage = () => {\r\n        this.sendNativeMessageIfPossible(\"Hello\");\r\n    }\r\n\r\n    static sendNativeMessageIfPossible = async (message) => {\r\n\r\n        let containsPermissions = await this.containsPermissions();\r\n\r\n        if (containsPermissions) {\r\n            return this.sendNativeMessage(message);\r\n        } else {\r\n            Tools.debugLog(\"The extension doesn't contain the NativeMessaging permission\");\r\n        }\r\n\r\n    }\r\n\r\n    static sendNativeMessageIfPossibleWithResponse = async (message) => {\r\n\r\n        let containsPermissions = await this.containsPermissions();\r\n\r\n        if (containsPermissions) {\r\n            return this.sendNativeMessageWithResponse(message);\r\n        } else {\r\n            Tools.debugLog(\"The extension doesn't contain the NativeMessaging permission\");\r\n        }\r\n\r\n    }\r\n\r\n    static sendNativeMessageWithResponse = async (message) => {\r\n\r\n        Tools.debugLog(\"Sending NativeMessage: \" + message);\r\n\r\n        return browser.runtime.sendNativeMessage(\"com.agent.super.extension.safari\", { \"message\": message });\r\n\r\n    }\r\n\r\n    static sendNativeMessage = (message) => {\r\n\r\n        Tools.debugLog(\"Sending NativeMessage: \" + message);\r\n\r\n        var sending = browser.runtime.sendNativeMessage(\"com.agent.super.extension.safari\", { \"message\": message });\r\n        sending.then(this.handleNativeMessageResponse, this.handleNativeMessageError);\r\n\r\n    }\r\n\r\n    static containsPermissions = () => {\r\n        return new Promise((resolve, _) => {\r\n            chrome.permissions.contains({ permissions: ['nativeMessaging'] }, (result) => {\r\n                if (result) {\r\n                    resolve(true);\r\n                } else {\r\n                    Tools.debugLog(\"Doesn't contain permission for NativeMessaging\");\r\n                    resolve(false);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n}\r\n","/**\n * The code was extracted from:\n * https://github.com/davidchambers/Base64.js\n */\n\nvar chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\nfunction InvalidCharacterError(message) {\n    this.message = message;\n}\n\nInvalidCharacterError.prototype = new Error();\nInvalidCharacterError.prototype.name = \"InvalidCharacterError\";\n\nfunction polyfill(input) {\n    var str = String(input).replace(/=+$/, \"\");\n    if (str.length % 4 == 1) {\n        throw new InvalidCharacterError(\n            \"'atob' failed: The string to be decoded is not correctly encoded.\"\n        );\n    }\n    for (\n        // initialize result and counters\n        var bc = 0, bs, buffer, idx = 0, output = \"\";\n        // get next character\n        (buffer = str.charAt(idx++));\n        // character found in table? initialize bit storage and add its ascii value;\n        ~buffer &&\n        ((bs = bc % 4 ? bs * 64 + buffer : buffer),\n            // and if not first of each 4 characters,\n            // convert the first 8 bits to one ascii character\n            bc++ % 4) ?\n        (output += String.fromCharCode(255 & (bs >> ((-2 * bc) & 6)))) :\n        0\n    ) {\n        // try to find character in table (0-63, not found => -1)\n        buffer = chars.indexOf(buffer);\n    }\n    return output;\n}\n\nexport default (typeof window !== \"undefined\" &&\n    window.atob &&\n    window.atob.bind(window)) ||\npolyfill;","import atob from \"./atob\";\n\nfunction b64DecodeUnicode(str) {\n    return decodeURIComponent(\n        atob(str).replace(/(.)/g, function(m, p) {\n            var code = p.charCodeAt(0).toString(16).toUpperCase();\n            if (code.length < 2) {\n                code = \"0\" + code;\n            }\n            return \"%\" + code;\n        })\n    );\n}\n\nexport default function(str) {\n    var output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n        case 0:\n            break;\n        case 2:\n            output += \"==\";\n            break;\n        case 3:\n            output += \"=\";\n            break;\n        default:\n            throw \"Illegal base64url string!\";\n    }\n\n    try {\n        return b64DecodeUnicode(output);\n    } catch (err) {\n        return atob(output);\n    }\n}","\"use strict\";\n\nimport base64_url_decode from \"./base64_url_decode\";\n\nexport function InvalidTokenError(message) {\n    this.message = message;\n}\n\nInvalidTokenError.prototype = new Error();\nInvalidTokenError.prototype.name = \"InvalidTokenError\";\n\nexport default function(token, options) {\n    if (typeof token !== \"string\") {\n        throw new InvalidTokenError(\"Invalid token specified\");\n    }\n\n    options = options || {};\n    var pos = options.header === true ? 0 : 1;\n    try {\n        return JSON.parse(base64_url_decode(token.split(\".\")[pos]));\n    } catch (e) {\n        throw new InvalidTokenError(\"Invalid token specified: \" + e.message);\n    }\n}","var crypto; // Native crypto from window (Browser)\n\nif (typeof window !== 'undefined' && window.crypto) {\n  crypto = window.crypto;\n} // Native (experimental IE 11) crypto from window (Browser)\n\n\nif (!crypto && typeof window !== 'undefined' && window.msCrypto) {\n  crypto = window.msCrypto;\n}\n/*\n * Cryptographically secure pseudorandom number generator\n * As Math.random() is cryptographically not safe to use\n */\n\n\nexport default function cryptoSecureRandomInt() {\n  if (crypto) {\n    // Use getRandomValues method (Browser)\n    if (typeof crypto.getRandomValues === 'function') {\n      try {\n        return crypto.getRandomValues(new Uint32Array(1))[0];\n      } catch (err) {}\n    } // Use randomBytes method (NodeJS)\n\n\n    if (typeof crypto.randomBytes === 'function') {\n      try {\n        return crypto.randomBytes(4).readInt32LE();\n      } catch (err) {}\n    }\n  }\n\n  throw new Error('Native crypto module could not be used to get secure random number.');\n}","import cryptoSecureRandomInt from './cryptoSecureRandomInt';\n/**\n * Hex encoding strategy.\n * Converts a word array to a hex string.\n * @param {WordArray} wordArray The word array.\n * @return {string} The hex string.\n * @static\n */\n\nfunction hexStringify(wordArray) {\n  // Shortcuts\n  var words = wordArray.words;\n  var sigBytes = wordArray.sigBytes; // Convert\n\n  var hexChars = [];\n\n  for (var i = 0; i < sigBytes; i++) {\n    var bite = words[i >>> 2] >>> 24 - i % 4 * 8 & 0xff;\n    hexChars.push((bite >>> 4).toString(16));\n    hexChars.push((bite & 0x0f).toString(16));\n  }\n\n  return hexChars.join('');\n}\n\nvar WordArray = /*#__PURE__*/function () {\n  function WordArray(words, sigBytes) {\n    words = this.words = words || [];\n\n    if (sigBytes != undefined) {\n      this.sigBytes = sigBytes;\n    } else {\n      this.sigBytes = words.length * 4;\n    }\n  }\n\n  var _proto = WordArray.prototype;\n\n  _proto.random = function random(nBytes) {\n    var words = [];\n\n    for (var i = 0; i < nBytes; i += 4) {\n      words.push(cryptoSecureRandomInt());\n    }\n\n    return new WordArray(words, nBytes);\n  };\n\n  _proto.toString = function toString() {\n    return hexStringify(this);\n  };\n\n  return WordArray;\n}();\n\nexport { WordArray as default };","// A small implementation of BigInteger based on http://www-cs-students.stanford.edu/~tjw/jsbn/\n//\n// All public methods have been removed except the following:\n//   new BigInteger(a, b) (only radix 2, 4, 8, 16 and 32 supported)\n//   toString (only radix 2, 4, 8, 16 and 32 supported)\n//   negate\n//   abs\n//   compareTo\n//   bitLength\n//   mod\n//   equals\n//   add\n//   subtract\n//   multiply\n//   divide\n//   modPow\nexport default BigInteger;\n/*\n * Copyright (c) 2003-2005  Tom Wu\n * All Rights Reserved.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY\n * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n *\n * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,\n * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER\n * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF\n * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT\n * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n *\n * In addition, the following condition applies:\n *\n * All redistributions must retain an intact copy of this copyright notice\n * and disclaimer.\n */\n// (public) Constructor\n\nfunction BigInteger(a, b) {\n  if (a != null) this.fromString(a, b);\n} // return new, unset BigInteger\n\n\nfunction nbi() {\n  return new BigInteger(null);\n} // Bits per digit\n\n\nvar dbits; // JavaScript engine analysis\n\nvar canary = 0xdeadbeefcafe;\nvar j_lm = (canary & 0xffffff) == 0xefcafe; // am: Compute w_j += (x*this_i), propagate carries,\n// c is initial carry, returns final carry.\n// c < 3*dvalue, x < 2*dvalue, this_i < dvalue\n// We need to select the fastest one that works in this environment.\n// am1: use a single mult and divide to get the high bits,\n// max digit bits should be 26 because\n// max internal value = 2*dvalue^2-2*dvalue (< 2^53)\n\nfunction am1(i, x, w, j, c, n) {\n  while (--n >= 0) {\n    var v = x * this[i++] + w[j] + c;\n    c = Math.floor(v / 0x4000000);\n    w[j++] = v & 0x3ffffff;\n  }\n\n  return c;\n} // am2 avoids a big mult-and-extract completely.\n// Max digit bits should be <= 30 because we do bitwise ops\n// on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)\n\n\nfunction am2(i, x, w, j, c, n) {\n  var xl = x & 0x7fff,\n      xh = x >> 15;\n\n  while (--n >= 0) {\n    var l = this[i] & 0x7fff;\n    var h = this[i++] >> 15;\n    var m = xh * l + h * xl;\n    l = xl * l + ((m & 0x7fff) << 15) + w[j] + (c & 0x3fffffff);\n    c = (l >>> 30) + (m >>> 15) + xh * h + (c >>> 30);\n    w[j++] = l & 0x3fffffff;\n  }\n\n  return c;\n} // Alternately, set max digit bits to 28 since some\n// browsers slow down when dealing with 32-bit numbers.\n\n\nfunction am3(i, x, w, j, c, n) {\n  var xl = x & 0x3fff,\n      xh = x >> 14;\n\n  while (--n >= 0) {\n    var l = this[i] & 0x3fff;\n    var h = this[i++] >> 14;\n    var m = xh * l + h * xl;\n    l = xl * l + ((m & 0x3fff) << 14) + w[j] + c;\n    c = (l >> 28) + (m >> 14) + xh * h;\n    w[j++] = l & 0xfffffff;\n  }\n\n  return c;\n}\n\nvar inBrowser = typeof navigator !== 'undefined';\n\nif (inBrowser && j_lm && navigator.appName == 'Microsoft Internet Explorer') {\n  BigInteger.prototype.am = am2;\n  dbits = 30;\n} else if (inBrowser && j_lm && navigator.appName != 'Netscape') {\n  BigInteger.prototype.am = am1;\n  dbits = 26;\n} else {\n  // Mozilla/Netscape seems to prefer am3\n  BigInteger.prototype.am = am3;\n  dbits = 28;\n}\n\nBigInteger.prototype.DB = dbits;\nBigInteger.prototype.DM = (1 << dbits) - 1;\nBigInteger.prototype.DV = 1 << dbits;\nvar BI_FP = 52;\nBigInteger.prototype.FV = Math.pow(2, BI_FP);\nBigInteger.prototype.F1 = BI_FP - dbits;\nBigInteger.prototype.F2 = 2 * dbits - BI_FP; // Digit conversions\n\nvar BI_RM = '0123456789abcdefghijklmnopqrstuvwxyz';\nvar BI_RC = new Array();\nvar rr, vv;\nrr = '0'.charCodeAt(0);\n\nfor (vv = 0; vv <= 9; ++vv) {\n  BI_RC[rr++] = vv;\n}\n\nrr = 'a'.charCodeAt(0);\n\nfor (vv = 10; vv < 36; ++vv) {\n  BI_RC[rr++] = vv;\n}\n\nrr = 'A'.charCodeAt(0);\n\nfor (vv = 10; vv < 36; ++vv) {\n  BI_RC[rr++] = vv;\n}\n\nfunction int2char(n) {\n  return BI_RM.charAt(n);\n}\n\nfunction intAt(s, i) {\n  var c = BI_RC[s.charCodeAt(i)];\n  return c == null ? -1 : c;\n} // (protected) copy this to r\n\n\nfunction bnpCopyTo(r) {\n  for (var i = this.t - 1; i >= 0; --i) {\n    r[i] = this[i];\n  }\n\n  r.t = this.t;\n  r.s = this.s;\n} // (protected) set from integer value x, -DV <= x < DV\n\n\nfunction bnpFromInt(x) {\n  this.t = 1;\n  this.s = x < 0 ? -1 : 0;\n  if (x > 0) this[0] = x;else if (x < -1) this[0] = x + this.DV;else this.t = 0;\n} // return bigint initialized to value\n\n\nfunction nbv(i) {\n  var r = nbi();\n  r.fromInt(i);\n  return r;\n} // (protected) set from string and radix\n\n\nfunction bnpFromString(s, b) {\n  var k;\n  if (b == 16) k = 4;else if (b == 8) k = 3;else if (b == 2) k = 1;else if (b == 32) k = 5;else if (b == 4) k = 2;else throw new Error('Only radix 2, 4, 8, 16, 32 are supported');\n  this.t = 0;\n  this.s = 0;\n  var i = s.length,\n      mi = false,\n      sh = 0;\n\n  while (--i >= 0) {\n    var x = intAt(s, i);\n\n    if (x < 0) {\n      if (s.charAt(i) == '-') mi = true;\n      continue;\n    }\n\n    mi = false;\n    if (sh == 0) this[this.t++] = x;else if (sh + k > this.DB) {\n      this[this.t - 1] |= (x & (1 << this.DB - sh) - 1) << sh;\n      this[this.t++] = x >> this.DB - sh;\n    } else this[this.t - 1] |= x << sh;\n    sh += k;\n    if (sh >= this.DB) sh -= this.DB;\n  }\n\n  this.clamp();\n  if (mi) BigInteger.ZERO.subTo(this, this);\n} // (protected) clamp off excess high words\n\n\nfunction bnpClamp() {\n  var c = this.s & this.DM;\n\n  while (this.t > 0 && this[this.t - 1] == c) {\n    --this.t;\n  }\n} // (public) return string representation in given radix\n\n\nfunction bnToString(b) {\n  if (this.s < 0) return '-' + this.negate().toString(b);\n  var k;\n  if (b == 16) k = 4;else if (b == 8) k = 3;else if (b == 2) k = 1;else if (b == 32) k = 5;else if (b == 4) k = 2;else throw new Error('Only radix 2, 4, 8, 16, 32 are supported');\n  var km = (1 << k) - 1,\n      d,\n      m = false,\n      r = '',\n      i = this.t;\n  var p = this.DB - i * this.DB % k;\n\n  if (i-- > 0) {\n    if (p < this.DB && (d = this[i] >> p) > 0) {\n      m = true;\n      r = int2char(d);\n    }\n\n    while (i >= 0) {\n      if (p < k) {\n        d = (this[i] & (1 << p) - 1) << k - p;\n        d |= this[--i] >> (p += this.DB - k);\n      } else {\n        d = this[i] >> (p -= k) & km;\n\n        if (p <= 0) {\n          p += this.DB;\n          --i;\n        }\n      }\n\n      if (d > 0) m = true;\n      if (m) r += int2char(d);\n    }\n  }\n\n  return m ? r : '0';\n} // (public) -this\n\n\nfunction bnNegate() {\n  var r = nbi();\n  BigInteger.ZERO.subTo(this, r);\n  return r;\n} // (public) |this|\n\n\nfunction bnAbs() {\n  return this.s < 0 ? this.negate() : this;\n} // (public) return + if this > a, - if this < a, 0 if equal\n\n\nfunction bnCompareTo(a) {\n  var r = this.s - a.s;\n  if (r != 0) return r;\n  var i = this.t;\n  r = i - a.t;\n  if (r != 0) return this.s < 0 ? -r : r;\n\n  while (--i >= 0) {\n    if ((r = this[i] - a[i]) != 0) return r;\n  }\n\n  return 0;\n} // returns bit length of the integer x\n\n\nfunction nbits(x) {\n  var r = 1,\n      t;\n\n  if ((t = x >>> 16) != 0) {\n    x = t;\n    r += 16;\n  }\n\n  if ((t = x >> 8) != 0) {\n    x = t;\n    r += 8;\n  }\n\n  if ((t = x >> 4) != 0) {\n    x = t;\n    r += 4;\n  }\n\n  if ((t = x >> 2) != 0) {\n    x = t;\n    r += 2;\n  }\n\n  if ((t = x >> 1) != 0) {\n    x = t;\n    r += 1;\n  }\n\n  return r;\n} // (public) return the number of bits in \"this\"\n\n\nfunction bnBitLength() {\n  if (this.t <= 0) return 0;\n  return this.DB * (this.t - 1) + nbits(this[this.t - 1] ^ this.s & this.DM);\n} // (protected) r = this << n*DB\n\n\nfunction bnpDLShiftTo(n, r) {\n  var i;\n\n  for (i = this.t - 1; i >= 0; --i) {\n    r[i + n] = this[i];\n  }\n\n  for (i = n - 1; i >= 0; --i) {\n    r[i] = 0;\n  }\n\n  r.t = this.t + n;\n  r.s = this.s;\n} // (protected) r = this >> n*DB\n\n\nfunction bnpDRShiftTo(n, r) {\n  for (var i = n; i < this.t; ++i) {\n    r[i - n] = this[i];\n  }\n\n  r.t = Math.max(this.t - n, 0);\n  r.s = this.s;\n} // (protected) r = this << n\n\n\nfunction bnpLShiftTo(n, r) {\n  var bs = n % this.DB;\n  var cbs = this.DB - bs;\n  var bm = (1 << cbs) - 1;\n  var ds = Math.floor(n / this.DB),\n      c = this.s << bs & this.DM,\n      i;\n\n  for (i = this.t - 1; i >= 0; --i) {\n    r[i + ds + 1] = this[i] >> cbs | c;\n    c = (this[i] & bm) << bs;\n  }\n\n  for (i = ds - 1; i >= 0; --i) {\n    r[i] = 0;\n  }\n\n  r[ds] = c;\n  r.t = this.t + ds + 1;\n  r.s = this.s;\n  r.clamp();\n} // (protected) r = this >> n\n\n\nfunction bnpRShiftTo(n, r) {\n  r.s = this.s;\n  var ds = Math.floor(n / this.DB);\n\n  if (ds >= this.t) {\n    r.t = 0;\n    return;\n  }\n\n  var bs = n % this.DB;\n  var cbs = this.DB - bs;\n  var bm = (1 << bs) - 1;\n  r[0] = this[ds] >> bs;\n\n  for (var i = ds + 1; i < this.t; ++i) {\n    r[i - ds - 1] |= (this[i] & bm) << cbs;\n    r[i - ds] = this[i] >> bs;\n  }\n\n  if (bs > 0) r[this.t - ds - 1] |= (this.s & bm) << cbs;\n  r.t = this.t - ds;\n  r.clamp();\n} // (protected) r = this - a\n\n\nfunction bnpSubTo(a, r) {\n  var i = 0,\n      c = 0,\n      m = Math.min(a.t, this.t);\n\n  while (i < m) {\n    c += this[i] - a[i];\n    r[i++] = c & this.DM;\n    c >>= this.DB;\n  }\n\n  if (a.t < this.t) {\n    c -= a.s;\n\n    while (i < this.t) {\n      c += this[i];\n      r[i++] = c & this.DM;\n      c >>= this.DB;\n    }\n\n    c += this.s;\n  } else {\n    c += this.s;\n\n    while (i < a.t) {\n      c -= a[i];\n      r[i++] = c & this.DM;\n      c >>= this.DB;\n    }\n\n    c -= a.s;\n  }\n\n  r.s = c < 0 ? -1 : 0;\n  if (c < -1) r[i++] = this.DV + c;else if (c > 0) r[i++] = c;\n  r.t = i;\n  r.clamp();\n} // (protected) r = this * a, r != this,a (HAC 14.12)\n// \"this\" should be the larger one if appropriate.\n\n\nfunction bnpMultiplyTo(a, r) {\n  var x = this.abs(),\n      y = a.abs();\n  var i = x.t;\n  r.t = i + y.t;\n\n  while (--i >= 0) {\n    r[i] = 0;\n  }\n\n  for (i = 0; i < y.t; ++i) {\n    r[i + x.t] = x.am(0, y[i], r, i, 0, x.t);\n  }\n\n  r.s = 0;\n  r.clamp();\n  if (this.s != a.s) BigInteger.ZERO.subTo(r, r);\n} // (protected) r = this^2, r != this (HAC 14.16)\n\n\nfunction bnpSquareTo(r) {\n  var x = this.abs();\n  var i = r.t = 2 * x.t;\n\n  while (--i >= 0) {\n    r[i] = 0;\n  }\n\n  for (i = 0; i < x.t - 1; ++i) {\n    var c = x.am(i, x[i], r, 2 * i, 0, 1);\n\n    if ((r[i + x.t] += x.am(i + 1, 2 * x[i], r, 2 * i + 1, c, x.t - i - 1)) >= x.DV) {\n      r[i + x.t] -= x.DV;\n      r[i + x.t + 1] = 1;\n    }\n  }\n\n  if (r.t > 0) r[r.t - 1] += x.am(i, x[i], r, 2 * i, 0, 1);\n  r.s = 0;\n  r.clamp();\n} // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)\n// r != q, this != m.  q or r may be null.\n\n\nfunction bnpDivRemTo(m, q, r) {\n  var pm = m.abs();\n  if (pm.t <= 0) return;\n  var pt = this.abs();\n\n  if (pt.t < pm.t) {\n    if (q != null) q.fromInt(0);\n    if (r != null) this.copyTo(r);\n    return;\n  }\n\n  if (r == null) r = nbi();\n  var y = nbi(),\n      ts = this.s,\n      ms = m.s;\n  var nsh = this.DB - nbits(pm[pm.t - 1]); // normalize modulus\n\n  if (nsh > 0) {\n    pm.lShiftTo(nsh, y);\n    pt.lShiftTo(nsh, r);\n  } else {\n    pm.copyTo(y);\n    pt.copyTo(r);\n  }\n\n  var ys = y.t;\n  var y0 = y[ys - 1];\n  if (y0 == 0) return;\n  var yt = y0 * (1 << this.F1) + (ys > 1 ? y[ys - 2] >> this.F2 : 0);\n  var d1 = this.FV / yt,\n      d2 = (1 << this.F1) / yt,\n      e = 1 << this.F2;\n  var i = r.t,\n      j = i - ys,\n      t = q == null ? nbi() : q;\n  y.dlShiftTo(j, t);\n\n  if (r.compareTo(t) >= 0) {\n    r[r.t++] = 1;\n    r.subTo(t, r);\n  }\n\n  BigInteger.ONE.dlShiftTo(ys, t);\n  t.subTo(y, y); // \"negative\" y so we can replace sub with am later\n\n  while (y.t < ys) {\n    y[y.t++] = 0;\n  }\n\n  while (--j >= 0) {\n    // Estimate quotient digit\n    var qd = r[--i] == y0 ? this.DM : Math.floor(r[i] * d1 + (r[i - 1] + e) * d2);\n\n    if ((r[i] += y.am(0, qd, r, j, 0, ys)) < qd) {\n      // Try it out\n      y.dlShiftTo(j, t);\n      r.subTo(t, r);\n\n      while (r[i] < --qd) {\n        r.subTo(t, r);\n      }\n    }\n  }\n\n  if (q != null) {\n    r.drShiftTo(ys, q);\n    if (ts != ms) BigInteger.ZERO.subTo(q, q);\n  }\n\n  r.t = ys;\n  r.clamp();\n  if (nsh > 0) r.rShiftTo(nsh, r); // Denormalize remainder\n\n  if (ts < 0) BigInteger.ZERO.subTo(r, r);\n} // (public) this mod a\n\n\nfunction bnMod(a) {\n  var r = nbi();\n  this.abs().divRemTo(a, null, r);\n  if (this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r, r);\n  return r;\n} // (protected) return \"-1/this % 2^DB\"; useful for Mont. reduction\n// justification:\n//         xy == 1 (mod m)\n//         xy =  1+km\n//   xy(2-xy) = (1+km)(1-km)\n// x[y(2-xy)] = 1-k^2m^2\n// x[y(2-xy)] == 1 (mod m^2)\n// if y is 1/x mod m, then y(2-xy) is 1/x mod m^2\n// should reduce x and y(2-xy) by m^2 at each step to keep size bounded.\n// JS multiply \"overflows\" differently from C/C++, so care is needed here.\n\n\nfunction bnpInvDigit() {\n  if (this.t < 1) return 0;\n  var x = this[0];\n  if ((x & 1) == 0) return 0;\n  var y = x & 3; // y == 1/x mod 2^2\n\n  y = y * (2 - (x & 0xf) * y) & 0xf; // y == 1/x mod 2^4\n\n  y = y * (2 - (x & 0xff) * y) & 0xff; // y == 1/x mod 2^8\n\n  y = y * (2 - ((x & 0xffff) * y & 0xffff)) & 0xffff; // y == 1/x mod 2^16\n  // last step - calculate inverse mod DV directly;\n  // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints\n\n  y = y * (2 - x * y % this.DV) % this.DV; // y == 1/x mod 2^dbits\n  // we really want the negative inverse, and -DV < y < DV\n\n  return y > 0 ? this.DV - y : -y;\n}\n\nfunction bnEquals(a) {\n  return this.compareTo(a) == 0;\n} // (protected) r = this + a\n\n\nfunction bnpAddTo(a, r) {\n  var i = 0,\n      c = 0,\n      m = Math.min(a.t, this.t);\n\n  while (i < m) {\n    c += this[i] + a[i];\n    r[i++] = c & this.DM;\n    c >>= this.DB;\n  }\n\n  if (a.t < this.t) {\n    c += a.s;\n\n    while (i < this.t) {\n      c += this[i];\n      r[i++] = c & this.DM;\n      c >>= this.DB;\n    }\n\n    c += this.s;\n  } else {\n    c += this.s;\n\n    while (i < a.t) {\n      c += a[i];\n      r[i++] = c & this.DM;\n      c >>= this.DB;\n    }\n\n    c += a.s;\n  }\n\n  r.s = c < 0 ? -1 : 0;\n  if (c > 0) r[i++] = c;else if (c < -1) r[i++] = this.DV + c;\n  r.t = i;\n  r.clamp();\n} // (public) this + a\n\n\nfunction bnAdd(a) {\n  var r = nbi();\n  this.addTo(a, r);\n  return r;\n} // (public) this - a\n\n\nfunction bnSubtract(a) {\n  var r = nbi();\n  this.subTo(a, r);\n  return r;\n} // (public) this * a\n\n\nfunction bnMultiply(a) {\n  var r = nbi();\n  this.multiplyTo(a, r);\n  return r;\n} // (public) this / a\n\n\nfunction bnDivide(a) {\n  var r = nbi();\n  this.divRemTo(a, r, null);\n  return r;\n} // Montgomery reduction\n\n\nfunction Montgomery(m) {\n  this.m = m;\n  this.mp = m.invDigit();\n  this.mpl = this.mp & 0x7fff;\n  this.mph = this.mp >> 15;\n  this.um = (1 << m.DB - 15) - 1;\n  this.mt2 = 2 * m.t;\n} // xR mod m\n\n\nfunction montConvert(x) {\n  var r = nbi();\n  x.abs().dlShiftTo(this.m.t, r);\n  r.divRemTo(this.m, null, r);\n  if (x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r, r);\n  return r;\n} // x/R mod m\n\n\nfunction montRevert(x) {\n  var r = nbi();\n  x.copyTo(r);\n  this.reduce(r);\n  return r;\n} // x = x/R mod m (HAC 14.32)\n\n\nfunction montReduce(x) {\n  while (x.t <= this.mt2) {\n    // pad x so am has enough room later\n    x[x.t++] = 0;\n  }\n\n  for (var i = 0; i < this.m.t; ++i) {\n    // faster way of calculating u0 = x[i]*mp mod DV\n    var j = x[i] & 0x7fff;\n    var u0 = j * this.mpl + ((j * this.mph + (x[i] >> 15) * this.mpl & this.um) << 15) & x.DM; // use am to combine the multiply-shift-add into one call\n\n    j = i + this.m.t;\n    x[j] += this.m.am(0, u0, x, i, 0, this.m.t); // propagate carry\n\n    while (x[j] >= x.DV) {\n      x[j] -= x.DV;\n      x[++j]++;\n    }\n  }\n\n  x.clamp();\n  x.drShiftTo(this.m.t, x);\n  if (x.compareTo(this.m) >= 0) x.subTo(this.m, x);\n} // r = \"x^2/R mod m\"; x != r\n\n\nfunction montSqrTo(x, r) {\n  x.squareTo(r);\n  this.reduce(r);\n} // r = \"xy/R mod m\"; x,y != r\n\n\nfunction montMulTo(x, y, r) {\n  x.multiplyTo(y, r);\n  this.reduce(r);\n}\n\nMontgomery.prototype.convert = montConvert;\nMontgomery.prototype.revert = montRevert;\nMontgomery.prototype.reduce = montReduce;\nMontgomery.prototype.mulTo = montMulTo;\nMontgomery.prototype.sqrTo = montSqrTo; // (public) this^e % m (HAC 14.85)\n\nfunction bnModPow(e, m, callback) {\n  var i = e.bitLength(),\n      k,\n      r = nbv(1),\n      z = new Montgomery(m);\n  if (i <= 0) return r;else if (i < 18) k = 1;else if (i < 48) k = 3;else if (i < 144) k = 4;else if (i < 768) k = 5;else k = 6; // precomputation\n\n  var g = new Array(),\n      n = 3,\n      k1 = k - 1,\n      km = (1 << k) - 1;\n  g[1] = z.convert(this);\n\n  if (k > 1) {\n    var g2 = nbi();\n    z.sqrTo(g[1], g2);\n\n    while (n <= km) {\n      g[n] = nbi();\n      z.mulTo(g2, g[n - 2], g[n]);\n      n += 2;\n    }\n  }\n\n  var j = e.t - 1,\n      w,\n      is1 = true,\n      r2 = nbi(),\n      t;\n  i = nbits(e[j]) - 1;\n\n  while (j >= 0) {\n    if (i >= k1) w = e[j] >> i - k1 & km;else {\n      w = (e[j] & (1 << i + 1) - 1) << k1 - i;\n      if (j > 0) w |= e[j - 1] >> this.DB + i - k1;\n    }\n    n = k;\n\n    while ((w & 1) == 0) {\n      w >>= 1;\n      --n;\n    }\n\n    if ((i -= n) < 0) {\n      i += this.DB;\n      --j;\n    }\n\n    if (is1) {\n      // ret == 1, don't bother squaring or multiplying it\n      g[w].copyTo(r);\n      is1 = false;\n    } else {\n      while (n > 1) {\n        z.sqrTo(r, r2);\n        z.sqrTo(r2, r);\n        n -= 2;\n      }\n\n      if (n > 0) z.sqrTo(r, r2);else {\n        t = r;\n        r = r2;\n        r2 = t;\n      }\n      z.mulTo(r2, g[w], r);\n    }\n\n    while (j >= 0 && (e[j] & 1 << i) == 0) {\n      z.sqrTo(r, r2);\n      t = r;\n      r = r2;\n      r2 = t;\n\n      if (--i < 0) {\n        i = this.DB - 1;\n        --j;\n      }\n    }\n  }\n\n  var result = z.revert(r);\n  callback(null, result);\n  return result;\n} // protected\n\n\nBigInteger.prototype.copyTo = bnpCopyTo;\nBigInteger.prototype.fromInt = bnpFromInt;\nBigInteger.prototype.fromString = bnpFromString;\nBigInteger.prototype.clamp = bnpClamp;\nBigInteger.prototype.dlShiftTo = bnpDLShiftTo;\nBigInteger.prototype.drShiftTo = bnpDRShiftTo;\nBigInteger.prototype.lShiftTo = bnpLShiftTo;\nBigInteger.prototype.rShiftTo = bnpRShiftTo;\nBigInteger.prototype.subTo = bnpSubTo;\nBigInteger.prototype.multiplyTo = bnpMultiplyTo;\nBigInteger.prototype.squareTo = bnpSquareTo;\nBigInteger.prototype.divRemTo = bnpDivRemTo;\nBigInteger.prototype.invDigit = bnpInvDigit;\nBigInteger.prototype.addTo = bnpAddTo; // public\n\nBigInteger.prototype.toString = bnToString;\nBigInteger.prototype.negate = bnNegate;\nBigInteger.prototype.abs = bnAbs;\nBigInteger.prototype.compareTo = bnCompareTo;\nBigInteger.prototype.bitLength = bnBitLength;\nBigInteger.prototype.mod = bnMod;\nBigInteger.prototype.equals = bnEquals;\nBigInteger.prototype.add = bnAdd;\nBigInteger.prototype.subtract = bnSubtract;\nBigInteger.prototype.multiply = bnMultiply;\nBigInteger.prototype.divide = bnDivide;\nBigInteger.prototype.modPow = bnModPow; // \"constants\"\n\nBigInteger.ZERO = nbv(0);\nBigInteger.ONE = nbv(1);","/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Buffer } from 'buffer';\nimport CryptoJS from 'crypto-js/core';\nimport 'crypto-js/lib-typedarrays'; // necessary for crypto js\n\nimport SHA256 from 'crypto-js/sha256';\nimport HmacSHA256 from 'crypto-js/hmac-sha256';\nimport WordArray from './utils/WordArray';\n/**\n * Returns a Buffer with a sequence of random nBytes\n * \n * @param {number} nBytes \n * @returns {Buffer} fixed-length sequence of random bytes\n */\n\nfunction randomBytes(nBytes) {\n  return Buffer.from(new WordArray().random(nBytes).toString(), 'hex');\n}\n\n;\nimport BigInteger from './BigInteger';\n/**\n * Tests if a hex string has it most significant bit set (case-insensitive regex)\n */\n\nvar HEX_MSB_REGEX = /^[89a-f]/i;\nvar initN = 'FFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD1' + '29024E088A67CC74020BBEA63B139B22514A08798E3404DD' + 'EF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C245' + 'E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7ED' + 'EE386BFB5A899FA5AE9F24117C4B1FE649286651ECE45B3D' + 'C2007CB8A163BF0598DA48361C55D39A69163FA8FD24CF5F' + '83655D23DCA3AD961C62F356208552BB9ED529077096966D' + '670C354E4ABC9804F1746C08CA18217C32905E462E36CE3B' + 'E39E772C180E86039B2783A2EC07A28FB5C55DF06F4C52C9' + 'DE2BCBF6955817183995497CEA956AE515D2261898FA0510' + '15728E5A8AAAC42DAD33170D04507A33A85521ABDF1CBA64' + 'ECFB850458DBEF0A8AEA71575D060C7DB3970F85A6E1E4C7' + 'ABF5AE8CDB0933D71E8C94E04A25619DCEE3D2261AD2EE6B' + 'F12FFA06D98A0864D87602733EC86A64521F2B18177B200C' + 'BBE117577A615D6C770988C0BAD946E208E24FA074E5AB31' + '43DB5BFCE0FD108E4B82D120A93AD2CAFFFFFFFFFFFFFFFF';\nvar newPasswordRequiredChallengeUserAttributePrefix = 'userAttributes.';\n/** @class */\n\nvar AuthenticationHelper = /*#__PURE__*/function () {\n  /**\n   * Constructs a new AuthenticationHelper object\n   * @param {string} PoolName Cognito user pool name.\n   */\n  function AuthenticationHelper(PoolName) {\n    this.N = new BigInteger(initN, 16);\n    this.g = new BigInteger('2', 16);\n    this.k = new BigInteger(this.hexHash(\"\" + this.padHex(this.N) + this.padHex(this.g)), 16);\n    this.smallAValue = this.generateRandomSmallA();\n    this.getLargeAValue(function () {});\n    this.infoBits = Buffer.from('Caldera Derived Key', 'utf8');\n    this.poolName = PoolName;\n  }\n  /**\n   * @returns {BigInteger} small A, a random number\n   */\n\n\n  var _proto = AuthenticationHelper.prototype;\n\n  _proto.getSmallAValue = function getSmallAValue() {\n    return this.smallAValue;\n  }\n  /**\n   * @param {nodeCallback<BigInteger>} callback Called with (err, largeAValue)\n   * @returns {void}\n   */\n  ;\n\n  _proto.getLargeAValue = function getLargeAValue(callback) {\n    var _this = this;\n\n    if (this.largeAValue) {\n      callback(null, this.largeAValue);\n    } else {\n      this.calculateA(this.smallAValue, function (err, largeAValue) {\n        if (err) {\n          callback(err, null);\n        }\n\n        _this.largeAValue = largeAValue;\n        callback(null, _this.largeAValue);\n      });\n    }\n  }\n  /**\n   * helper function to generate a random big integer\n   * @returns {BigInteger} a random value.\n   * @private\n   */\n  ;\n\n  _proto.generateRandomSmallA = function generateRandomSmallA() {\n    // This will be interpreted as a postive 128-bit integer\n    var hexRandom = randomBytes(128).toString('hex');\n    var randomBigInt = new BigInteger(hexRandom, 16); // There is no need to do randomBigInt.mod(this.N - 1) as N (3072-bit) is > 128 bytes (1024-bit)\n\n    return randomBigInt;\n  }\n  /**\n   * helper function to generate a random string\n   * @returns {string} a random value.\n   * @private\n   */\n  ;\n\n  _proto.generateRandomString = function generateRandomString() {\n    return randomBytes(40).toString('base64');\n  }\n  /**\n   * @returns {string} Generated random value included in password hash.\n   */\n  ;\n\n  _proto.getRandomPassword = function getRandomPassword() {\n    return this.randomPassword;\n  }\n  /**\n   * @returns {string} Generated random value included in devices hash.\n   */\n  ;\n\n  _proto.getSaltDevices = function getSaltDevices() {\n    return this.SaltToHashDevices;\n  }\n  /**\n   * @returns {string} Value used to verify devices.\n   */\n  ;\n\n  _proto.getVerifierDevices = function getVerifierDevices() {\n    return this.verifierDevices;\n  }\n  /**\n   * Generate salts and compute verifier.\n   * @param {string} deviceGroupKey Devices to generate verifier for.\n   * @param {string} username User to generate verifier for.\n   * @param {nodeCallback<null>} callback Called with (err, null)\n   * @returns {void}\n   */\n  ;\n\n  _proto.generateHashDevice = function generateHashDevice(deviceGroupKey, username, callback) {\n    var _this2 = this;\n\n    this.randomPassword = this.generateRandomString();\n    var combinedString = \"\" + deviceGroupKey + username + \":\" + this.randomPassword;\n    var hashedString = this.hash(combinedString);\n    var hexRandom = randomBytes(16).toString('hex'); // The random hex will be unambiguously represented as a postive integer\n\n    this.SaltToHashDevices = this.padHex(new BigInteger(hexRandom, 16));\n    this.g.modPow(new BigInteger(this.hexHash(this.SaltToHashDevices + hashedString), 16), this.N, function (err, verifierDevicesNotPadded) {\n      if (err) {\n        callback(err, null);\n      }\n\n      _this2.verifierDevices = _this2.padHex(verifierDevicesNotPadded);\n      callback(null, null);\n    });\n  }\n  /**\n   * Calculate the client's public value A = g^a%N\n   * with the generated random number a\n   * @param {BigInteger} a Randomly generated small A.\n   * @param {nodeCallback<BigInteger>} callback Called with (err, largeAValue)\n   * @returns {void}\n   * @private\n   */\n  ;\n\n  _proto.calculateA = function calculateA(a, callback) {\n    var _this3 = this;\n\n    this.g.modPow(a, this.N, function (err, A) {\n      if (err) {\n        callback(err, null);\n      }\n\n      if (A.mod(_this3.N).equals(BigInteger.ZERO)) {\n        callback(new Error('Illegal paramater. A mod N cannot be 0.'), null);\n      }\n\n      callback(null, A);\n    });\n  }\n  /**\n   * Calculate the client's value U which is the hash of A and B\n   * @param {BigInteger} A Large A value.\n   * @param {BigInteger} B Server B value.\n   * @returns {BigInteger} Computed U value.\n   * @private\n   */\n  ;\n\n  _proto.calculateU = function calculateU(A, B) {\n    this.UHexHash = this.hexHash(this.padHex(A) + this.padHex(B));\n    var finalU = new BigInteger(this.UHexHash, 16);\n    return finalU;\n  }\n  /**\n   * Calculate a hash from a bitArray\n   * @param {Buffer} buf Value to hash.\n   * @returns {String} Hex-encoded hash.\n   * @private\n   */\n  ;\n\n  _proto.hash = function hash(buf) {\n    var str = buf instanceof Buffer ? CryptoJS.lib.WordArray.create(buf) : buf;\n    var hashHex = SHA256(str).toString();\n    return new Array(64 - hashHex.length).join('0') + hashHex;\n  }\n  /**\n   * Calculate a hash from a hex string\n   * @param {String} hexStr Value to hash.\n   * @returns {String} Hex-encoded hash.\n   * @private\n   */\n  ;\n\n  _proto.hexHash = function hexHash(hexStr) {\n    return this.hash(Buffer.from(hexStr, 'hex'));\n  }\n  /**\n   * Standard hkdf algorithm\n   * @param {Buffer} ikm Input key material.\n   * @param {Buffer} salt Salt value.\n   * @returns {Buffer} Strong key material.\n   * @private\n   */\n  ;\n\n  _proto.computehkdf = function computehkdf(ikm, salt) {\n    var infoBitsWordArray = CryptoJS.lib.WordArray.create(Buffer.concat([this.infoBits, Buffer.from(String.fromCharCode(1), 'utf8')]));\n    var ikmWordArray = ikm instanceof Buffer ? CryptoJS.lib.WordArray.create(ikm) : ikm;\n    var saltWordArray = salt instanceof Buffer ? CryptoJS.lib.WordArray.create(salt) : salt;\n    var prk = HmacSHA256(ikmWordArray, saltWordArray);\n    var hmac = HmacSHA256(infoBitsWordArray, prk);\n    return Buffer.from(hmac.toString(), 'hex').slice(0, 16);\n  }\n  /**\n   * Calculates the final hkdf based on computed S value, and computed U value and the key\n   * @param {String} username Username.\n   * @param {String} password Password.\n   * @param {BigInteger} serverBValue Server B value.\n   * @param {BigInteger} salt Generated salt.\n   * @param {nodeCallback<Buffer>} callback Called with (err, hkdfValue)\n   * @returns {void}\n   */\n  ;\n\n  _proto.getPasswordAuthenticationKey = function getPasswordAuthenticationKey(username, password, serverBValue, salt, callback) {\n    var _this4 = this;\n\n    if (serverBValue.mod(this.N).equals(BigInteger.ZERO)) {\n      throw new Error('B cannot be zero.');\n    }\n\n    this.UValue = this.calculateU(this.largeAValue, serverBValue);\n\n    if (this.UValue.equals(BigInteger.ZERO)) {\n      throw new Error('U cannot be zero.');\n    }\n\n    var usernamePassword = \"\" + this.poolName + username + \":\" + password;\n    var usernamePasswordHash = this.hash(usernamePassword);\n    var xValue = new BigInteger(this.hexHash(this.padHex(salt) + usernamePasswordHash), 16);\n    this.calculateS(xValue, serverBValue, function (err, sValue) {\n      if (err) {\n        callback(err, null);\n      }\n\n      var hkdf = _this4.computehkdf(Buffer.from(_this4.padHex(sValue), 'hex'), Buffer.from(_this4.padHex(_this4.UValue), 'hex'));\n\n      callback(null, hkdf);\n    });\n  }\n  /**\n   * Calculates the S value used in getPasswordAuthenticationKey\n   * @param {BigInteger} xValue Salted password hash value.\n   * @param {BigInteger} serverBValue Server B value.\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @returns {void}\n   */\n  ;\n\n  _proto.calculateS = function calculateS(xValue, serverBValue, callback) {\n    var _this5 = this;\n\n    this.g.modPow(xValue, this.N, function (err, gModPowXN) {\n      if (err) {\n        callback(err, null);\n      }\n\n      var intValue2 = serverBValue.subtract(_this5.k.multiply(gModPowXN));\n      intValue2.modPow(_this5.smallAValue.add(_this5.UValue.multiply(xValue)), _this5.N, function (err2, result) {\n        if (err2) {\n          callback(err2, null);\n        }\n\n        callback(null, result.mod(_this5.N));\n      });\n    });\n  }\n  /**\n   * Return constant newPasswordRequiredChallengeUserAttributePrefix\n   * @return {newPasswordRequiredChallengeUserAttributePrefix} constant prefix value\n   */\n  ;\n\n  _proto.getNewPasswordRequiredChallengeUserAttributePrefix = function getNewPasswordRequiredChallengeUserAttributePrefix() {\n    return newPasswordRequiredChallengeUserAttributePrefix;\n  }\n  /**\n   * Returns an unambiguous, even-length hex string of the two's complement encoding of an integer.\n   * \n   * It is compatible with the hex encoding of Java's BigInteger's toByteArray(), wich returns a \n   * byte array containing the two's-complement representation of a BigInteger. The array contains\n   * the minimum number of bytes required to represent the BigInteger, including at least one sign bit.\n   * \n   * Examples showing how ambiguity is avoided by left padding with:\n   * \t\"00\" (for positive values where the most-significant-bit is set)\n   *  \"FF\" (for negative values where the most-significant-bit is set)\n   * \n   * padHex(bigInteger.fromInt(-236))  === \"FF14\"\n   * padHex(bigInteger.fromInt(20))    === \"14\"\n   * \n   * padHex(bigInteger.fromInt(-200))  === \"FF38\"\n   * padHex(bigInteger.fromInt(56))    === \"38\"\n   * \n   * padHex(bigInteger.fromInt(-20))   === \"EC\"\n   * padHex(bigInteger.fromInt(236))   === \"00EC\"\n   * \n   * padHex(bigInteger.fromInt(-56))   === \"C8\"\n   * padHex(bigInteger.fromInt(200))   === \"00C8\"\n   * \n   * @param {BigInteger} bigInt Number to encode.\n   * @returns {String} even-length hex string of the two's complement encoding.\n   */\n  ;\n\n  _proto.padHex = function padHex(bigInt) {\n    if (!(bigInt instanceof BigInteger)) {\n      throw new Error('Not a BigInteger');\n    }\n\n    var isNegative = bigInt.compareTo(BigInteger.ZERO) < 0;\n    /* Get a hex string for abs(bigInt) */\n\n    var hexStr = bigInt.abs().toString(16);\n    /* Pad hex to even length if needed */\n\n    hexStr = hexStr.length % 2 !== 0 ? \"0\" + hexStr : hexStr;\n    /* Prepend \"00\" if the most significant bit is set */\n\n    hexStr = HEX_MSB_REGEX.test(hexStr) ? \"00\" + hexStr : hexStr;\n\n    if (isNegative) {\n      /* Flip the bits of the representation */\n      var invertedNibbles = hexStr.split('').map(function (x) {\n        var invertedNibble = ~parseInt(x, 16) & 0xf;\n        return '0123456789ABCDEF'.charAt(invertedNibble);\n      }).join('');\n      /* After flipping the bits, add one to get the 2's complement representation */\n\n      var flippedBitsBI = new BigInteger(invertedNibbles, 16).add(BigInteger.ONE);\n      hexStr = flippedBitsBI.toString(16);\n      /*\n      For hex strings starting with 'FF8', 'FF' can be dropped, e.g. 0xFFFF80=0xFF80=0x80=-128\n      \tAny sequence of '1' bits on the left can always be substituted with a single '1' bit\n      without changing the represented value.\n      \tThis only happens in the case when the input is 80...00\n      */\n\n      if (hexStr.toUpperCase().startsWith('FF8')) {\n        hexStr = hexStr.substring(2);\n      }\n    }\n\n    return hexStr;\n  };\n\n  return AuthenticationHelper;\n}();\n\nexport { AuthenticationHelper as default };","/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Buffer } from 'buffer';\n/** @class */\n\nvar CognitoJwtToken = /*#__PURE__*/function () {\n  /**\n   * Constructs a new CognitoJwtToken object\n   * @param {string=} token The JWT token.\n   */\n  function CognitoJwtToken(token) {\n    // Assign object\n    this.jwtToken = token || '';\n    this.payload = this.decodePayload();\n  }\n  /**\n   * @returns {string} the record's token.\n   */\n\n\n  var _proto = CognitoJwtToken.prototype;\n\n  _proto.getJwtToken = function getJwtToken() {\n    return this.jwtToken;\n  }\n  /**\n   * @returns {int} the token's expiration (exp member).\n   */\n  ;\n\n  _proto.getExpiration = function getExpiration() {\n    return this.payload.exp;\n  }\n  /**\n   * @returns {int} the token's \"issued at\" (iat member).\n   */\n  ;\n\n  _proto.getIssuedAt = function getIssuedAt() {\n    return this.payload.iat;\n  }\n  /**\n   * @returns {object} the token's payload.\n   */\n  ;\n\n  _proto.decodePayload = function decodePayload() {\n    var payload = this.jwtToken.split('.')[1];\n\n    try {\n      return JSON.parse(Buffer.from(payload, 'base64').toString('utf8'));\n    } catch (err) {\n      return {};\n    }\n  };\n\n  return CognitoJwtToken;\n}();\n\nexport { CognitoJwtToken as default };","function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/*\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\nimport CognitoJwtToken from './CognitoJwtToken';\n/** @class */\n\nvar CognitoAccessToken = /*#__PURE__*/function (_CognitoJwtToken) {\n  _inheritsLoose(CognitoAccessToken, _CognitoJwtToken);\n\n  /**\n   * Constructs a new CognitoAccessToken object\n   * @param {string=} AccessToken The JWT access token.\n   */\n  function CognitoAccessToken(_temp) {\n    var _ref = _temp === void 0 ? {} : _temp,\n        AccessToken = _ref.AccessToken;\n\n    return _CognitoJwtToken.call(this, AccessToken || '') || this;\n  }\n\n  return CognitoAccessToken;\n}(CognitoJwtToken);\n\nexport { CognitoAccessToken as default };","function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\nimport CognitoJwtToken from './CognitoJwtToken';\n/** @class */\n\nvar CognitoIdToken = /*#__PURE__*/function (_CognitoJwtToken) {\n  _inheritsLoose(CognitoIdToken, _CognitoJwtToken);\n\n  /**\n   * Constructs a new CognitoIdToken object\n   * @param {string=} IdToken The JWT Id token\n   */\n  function CognitoIdToken(_temp) {\n    var _ref = _temp === void 0 ? {} : _temp,\n        IdToken = _ref.IdToken;\n\n    return _CognitoJwtToken.call(this, IdToken || '') || this;\n  }\n\n  return CognitoIdToken;\n}(CognitoJwtToken);\n\nexport { CognitoIdToken as default };","/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @class */\nvar CognitoRefreshToken = /*#__PURE__*/function () {\n  /**\n   * Constructs a new CognitoRefreshToken object\n   * @param {string=} RefreshToken The JWT refresh token.\n   */\n  function CognitoRefreshToken(_temp) {\n    var _ref = _temp === void 0 ? {} : _temp,\n        RefreshToken = _ref.RefreshToken;\n\n    // Assign object\n    this.token = RefreshToken || '';\n  }\n  /**\n   * @returns {string} the record's token.\n   */\n\n\n  var _proto = CognitoRefreshToken.prototype;\n\n  _proto.getToken = function getToken() {\n    return this.token;\n  };\n\n  return CognitoRefreshToken;\n}();\n\nexport { CognitoRefreshToken as default };","/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @class */\nvar CognitoUserSession = /*#__PURE__*/function () {\n  /**\n   * Constructs a new CognitoUserSession object\n   * @param {CognitoIdToken} IdToken The session's Id token.\n   * @param {CognitoRefreshToken=} RefreshToken The session's refresh token.\n   * @param {CognitoAccessToken} AccessToken The session's access token.\n   * @param {int} ClockDrift The saved computer's clock drift or undefined to force calculation.\n   */\n  function CognitoUserSession(_temp) {\n    var _ref = _temp === void 0 ? {} : _temp,\n        IdToken = _ref.IdToken,\n        RefreshToken = _ref.RefreshToken,\n        AccessToken = _ref.AccessToken,\n        ClockDrift = _ref.ClockDrift;\n\n    if (AccessToken == null || IdToken == null) {\n      throw new Error('Id token and Access Token must be present.');\n    }\n\n    this.idToken = IdToken;\n    this.refreshToken = RefreshToken;\n    this.accessToken = AccessToken;\n    this.clockDrift = ClockDrift === undefined ? this.calculateClockDrift() : ClockDrift;\n  }\n  /**\n   * @returns {CognitoIdToken} the session's Id token\n   */\n\n\n  var _proto = CognitoUserSession.prototype;\n\n  _proto.getIdToken = function getIdToken() {\n    return this.idToken;\n  }\n  /**\n   * @returns {CognitoRefreshToken} the session's refresh token\n   */\n  ;\n\n  _proto.getRefreshToken = function getRefreshToken() {\n    return this.refreshToken;\n  }\n  /**\n   * @returns {CognitoAccessToken} the session's access token\n   */\n  ;\n\n  _proto.getAccessToken = function getAccessToken() {\n    return this.accessToken;\n  }\n  /**\n   * @returns {int} the session's clock drift\n   */\n  ;\n\n  _proto.getClockDrift = function getClockDrift() {\n    return this.clockDrift;\n  }\n  /**\n   * @returns {int} the computer's clock drift\n   */\n  ;\n\n  _proto.calculateClockDrift = function calculateClockDrift() {\n    var now = Math.floor(new Date() / 1000);\n    var iat = Math.min(this.accessToken.getIssuedAt(), this.idToken.getIssuedAt());\n    return now - iat;\n  }\n  /**\n   * Checks to see if the session is still valid based on session expiry information found\n   * in tokens and the current time (adjusted with clock drift)\n   * @returns {boolean} if the session is still valid\n   */\n  ;\n\n  _proto.isValid = function isValid() {\n    var now = Math.floor(new Date() / 1000);\n    var adjusted = now - this.clockDrift;\n    return adjusted < this.accessToken.getExpiration() && adjusted < this.idToken.getExpiration();\n  };\n\n  return CognitoUserSession;\n}();\n\nexport { CognitoUserSession as default };","/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\nvar monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\nvar weekNames = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n/** @class */\n\nvar DateHelper = /*#__PURE__*/function () {\n  function DateHelper() {}\n\n  var _proto = DateHelper.prototype;\n\n  /**\n   * @returns {string} The current time in \"ddd MMM D HH:mm:ss UTC YYYY\" format.\n   */\n  _proto.getNowString = function getNowString() {\n    var now = new Date();\n    var weekDay = weekNames[now.getUTCDay()];\n    var month = monthNames[now.getUTCMonth()];\n    var day = now.getUTCDate();\n    var hours = now.getUTCHours();\n\n    if (hours < 10) {\n      hours = \"0\" + hours;\n    }\n\n    var minutes = now.getUTCMinutes();\n\n    if (minutes < 10) {\n      minutes = \"0\" + minutes;\n    }\n\n    var seconds = now.getUTCSeconds();\n\n    if (seconds < 10) {\n      seconds = \"0\" + seconds;\n    }\n\n    var year = now.getUTCFullYear(); // ddd MMM D HH:mm:ss UTC YYYY\n\n    var dateNow = weekDay + \" \" + month + \" \" + day + \" \" + hours + \":\" + minutes + \":\" + seconds + \" UTC \" + year;\n    return dateNow;\n  };\n\n  return DateHelper;\n}();\n\nexport { DateHelper as default };","/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @class */\nvar CognitoUserAttribute = /*#__PURE__*/function () {\n  /**\n   * Constructs a new CognitoUserAttribute object\n   * @param {string=} Name The record's name\n   * @param {string=} Value The record's value\n   */\n  function CognitoUserAttribute(_temp) {\n    var _ref = _temp === void 0 ? {} : _temp,\n        Name = _ref.Name,\n        Value = _ref.Value;\n\n    this.Name = Name || '';\n    this.Value = Value || '';\n  }\n  /**\n   * @returns {string} the record's value.\n   */\n\n\n  var _proto = CognitoUserAttribute.prototype;\n\n  _proto.getValue = function getValue() {\n    return this.Value;\n  }\n  /**\n   * Sets the record's value.\n   * @param {string} value The new value.\n   * @returns {CognitoUserAttribute} The record for method chaining.\n   */\n  ;\n\n  _proto.setValue = function setValue(value) {\n    this.Value = value;\n    return this;\n  }\n  /**\n   * @returns {string} the record's name.\n   */\n  ;\n\n  _proto.getName = function getName() {\n    return this.Name;\n  }\n  /**\n   * Sets the record's name\n   * @param {string} name The new name.\n   * @returns {CognitoUserAttribute} The record for method chaining.\n   */\n  ;\n\n  _proto.setName = function setName(name) {\n    this.Name = name;\n    return this;\n  }\n  /**\n   * @returns {string} a string representation of the record.\n   */\n  ;\n\n  _proto.toString = function toString() {\n    return JSON.stringify(this);\n  }\n  /**\n   * @returns {object} a flat object representing the record.\n   */\n  ;\n\n  _proto.toJSON = function toJSON() {\n    return {\n      Name: this.Name,\n      Value: this.Value\n    };\n  };\n\n  return CognitoUserAttribute;\n}();\n\nexport { CognitoUserAttribute as default };","/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\nvar dataMemory = {};\n/** @class */\n\nvar MemoryStorage = /*#__PURE__*/function () {\n  function MemoryStorage() {}\n\n  /**\n   * This is used to set a specific item in storage\n   * @param {string} key - the key for the item\n   * @param {object} value - the value\n   * @returns {string} value that was set\n   */\n  MemoryStorage.setItem = function setItem(key, value) {\n    dataMemory[key] = value;\n    return dataMemory[key];\n  }\n  /**\n   * This is used to get a specific key from storage\n   * @param {string} key - the key for the item\n   * This is used to clear the storage\n   * @returns {string} the data item\n   */\n  ;\n\n  MemoryStorage.getItem = function getItem(key) {\n    return Object.prototype.hasOwnProperty.call(dataMemory, key) ? dataMemory[key] : undefined;\n  }\n  /**\n   * This is used to remove an item from storage\n   * @param {string} key - the key being set\n   * @returns {string} value - value that was deleted\n   */\n  ;\n\n  MemoryStorage.removeItem = function removeItem(key) {\n    return delete dataMemory[key];\n  }\n  /**\n   * This is used to clear the storage\n   * @returns {string} nothing\n   */\n  ;\n\n  MemoryStorage.clear = function clear() {\n    dataMemory = {};\n    return dataMemory;\n  };\n\n  return MemoryStorage;\n}();\n/** @class */\n\n\nvar StorageHelper = /*#__PURE__*/function () {\n  /**\n   * This is used to get a storage object\n   * @returns {object} the storage\n   */\n  function StorageHelper() {\n    try {\n      this.storageWindow = window.localStorage;\n      this.storageWindow.setItem('aws.cognito.test-ls', 1);\n      this.storageWindow.removeItem('aws.cognito.test-ls');\n    } catch (exception) {\n      this.storageWindow = MemoryStorage;\n    }\n  }\n  /**\n   * This is used to return the storage\n   * @returns {object} the storage\n   */\n\n\n  var _proto = StorageHelper.prototype;\n\n  _proto.getStorage = function getStorage() {\n    return this.storageWindow;\n  };\n\n  return StorageHelper;\n}();\n\nexport { StorageHelper as default };","/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Buffer } from 'buffer';\nimport CryptoJS from 'crypto-js/core';\nimport TypedArrays from 'crypto-js/lib-typedarrays'; // necessary for crypto js\n\nimport Base64 from 'crypto-js/enc-base64';\nimport HmacSHA256 from 'crypto-js/hmac-sha256';\nimport BigInteger from './BigInteger';\nimport AuthenticationHelper from './AuthenticationHelper';\nimport CognitoAccessToken from './CognitoAccessToken';\nimport CognitoIdToken from './CognitoIdToken';\nimport CognitoRefreshToken from './CognitoRefreshToken';\nimport CognitoUserSession from './CognitoUserSession';\nimport DateHelper from './DateHelper';\nimport CognitoUserAttribute from './CognitoUserAttribute';\nimport StorageHelper from './StorageHelper';\n/**\n * @callback nodeCallback\n * @template T result\n * @param {*} err The operation failure reason, or null.\n * @param {T} result The operation result.\n */\n\n/**\n * @callback onFailure\n * @param {*} err Failure reason.\n */\n\n/**\n * @callback onSuccess\n * @template T result\n * @param {T} result The operation result.\n */\n\n/**\n * @callback mfaRequired\n * @param {*} details MFA challenge details.\n */\n\n/**\n * @callback customChallenge\n * @param {*} details Custom challenge details.\n */\n\n/**\n * @callback inputVerificationCode\n * @param {*} data Server response.\n */\n\n/**\n * @callback authSuccess\n * @param {CognitoUserSession} session The new session.\n * @param {bool=} userConfirmationNecessary User must be confirmed.\n */\n\nvar isBrowser = typeof navigator !== 'undefined';\nvar userAgent = isBrowser ? navigator.userAgent : 'nodejs';\n/** @class */\n\nvar CognitoUser = /*#__PURE__*/function () {\n  /**\n   * Constructs a new CognitoUser object\n   * @param {object} data Creation options\n   * @param {string} data.Username The user's username.\n   * @param {CognitoUserPool} data.Pool Pool containing the user.\n   * @param {object} data.Storage Optional storage object.\n   */\n  function CognitoUser(data) {\n    if (data == null || data.Username == null || data.Pool == null) {\n      throw new Error('Username and Pool information are required.');\n    }\n\n    this.username = data.Username || '';\n    this.pool = data.Pool;\n    this.Session = null;\n    this.client = data.Pool.client;\n    this.signInUserSession = null;\n    this.authenticationFlowType = 'USER_SRP_AUTH';\n    this.storage = data.Storage || new StorageHelper().getStorage();\n    this.keyPrefix = \"CognitoIdentityServiceProvider.\" + this.pool.getClientId();\n    this.userDataKey = this.keyPrefix + \".\" + this.username + \".userData\";\n  }\n  /**\n   * Sets the session for this user\n   * @param {CognitoUserSession} signInUserSession the session\n   * @returns {void}\n   */\n\n\n  var _proto = CognitoUser.prototype;\n\n  _proto.setSignInUserSession = function setSignInUserSession(signInUserSession) {\n    this.clearCachedUserData();\n    this.signInUserSession = signInUserSession;\n    this.cacheTokens();\n  }\n  /**\n   * @returns {CognitoUserSession} the current session for this user\n   */\n  ;\n\n  _proto.getSignInUserSession = function getSignInUserSession() {\n    return this.signInUserSession;\n  }\n  /**\n   * @returns {string} the user's username\n   */\n  ;\n\n  _proto.getUsername = function getUsername() {\n    return this.username;\n  }\n  /**\n   * @returns {String} the authentication flow type\n   */\n  ;\n\n  _proto.getAuthenticationFlowType = function getAuthenticationFlowType() {\n    return this.authenticationFlowType;\n  }\n  /**\n   * sets authentication flow type\n   * @param {string} authenticationFlowType New value.\n   * @returns {void}\n   */\n  ;\n\n  _proto.setAuthenticationFlowType = function setAuthenticationFlowType(authenticationFlowType) {\n    this.authenticationFlowType = authenticationFlowType;\n  }\n  /**\n   * This is used for authenticating the user through the custom authentication flow.\n   * @param {AuthenticationDetails} authDetails Contains the authentication data\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {customChallenge} callback.customChallenge Custom challenge\n   *        response required to continue.\n   * @param {authSuccess} callback.onSuccess Called on success with the new session.\n   * @returns {void}\n   */\n  ;\n\n  _proto.initiateAuth = function initiateAuth(authDetails, callback) {\n    var _this = this;\n\n    var authParameters = authDetails.getAuthParameters();\n    authParameters.USERNAME = this.username;\n    var clientMetaData = Object.keys(authDetails.getValidationData()).length !== 0 ? authDetails.getValidationData() : authDetails.getClientMetadata();\n    var jsonReq = {\n      AuthFlow: 'CUSTOM_AUTH',\n      ClientId: this.pool.getClientId(),\n      AuthParameters: authParameters,\n      ClientMetadata: clientMetaData\n    };\n\n    if (this.getUserContextData()) {\n      jsonReq.UserContextData = this.getUserContextData();\n    }\n\n    this.client.request('InitiateAuth', jsonReq, function (err, data) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n\n      var challengeName = data.ChallengeName;\n      var challengeParameters = data.ChallengeParameters;\n\n      if (challengeName === 'CUSTOM_CHALLENGE') {\n        _this.Session = data.Session;\n        return callback.customChallenge(challengeParameters);\n      }\n\n      _this.signInUserSession = _this.getCognitoUserSession(data.AuthenticationResult);\n\n      _this.cacheTokens();\n\n      return callback.onSuccess(_this.signInUserSession);\n    });\n  }\n  /**\n   * This is used for authenticating the user.\n   * stuff\n   * @param {AuthenticationDetails} authDetails Contains the authentication data\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {newPasswordRequired} callback.newPasswordRequired new\n   *        password and any required attributes are required to continue\n   * @param {mfaRequired} callback.mfaRequired MFA code\n   *        required to continue.\n   * @param {customChallenge} callback.customChallenge Custom challenge\n   *        response required to continue.\n   * @param {authSuccess} callback.onSuccess Called on success with the new session.\n   * @returns {void}\n   */\n  ;\n\n  _proto.authenticateUser = function authenticateUser(authDetails, callback) {\n    if (this.authenticationFlowType === 'USER_PASSWORD_AUTH') {\n      return this.authenticateUserPlainUsernamePassword(authDetails, callback);\n    } else if (this.authenticationFlowType === 'USER_SRP_AUTH' || this.authenticationFlowType === 'CUSTOM_AUTH') {\n      return this.authenticateUserDefaultAuth(authDetails, callback);\n    }\n\n    return callback.onFailure(new Error('Authentication flow type is invalid.'));\n  }\n  /**\n   * PRIVATE ONLY: This is an internal only method and should not\n   * be directly called by the consumers.\n   * It calls the AuthenticationHelper for SRP related\n   * stuff\n   * @param {AuthenticationDetails} authDetails Contains the authentication data\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {newPasswordRequired} callback.newPasswordRequired new\n   *        password and any required attributes are required to continue\n   * @param {mfaRequired} callback.mfaRequired MFA code\n   *        required to continue.\n   * @param {customChallenge} callback.customChallenge Custom challenge\n   *        response required to continue.\n   * @param {authSuccess} callback.onSuccess Called on success with the new session.\n   * @returns {void}\n   */\n  ;\n\n  _proto.authenticateUserDefaultAuth = function authenticateUserDefaultAuth(authDetails, callback) {\n    var _this2 = this;\n\n    var authenticationHelper = new AuthenticationHelper(this.pool.getUserPoolId().split('_')[1]);\n    var dateHelper = new DateHelper();\n    var serverBValue;\n    var salt;\n    var authParameters = {};\n\n    if (this.deviceKey != null) {\n      authParameters.DEVICE_KEY = this.deviceKey;\n    }\n\n    authParameters.USERNAME = this.username;\n    authenticationHelper.getLargeAValue(function (errOnAValue, aValue) {\n      // getLargeAValue callback start\n      if (errOnAValue) {\n        callback.onFailure(errOnAValue);\n      }\n\n      authParameters.SRP_A = aValue.toString(16);\n\n      if (_this2.authenticationFlowType === 'CUSTOM_AUTH') {\n        authParameters.CHALLENGE_NAME = 'SRP_A';\n      }\n\n      var clientMetaData = Object.keys(authDetails.getValidationData()).length !== 0 ? authDetails.getValidationData() : authDetails.getClientMetadata();\n      var jsonReq = {\n        AuthFlow: _this2.authenticationFlowType,\n        ClientId: _this2.pool.getClientId(),\n        AuthParameters: authParameters,\n        ClientMetadata: clientMetaData\n      };\n\n      if (_this2.getUserContextData(_this2.username)) {\n        jsonReq.UserContextData = _this2.getUserContextData(_this2.username);\n      }\n\n      _this2.client.request('InitiateAuth', jsonReq, function (err, data) {\n        if (err) {\n          return callback.onFailure(err);\n        }\n\n        var challengeParameters = data.ChallengeParameters;\n        _this2.username = challengeParameters.USER_ID_FOR_SRP;\n        _this2.userDataKey = _this2.keyPrefix + \".\" + _this2.username + \".userData\";\n        serverBValue = new BigInteger(challengeParameters.SRP_B, 16);\n        salt = new BigInteger(challengeParameters.SALT, 16);\n\n        _this2.getCachedDeviceKeyAndPassword();\n\n        authenticationHelper.getPasswordAuthenticationKey(_this2.username, authDetails.getPassword(), serverBValue, salt, function (errOnHkdf, hkdf) {\n          // getPasswordAuthenticationKey callback start\n          if (errOnHkdf) {\n            callback.onFailure(errOnHkdf);\n          }\n\n          var dateNow = dateHelper.getNowString();\n          var message = CryptoJS.lib.WordArray.create(Buffer.concat([Buffer.from(_this2.pool.getUserPoolId().split('_')[1], 'utf8'), Buffer.from(_this2.username, 'utf8'), Buffer.from(challengeParameters.SECRET_BLOCK, 'base64'), Buffer.from(dateNow, 'utf8')]));\n          var key = CryptoJS.lib.WordArray.create(hkdf);\n          var signatureString = Base64.stringify(HmacSHA256(message, key));\n          var challengeResponses = {};\n          challengeResponses.USERNAME = _this2.username;\n          challengeResponses.PASSWORD_CLAIM_SECRET_BLOCK = challengeParameters.SECRET_BLOCK;\n          challengeResponses.TIMESTAMP = dateNow;\n          challengeResponses.PASSWORD_CLAIM_SIGNATURE = signatureString;\n\n          if (_this2.deviceKey != null) {\n            challengeResponses.DEVICE_KEY = _this2.deviceKey;\n          }\n\n          var respondToAuthChallenge = function respondToAuthChallenge(challenge, challengeCallback) {\n            return _this2.client.request('RespondToAuthChallenge', challenge, function (errChallenge, dataChallenge) {\n              if (errChallenge && errChallenge.code === 'ResourceNotFoundException' && errChallenge.message.toLowerCase().indexOf('device') !== -1) {\n                challengeResponses.DEVICE_KEY = null;\n                _this2.deviceKey = null;\n                _this2.randomPassword = null;\n                _this2.deviceGroupKey = null;\n\n                _this2.clearCachedDeviceKeyAndPassword();\n\n                return respondToAuthChallenge(challenge, challengeCallback);\n              }\n\n              return challengeCallback(errChallenge, dataChallenge);\n            });\n          };\n\n          var jsonReqResp = {\n            ChallengeName: 'PASSWORD_VERIFIER',\n            ClientId: _this2.pool.getClientId(),\n            ChallengeResponses: challengeResponses,\n            Session: data.Session,\n            ClientMetadata: clientMetaData\n          };\n\n          if (_this2.getUserContextData()) {\n            jsonReqResp.UserContextData = _this2.getUserContextData();\n          }\n\n          respondToAuthChallenge(jsonReqResp, function (errAuthenticate, dataAuthenticate) {\n            if (errAuthenticate) {\n              return callback.onFailure(errAuthenticate);\n            }\n\n            return _this2.authenticateUserInternal(dataAuthenticate, authenticationHelper, callback);\n          });\n          return undefined; // getPasswordAuthenticationKey callback end\n        });\n        return undefined;\n      }); // getLargeAValue callback end\n\n    });\n  }\n  /**\n   * PRIVATE ONLY: This is an internal only method and should not\n   * be directly called by the consumers.\n   * @param {AuthenticationDetails} authDetails Contains the authentication data.\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {mfaRequired} callback.mfaRequired MFA code\n   *        required to continue.\n   * @param {authSuccess} callback.onSuccess Called on success with the new session.\n   * @returns {void}\n   */\n  ;\n\n  _proto.authenticateUserPlainUsernamePassword = function authenticateUserPlainUsernamePassword(authDetails, callback) {\n    var _this3 = this;\n\n    var authParameters = {};\n    authParameters.USERNAME = this.username;\n    authParameters.PASSWORD = authDetails.getPassword();\n\n    if (!authParameters.PASSWORD) {\n      callback.onFailure(new Error('PASSWORD parameter is required'));\n      return;\n    }\n\n    var authenticationHelper = new AuthenticationHelper(this.pool.getUserPoolId().split('_')[1]);\n    this.getCachedDeviceKeyAndPassword();\n\n    if (this.deviceKey != null) {\n      authParameters.DEVICE_KEY = this.deviceKey;\n    }\n\n    var clientMetaData = Object.keys(authDetails.getValidationData()).length !== 0 ? authDetails.getValidationData() : authDetails.getClientMetadata();\n    var jsonReq = {\n      AuthFlow: 'USER_PASSWORD_AUTH',\n      ClientId: this.pool.getClientId(),\n      AuthParameters: authParameters,\n      ClientMetadata: clientMetaData\n    };\n\n    if (this.getUserContextData(this.username)) {\n      jsonReq.UserContextData = this.getUserContextData(this.username);\n    } // USER_PASSWORD_AUTH happens in a single round-trip: client sends userName and password,\n    // Cognito UserPools verifies password and returns tokens.\n\n\n    this.client.request('InitiateAuth', jsonReq, function (err, authResult) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n\n      return _this3.authenticateUserInternal(authResult, authenticationHelper, callback);\n    });\n  }\n  /**\n   * PRIVATE ONLY: This is an internal only method and should not\n   * be directly called by the consumers.\n   * @param {object} dataAuthenticate authentication data\n   * @param {object} authenticationHelper helper created\n   * @param {callback} callback passed on from caller\n   * @returns {void}\n   */\n  ;\n\n  _proto.authenticateUserInternal = function authenticateUserInternal(dataAuthenticate, authenticationHelper, callback) {\n    var _this4 = this;\n\n    var challengeName = dataAuthenticate.ChallengeName;\n    var challengeParameters = dataAuthenticate.ChallengeParameters;\n\n    if (challengeName === 'SMS_MFA') {\n      this.Session = dataAuthenticate.Session;\n      return callback.mfaRequired(challengeName, challengeParameters);\n    }\n\n    if (challengeName === 'SELECT_MFA_TYPE') {\n      this.Session = dataAuthenticate.Session;\n      return callback.selectMFAType(challengeName, challengeParameters);\n    }\n\n    if (challengeName === 'MFA_SETUP') {\n      this.Session = dataAuthenticate.Session;\n      return callback.mfaSetup(challengeName, challengeParameters);\n    }\n\n    if (challengeName === 'SOFTWARE_TOKEN_MFA') {\n      this.Session = dataAuthenticate.Session;\n      return callback.totpRequired(challengeName, challengeParameters);\n    }\n\n    if (challengeName === 'CUSTOM_CHALLENGE') {\n      this.Session = dataAuthenticate.Session;\n      return callback.customChallenge(challengeParameters);\n    }\n\n    if (challengeName === 'NEW_PASSWORD_REQUIRED') {\n      this.Session = dataAuthenticate.Session;\n      var userAttributes = null;\n      var rawRequiredAttributes = null;\n      var requiredAttributes = [];\n      var userAttributesPrefix = authenticationHelper.getNewPasswordRequiredChallengeUserAttributePrefix();\n\n      if (challengeParameters) {\n        userAttributes = JSON.parse(dataAuthenticate.ChallengeParameters.userAttributes);\n        rawRequiredAttributes = JSON.parse(dataAuthenticate.ChallengeParameters.requiredAttributes);\n      }\n\n      if (rawRequiredAttributes) {\n        for (var i = 0; i < rawRequiredAttributes.length; i++) {\n          requiredAttributes[i] = rawRequiredAttributes[i].substr(userAttributesPrefix.length);\n        }\n      }\n\n      return callback.newPasswordRequired(userAttributes, requiredAttributes);\n    }\n\n    if (challengeName === 'DEVICE_SRP_AUTH') {\n      this.getDeviceResponse(callback);\n      return undefined;\n    }\n\n    this.signInUserSession = this.getCognitoUserSession(dataAuthenticate.AuthenticationResult);\n    this.challengeName = challengeName;\n    this.cacheTokens();\n    var newDeviceMetadata = dataAuthenticate.AuthenticationResult.NewDeviceMetadata;\n\n    if (newDeviceMetadata == null) {\n      return callback.onSuccess(this.signInUserSession);\n    }\n\n    authenticationHelper.generateHashDevice(dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceGroupKey, dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceKey, function (errGenHash) {\n      if (errGenHash) {\n        return callback.onFailure(errGenHash);\n      }\n\n      var deviceSecretVerifierConfig = {\n        Salt: Buffer.from(authenticationHelper.getSaltDevices(), 'hex').toString('base64'),\n        PasswordVerifier: Buffer.from(authenticationHelper.getVerifierDevices(), 'hex').toString('base64')\n      };\n      _this4.verifierDevices = deviceSecretVerifierConfig.PasswordVerifier;\n      _this4.deviceGroupKey = newDeviceMetadata.DeviceGroupKey;\n      _this4.randomPassword = authenticationHelper.getRandomPassword();\n\n      _this4.client.request('ConfirmDevice', {\n        DeviceKey: newDeviceMetadata.DeviceKey,\n        AccessToken: _this4.signInUserSession.getAccessToken().getJwtToken(),\n        DeviceSecretVerifierConfig: deviceSecretVerifierConfig,\n        DeviceName: userAgent\n      }, function (errConfirm, dataConfirm) {\n        if (errConfirm) {\n          return callback.onFailure(errConfirm);\n        }\n\n        _this4.deviceKey = dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceKey;\n\n        _this4.cacheDeviceKeyAndPassword();\n\n        if (dataConfirm.UserConfirmationNecessary === true) {\n          return callback.onSuccess(_this4.signInUserSession, dataConfirm.UserConfirmationNecessary);\n        }\n\n        return callback.onSuccess(_this4.signInUserSession);\n      });\n\n      return undefined;\n    });\n    return undefined;\n  }\n  /**\n   * This method is user to complete the NEW_PASSWORD_REQUIRED challenge.\n   * Pass the new password with any new user attributes to be updated.\n   * User attribute keys must be of format userAttributes.<attribute_name>.\n   * @param {string} newPassword new password for this user\n   * @param {object} requiredAttributeData map with values for all required attributes\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {mfaRequired} callback.mfaRequired MFA code required to continue.\n   * @param {customChallenge} callback.customChallenge Custom challenge\n   *         response required to continue.\n   * @param {authSuccess} callback.onSuccess Called on success with the new session.\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\n   * @returns {void}\n   */\n  ;\n\n  _proto.completeNewPasswordChallenge = function completeNewPasswordChallenge(newPassword, requiredAttributeData, callback, clientMetadata) {\n    var _this5 = this;\n\n    if (!newPassword) {\n      return callback.onFailure(new Error('New password is required.'));\n    }\n\n    var authenticationHelper = new AuthenticationHelper(this.pool.getUserPoolId().split('_')[1]);\n    var userAttributesPrefix = authenticationHelper.getNewPasswordRequiredChallengeUserAttributePrefix();\n    var finalUserAttributes = {};\n\n    if (requiredAttributeData) {\n      Object.keys(requiredAttributeData).forEach(function (key) {\n        finalUserAttributes[userAttributesPrefix + key] = requiredAttributeData[key];\n      });\n    }\n\n    finalUserAttributes.NEW_PASSWORD = newPassword;\n    finalUserAttributes.USERNAME = this.username;\n    var jsonReq = {\n      ChallengeName: 'NEW_PASSWORD_REQUIRED',\n      ClientId: this.pool.getClientId(),\n      ChallengeResponses: finalUserAttributes,\n      Session: this.Session,\n      ClientMetadata: clientMetadata\n    };\n\n    if (this.getUserContextData()) {\n      jsonReq.UserContextData = this.getUserContextData();\n    }\n\n    this.client.request('RespondToAuthChallenge', jsonReq, function (errAuthenticate, dataAuthenticate) {\n      if (errAuthenticate) {\n        return callback.onFailure(errAuthenticate);\n      }\n\n      return _this5.authenticateUserInternal(dataAuthenticate, authenticationHelper, callback);\n    });\n    return undefined;\n  }\n  /**\n   * This is used to get a session using device authentication. It is called at the end of user\n   * authentication\n   *\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {authSuccess} callback.onSuccess Called on success with the new session.\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\n   * @returns {void}\n   * @private\n   */\n  ;\n\n  _proto.getDeviceResponse = function getDeviceResponse(callback, clientMetadata) {\n    var _this6 = this;\n\n    var authenticationHelper = new AuthenticationHelper(this.deviceGroupKey);\n    var dateHelper = new DateHelper();\n    var authParameters = {};\n    authParameters.USERNAME = this.username;\n    authParameters.DEVICE_KEY = this.deviceKey;\n    authenticationHelper.getLargeAValue(function (errAValue, aValue) {\n      // getLargeAValue callback start\n      if (errAValue) {\n        callback.onFailure(errAValue);\n      }\n\n      authParameters.SRP_A = aValue.toString(16);\n      var jsonReq = {\n        ChallengeName: 'DEVICE_SRP_AUTH',\n        ClientId: _this6.pool.getClientId(),\n        ChallengeResponses: authParameters,\n        ClientMetadata: clientMetadata\n      };\n\n      if (_this6.getUserContextData()) {\n        jsonReq.UserContextData = _this6.getUserContextData();\n      }\n\n      _this6.client.request('RespondToAuthChallenge', jsonReq, function (err, data) {\n        if (err) {\n          return callback.onFailure(err);\n        }\n\n        var challengeParameters = data.ChallengeParameters;\n        var serverBValue = new BigInteger(challengeParameters.SRP_B, 16);\n        var salt = new BigInteger(challengeParameters.SALT, 16);\n        authenticationHelper.getPasswordAuthenticationKey(_this6.deviceKey, _this6.randomPassword, serverBValue, salt, function (errHkdf, hkdf) {\n          // getPasswordAuthenticationKey callback start\n          if (errHkdf) {\n            return callback.onFailure(errHkdf);\n          }\n\n          var dateNow = dateHelper.getNowString();\n          var message = CryptoJS.lib.WordArray.create(Buffer.concat([Buffer.from(_this6.deviceGroupKey, 'utf8'), Buffer.from(_this6.deviceKey, 'utf8'), Buffer.from(challengeParameters.SECRET_BLOCK, 'base64'), Buffer.from(dateNow, 'utf8')]));\n          var key = CryptoJS.lib.WordArray.create(hkdf);\n          var signatureString = Base64.stringify(HmacSHA256(message, key));\n          var challengeResponses = {};\n          challengeResponses.USERNAME = _this6.username;\n          challengeResponses.PASSWORD_CLAIM_SECRET_BLOCK = challengeParameters.SECRET_BLOCK;\n          challengeResponses.TIMESTAMP = dateNow;\n          challengeResponses.PASSWORD_CLAIM_SIGNATURE = signatureString;\n          challengeResponses.DEVICE_KEY = _this6.deviceKey;\n          var jsonReqResp = {\n            ChallengeName: 'DEVICE_PASSWORD_VERIFIER',\n            ClientId: _this6.pool.getClientId(),\n            ChallengeResponses: challengeResponses,\n            Session: data.Session\n          };\n\n          if (_this6.getUserContextData()) {\n            jsonReqResp.UserContextData = _this6.getUserContextData();\n          }\n\n          _this6.client.request('RespondToAuthChallenge', jsonReqResp, function (errAuthenticate, dataAuthenticate) {\n            if (errAuthenticate) {\n              return callback.onFailure(errAuthenticate);\n            }\n\n            _this6.signInUserSession = _this6.getCognitoUserSession(dataAuthenticate.AuthenticationResult);\n\n            _this6.cacheTokens();\n\n            return callback.onSuccess(_this6.signInUserSession);\n          });\n\n          return undefined; // getPasswordAuthenticationKey callback end\n        });\n        return undefined;\n      }); // getLargeAValue callback end\n\n    });\n  }\n  /**\n   * This is used for a certain user to confirm the registration by using a confirmation code\n   * @param {string} confirmationCode Code entered by user.\n   * @param {bool} forceAliasCreation Allow migrating from an existing email / phone number.\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\n   * @returns {void}\n   */\n  ;\n\n  _proto.confirmRegistration = function confirmRegistration(confirmationCode, forceAliasCreation, callback, clientMetadata) {\n    var jsonReq = {\n      ClientId: this.pool.getClientId(),\n      ConfirmationCode: confirmationCode,\n      Username: this.username,\n      ForceAliasCreation: forceAliasCreation,\n      ClientMetadata: clientMetadata\n    };\n\n    if (this.getUserContextData()) {\n      jsonReq.UserContextData = this.getUserContextData();\n    }\n\n    this.client.request('ConfirmSignUp', jsonReq, function (err) {\n      if (err) {\n        return callback(err, null);\n      }\n\n      return callback(null, 'SUCCESS');\n    });\n  }\n  /**\n   * This is used by the user once he has the responses to a custom challenge\n   * @param {string} answerChallenge The custom challenge answer.\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {customChallenge} callback.customChallenge\n   *    Custom challenge response required to continue.\n   * @param {authSuccess} callback.onSuccess Called on success with the new session.\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\n   * @returns {void}\n   */\n  ;\n\n  _proto.sendCustomChallengeAnswer = function sendCustomChallengeAnswer(answerChallenge, callback, clientMetadata) {\n    var _this7 = this;\n\n    var challengeResponses = {};\n    challengeResponses.USERNAME = this.username;\n    challengeResponses.ANSWER = answerChallenge;\n    var authenticationHelper = new AuthenticationHelper(this.pool.getUserPoolId().split('_')[1]);\n    this.getCachedDeviceKeyAndPassword();\n\n    if (this.deviceKey != null) {\n      challengeResponses.DEVICE_KEY = this.deviceKey;\n    }\n\n    var jsonReq = {\n      ChallengeName: 'CUSTOM_CHALLENGE',\n      ChallengeResponses: challengeResponses,\n      ClientId: this.pool.getClientId(),\n      Session: this.Session,\n      ClientMetadata: clientMetadata\n    };\n\n    if (this.getUserContextData()) {\n      jsonReq.UserContextData = this.getUserContextData();\n    }\n\n    this.client.request('RespondToAuthChallenge', jsonReq, function (err, data) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n\n      return _this7.authenticateUserInternal(data, authenticationHelper, callback);\n    });\n  }\n  /**\n   * This is used by the user once he has an MFA code\n   * @param {string} confirmationCode The MFA code entered by the user.\n   * @param {object} callback Result callback map.\n   * @param {string} mfaType The mfa we are replying to.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {authSuccess} callback.onSuccess Called on success with the new session.\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\n   * @returns {void}\n   */\n  ;\n\n  _proto.sendMFACode = function sendMFACode(confirmationCode, callback, mfaType, clientMetadata) {\n    var _this8 = this;\n\n    var challengeResponses = {};\n    challengeResponses.USERNAME = this.username;\n    challengeResponses.SMS_MFA_CODE = confirmationCode;\n    var mfaTypeSelection = mfaType || 'SMS_MFA';\n\n    if (mfaTypeSelection === 'SOFTWARE_TOKEN_MFA') {\n      challengeResponses.SOFTWARE_TOKEN_MFA_CODE = confirmationCode;\n    }\n\n    if (this.deviceKey != null) {\n      challengeResponses.DEVICE_KEY = this.deviceKey;\n    }\n\n    var jsonReq = {\n      ChallengeName: mfaTypeSelection,\n      ChallengeResponses: challengeResponses,\n      ClientId: this.pool.getClientId(),\n      Session: this.Session,\n      ClientMetadata: clientMetadata\n    };\n\n    if (this.getUserContextData()) {\n      jsonReq.UserContextData = this.getUserContextData();\n    }\n\n    this.client.request('RespondToAuthChallenge', jsonReq, function (err, dataAuthenticate) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n\n      var challengeName = dataAuthenticate.ChallengeName;\n\n      if (challengeName === 'DEVICE_SRP_AUTH') {\n        _this8.getDeviceResponse(callback);\n\n        return undefined;\n      }\n\n      _this8.signInUserSession = _this8.getCognitoUserSession(dataAuthenticate.AuthenticationResult);\n\n      _this8.cacheTokens();\n\n      if (dataAuthenticate.AuthenticationResult.NewDeviceMetadata == null) {\n        return callback.onSuccess(_this8.signInUserSession);\n      }\n\n      var authenticationHelper = new AuthenticationHelper(_this8.pool.getUserPoolId().split('_')[1]);\n      authenticationHelper.generateHashDevice(dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceGroupKey, dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceKey, function (errGenHash) {\n        if (errGenHash) {\n          return callback.onFailure(errGenHash);\n        }\n\n        var deviceSecretVerifierConfig = {\n          Salt: Buffer.from(authenticationHelper.getSaltDevices(), 'hex').toString('base64'),\n          PasswordVerifier: Buffer.from(authenticationHelper.getVerifierDevices(), 'hex').toString('base64')\n        };\n        _this8.verifierDevices = deviceSecretVerifierConfig.PasswordVerifier;\n        _this8.deviceGroupKey = dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceGroupKey;\n        _this8.randomPassword = authenticationHelper.getRandomPassword();\n\n        _this8.client.request('ConfirmDevice', {\n          DeviceKey: dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceKey,\n          AccessToken: _this8.signInUserSession.getAccessToken().getJwtToken(),\n          DeviceSecretVerifierConfig: deviceSecretVerifierConfig,\n          DeviceName: userAgent\n        }, function (errConfirm, dataConfirm) {\n          if (errConfirm) {\n            return callback.onFailure(errConfirm);\n          }\n\n          _this8.deviceKey = dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceKey;\n\n          _this8.cacheDeviceKeyAndPassword();\n\n          if (dataConfirm.UserConfirmationNecessary === true) {\n            return callback.onSuccess(_this8.signInUserSession, dataConfirm.UserConfirmationNecessary);\n          }\n\n          return callback.onSuccess(_this8.signInUserSession);\n        });\n\n        return undefined;\n      });\n      return undefined;\n    });\n  }\n  /**\n   * This is used by an authenticated user to change the current password\n   * @param {string} oldUserPassword The current password.\n   * @param {string} newUserPassword The requested new password.\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\n   * @returns {void}\n   */\n  ;\n\n  _proto.changePassword = function changePassword(oldUserPassword, newUserPassword, callback, clientMetadata) {\n    if (!(this.signInUserSession != null && this.signInUserSession.isValid())) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n\n    this.client.request('ChangePassword', {\n      PreviousPassword: oldUserPassword,\n      ProposedPassword: newUserPassword,\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n      ClientMetadata: clientMetadata\n    }, function (err) {\n      if (err) {\n        return callback(err, null);\n      }\n\n      return callback(null, 'SUCCESS');\n    });\n    return undefined;\n  }\n  /**\n   * This is used by an authenticated user to enable MFA for itself\n   * @deprecated\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @returns {void}\n   */\n  ;\n\n  _proto.enableMFA = function enableMFA(callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n\n    var mfaOptions = [];\n    var mfaEnabled = {\n      DeliveryMedium: 'SMS',\n      AttributeName: 'phone_number'\n    };\n    mfaOptions.push(mfaEnabled);\n    this.client.request('SetUserSettings', {\n      MFAOptions: mfaOptions,\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n    }, function (err) {\n      if (err) {\n        return callback(err, null);\n      }\n\n      return callback(null, 'SUCCESS');\n    });\n    return undefined;\n  }\n  /**\n   * This is used by an authenticated user to enable MFA for itself\n   * @param {IMfaSettings} smsMfaSettings the sms mfa settings\n   * @param {IMFASettings} softwareTokenMfaSettings the software token mfa settings\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @returns {void}\n   */\n  ;\n\n  _proto.setUserMfaPreference = function setUserMfaPreference(smsMfaSettings, softwareTokenMfaSettings, callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n\n    this.client.request('SetUserMFAPreference', {\n      SMSMfaSettings: smsMfaSettings,\n      SoftwareTokenMfaSettings: softwareTokenMfaSettings,\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n    }, function (err) {\n      if (err) {\n        return callback(err, null);\n      }\n\n      return callback(null, 'SUCCESS');\n    });\n    return undefined;\n  }\n  /**\n   * This is used by an authenticated user to disable MFA for itself\n   * @deprecated\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @returns {void}\n   */\n  ;\n\n  _proto.disableMFA = function disableMFA(callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n\n    var mfaOptions = [];\n    this.client.request('SetUserSettings', {\n      MFAOptions: mfaOptions,\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n    }, function (err) {\n      if (err) {\n        return callback(err, null);\n      }\n\n      return callback(null, 'SUCCESS');\n    });\n    return undefined;\n  }\n  /**\n   * This is used by an authenticated user to delete itself\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\n   * @returns {void}\n   */\n  ;\n\n  _proto.deleteUser = function deleteUser(callback, clientMetadata) {\n    var _this9 = this;\n\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n\n    this.client.request('DeleteUser', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n      ClientMetadata: clientMetadata\n    }, function (err) {\n      if (err) {\n        return callback(err, null);\n      }\n\n      _this9.clearCachedUser();\n\n      return callback(null, 'SUCCESS');\n    });\n    return undefined;\n  }\n  /**\n   * @typedef {CognitoUserAttribute | { Name:string, Value:string }} AttributeArg\n   */\n\n  /**\n   * This is used by an authenticated user to change a list of attributes\n   * @param {AttributeArg[]} attributes A list of the new user attributes.\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\n   * @returns {void}\n   */\n  ;\n\n  _proto.updateAttributes = function updateAttributes(attributes, callback, clientMetadata) {\n    var _this10 = this;\n\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n\n    this.client.request('UpdateUserAttributes', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n      UserAttributes: attributes,\n      ClientMetadata: clientMetadata\n    }, function (err) {\n      if (err) {\n        return callback(err, null);\n      } // update cached user\n\n\n      return _this10.getUserData(function () {\n        return callback(null, 'SUCCESS');\n      }, {\n        bypassCache: true\n      });\n    });\n    return undefined;\n  }\n  /**\n   * This is used by an authenticated user to get a list of attributes\n   * @param {nodeCallback<CognitoUserAttribute[]>} callback Called on success or error.\n   * @returns {void}\n   */\n  ;\n\n  _proto.getUserAttributes = function getUserAttributes(callback) {\n    if (!(this.signInUserSession != null && this.signInUserSession.isValid())) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n\n    this.client.request('GetUser', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n    }, function (err, userData) {\n      if (err) {\n        return callback(err, null);\n      }\n\n      var attributeList = [];\n\n      for (var i = 0; i < userData.UserAttributes.length; i++) {\n        var attribute = {\n          Name: userData.UserAttributes[i].Name,\n          Value: userData.UserAttributes[i].Value\n        };\n        var userAttribute = new CognitoUserAttribute(attribute);\n        attributeList.push(userAttribute);\n      }\n\n      return callback(null, attributeList);\n    });\n    return undefined;\n  }\n  /**\n   * This is used by an authenticated user to get the MFAOptions\n   * @param {nodeCallback<MFAOptions>} callback Called on success or error.\n   * @returns {void}\n   */\n  ;\n\n  _proto.getMFAOptions = function getMFAOptions(callback) {\n    if (!(this.signInUserSession != null && this.signInUserSession.isValid())) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n\n    this.client.request('GetUser', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n    }, function (err, userData) {\n      if (err) {\n        return callback(err, null);\n      }\n\n      return callback(null, userData.MFAOptions);\n    });\n    return undefined;\n  }\n  /**\n   * PRIVATE ONLY: This is an internal only method and should not\n   * be directly called by the consumers.\n   */\n  ;\n\n  _proto.createGetUserRequest = function createGetUserRequest() {\n    return this.client.promisifyRequest('GetUser', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n    });\n  }\n  /**\n   * PRIVATE ONLY: This is an internal only method and should not\n   * be directly called by the consumers.\n   */\n  ;\n\n  _proto.refreshSessionIfPossible = function refreshSessionIfPossible(options) {\n    var _this11 = this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    // best effort, if not possible\n    return new Promise(function (resolve) {\n      var refresh = _this11.signInUserSession.getRefreshToken();\n\n      if (refresh && refresh.getToken()) {\n        _this11.refreshSession(refresh, resolve, options.clientMetadata);\n      } else {\n        resolve();\n      }\n    });\n  }\n  /**\n   * @typedef {Object} GetUserDataOptions\n   * @property {boolean} bypassCache - force getting data from Cognito service\n   * @property {Record<string, string>} clientMetadata - clientMetadata for getSession\n   */\n\n  /**\n   * This is used by an authenticated users to get the userData\n   * @param {nodeCallback<UserData>} callback Called on success or error.\n   * @param {GetUserDataOptions} params\n   * @returns {void}\n   */\n  ;\n\n  _proto.getUserData = function getUserData(callback, params) {\n    var _this12 = this;\n\n    if (!(this.signInUserSession != null && this.signInUserSession.isValid())) {\n      this.clearCachedUserData();\n      return callback(new Error('User is not authenticated'), null);\n    }\n\n    var userData = this.getUserDataFromCache();\n\n    if (!userData) {\n      this.fetchUserData().then(function (data) {\n        callback(null, data);\n      })[\"catch\"](callback);\n      return;\n    }\n\n    if (this.isFetchUserDataAndTokenRequired(params)) {\n      this.fetchUserData().then(function (data) {\n        return _this12.refreshSessionIfPossible(params).then(function () {\n          return data;\n        });\n      }).then(function (data) {\n        return callback(null, data);\n      })[\"catch\"](callback);\n      return;\n    }\n\n    try {\n      callback(null, JSON.parse(userData));\n      return;\n    } catch (err) {\n      this.clearCachedUserData();\n      callback(err, null);\n      return;\n    }\n  }\n  /**\n   *\n   * PRIVATE ONLY: This is an internal only method and should not\n   * be directly called by the consumers.\n   */\n  ;\n\n  _proto.getUserDataFromCache = function getUserDataFromCache() {\n    var userData = this.storage.getItem(this.userDataKey);\n    return userData;\n  }\n  /**\n   *\n   * PRIVATE ONLY: This is an internal only method and should not\n   * be directly called by the consumers.\n   */\n  ;\n\n  _proto.isFetchUserDataAndTokenRequired = function isFetchUserDataAndTokenRequired(params) {\n    var _ref = params || {},\n        _ref$bypassCache = _ref.bypassCache,\n        bypassCache = _ref$bypassCache === void 0 ? false : _ref$bypassCache;\n\n    return bypassCache;\n  }\n  /**\n   *\n   * PRIVATE ONLY: This is an internal only method and should not\n   * be directly called by the consumers.\n   */\n  ;\n\n  _proto.fetchUserData = function fetchUserData() {\n    var _this13 = this;\n\n    return this.createGetUserRequest().then(function (data) {\n      _this13.cacheUserData(data);\n\n      return data;\n    });\n  }\n  /**\n   * This is used by an authenticated user to delete a list of attributes\n   * @param {string[]} attributeList Names of the attributes to delete.\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @returns {void}\n   */\n  ;\n\n  _proto.deleteAttributes = function deleteAttributes(attributeList, callback) {\n    if (!(this.signInUserSession != null && this.signInUserSession.isValid())) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n\n    this.client.request('DeleteUserAttributes', {\n      UserAttributeNames: attributeList,\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n    }, function (err) {\n      if (err) {\n        return callback(err, null);\n      }\n\n      return callback(null, 'SUCCESS');\n    });\n    return undefined;\n  }\n  /**\n   * This is used by a user to resend a confirmation code\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\n   * @returns {void}\n   */\n  ;\n\n  _proto.resendConfirmationCode = function resendConfirmationCode(callback, clientMetadata) {\n    var jsonReq = {\n      ClientId: this.pool.getClientId(),\n      Username: this.username,\n      ClientMetadata: clientMetadata\n    };\n    this.client.request('ResendConfirmationCode', jsonReq, function (err, result) {\n      if (err) {\n        return callback(err, null);\n      }\n\n      return callback(null, result);\n    });\n  }\n  /**\n   * @typedef {Object} GetSessionOptions\n   * @property {Record<string, string>} clientMetadata - clientMetadata for getSession\n   */\n\n  /**\n   * This is used to get a session, either from the session object\n   * or from  the local storage, or by using a refresh token\n   *\n   * @param {nodeCallback<CognitoUserSession>} callback Called on success or error.\n   * @param {GetSessionOptions} options\n   * @returns {void}\n   */\n  ;\n\n  _proto.getSession = function getSession(callback, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (this.username == null) {\n      return callback(new Error('Username is null. Cannot retrieve a new session'), null);\n    }\n\n    if (this.signInUserSession != null && this.signInUserSession.isValid()) {\n      return callback(null, this.signInUserSession);\n    }\n\n    var keyPrefix = \"CognitoIdentityServiceProvider.\" + this.pool.getClientId() + \".\" + this.username;\n    var idTokenKey = keyPrefix + \".idToken\";\n    var accessTokenKey = keyPrefix + \".accessToken\";\n    var refreshTokenKey = keyPrefix + \".refreshToken\";\n    var clockDriftKey = keyPrefix + \".clockDrift\";\n\n    if (this.storage.getItem(idTokenKey)) {\n      var idToken = new CognitoIdToken({\n        IdToken: this.storage.getItem(idTokenKey)\n      });\n      var accessToken = new CognitoAccessToken({\n        AccessToken: this.storage.getItem(accessTokenKey)\n      });\n      var refreshToken = new CognitoRefreshToken({\n        RefreshToken: this.storage.getItem(refreshTokenKey)\n      });\n      var clockDrift = parseInt(this.storage.getItem(clockDriftKey), 0) || 0;\n      var sessionData = {\n        IdToken: idToken,\n        AccessToken: accessToken,\n        RefreshToken: refreshToken,\n        ClockDrift: clockDrift\n      };\n      var cachedSession = new CognitoUserSession(sessionData);\n\n      if (cachedSession.isValid()) {\n        this.signInUserSession = cachedSession;\n        return callback(null, this.signInUserSession);\n      }\n\n      if (!refreshToken.getToken()) {\n        return callback(new Error('Cannot retrieve a new session. Please authenticate.'), null);\n      }\n\n      this.refreshSession(refreshToken, callback, options.clientMetadata);\n    } else {\n      callback(new Error('Local storage is missing an ID Token, Please authenticate'), null);\n    }\n\n    return undefined;\n  }\n  /**\n   * This uses the refreshToken to retrieve a new session\n   * @param {CognitoRefreshToken} refreshToken A previous session's refresh token.\n   * @param {nodeCallback<CognitoUserSession>} callback Called on success or error.\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\n   * @returns {void}\n   */\n  ;\n\n  _proto.refreshSession = function refreshSession(refreshToken, callback, clientMetadata) {\n    var _this14 = this;\n\n    var wrappedCallback = this.pool.wrapRefreshSessionCallback ? this.pool.wrapRefreshSessionCallback(callback) : callback;\n    var authParameters = {};\n    authParameters.REFRESH_TOKEN = refreshToken.getToken();\n    var keyPrefix = \"CognitoIdentityServiceProvider.\" + this.pool.getClientId();\n    var lastUserKey = keyPrefix + \".LastAuthUser\";\n\n    if (this.storage.getItem(lastUserKey)) {\n      this.username = this.storage.getItem(lastUserKey);\n      var deviceKeyKey = keyPrefix + \".\" + this.username + \".deviceKey\";\n      this.deviceKey = this.storage.getItem(deviceKeyKey);\n      authParameters.DEVICE_KEY = this.deviceKey;\n    }\n\n    var jsonReq = {\n      ClientId: this.pool.getClientId(),\n      AuthFlow: 'REFRESH_TOKEN_AUTH',\n      AuthParameters: authParameters,\n      ClientMetadata: clientMetadata\n    };\n\n    if (this.getUserContextData()) {\n      jsonReq.UserContextData = this.getUserContextData();\n    }\n\n    this.client.request('InitiateAuth', jsonReq, function (err, authResult) {\n      if (err) {\n        if (err.code === 'NotAuthorizedException') {\n          _this14.clearCachedUser();\n        }\n\n        return wrappedCallback(err, null);\n      }\n\n      if (authResult) {\n        var authenticationResult = authResult.AuthenticationResult;\n\n        if (!Object.prototype.hasOwnProperty.call(authenticationResult, 'RefreshToken')) {\n          authenticationResult.RefreshToken = refreshToken.getToken();\n        }\n\n        _this14.signInUserSession = _this14.getCognitoUserSession(authenticationResult);\n\n        _this14.cacheTokens();\n\n        return wrappedCallback(null, _this14.signInUserSession);\n      }\n\n      return undefined;\n    });\n  }\n  /**\n   * This is used to save the session tokens to local storage\n   * @returns {void}\n   */\n  ;\n\n  _proto.cacheTokens = function cacheTokens() {\n    var keyPrefix = \"CognitoIdentityServiceProvider.\" + this.pool.getClientId();\n    var idTokenKey = keyPrefix + \".\" + this.username + \".idToken\";\n    var accessTokenKey = keyPrefix + \".\" + this.username + \".accessToken\";\n    var refreshTokenKey = keyPrefix + \".\" + this.username + \".refreshToken\";\n    var clockDriftKey = keyPrefix + \".\" + this.username + \".clockDrift\";\n    var lastUserKey = keyPrefix + \".LastAuthUser\";\n    this.storage.setItem(idTokenKey, this.signInUserSession.getIdToken().getJwtToken());\n    this.storage.setItem(accessTokenKey, this.signInUserSession.getAccessToken().getJwtToken());\n    this.storage.setItem(refreshTokenKey, this.signInUserSession.getRefreshToken().getToken());\n    this.storage.setItem(clockDriftKey, \"\" + this.signInUserSession.getClockDrift());\n    this.storage.setItem(lastUserKey, this.username);\n  }\n  /**\n   * This is to cache user data\n   */\n  ;\n\n  _proto.cacheUserData = function cacheUserData(userData) {\n    this.storage.setItem(this.userDataKey, JSON.stringify(userData));\n  }\n  /**\n   * This is to remove cached user data\n   */\n  ;\n\n  _proto.clearCachedUserData = function clearCachedUserData() {\n    this.storage.removeItem(this.userDataKey);\n  };\n\n  _proto.clearCachedUser = function clearCachedUser() {\n    this.clearCachedTokens();\n    this.clearCachedUserData();\n  }\n  /**\n   * This is used to cache the device key and device group and device password\n   * @returns {void}\n   */\n  ;\n\n  _proto.cacheDeviceKeyAndPassword = function cacheDeviceKeyAndPassword() {\n    var keyPrefix = \"CognitoIdentityServiceProvider.\" + this.pool.getClientId() + \".\" + this.username;\n    var deviceKeyKey = keyPrefix + \".deviceKey\";\n    var randomPasswordKey = keyPrefix + \".randomPasswordKey\";\n    var deviceGroupKeyKey = keyPrefix + \".deviceGroupKey\";\n    this.storage.setItem(deviceKeyKey, this.deviceKey);\n    this.storage.setItem(randomPasswordKey, this.randomPassword);\n    this.storage.setItem(deviceGroupKeyKey, this.deviceGroupKey);\n  }\n  /**\n   * This is used to get current device key and device group and device password\n   * @returns {void}\n   */\n  ;\n\n  _proto.getCachedDeviceKeyAndPassword = function getCachedDeviceKeyAndPassword() {\n    var keyPrefix = \"CognitoIdentityServiceProvider.\" + this.pool.getClientId() + \".\" + this.username;\n    var deviceKeyKey = keyPrefix + \".deviceKey\";\n    var randomPasswordKey = keyPrefix + \".randomPasswordKey\";\n    var deviceGroupKeyKey = keyPrefix + \".deviceGroupKey\";\n\n    if (this.storage.getItem(deviceKeyKey)) {\n      this.deviceKey = this.storage.getItem(deviceKeyKey);\n      this.randomPassword = this.storage.getItem(randomPasswordKey);\n      this.deviceGroupKey = this.storage.getItem(deviceGroupKeyKey);\n    }\n  }\n  /**\n   * This is used to clear the device key info from local storage\n   * @returns {void}\n   */\n  ;\n\n  _proto.clearCachedDeviceKeyAndPassword = function clearCachedDeviceKeyAndPassword() {\n    var keyPrefix = \"CognitoIdentityServiceProvider.\" + this.pool.getClientId() + \".\" + this.username;\n    var deviceKeyKey = keyPrefix + \".deviceKey\";\n    var randomPasswordKey = keyPrefix + \".randomPasswordKey\";\n    var deviceGroupKeyKey = keyPrefix + \".deviceGroupKey\";\n    this.storage.removeItem(deviceKeyKey);\n    this.storage.removeItem(randomPasswordKey);\n    this.storage.removeItem(deviceGroupKeyKey);\n  }\n  /**\n   * This is used to clear the session tokens from local storage\n   * @returns {void}\n   */\n  ;\n\n  _proto.clearCachedTokens = function clearCachedTokens() {\n    var keyPrefix = \"CognitoIdentityServiceProvider.\" + this.pool.getClientId();\n    var idTokenKey = keyPrefix + \".\" + this.username + \".idToken\";\n    var accessTokenKey = keyPrefix + \".\" + this.username + \".accessToken\";\n    var refreshTokenKey = keyPrefix + \".\" + this.username + \".refreshToken\";\n    var lastUserKey = keyPrefix + \".LastAuthUser\";\n    var clockDriftKey = keyPrefix + \".\" + this.username + \".clockDrift\";\n    this.storage.removeItem(idTokenKey);\n    this.storage.removeItem(accessTokenKey);\n    this.storage.removeItem(refreshTokenKey);\n    this.storage.removeItem(lastUserKey);\n    this.storage.removeItem(clockDriftKey);\n  }\n  /**\n   * This is used to build a user session from tokens retrieved in the authentication result\n   * @param {object} authResult Successful auth response from server.\n   * @returns {CognitoUserSession} The new user session.\n   * @private\n   */\n  ;\n\n  _proto.getCognitoUserSession = function getCognitoUserSession(authResult) {\n    var idToken = new CognitoIdToken(authResult);\n    var accessToken = new CognitoAccessToken(authResult);\n    var refreshToken = new CognitoRefreshToken(authResult);\n    var sessionData = {\n      IdToken: idToken,\n      AccessToken: accessToken,\n      RefreshToken: refreshToken\n    };\n    return new CognitoUserSession(sessionData);\n  }\n  /**\n   * This is used to initiate a forgot password request\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {inputVerificationCode?} callback.inputVerificationCode\n   *    Optional callback raised instead of onSuccess with response data.\n   * @param {onSuccess} callback.onSuccess Called on success.\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\n   * @returns {void}\n   */\n  ;\n\n  _proto.forgotPassword = function forgotPassword(callback, clientMetadata) {\n    var jsonReq = {\n      ClientId: this.pool.getClientId(),\n      Username: this.username,\n      ClientMetadata: clientMetadata\n    };\n\n    if (this.getUserContextData()) {\n      jsonReq.UserContextData = this.getUserContextData();\n    }\n\n    this.client.request('ForgotPassword', jsonReq, function (err, data) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n\n      if (typeof callback.inputVerificationCode === 'function') {\n        return callback.inputVerificationCode(data);\n      }\n\n      return callback.onSuccess(data);\n    });\n  }\n  /**\n   * This is used to confirm a new password using a confirmationCode\n   * @param {string} confirmationCode Code entered by user.\n   * @param {string} newPassword Confirm new password.\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess<void>} callback.onSuccess Called on success.\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\n   * @returns {void}\n   */\n  ;\n\n  _proto.confirmPassword = function confirmPassword(confirmationCode, newPassword, callback, clientMetadata) {\n    var jsonReq = {\n      ClientId: this.pool.getClientId(),\n      Username: this.username,\n      ConfirmationCode: confirmationCode,\n      Password: newPassword,\n      ClientMetadata: clientMetadata\n    };\n\n    if (this.getUserContextData()) {\n      jsonReq.UserContextData = this.getUserContextData();\n    }\n\n    this.client.request('ConfirmForgotPassword', jsonReq, function (err) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n\n      return callback.onSuccess();\n    });\n  }\n  /**\n   * This is used to initiate an attribute confirmation request\n   * @param {string} attributeName User attribute that needs confirmation.\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {inputVerificationCode} callback.inputVerificationCode Called on success.\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\n   * @returns {void}\n   */\n  ;\n\n  _proto.getAttributeVerificationCode = function getAttributeVerificationCode(attributeName, callback, clientMetadata) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback.onFailure(new Error('User is not authenticated'));\n    }\n\n    this.client.request('GetUserAttributeVerificationCode', {\n      AttributeName: attributeName,\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n      ClientMetadata: clientMetadata\n    }, function (err, data) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n\n      if (typeof callback.inputVerificationCode === 'function') {\n        return callback.inputVerificationCode(data);\n      }\n\n      return callback.onSuccess();\n    });\n    return undefined;\n  }\n  /**\n   * This is used to confirm an attribute using a confirmation code\n   * @param {string} attributeName Attribute being confirmed.\n   * @param {string} confirmationCode Code entered by user.\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess<string>} callback.onSuccess Called on success.\n   * @returns {void}\n   */\n  ;\n\n  _proto.verifyAttribute = function verifyAttribute(attributeName, confirmationCode, callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback.onFailure(new Error('User is not authenticated'));\n    }\n\n    this.client.request('VerifyUserAttribute', {\n      AttributeName: attributeName,\n      Code: confirmationCode,\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n    }, function (err) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n\n      return callback.onSuccess('SUCCESS');\n    });\n    return undefined;\n  }\n  /**\n   * This is used to get the device information using the current device key\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess<*>} callback.onSuccess Called on success with device data.\n   * @returns {void}\n   */\n  ;\n\n  _proto.getDevice = function getDevice(callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback.onFailure(new Error('User is not authenticated'));\n    }\n\n    this.client.request('GetDevice', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n      DeviceKey: this.deviceKey\n    }, function (err, data) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n\n      return callback.onSuccess(data);\n    });\n    return undefined;\n  }\n  /**\n   * This is used to forget a specific device\n   * @param {string} deviceKey Device key.\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess<string>} callback.onSuccess Called on success.\n   * @returns {void}\n   */\n  ;\n\n  _proto.forgetSpecificDevice = function forgetSpecificDevice(deviceKey, callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback.onFailure(new Error('User is not authenticated'));\n    }\n\n    this.client.request('ForgetDevice', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n      DeviceKey: deviceKey\n    }, function (err) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n\n      return callback.onSuccess('SUCCESS');\n    });\n    return undefined;\n  }\n  /**\n   * This is used to forget the current device\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess<string>} callback.onSuccess Called on success.\n   * @returns {void}\n   */\n  ;\n\n  _proto.forgetDevice = function forgetDevice(callback) {\n    var _this15 = this;\n\n    this.forgetSpecificDevice(this.deviceKey, {\n      onFailure: callback.onFailure,\n      onSuccess: function onSuccess(result) {\n        _this15.deviceKey = null;\n        _this15.deviceGroupKey = null;\n        _this15.randomPassword = null;\n\n        _this15.clearCachedDeviceKeyAndPassword();\n\n        return callback.onSuccess(result);\n      }\n    });\n  }\n  /**\n   * This is used to set the device status as remembered\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess<string>} callback.onSuccess Called on success.\n   * @returns {void}\n   */\n  ;\n\n  _proto.setDeviceStatusRemembered = function setDeviceStatusRemembered(callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback.onFailure(new Error('User is not authenticated'));\n    }\n\n    this.client.request('UpdateDeviceStatus', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n      DeviceKey: this.deviceKey,\n      DeviceRememberedStatus: 'remembered'\n    }, function (err) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n\n      return callback.onSuccess('SUCCESS');\n    });\n    return undefined;\n  }\n  /**\n   * This is used to set the device status as not remembered\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess<string>} callback.onSuccess Called on success.\n   * @returns {void}\n   */\n  ;\n\n  _proto.setDeviceStatusNotRemembered = function setDeviceStatusNotRemembered(callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback.onFailure(new Error('User is not authenticated'));\n    }\n\n    this.client.request('UpdateDeviceStatus', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n      DeviceKey: this.deviceKey,\n      DeviceRememberedStatus: 'not_remembered'\n    }, function (err) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n\n      return callback.onSuccess('SUCCESS');\n    });\n    return undefined;\n  }\n  /**\n   * This is used to list all devices for a user\n   *\n   * @param {int} limit the number of devices returned in a call\n   * @param {string | null} paginationToken the pagination token in case any was returned before\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess<*>} callback.onSuccess Called on success with device list.\n   * @returns {void}\n   */\n  ;\n\n  _proto.listDevices = function listDevices(limit, paginationToken, callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback.onFailure(new Error('User is not authenticated'));\n    }\n\n    var requestParams = {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n      Limit: limit\n    };\n\n    if (paginationToken) {\n      requestParams.PaginationToken = paginationToken;\n    }\n\n    this.client.request('ListDevices', requestParams, function (err, data) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n\n      return callback.onSuccess(data);\n    });\n    return undefined;\n  }\n  /**\n   * This is used to globally revoke all tokens issued to a user\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess<string>} callback.onSuccess Called on success.\n   * @returns {void}\n   */\n  ;\n\n  _proto.globalSignOut = function globalSignOut(callback) {\n    var _this16 = this;\n\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback.onFailure(new Error('User is not authenticated'));\n    }\n\n    this.client.request('GlobalSignOut', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n    }, function (err) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n\n      _this16.clearCachedUser();\n\n      return callback.onSuccess('SUCCESS');\n    });\n    return undefined;\n  }\n  /**\n   * This is used for the user to signOut of the application and clear the cached tokens.\n   * @returns {void}\n   */\n  ;\n\n  _proto.signOut = function signOut() {\n    this.signInUserSession = null;\n    this.clearCachedUser();\n  }\n  /**\n   * This is used by a user trying to select a given MFA\n   * @param {string} answerChallenge the mfa the user wants\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @returns {void}\n   */\n  ;\n\n  _proto.sendMFASelectionAnswer = function sendMFASelectionAnswer(answerChallenge, callback) {\n    var _this17 = this;\n\n    var challengeResponses = {};\n    challengeResponses.USERNAME = this.username;\n    challengeResponses.ANSWER = answerChallenge;\n    var jsonReq = {\n      ChallengeName: 'SELECT_MFA_TYPE',\n      ChallengeResponses: challengeResponses,\n      ClientId: this.pool.getClientId(),\n      Session: this.Session\n    };\n\n    if (this.getUserContextData()) {\n      jsonReq.UserContextData = this.getUserContextData();\n    }\n\n    this.client.request('RespondToAuthChallenge', jsonReq, function (err, data) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n\n      _this17.Session = data.Session;\n\n      if (answerChallenge === 'SMS_MFA') {\n        return callback.mfaRequired(data.ChallengeName, data.ChallengeParameters);\n      }\n\n      if (answerChallenge === 'SOFTWARE_TOKEN_MFA') {\n        return callback.totpRequired(data.ChallengeName, data.ChallengeParameters);\n      }\n\n      return undefined;\n    });\n  }\n  /**\n   * This returns the user context data for advanced security feature.\n   * @returns {void}\n   */\n  ;\n\n  _proto.getUserContextData = function getUserContextData() {\n    var pool = this.pool;\n    return pool.getUserContextData(this.username);\n  }\n  /**\n   * This is used by an authenticated or a user trying to authenticate to associate a TOTP MFA\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @returns {void}\n   */\n  ;\n\n  _proto.associateSoftwareToken = function associateSoftwareToken(callback) {\n    var _this18 = this;\n\n    if (!(this.signInUserSession != null && this.signInUserSession.isValid())) {\n      this.client.request('AssociateSoftwareToken', {\n        Session: this.Session\n      }, function (err, data) {\n        if (err) {\n          return callback.onFailure(err);\n        }\n\n        _this18.Session = data.Session;\n        return callback.associateSecretCode(data.SecretCode);\n      });\n    } else {\n      this.client.request('AssociateSoftwareToken', {\n        AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n      }, function (err, data) {\n        if (err) {\n          return callback.onFailure(err);\n        }\n\n        return callback.associateSecretCode(data.SecretCode);\n      });\n    }\n  }\n  /**\n   * This is used by an authenticated or a user trying to authenticate to verify a TOTP MFA\n   * @param {string} totpCode The MFA code entered by the user.\n   * @param {string} friendlyDeviceName The device name we are assigning to the device.\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @returns {void}\n   */\n  ;\n\n  _proto.verifySoftwareToken = function verifySoftwareToken(totpCode, friendlyDeviceName, callback) {\n    var _this19 = this;\n\n    if (!(this.signInUserSession != null && this.signInUserSession.isValid())) {\n      this.client.request('VerifySoftwareToken', {\n        Session: this.Session,\n        UserCode: totpCode,\n        FriendlyDeviceName: friendlyDeviceName\n      }, function (err, data) {\n        if (err) {\n          return callback.onFailure(err);\n        }\n\n        _this19.Session = data.Session;\n        var challengeResponses = {};\n        challengeResponses.USERNAME = _this19.username;\n        var jsonReq = {\n          ChallengeName: 'MFA_SETUP',\n          ClientId: _this19.pool.getClientId(),\n          ChallengeResponses: challengeResponses,\n          Session: _this19.Session\n        };\n\n        if (_this19.getUserContextData()) {\n          jsonReq.UserContextData = _this19.getUserContextData();\n        }\n\n        _this19.client.request('RespondToAuthChallenge', jsonReq, function (errRespond, dataRespond) {\n          if (errRespond) {\n            return callback.onFailure(errRespond);\n          }\n\n          _this19.signInUserSession = _this19.getCognitoUserSession(dataRespond.AuthenticationResult);\n\n          _this19.cacheTokens();\n\n          return callback.onSuccess(_this19.signInUserSession);\n        });\n\n        return undefined;\n      });\n    } else {\n      this.client.request('VerifySoftwareToken', {\n        AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n        UserCode: totpCode,\n        FriendlyDeviceName: friendlyDeviceName\n      }, function (err, data) {\n        if (err) {\n          return callback.onFailure(err);\n        }\n\n        return callback.onSuccess(data);\n      });\n    }\n  };\n\n  return CognitoUser;\n}();\n\nexport { CognitoUser as default };","// constructor\nfunction UserAgent() {} // public\n\n\nUserAgent.prototype.userAgent = 'aws-amplify/0.1.x js';\nexport var appendToCognitoUserAgent = function appendToCognitoUserAgent(content) {\n  if (!content) {\n    return;\n  }\n\n  if (UserAgent.prototype.userAgent && !UserAgent.prototype.userAgent.includes(content)) {\n    UserAgent.prototype.userAgent = UserAgent.prototype.userAgent.concat(' ', content);\n  }\n\n  if (!UserAgent.prototype.userAgent || UserAgent.prototype.userAgent === '') {\n    UserAgent.prototype.userAgent = content;\n  }\n}; // class for defining the amzn user-agent\n\nexport default UserAgent;","function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport 'isomorphic-unfetch';\nimport UserAgent from './UserAgent';\n\nvar CognitoError = /*#__PURE__*/function (_Error) {\n  _inheritsLoose(CognitoError, _Error);\n\n  function CognitoError(message, code, name, statusCode) {\n    var _this;\n\n    _this = _Error.call(this, message) || this;\n    _this.code = code;\n    _this.name = name;\n    _this.statusCode = statusCode;\n    return _this;\n  }\n\n  return CognitoError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n/** @class */\n\n\nvar Client = /*#__PURE__*/function () {\n  /**\n   * Constructs a new AWS Cognito Identity Provider client object\n   * @param {string} region AWS region\n   * @param {string} endpoint endpoint\n   * @param {object} fetchOptions options for fetch API (only credentials is supported)\n   */\n  function Client(region, endpoint, fetchOptions) {\n    this.endpoint = endpoint || \"https://cognito-idp.\" + region + \".amazonaws.com/\";\n\n    var _ref = fetchOptions || {},\n        credentials = _ref.credentials;\n\n    this.fetchOptions = credentials ? {\n      credentials: credentials\n    } : {};\n  }\n  /**\n   * Makes an unauthenticated request on AWS Cognito Identity Provider API\n   * using fetch\n   * @param {string} operation API operation\n   * @param {object} params Input parameters\n   * @returns Promise<object>\n   */\n\n\n  var _proto = Client.prototype;\n\n  _proto.promisifyRequest = function promisifyRequest(operation, params) {\n    var _this2 = this;\n\n    return new Promise(function (resolve, reject) {\n      _this2.request(operation, params, function (err, data) {\n        if (err) {\n          reject(new CognitoError(err.message, err.code, err.name, err.statusCode));\n        } else {\n          resolve(data);\n        }\n      });\n    });\n  }\n  /**\n   * Makes an unauthenticated request on AWS Cognito Identity Provider API\n   * using fetch\n   * @param {string} operation API operation\n   * @param {object} params Input parameters\n   * @param {function} callback Callback called when a response is returned\n   * @returns {void}\n   */\n  ;\n\n  _proto.request = function request(operation, params, callback) {\n    var headers = {\n      'Content-Type': 'application/x-amz-json-1.1',\n      'X-Amz-Target': \"AWSCognitoIdentityProviderService.\" + operation,\n      'X-Amz-User-Agent': UserAgent.prototype.userAgent\n    };\n    var options = Object.assign({}, this.fetchOptions, {\n      headers: headers,\n      method: 'POST',\n      mode: 'cors',\n      cache: 'no-cache',\n      body: JSON.stringify(params)\n    });\n    var response;\n    var responseJsonData;\n    fetch(this.endpoint, options).then(function (resp) {\n      response = resp;\n      return resp;\n    }, function (err) {\n      // If error happens here, the request failed\n      // if it is TypeError throw network error\n      if (err instanceof TypeError) {\n        throw new Error('Network error');\n      }\n\n      throw err;\n    }).then(function (resp) {\n      return resp.json()[\"catch\"](function () {\n        return {};\n      });\n    }).then(function (data) {\n      // return parsed body stream\n      if (response.ok) return callback(null, data);\n      responseJsonData = data; // Taken from aws-sdk-js/lib/protocol/json.js\n      // eslint-disable-next-line no-underscore-dangle\n\n      var code = (data.__type || data.code).split('#').pop();\n      var error = {\n        code: code,\n        name: code,\n        message: data.message || data.Message || null\n      };\n      return callback(error);\n    })[\"catch\"](function (err) {\n      // first check if we have a service error\n      if (response && response.headers && response.headers.get('x-amzn-errortype')) {\n        try {\n          var code = response.headers.get('x-amzn-errortype').split(':')[0];\n          var error = {\n            code: code,\n            name: code,\n            statusCode: response.status,\n            message: response.status ? response.status.toString() : null\n          };\n          return callback(error);\n        } catch (ex) {\n          return callback(err);\n        } // otherwise check if error is Network error\n\n      } else if (err instanceof Error && err.message === 'Network error') {\n        var _error = {\n          code: 'NetworkError',\n          name: err.name,\n          message: err.message\n        };\n        return callback(_error);\n      } else {\n        return callback(err);\n      }\n    });\n  };\n\n  return Client;\n}();\n\nexport { Client as default };","/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\nimport Client from './Client';\nimport CognitoUser from './CognitoUser';\nimport StorageHelper from './StorageHelper';\n/** @class */\n\nvar CognitoUserPool = /*#__PURE__*/function () {\n  /**\n   * Constructs a new CognitoUserPool object\n   * @param {object} data Creation options.\n   * @param {string} data.UserPoolId Cognito user pool id.\n   * @param {string} data.ClientId User pool application client id.\n   * @param {string} data.endpoint Optional custom service endpoint.\n   * @param {object} data.fetchOptions Optional options for fetch API.\n   *        (only credentials option is supported)\n   * @param {object} data.Storage Optional storage object.\n   * @param {boolean} data.AdvancedSecurityDataCollectionFlag Optional:\n   *        boolean flag indicating if the data collection is enabled\n   *        to support cognito advanced security features. By default, this\n   *        flag is set to true.\n   */\n  function CognitoUserPool(data, wrapRefreshSessionCallback) {\n    var _ref = data || {},\n        UserPoolId = _ref.UserPoolId,\n        ClientId = _ref.ClientId,\n        endpoint = _ref.endpoint,\n        fetchOptions = _ref.fetchOptions,\n        AdvancedSecurityDataCollectionFlag = _ref.AdvancedSecurityDataCollectionFlag;\n\n    if (!UserPoolId || !ClientId) {\n      throw new Error('Both UserPoolId and ClientId are required.');\n    }\n\n    if (!/^[\\w-]+_.+$/.test(UserPoolId)) {\n      throw new Error('Invalid UserPoolId format.');\n    }\n\n    var region = UserPoolId.split('_')[0];\n    this.userPoolId = UserPoolId;\n    this.clientId = ClientId;\n    this.client = new Client(region, endpoint, fetchOptions);\n    /**\n     * By default, AdvancedSecurityDataCollectionFlag is set to true,\n     * if no input value is provided.\n     */\n\n    this.advancedSecurityDataCollectionFlag = AdvancedSecurityDataCollectionFlag !== false;\n    this.storage = data.Storage || new StorageHelper().getStorage();\n\n    if (wrapRefreshSessionCallback) {\n      this.wrapRefreshSessionCallback = wrapRefreshSessionCallback;\n    }\n  }\n  /**\n   * @returns {string} the user pool id\n   */\n\n\n  var _proto = CognitoUserPool.prototype;\n\n  _proto.getUserPoolId = function getUserPoolId() {\n    return this.userPoolId;\n  }\n  /**\n   * @returns {string} the client id\n   */\n  ;\n\n  _proto.getClientId = function getClientId() {\n    return this.clientId;\n  }\n  /**\n   * @typedef {object} SignUpResult\n   * @property {CognitoUser} user New user.\n   * @property {bool} userConfirmed If the user is already confirmed.\n   */\n\n  /**\n   * method for signing up a user\n   * @param {string} username User's username.\n   * @param {string} password Plain-text initial password entered by user.\n   * @param {(AttributeArg[])=} userAttributes New user attributes.\n   * @param {(AttributeArg[])=} validationData Application metadata.\n   * @param {(AttributeArg[])=} clientMetadata Client metadata.\n   * @param {nodeCallback<SignUpResult>} callback Called on error or with the new user.\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\n   * @returns {void}\n   */\n  ;\n\n  _proto.signUp = function signUp(username, password, userAttributes, validationData, callback, clientMetadata) {\n    var _this = this;\n\n    var jsonReq = {\n      ClientId: this.clientId,\n      Username: username,\n      Password: password,\n      UserAttributes: userAttributes,\n      ValidationData: validationData,\n      ClientMetadata: clientMetadata\n    };\n\n    if (this.getUserContextData(username)) {\n      jsonReq.UserContextData = this.getUserContextData(username);\n    }\n\n    this.client.request('SignUp', jsonReq, function (err, data) {\n      if (err) {\n        return callback(err, null);\n      }\n\n      var cognitoUser = {\n        Username: username,\n        Pool: _this,\n        Storage: _this.storage\n      };\n      var returnData = {\n        user: new CognitoUser(cognitoUser),\n        userConfirmed: data.UserConfirmed,\n        userSub: data.UserSub,\n        codeDeliveryDetails: data.CodeDeliveryDetails\n      };\n      return callback(null, returnData);\n    });\n  }\n  /**\n   * method for getting the current user of the application from the local storage\n   *\n   * @returns {CognitoUser} the user retrieved from storage\n   */\n  ;\n\n  _proto.getCurrentUser = function getCurrentUser() {\n    var lastUserKey = \"CognitoIdentityServiceProvider.\" + this.clientId + \".LastAuthUser\";\n    var lastAuthUser = this.storage.getItem(lastUserKey);\n\n    if (lastAuthUser) {\n      var cognitoUser = {\n        Username: lastAuthUser,\n        Pool: this,\n        Storage: this.storage\n      };\n      return new CognitoUser(cognitoUser);\n    }\n\n    return null;\n  }\n  /**\n   * This method returns the encoded data string used for cognito advanced security feature.\n   * This would be generated only when developer has included the JS used for collecting the\n   * data on their client. Please refer to documentation to know more about using AdvancedSecurity\n   * features\n   * @param {string} username the username for the context data\n   * @returns {string} the user context data\n   **/\n  ;\n\n  _proto.getUserContextData = function getUserContextData(username) {\n    if (typeof AmazonCognitoAdvancedSecurityData === 'undefined') {\n      return undefined;\n    }\n    /* eslint-disable */\n\n\n    var amazonCognitoAdvancedSecurityDataConst = AmazonCognitoAdvancedSecurityData;\n    /* eslint-enable */\n\n    if (this.advancedSecurityDataCollectionFlag) {\n      var advancedSecurityData = amazonCognitoAdvancedSecurityDataConst.getData(username, this.userPoolId, this.clientId);\n\n      if (advancedSecurityData) {\n        var userContextData = {\n          EncodedData: advancedSecurityData\n        };\n        return userContextData;\n      }\n    }\n\n    return {};\n  };\n\n  return CognitoUserPool;\n}();\n\nexport { CognitoUserPool as default };","import BrowserStorage from '../Background/BackgroundTools/BrowserStorage';\r\nimport { StorageKeys } from '../Background/BackgroundTools/StorageKeys';\r\n\r\nlet dataMemory = {};\r\n\r\n// As per https://docs.amplify.aws/lib/auth/manageusers/q/platform/js#managing-security-tokens\r\nexport class TokenStorage {\r\n    static syncPromise = null;\r\n\r\n    static async setItem(key, value) {\r\n        BrowserStorage.setKey(key, value)\r\n        .then(() => {\r\n            dataMemory[key] = value;\r\n        });\r\n    }\r\n\r\n    // get item with the key\r\n    static getItem(key) {\r\n        // return BrowserStorage.getKey(key);\r\n        return Object.prototype.hasOwnProperty.call(dataMemory, key) ? dataMemory[key] : undefined;\r\n    }\r\n\r\n    // remove item with the key\r\n    static removeItem(key) {\r\n        BrowserStorage.clearKey(key).then(() => {\r\n            return delete dataMemory[key];\r\n        });\r\n    }\r\n\r\n    // clear out the storage\r\n    static clear() {\r\n        dataMemory = {};\r\n        return dataMemory;\r\n    }\r\n\r\n    static sync() {\r\n        if (!TokenStorage.syncPromise) {\r\n            TokenStorage.syncPromise =  new Promise((resolve, reject) => {\r\n                BrowserStorage.getAll()\r\n                .then((items) => {\r\n                    const filteredKeys = Object.keys(items).filter( (key) => key.startsWith(StorageKeys.Cognito) );\r\n                    filteredKeys.map( (key) => dataMemory[key] = items[key] );\r\n                    resolve();\r\n                })\r\n            });\r\n        }\r\n        return TokenStorage.syncPromise;\r\n    }\r\n  }","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nexport default function _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}","import b64 from 'base64-arraybuffer';\n\nexport class Crypto {\n    static async pbkdf2Key(password, salt, iterations=100000) {\n        const keyMaterial = await crypto.subtle.importKey(\n          'raw',\n          password,\n          'PBKDF2',\n          false,\n          ['deriveKey', 'deriveBits']);\n    \n        const key = await crypto.subtle.deriveKey({\n          name: 'PBKDF2',\n          hash: 'SHA-256',\n          salt: salt,\n          iterations: iterations\n        }, keyMaterial, {\n          name: 'AES-GCM',\n          length: 256\n        }, true, ['encrypt', 'decrypt']);\n    \n        return key;\n    }\n\n    static async generateKEK(password, salt) {\n        const KEK = await this.pbkdf2Key(password, salt);\n\n        return KEK;\n    }\n\n    static async generateDEK() {\n        const DEK = await crypto.subtle.generateKey(\n            {\n                name: \"AES-GCM\",\n                length: 256\n            },\n            true,\n            ['encrypt', 'decrypt']\n        );\n\n        const exportedDEK = await crypto.subtle.exportKey('raw', DEK);\n        return exportedDEK;\n    }\n\n    static async encrypt(payload, key, iv) {\n        if (iv === undefined) {\n            iv = new Uint8Array(12);\n            iv = crypto.getRandomValues(iv);\n        }\n\n        if (typeof(key) !== 'object') {\n            key = await crypto.subtle.importKey(\n                    'raw', \n                    b64.decode(key),\n                    \"AES-GCM\",\n                    false,\n                    [\"encrypt\", \"decrypt\"]\n                );\n        };\n\n        const cipher = await crypto.subtle.encrypt(\n            {\n              name: \"AES-GCM\",\n              iv: iv\n            },\n            key,\n            payload\n          );\n\n        return {\n            ciphertext: b64.encode(cipher),\n            iv: b64.encode(iv)\n        }\n    }\n\n    static async decrypt(payload, key, iv) {\n\n        if (typeof(key) !== 'object') {\n            key = await crypto.subtle.importKey(\n                    'raw', \n                    b64.decode(key),\n                    \"AES-GCM\",\n                    false,\n                    [\"encrypt\", \"decrypt\"]\n                );\n        };\n\n        try {\n            const decryptedP = \n                await crypto.subtle.decrypt( {\n                        name: \"AES-GCM\",\n                        iv: iv\n                    },\n                    key,\n                    payload\n                );\n                \n\n            return b64.encode(decryptedP);\n        } catch(e) {\n            throw new Error(e);\n        }\n    }\n    \n}","import defineProperty from \"./defineProperty.js\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? Object(arguments[i]) : {};\n    var ownKeys = Object.keys(source);\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys.push.apply(ownKeys, Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n  return target;\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import _typeof from '@babel/runtime/helpers/esm/typeof';\nimport _objectSpread from '@babel/runtime/helpers/esm/objectSpread';\nimport _classCallCheck from '@babel/runtime/helpers/esm/classCallCheck';\nimport _createClass from '@babel/runtime/helpers/esm/createClass';\nimport _possibleConstructorReturn from '@babel/runtime/helpers/esm/possibleConstructorReturn';\nimport _getPrototypeOf from '@babel/runtime/helpers/esm/getPrototypeOf';\nimport _assertThisInitialized from '@babel/runtime/helpers/esm/assertThisInitialized';\nimport _inherits from '@babel/runtime/helpers/esm/inherits';\n\nvar consoleLogger = {\n  type: 'logger',\n  log: function log(args) {\n    this.output('log', args);\n  },\n  warn: function warn(args) {\n    this.output('warn', args);\n  },\n  error: function error(args) {\n    this.output('error', args);\n  },\n  output: function output(type, args) {\n    if (console && console[type]) console[type].apply(console, args);\n  }\n};\n\nvar Logger = function () {\n  function Logger(concreteLogger) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Logger);\n\n    this.init(concreteLogger, options);\n  }\n\n  _createClass(Logger, [{\n    key: \"init\",\n    value: function init(concreteLogger) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.prefix = options.prefix || 'i18next:';\n      this.logger = concreteLogger || consoleLogger;\n      this.options = options;\n      this.debug = options.debug;\n    }\n  }, {\n    key: \"setDebug\",\n    value: function setDebug(bool) {\n      this.debug = bool;\n    }\n  }, {\n    key: \"log\",\n    value: function log() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return this.forward(args, 'log', '', true);\n    }\n  }, {\n    key: \"warn\",\n    value: function warn() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return this.forward(args, 'warn', '', true);\n    }\n  }, {\n    key: \"error\",\n    value: function error() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      return this.forward(args, 'error', '');\n    }\n  }, {\n    key: \"deprecate\",\n    value: function deprecate() {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      return this.forward(args, 'warn', 'WARNING DEPRECATED: ', true);\n    }\n  }, {\n    key: \"forward\",\n    value: function forward(args, lvl, prefix, debugOnly) {\n      if (debugOnly && !this.debug) return null;\n      if (typeof args[0] === 'string') args[0] = \"\".concat(prefix).concat(this.prefix, \" \").concat(args[0]);\n      return this.logger[lvl](args);\n    }\n  }, {\n    key: \"create\",\n    value: function create(moduleName) {\n      return new Logger(this.logger, _objectSpread({}, {\n        prefix: \"\".concat(this.prefix, \":\").concat(moduleName, \":\")\n      }, this.options));\n    }\n  }]);\n\n  return Logger;\n}();\n\nvar baseLogger = new Logger();\n\nvar EventEmitter = function () {\n  function EventEmitter() {\n    _classCallCheck(this, EventEmitter);\n\n    this.observers = {};\n  }\n\n  _createClass(EventEmitter, [{\n    key: \"on\",\n    value: function on(events, listener) {\n      var _this = this;\n\n      events.split(' ').forEach(function (event) {\n        _this.observers[event] = _this.observers[event] || [];\n\n        _this.observers[event].push(listener);\n      });\n      return this;\n    }\n  }, {\n    key: \"off\",\n    value: function off(event, listener) {\n      if (!this.observers[event]) return;\n\n      if (!listener) {\n        delete this.observers[event];\n        return;\n      }\n\n      this.observers[event] = this.observers[event].filter(function (l) {\n        return l !== listener;\n      });\n    }\n  }, {\n    key: \"emit\",\n    value: function emit(event) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      if (this.observers[event]) {\n        var cloned = [].concat(this.observers[event]);\n        cloned.forEach(function (observer) {\n          observer.apply(void 0, args);\n        });\n      }\n\n      if (this.observers['*']) {\n        var _cloned = [].concat(this.observers['*']);\n\n        _cloned.forEach(function (observer) {\n          observer.apply(observer, [event].concat(args));\n        });\n      }\n    }\n  }]);\n\n  return EventEmitter;\n}();\n\nfunction defer() {\n  var res;\n  var rej;\n  var promise = new Promise(function (resolve, reject) {\n    res = resolve;\n    rej = reject;\n  });\n  promise.resolve = res;\n  promise.reject = rej;\n  return promise;\n}\nfunction makeString(object) {\n  if (object == null) return '';\n  return '' + object;\n}\nfunction copy(a, s, t) {\n  a.forEach(function (m) {\n    if (s[m]) t[m] = s[m];\n  });\n}\n\nfunction getLastOfPath(object, path, Empty) {\n  function cleanKey(key) {\n    return key && key.indexOf('###') > -1 ? key.replace(/###/g, '.') : key;\n  }\n\n  function canNotTraverseDeeper() {\n    return !object || typeof object === 'string';\n  }\n\n  var stack = typeof path !== 'string' ? [].concat(path) : path.split('.');\n\n  while (stack.length > 1) {\n    if (canNotTraverseDeeper()) return {};\n    var key = cleanKey(stack.shift());\n    if (!object[key] && Empty) object[key] = new Empty();\n\n    if (Object.prototype.hasOwnProperty.call(object, key)) {\n      object = object[key];\n    } else {\n      object = {};\n    }\n  }\n\n  if (canNotTraverseDeeper()) return {};\n  return {\n    obj: object,\n    k: cleanKey(stack.shift())\n  };\n}\n\nfunction setPath(object, path, newValue) {\n  var _getLastOfPath = getLastOfPath(object, path, Object),\n      obj = _getLastOfPath.obj,\n      k = _getLastOfPath.k;\n\n  obj[k] = newValue;\n}\nfunction pushPath(object, path, newValue, concat) {\n  var _getLastOfPath2 = getLastOfPath(object, path, Object),\n      obj = _getLastOfPath2.obj,\n      k = _getLastOfPath2.k;\n\n  obj[k] = obj[k] || [];\n  if (concat) obj[k] = obj[k].concat(newValue);\n  if (!concat) obj[k].push(newValue);\n}\nfunction getPath(object, path) {\n  var _getLastOfPath3 = getLastOfPath(object, path),\n      obj = _getLastOfPath3.obj,\n      k = _getLastOfPath3.k;\n\n  if (!obj) return undefined;\n  return obj[k];\n}\nfunction getPathWithDefaults(data, defaultData, key) {\n  var value = getPath(data, key);\n\n  if (value !== undefined) {\n    return value;\n  }\n\n  return getPath(defaultData, key);\n}\nfunction deepExtend(target, source, overwrite) {\n  for (var prop in source) {\n    if (prop !== '__proto__' && prop !== 'constructor') {\n      if (prop in target) {\n        if (typeof target[prop] === 'string' || target[prop] instanceof String || typeof source[prop] === 'string' || source[prop] instanceof String) {\n          if (overwrite) target[prop] = source[prop];\n        } else {\n          deepExtend(target[prop], source[prop], overwrite);\n        }\n      } else {\n        target[prop] = source[prop];\n      }\n    }\n  }\n\n  return target;\n}\nfunction regexEscape(str) {\n  return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n}\nvar _entityMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n  '/': '&#x2F;'\n};\nfunction escape(data) {\n  if (typeof data === 'string') {\n    return data.replace(/[&<>\"'\\/]/g, function (s) {\n      return _entityMap[s];\n    });\n  }\n\n  return data;\n}\nvar isIE10 = typeof window !== 'undefined' && window.navigator && window.navigator.userAgent && window.navigator.userAgent.indexOf('MSIE') > -1;\n\nfunction deepFind(obj, path) {\n  var keySeparator = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '.';\n  if (!obj) return undefined;\n  if (obj[path]) return obj[path];\n  var paths = path.split(keySeparator);\n  var current = obj;\n\n  for (var i = 0; i < paths.length; ++i) {\n    if (typeof current[paths[i]] === 'string' && i + 1 < paths.length) {\n      return undefined;\n    }\n\n    if (current[paths[i]] === undefined) {\n      var j = 2;\n      var p = paths.slice(i, i + j).join(keySeparator);\n      var mix = current[p];\n\n      while (mix === undefined && paths.length > i + j) {\n        j++;\n        p = paths.slice(i, i + j).join(keySeparator);\n        mix = current[p];\n      }\n\n      if (mix === undefined) return undefined;\n      if (typeof mix === 'string') return mix;\n      if (p && typeof mix[p] === 'string') return mix[p];\n      var joinedPath = paths.slice(i + j).join(keySeparator);\n      if (joinedPath) return deepFind(mix, joinedPath, keySeparator);\n      return undefined;\n    }\n\n    current = current[paths[i]];\n  }\n\n  return current;\n}\n\nvar ResourceStore = function (_EventEmitter) {\n  _inherits(ResourceStore, _EventEmitter);\n\n  function ResourceStore(data) {\n    var _this;\n\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      ns: ['translation'],\n      defaultNS: 'translation'\n    };\n\n    _classCallCheck(this, ResourceStore);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ResourceStore).call(this));\n\n    if (isIE10) {\n      EventEmitter.call(_assertThisInitialized(_this));\n    }\n\n    _this.data = data || {};\n    _this.options = options;\n\n    if (_this.options.keySeparator === undefined) {\n      _this.options.keySeparator = '.';\n    }\n\n    if (_this.options.ignoreJSONStructure === undefined) {\n      _this.options.ignoreJSONStructure = true;\n    }\n\n    return _this;\n  }\n\n  _createClass(ResourceStore, [{\n    key: \"addNamespaces\",\n    value: function addNamespaces(ns) {\n      if (this.options.ns.indexOf(ns) < 0) {\n        this.options.ns.push(ns);\n      }\n    }\n  }, {\n    key: \"removeNamespaces\",\n    value: function removeNamespaces(ns) {\n      var index = this.options.ns.indexOf(ns);\n\n      if (index > -1) {\n        this.options.ns.splice(index, 1);\n      }\n    }\n  }, {\n    key: \"getResource\",\n    value: function getResource(lng, ns, key) {\n      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      var keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n      var ignoreJSONStructure = options.ignoreJSONStructure !== undefined ? options.ignoreJSONStructure : this.options.ignoreJSONStructure;\n      var path = [lng, ns];\n      if (key && typeof key !== 'string') path = path.concat(key);\n      if (key && typeof key === 'string') path = path.concat(keySeparator ? key.split(keySeparator) : key);\n\n      if (lng.indexOf('.') > -1) {\n        path = lng.split('.');\n      }\n\n      var result = getPath(this.data, path);\n      if (result || !ignoreJSONStructure || typeof key !== 'string') return result;\n      return deepFind(this.data && this.data[lng] && this.data[lng][ns], key, keySeparator);\n    }\n  }, {\n    key: \"addResource\",\n    value: function addResource(lng, ns, key, value) {\n      var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {\n        silent: false\n      };\n      var keySeparator = this.options.keySeparator;\n      if (keySeparator === undefined) keySeparator = '.';\n      var path = [lng, ns];\n      if (key) path = path.concat(keySeparator ? key.split(keySeparator) : key);\n\n      if (lng.indexOf('.') > -1) {\n        path = lng.split('.');\n        value = ns;\n        ns = path[1];\n      }\n\n      this.addNamespaces(ns);\n      setPath(this.data, path, value);\n      if (!options.silent) this.emit('added', lng, ns, key, value);\n    }\n  }, {\n    key: \"addResources\",\n    value: function addResources(lng, ns, resources) {\n      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {\n        silent: false\n      };\n\n      for (var m in resources) {\n        if (typeof resources[m] === 'string' || Object.prototype.toString.apply(resources[m]) === '[object Array]') this.addResource(lng, ns, m, resources[m], {\n          silent: true\n        });\n      }\n\n      if (!options.silent) this.emit('added', lng, ns, resources);\n    }\n  }, {\n    key: \"addResourceBundle\",\n    value: function addResourceBundle(lng, ns, resources, deep, overwrite) {\n      var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {\n        silent: false\n      };\n      var path = [lng, ns];\n\n      if (lng.indexOf('.') > -1) {\n        path = lng.split('.');\n        deep = resources;\n        resources = ns;\n        ns = path[1];\n      }\n\n      this.addNamespaces(ns);\n      var pack = getPath(this.data, path) || {};\n\n      if (deep) {\n        deepExtend(pack, resources, overwrite);\n      } else {\n        pack = _objectSpread({}, pack, resources);\n      }\n\n      setPath(this.data, path, pack);\n      if (!options.silent) this.emit('added', lng, ns, resources);\n    }\n  }, {\n    key: \"removeResourceBundle\",\n    value: function removeResourceBundle(lng, ns) {\n      if (this.hasResourceBundle(lng, ns)) {\n        delete this.data[lng][ns];\n      }\n\n      this.removeNamespaces(ns);\n      this.emit('removed', lng, ns);\n    }\n  }, {\n    key: \"hasResourceBundle\",\n    value: function hasResourceBundle(lng, ns) {\n      return this.getResource(lng, ns) !== undefined;\n    }\n  }, {\n    key: \"getResourceBundle\",\n    value: function getResourceBundle(lng, ns) {\n      if (!ns) ns = this.options.defaultNS;\n      if (this.options.compatibilityAPI === 'v1') return _objectSpread({}, {}, this.getResource(lng, ns));\n      return this.getResource(lng, ns);\n    }\n  }, {\n    key: \"getDataByLanguage\",\n    value: function getDataByLanguage(lng) {\n      return this.data[lng];\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return this.data;\n    }\n  }]);\n\n  return ResourceStore;\n}(EventEmitter);\n\nvar postProcessor = {\n  processors: {},\n  addPostProcessor: function addPostProcessor(module) {\n    this.processors[module.name] = module;\n  },\n  handle: function handle(processors, value, key, options, translator) {\n    var _this = this;\n\n    processors.forEach(function (processor) {\n      if (_this.processors[processor]) value = _this.processors[processor].process(value, key, options, translator);\n    });\n    return value;\n  }\n};\n\nvar checkedLoadedFor = {};\n\nvar Translator = function (_EventEmitter) {\n  _inherits(Translator, _EventEmitter);\n\n  function Translator(services) {\n    var _this;\n\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Translator);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Translator).call(this));\n\n    if (isIE10) {\n      EventEmitter.call(_assertThisInitialized(_this));\n    }\n\n    copy(['resourceStore', 'languageUtils', 'pluralResolver', 'interpolator', 'backendConnector', 'i18nFormat', 'utils'], services, _assertThisInitialized(_this));\n    _this.options = options;\n\n    if (_this.options.keySeparator === undefined) {\n      _this.options.keySeparator = '.';\n    }\n\n    _this.logger = baseLogger.create('translator');\n    return _this;\n  }\n\n  _createClass(Translator, [{\n    key: \"changeLanguage\",\n    value: function changeLanguage(lng) {\n      if (lng) this.language = lng;\n    }\n  }, {\n    key: \"exists\",\n    value: function exists(key) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        interpolation: {}\n      };\n      var resolved = this.resolve(key, options);\n      return resolved && resolved.res !== undefined;\n    }\n  }, {\n    key: \"extractFromKey\",\n    value: function extractFromKey(key, options) {\n      var nsSeparator = options.nsSeparator !== undefined ? options.nsSeparator : this.options.nsSeparator;\n      if (nsSeparator === undefined) nsSeparator = ':';\n      var keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n      var namespaces = options.ns || this.options.defaultNS;\n\n      if (nsSeparator && key.indexOf(nsSeparator) > -1) {\n        var m = key.match(this.interpolator.nestingRegexp);\n\n        if (m && m.length > 0) {\n          return {\n            key: key,\n            namespaces: namespaces\n          };\n        }\n\n        var parts = key.split(nsSeparator);\n        if (nsSeparator !== keySeparator || nsSeparator === keySeparator && this.options.ns.indexOf(parts[0]) > -1) namespaces = parts.shift();\n        key = parts.join(keySeparator);\n      }\n\n      if (typeof namespaces === 'string') namespaces = [namespaces];\n      return {\n        key: key,\n        namespaces: namespaces\n      };\n    }\n  }, {\n    key: \"translate\",\n    value: function translate(keys, options, lastKey) {\n      var _this2 = this;\n\n      if (_typeof(options) !== 'object' && this.options.overloadTranslationOptionHandler) {\n        options = this.options.overloadTranslationOptionHandler(arguments);\n      }\n\n      if (!options) options = {};\n      if (keys === undefined || keys === null) return '';\n      if (!Array.isArray(keys)) keys = [String(keys)];\n      var keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n\n      var _this$extractFromKey = this.extractFromKey(keys[keys.length - 1], options),\n          key = _this$extractFromKey.key,\n          namespaces = _this$extractFromKey.namespaces;\n\n      var namespace = namespaces[namespaces.length - 1];\n      var lng = options.lng || this.language;\n      var appendNamespaceToCIMode = options.appendNamespaceToCIMode || this.options.appendNamespaceToCIMode;\n\n      if (lng && lng.toLowerCase() === 'cimode') {\n        if (appendNamespaceToCIMode) {\n          var nsSeparator = options.nsSeparator || this.options.nsSeparator;\n          return namespace + nsSeparator + key;\n        }\n\n        return key;\n      }\n\n      var resolved = this.resolve(keys, options);\n      var res = resolved && resolved.res;\n      var resUsedKey = resolved && resolved.usedKey || key;\n      var resExactUsedKey = resolved && resolved.exactUsedKey || key;\n      var resType = Object.prototype.toString.apply(res);\n      var noObject = ['[object Number]', '[object Function]', '[object RegExp]'];\n      var joinArrays = options.joinArrays !== undefined ? options.joinArrays : this.options.joinArrays;\n      var handleAsObjectInI18nFormat = !this.i18nFormat || this.i18nFormat.handleAsObject;\n      var handleAsObject = typeof res !== 'string' && typeof res !== 'boolean' && typeof res !== 'number';\n\n      if (handleAsObjectInI18nFormat && res && handleAsObject && noObject.indexOf(resType) < 0 && !(typeof joinArrays === 'string' && resType === '[object Array]')) {\n        if (!options.returnObjects && !this.options.returnObjects) {\n          this.logger.warn('accessing an object - but returnObjects options is not enabled!');\n          return this.options.returnedObjectHandler ? this.options.returnedObjectHandler(resUsedKey, res, options) : \"key '\".concat(key, \" (\").concat(this.language, \")' returned an object instead of string.\");\n        }\n\n        if (keySeparator) {\n          var resTypeIsArray = resType === '[object Array]';\n          var copy = resTypeIsArray ? [] : {};\n          var newKeyToUse = resTypeIsArray ? resExactUsedKey : resUsedKey;\n\n          for (var m in res) {\n            if (Object.prototype.hasOwnProperty.call(res, m)) {\n              var deepKey = \"\".concat(newKeyToUse).concat(keySeparator).concat(m);\n              copy[m] = this.translate(deepKey, _objectSpread({}, options, {\n                joinArrays: false,\n                ns: namespaces\n              }));\n              if (copy[m] === deepKey) copy[m] = res[m];\n            }\n          }\n\n          res = copy;\n        }\n      } else if (handleAsObjectInI18nFormat && typeof joinArrays === 'string' && resType === '[object Array]') {\n        res = res.join(joinArrays);\n        if (res) res = this.extendTranslation(res, keys, options, lastKey);\n      } else {\n        var usedDefault = false;\n        var usedKey = false;\n        var needsPluralHandling = options.count !== undefined && typeof options.count !== 'string';\n        var hasDefaultValue = Translator.hasDefaultValue(options);\n        var defaultValueSuffix = needsPluralHandling ? this.pluralResolver.getSuffix(lng, options.count) : '';\n        var defaultValue = options[\"defaultValue\".concat(defaultValueSuffix)] || options.defaultValue;\n\n        if (!this.isValidLookup(res) && hasDefaultValue) {\n          usedDefault = true;\n          res = defaultValue;\n        }\n\n        if (!this.isValidLookup(res)) {\n          usedKey = true;\n          res = key;\n        }\n\n        var updateMissing = hasDefaultValue && defaultValue !== res && this.options.updateMissing;\n\n        if (usedKey || usedDefault || updateMissing) {\n          this.logger.log(updateMissing ? 'updateKey' : 'missingKey', lng, namespace, key, updateMissing ? defaultValue : res);\n\n          if (keySeparator) {\n            var fk = this.resolve(key, _objectSpread({}, options, {\n              keySeparator: false\n            }));\n            if (fk && fk.res) this.logger.warn('Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.');\n          }\n\n          var lngs = [];\n          var fallbackLngs = this.languageUtils.getFallbackCodes(this.options.fallbackLng, options.lng || this.language);\n\n          if (this.options.saveMissingTo === 'fallback' && fallbackLngs && fallbackLngs[0]) {\n            for (var i = 0; i < fallbackLngs.length; i++) {\n              lngs.push(fallbackLngs[i]);\n            }\n          } else if (this.options.saveMissingTo === 'all') {\n            lngs = this.languageUtils.toResolveHierarchy(options.lng || this.language);\n          } else {\n            lngs.push(options.lng || this.language);\n          }\n\n          var send = function send(l, k, fallbackValue) {\n            if (_this2.options.missingKeyHandler) {\n              _this2.options.missingKeyHandler(l, namespace, k, updateMissing ? fallbackValue : res, updateMissing, options);\n            } else if (_this2.backendConnector && _this2.backendConnector.saveMissing) {\n              _this2.backendConnector.saveMissing(l, namespace, k, updateMissing ? fallbackValue : res, updateMissing, options);\n            }\n\n            _this2.emit('missingKey', l, namespace, k, res);\n          };\n\n          if (this.options.saveMissing) {\n            if (this.options.saveMissingPlurals && needsPluralHandling) {\n              lngs.forEach(function (language) {\n                _this2.pluralResolver.getSuffixes(language).forEach(function (suffix) {\n                  send([language], key + suffix, options[\"defaultValue\".concat(suffix)] || defaultValue);\n                });\n              });\n            } else {\n              send(lngs, key, defaultValue);\n            }\n          }\n        }\n\n        res = this.extendTranslation(res, keys, options, resolved, lastKey);\n        if (usedKey && res === key && this.options.appendNamespaceToMissingKey) res = \"\".concat(namespace, \":\").concat(key);\n        if (usedKey && this.options.parseMissingKeyHandler) res = this.options.parseMissingKeyHandler(res);\n      }\n\n      return res;\n    }\n  }, {\n    key: \"extendTranslation\",\n    value: function extendTranslation(res, key, options, resolved, lastKey) {\n      var _this3 = this;\n\n      if (this.i18nFormat && this.i18nFormat.parse) {\n        res = this.i18nFormat.parse(res, options, resolved.usedLng, resolved.usedNS, resolved.usedKey, {\n          resolved: resolved\n        });\n      } else if (!options.skipInterpolation) {\n        if (options.interpolation) this.interpolator.init(_objectSpread({}, options, {\n          interpolation: _objectSpread({}, this.options.interpolation, options.interpolation)\n        }));\n        var skipOnVariables = options.interpolation && options.interpolation.skipOnVariables || this.options.interpolation.skipOnVariables;\n        var nestBef;\n\n        if (skipOnVariables) {\n          var nb = res.match(this.interpolator.nestingRegexp);\n          nestBef = nb && nb.length;\n        }\n\n        var data = options.replace && typeof options.replace !== 'string' ? options.replace : options;\n        if (this.options.interpolation.defaultVariables) data = _objectSpread({}, this.options.interpolation.defaultVariables, data);\n        res = this.interpolator.interpolate(res, data, options.lng || this.language, options);\n\n        if (skipOnVariables) {\n          var na = res.match(this.interpolator.nestingRegexp);\n          var nestAft = na && na.length;\n          if (nestBef < nestAft) options.nest = false;\n        }\n\n        if (options.nest !== false) res = this.interpolator.nest(res, function () {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          if (lastKey && lastKey[0] === args[0] && !options.context) {\n            _this3.logger.warn(\"It seems you are nesting recursively key: \".concat(args[0], \" in key: \").concat(key[0]));\n\n            return null;\n          }\n\n          return _this3.translate.apply(_this3, args.concat([key]));\n        }, options);\n        if (options.interpolation) this.interpolator.reset();\n      }\n\n      var postProcess = options.postProcess || this.options.postProcess;\n      var postProcessorNames = typeof postProcess === 'string' ? [postProcess] : postProcess;\n\n      if (res !== undefined && res !== null && postProcessorNames && postProcessorNames.length && options.applyPostProcessor !== false) {\n        res = postProcessor.handle(postProcessorNames, res, key, this.options && this.options.postProcessPassResolved ? _objectSpread({\n          i18nResolved: resolved\n        }, options) : options, this);\n      }\n\n      return res;\n    }\n  }, {\n    key: \"resolve\",\n    value: function resolve(keys) {\n      var _this4 = this;\n\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var found;\n      var usedKey;\n      var exactUsedKey;\n      var usedLng;\n      var usedNS;\n      if (typeof keys === 'string') keys = [keys];\n      keys.forEach(function (k) {\n        if (_this4.isValidLookup(found)) return;\n\n        var extracted = _this4.extractFromKey(k, options);\n\n        var key = extracted.key;\n        usedKey = key;\n        var namespaces = extracted.namespaces;\n        if (_this4.options.fallbackNS) namespaces = namespaces.concat(_this4.options.fallbackNS);\n        var needsPluralHandling = options.count !== undefined && typeof options.count !== 'string';\n        var needsContextHandling = options.context !== undefined && typeof options.context === 'string' && options.context !== '';\n        var codes = options.lngs ? options.lngs : _this4.languageUtils.toResolveHierarchy(options.lng || _this4.language, options.fallbackLng);\n        namespaces.forEach(function (ns) {\n          if (_this4.isValidLookup(found)) return;\n          usedNS = ns;\n\n          if (!checkedLoadedFor[\"\".concat(codes[0], \"-\").concat(ns)] && _this4.utils && _this4.utils.hasLoadedNamespace && !_this4.utils.hasLoadedNamespace(usedNS)) {\n            checkedLoadedFor[\"\".concat(codes[0], \"-\").concat(ns)] = true;\n\n            _this4.logger.warn(\"key \\\"\".concat(usedKey, \"\\\" for languages \\\"\").concat(codes.join(', '), \"\\\" won't get resolved as namespace \\\"\").concat(usedNS, \"\\\" was not yet loaded\"), 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n          }\n\n          codes.forEach(function (code) {\n            if (_this4.isValidLookup(found)) return;\n            usedLng = code;\n            var finalKey = key;\n            var finalKeys = [finalKey];\n\n            if (_this4.i18nFormat && _this4.i18nFormat.addLookupKeys) {\n              _this4.i18nFormat.addLookupKeys(finalKeys, key, code, ns, options);\n            } else {\n              var pluralSuffix;\n              if (needsPluralHandling) pluralSuffix = _this4.pluralResolver.getSuffix(code, options.count);\n              if (needsPluralHandling && needsContextHandling) finalKeys.push(finalKey + pluralSuffix);\n              if (needsContextHandling) finalKeys.push(finalKey += \"\".concat(_this4.options.contextSeparator).concat(options.context));\n              if (needsPluralHandling) finalKeys.push(finalKey += pluralSuffix);\n            }\n\n            var possibleKey;\n\n            while (possibleKey = finalKeys.pop()) {\n              if (!_this4.isValidLookup(found)) {\n                exactUsedKey = possibleKey;\n                found = _this4.getResource(code, ns, possibleKey, options);\n              }\n            }\n          });\n        });\n      });\n      return {\n        res: found,\n        usedKey: usedKey,\n        exactUsedKey: exactUsedKey,\n        usedLng: usedLng,\n        usedNS: usedNS\n      };\n    }\n  }, {\n    key: \"isValidLookup\",\n    value: function isValidLookup(res) {\n      return res !== undefined && !(!this.options.returnNull && res === null) && !(!this.options.returnEmptyString && res === '');\n    }\n  }, {\n    key: \"getResource\",\n    value: function getResource(code, ns, key) {\n      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      if (this.i18nFormat && this.i18nFormat.getResource) return this.i18nFormat.getResource(code, ns, key, options);\n      return this.resourceStore.getResource(code, ns, key, options);\n    }\n  }], [{\n    key: \"hasDefaultValue\",\n    value: function hasDefaultValue(options) {\n      var prefix = 'defaultValue';\n\n      for (var option in options) {\n        if (Object.prototype.hasOwnProperty.call(options, option) && prefix === option.substring(0, prefix.length) && undefined !== options[option]) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  }]);\n\n  return Translator;\n}(EventEmitter);\n\nfunction capitalize(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nvar LanguageUtil = function () {\n  function LanguageUtil(options) {\n    _classCallCheck(this, LanguageUtil);\n\n    this.options = options;\n    this.whitelist = this.options.supportedLngs || false;\n    this.supportedLngs = this.options.supportedLngs || false;\n    this.logger = baseLogger.create('languageUtils');\n  }\n\n  _createClass(LanguageUtil, [{\n    key: \"getScriptPartFromCode\",\n    value: function getScriptPartFromCode(code) {\n      if (!code || code.indexOf('-') < 0) return null;\n      var p = code.split('-');\n      if (p.length === 2) return null;\n      p.pop();\n      if (p[p.length - 1].toLowerCase() === 'x') return null;\n      return this.formatLanguageCode(p.join('-'));\n    }\n  }, {\n    key: \"getLanguagePartFromCode\",\n    value: function getLanguagePartFromCode(code) {\n      if (!code || code.indexOf('-') < 0) return code;\n      var p = code.split('-');\n      return this.formatLanguageCode(p[0]);\n    }\n  }, {\n    key: \"formatLanguageCode\",\n    value: function formatLanguageCode(code) {\n      if (typeof code === 'string' && code.indexOf('-') > -1) {\n        var specialCases = ['hans', 'hant', 'latn', 'cyrl', 'cans', 'mong', 'arab'];\n        var p = code.split('-');\n\n        if (this.options.lowerCaseLng) {\n          p = p.map(function (part) {\n            return part.toLowerCase();\n          });\n        } else if (p.length === 2) {\n          p[0] = p[0].toLowerCase();\n          p[1] = p[1].toUpperCase();\n          if (specialCases.indexOf(p[1].toLowerCase()) > -1) p[1] = capitalize(p[1].toLowerCase());\n        } else if (p.length === 3) {\n          p[0] = p[0].toLowerCase();\n          if (p[1].length === 2) p[1] = p[1].toUpperCase();\n          if (p[0] !== 'sgn' && p[2].length === 2) p[2] = p[2].toUpperCase();\n          if (specialCases.indexOf(p[1].toLowerCase()) > -1) p[1] = capitalize(p[1].toLowerCase());\n          if (specialCases.indexOf(p[2].toLowerCase()) > -1) p[2] = capitalize(p[2].toLowerCase());\n        }\n\n        return p.join('-');\n      }\n\n      return this.options.cleanCode || this.options.lowerCaseLng ? code.toLowerCase() : code;\n    }\n  }, {\n    key: \"isWhitelisted\",\n    value: function isWhitelisted(code) {\n      this.logger.deprecate('languageUtils.isWhitelisted', 'function \"isWhitelisted\" will be renamed to \"isSupportedCode\" in the next major - please make sure to rename it\\'s usage asap.');\n      return this.isSupportedCode(code);\n    }\n  }, {\n    key: \"isSupportedCode\",\n    value: function isSupportedCode(code) {\n      if (this.options.load === 'languageOnly' || this.options.nonExplicitSupportedLngs) {\n        code = this.getLanguagePartFromCode(code);\n      }\n\n      return !this.supportedLngs || !this.supportedLngs.length || this.supportedLngs.indexOf(code) > -1;\n    }\n  }, {\n    key: \"getBestMatchFromCodes\",\n    value: function getBestMatchFromCodes(codes) {\n      var _this = this;\n\n      if (!codes) return null;\n      var found;\n      codes.forEach(function (code) {\n        if (found) return;\n\n        var cleanedLng = _this.formatLanguageCode(code);\n\n        if (!_this.options.supportedLngs || _this.isSupportedCode(cleanedLng)) found = cleanedLng;\n      });\n\n      if (!found && this.options.supportedLngs) {\n        codes.forEach(function (code) {\n          if (found) return;\n\n          var lngOnly = _this.getLanguagePartFromCode(code);\n\n          if (_this.isSupportedCode(lngOnly)) return found = lngOnly;\n          found = _this.options.supportedLngs.find(function (supportedLng) {\n            if (supportedLng.indexOf(lngOnly) === 0) return supportedLng;\n          });\n        });\n      }\n\n      if (!found) found = this.getFallbackCodes(this.options.fallbackLng)[0];\n      return found;\n    }\n  }, {\n    key: \"getFallbackCodes\",\n    value: function getFallbackCodes(fallbacks, code) {\n      if (!fallbacks) return [];\n      if (typeof fallbacks === 'function') fallbacks = fallbacks(code);\n      if (typeof fallbacks === 'string') fallbacks = [fallbacks];\n      if (Object.prototype.toString.apply(fallbacks) === '[object Array]') return fallbacks;\n      if (!code) return fallbacks[\"default\"] || [];\n      var found = fallbacks[code];\n      if (!found) found = fallbacks[this.getScriptPartFromCode(code)];\n      if (!found) found = fallbacks[this.formatLanguageCode(code)];\n      if (!found) found = fallbacks[this.getLanguagePartFromCode(code)];\n      if (!found) found = fallbacks[\"default\"];\n      return found || [];\n    }\n  }, {\n    key: \"toResolveHierarchy\",\n    value: function toResolveHierarchy(code, fallbackCode) {\n      var _this2 = this;\n\n      var fallbackCodes = this.getFallbackCodes(fallbackCode || this.options.fallbackLng || [], code);\n      var codes = [];\n\n      var addCode = function addCode(c) {\n        if (!c) return;\n\n        if (_this2.isSupportedCode(c)) {\n          codes.push(c);\n        } else {\n          _this2.logger.warn(\"rejecting language code not found in supportedLngs: \".concat(c));\n        }\n      };\n\n      if (typeof code === 'string' && code.indexOf('-') > -1) {\n        if (this.options.load !== 'languageOnly') addCode(this.formatLanguageCode(code));\n        if (this.options.load !== 'languageOnly' && this.options.load !== 'currentOnly') addCode(this.getScriptPartFromCode(code));\n        if (this.options.load !== 'currentOnly') addCode(this.getLanguagePartFromCode(code));\n      } else if (typeof code === 'string') {\n        addCode(this.formatLanguageCode(code));\n      }\n\n      fallbackCodes.forEach(function (fc) {\n        if (codes.indexOf(fc) < 0) addCode(_this2.formatLanguageCode(fc));\n      });\n      return codes;\n    }\n  }]);\n\n  return LanguageUtil;\n}();\n\nvar sets = [{\n  lngs: ['ach', 'ak', 'am', 'arn', 'br', 'fil', 'gun', 'ln', 'mfe', 'mg', 'mi', 'oc', 'pt', 'pt-BR', 'tg', 'tl', 'ti', 'tr', 'uz', 'wa'],\n  nr: [1, 2],\n  fc: 1\n}, {\n  lngs: ['af', 'an', 'ast', 'az', 'bg', 'bn', 'ca', 'da', 'de', 'dev', 'el', 'en', 'eo', 'es', 'et', 'eu', 'fi', 'fo', 'fur', 'fy', 'gl', 'gu', 'ha', 'hi', 'hu', 'hy', 'ia', 'it', 'kn', 'ku', 'lb', 'mai', 'ml', 'mn', 'mr', 'nah', 'nap', 'nb', 'ne', 'nl', 'nn', 'no', 'nso', 'pa', 'pap', 'pms', 'ps', 'pt-PT', 'rm', 'sco', 'se', 'si', 'so', 'son', 'sq', 'sv', 'sw', 'ta', 'te', 'tk', 'ur', 'yo'],\n  nr: [1, 2],\n  fc: 2\n}, {\n  lngs: ['ay', 'bo', 'cgg', 'fa', 'ht', 'id', 'ja', 'jbo', 'ka', 'kk', 'km', 'ko', 'ky', 'lo', 'ms', 'sah', 'su', 'th', 'tt', 'ug', 'vi', 'wo', 'zh'],\n  nr: [1],\n  fc: 3\n}, {\n  lngs: ['be', 'bs', 'cnr', 'dz', 'hr', 'ru', 'sr', 'uk'],\n  nr: [1, 2, 5],\n  fc: 4\n}, {\n  lngs: ['ar'],\n  nr: [0, 1, 2, 3, 11, 100],\n  fc: 5\n}, {\n  lngs: ['cs', 'sk'],\n  nr: [1, 2, 5],\n  fc: 6\n}, {\n  lngs: ['csb', 'pl'],\n  nr: [1, 2, 5],\n  fc: 7\n}, {\n  lngs: ['cy'],\n  nr: [1, 2, 3, 8],\n  fc: 8\n}, {\n  lngs: ['fr'],\n  nr: [1, 2],\n  fc: 9\n}, {\n  lngs: ['ga'],\n  nr: [1, 2, 3, 7, 11],\n  fc: 10\n}, {\n  lngs: ['gd'],\n  nr: [1, 2, 3, 20],\n  fc: 11\n}, {\n  lngs: ['is'],\n  nr: [1, 2],\n  fc: 12\n}, {\n  lngs: ['jv'],\n  nr: [0, 1],\n  fc: 13\n}, {\n  lngs: ['kw'],\n  nr: [1, 2, 3, 4],\n  fc: 14\n}, {\n  lngs: ['lt'],\n  nr: [1, 2, 10],\n  fc: 15\n}, {\n  lngs: ['lv'],\n  nr: [1, 2, 0],\n  fc: 16\n}, {\n  lngs: ['mk'],\n  nr: [1, 2],\n  fc: 17\n}, {\n  lngs: ['mnk'],\n  nr: [0, 1, 2],\n  fc: 18\n}, {\n  lngs: ['mt'],\n  nr: [1, 2, 11, 20],\n  fc: 19\n}, {\n  lngs: ['or'],\n  nr: [2, 1],\n  fc: 2\n}, {\n  lngs: ['ro'],\n  nr: [1, 2, 20],\n  fc: 20\n}, {\n  lngs: ['sl'],\n  nr: [5, 1, 2, 3],\n  fc: 21\n}, {\n  lngs: ['he', 'iw'],\n  nr: [1, 2, 20, 21],\n  fc: 22\n}];\nvar _rulesPluralsTypes = {\n  1: function _(n) {\n    return Number(n > 1);\n  },\n  2: function _(n) {\n    return Number(n != 1);\n  },\n  3: function _(n) {\n    return 0;\n  },\n  4: function _(n) {\n    return Number(n % 10 == 1 && n % 100 != 11 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);\n  },\n  5: function _(n) {\n    return Number(n == 0 ? 0 : n == 1 ? 1 : n == 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5);\n  },\n  6: function _(n) {\n    return Number(n == 1 ? 0 : n >= 2 && n <= 4 ? 1 : 2);\n  },\n  7: function _(n) {\n    return Number(n == 1 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);\n  },\n  8: function _(n) {\n    return Number(n == 1 ? 0 : n == 2 ? 1 : n != 8 && n != 11 ? 2 : 3);\n  },\n  9: function _(n) {\n    return Number(n >= 2);\n  },\n  10: function _(n) {\n    return Number(n == 1 ? 0 : n == 2 ? 1 : n < 7 ? 2 : n < 11 ? 3 : 4);\n  },\n  11: function _(n) {\n    return Number(n == 1 || n == 11 ? 0 : n == 2 || n == 12 ? 1 : n > 2 && n < 20 ? 2 : 3);\n  },\n  12: function _(n) {\n    return Number(n % 10 != 1 || n % 100 == 11);\n  },\n  13: function _(n) {\n    return Number(n !== 0);\n  },\n  14: function _(n) {\n    return Number(n == 1 ? 0 : n == 2 ? 1 : n == 3 ? 2 : 3);\n  },\n  15: function _(n) {\n    return Number(n % 10 == 1 && n % 100 != 11 ? 0 : n % 10 >= 2 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);\n  },\n  16: function _(n) {\n    return Number(n % 10 == 1 && n % 100 != 11 ? 0 : n !== 0 ? 1 : 2);\n  },\n  17: function _(n) {\n    return Number(n == 1 || n % 10 == 1 && n % 100 != 11 ? 0 : 1);\n  },\n  18: function _(n) {\n    return Number(n == 0 ? 0 : n == 1 ? 1 : 2);\n  },\n  19: function _(n) {\n    return Number(n == 1 ? 0 : n == 0 || n % 100 > 1 && n % 100 < 11 ? 1 : n % 100 > 10 && n % 100 < 20 ? 2 : 3);\n  },\n  20: function _(n) {\n    return Number(n == 1 ? 0 : n == 0 || n % 100 > 0 && n % 100 < 20 ? 1 : 2);\n  },\n  21: function _(n) {\n    return Number(n % 100 == 1 ? 1 : n % 100 == 2 ? 2 : n % 100 == 3 || n % 100 == 4 ? 3 : 0);\n  },\n  22: function _(n) {\n    return Number(n == 1 ? 0 : n == 2 ? 1 : (n < 0 || n > 10) && n % 10 == 0 ? 2 : 3);\n  }\n};\n\nfunction createRules() {\n  var rules = {};\n  sets.forEach(function (set) {\n    set.lngs.forEach(function (l) {\n      rules[l] = {\n        numbers: set.nr,\n        plurals: _rulesPluralsTypes[set.fc]\n      };\n    });\n  });\n  return rules;\n}\n\nvar PluralResolver = function () {\n  function PluralResolver(languageUtils) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, PluralResolver);\n\n    this.languageUtils = languageUtils;\n    this.options = options;\n    this.logger = baseLogger.create('pluralResolver');\n    this.rules = createRules();\n  }\n\n  _createClass(PluralResolver, [{\n    key: \"addRule\",\n    value: function addRule(lng, obj) {\n      this.rules[lng] = obj;\n    }\n  }, {\n    key: \"getRule\",\n    value: function getRule(code) {\n      return this.rules[code] || this.rules[this.languageUtils.getLanguagePartFromCode(code)];\n    }\n  }, {\n    key: \"needsPlural\",\n    value: function needsPlural(code) {\n      var rule = this.getRule(code);\n      return rule && rule.numbers.length > 1;\n    }\n  }, {\n    key: \"getPluralFormsOfKey\",\n    value: function getPluralFormsOfKey(code, key) {\n      return this.getSuffixes(code).map(function (suffix) {\n        return key + suffix;\n      });\n    }\n  }, {\n    key: \"getSuffixes\",\n    value: function getSuffixes(code) {\n      var _this = this;\n\n      var rule = this.getRule(code);\n\n      if (!rule) {\n        return [];\n      }\n\n      return rule.numbers.map(function (number) {\n        return _this.getSuffix(code, number);\n      });\n    }\n  }, {\n    key: \"getSuffix\",\n    value: function getSuffix(code, count) {\n      var _this2 = this;\n\n      var rule = this.getRule(code);\n\n      if (rule) {\n        var idx = rule.noAbs ? rule.plurals(count) : rule.plurals(Math.abs(count));\n        var suffix = rule.numbers[idx];\n\n        if (this.options.simplifyPluralSuffix && rule.numbers.length === 2 && rule.numbers[0] === 1) {\n          if (suffix === 2) {\n            suffix = 'plural';\n          } else if (suffix === 1) {\n            suffix = '';\n          }\n        }\n\n        var returnSuffix = function returnSuffix() {\n          return _this2.options.prepend && suffix.toString() ? _this2.options.prepend + suffix.toString() : suffix.toString();\n        };\n\n        if (this.options.compatibilityJSON === 'v1') {\n          if (suffix === 1) return '';\n          if (typeof suffix === 'number') return \"_plural_\".concat(suffix.toString());\n          return returnSuffix();\n        } else if (this.options.compatibilityJSON === 'v2') {\n          return returnSuffix();\n        } else if (this.options.simplifyPluralSuffix && rule.numbers.length === 2 && rule.numbers[0] === 1) {\n          return returnSuffix();\n        }\n\n        return this.options.prepend && idx.toString() ? this.options.prepend + idx.toString() : idx.toString();\n      }\n\n      this.logger.warn(\"no plural rule found for: \".concat(code));\n      return '';\n    }\n  }]);\n\n  return PluralResolver;\n}();\n\nvar Interpolator = function () {\n  function Interpolator() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Interpolator);\n\n    this.logger = baseLogger.create('interpolator');\n    this.options = options;\n\n    this.format = options.interpolation && options.interpolation.format || function (value) {\n      return value;\n    };\n\n    this.init(options);\n  }\n\n  _createClass(Interpolator, [{\n    key: \"init\",\n    value: function init() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      if (!options.interpolation) options.interpolation = {\n        escapeValue: true\n      };\n      var iOpts = options.interpolation;\n      this.escape = iOpts.escape !== undefined ? iOpts.escape : escape;\n      this.escapeValue = iOpts.escapeValue !== undefined ? iOpts.escapeValue : true;\n      this.useRawValueToEscape = iOpts.useRawValueToEscape !== undefined ? iOpts.useRawValueToEscape : false;\n      this.prefix = iOpts.prefix ? regexEscape(iOpts.prefix) : iOpts.prefixEscaped || '{{';\n      this.suffix = iOpts.suffix ? regexEscape(iOpts.suffix) : iOpts.suffixEscaped || '}}';\n      this.formatSeparator = iOpts.formatSeparator ? iOpts.formatSeparator : iOpts.formatSeparator || ',';\n      this.unescapePrefix = iOpts.unescapeSuffix ? '' : iOpts.unescapePrefix || '-';\n      this.unescapeSuffix = this.unescapePrefix ? '' : iOpts.unescapeSuffix || '';\n      this.nestingPrefix = iOpts.nestingPrefix ? regexEscape(iOpts.nestingPrefix) : iOpts.nestingPrefixEscaped || regexEscape('$t(');\n      this.nestingSuffix = iOpts.nestingSuffix ? regexEscape(iOpts.nestingSuffix) : iOpts.nestingSuffixEscaped || regexEscape(')');\n      this.nestingOptionsSeparator = iOpts.nestingOptionsSeparator ? iOpts.nestingOptionsSeparator : iOpts.nestingOptionsSeparator || ',';\n      this.maxReplaces = iOpts.maxReplaces ? iOpts.maxReplaces : 1000;\n      this.alwaysFormat = iOpts.alwaysFormat !== undefined ? iOpts.alwaysFormat : false;\n      this.resetRegExp();\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      if (this.options) this.init(this.options);\n    }\n  }, {\n    key: \"resetRegExp\",\n    value: function resetRegExp() {\n      var regexpStr = \"\".concat(this.prefix, \"(.+?)\").concat(this.suffix);\n      this.regexp = new RegExp(regexpStr, 'g');\n      var regexpUnescapeStr = \"\".concat(this.prefix).concat(this.unescapePrefix, \"(.+?)\").concat(this.unescapeSuffix).concat(this.suffix);\n      this.regexpUnescape = new RegExp(regexpUnescapeStr, 'g');\n      var nestingRegexpStr = \"\".concat(this.nestingPrefix, \"(.+?)\").concat(this.nestingSuffix);\n      this.nestingRegexp = new RegExp(nestingRegexpStr, 'g');\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(str, data, lng, options) {\n      var _this = this;\n\n      var match;\n      var value;\n      var replaces;\n      var defaultData = this.options && this.options.interpolation && this.options.interpolation.defaultVariables || {};\n\n      function regexSafe(val) {\n        return val.replace(/\\$/g, '$$$$');\n      }\n\n      var handleFormat = function handleFormat(key) {\n        if (key.indexOf(_this.formatSeparator) < 0) {\n          var path = getPathWithDefaults(data, defaultData, key);\n          return _this.alwaysFormat ? _this.format(path, undefined, lng, _objectSpread({}, options, data, {\n            interpolationkey: key\n          })) : path;\n        }\n\n        var p = key.split(_this.formatSeparator);\n        var k = p.shift().trim();\n        var f = p.join(_this.formatSeparator).trim();\n        return _this.format(getPathWithDefaults(data, defaultData, k), f, lng, _objectSpread({}, options, data, {\n          interpolationkey: k\n        }));\n      };\n\n      this.resetRegExp();\n      var missingInterpolationHandler = options && options.missingInterpolationHandler || this.options.missingInterpolationHandler;\n      var skipOnVariables = options && options.interpolation && options.interpolation.skipOnVariables || this.options.interpolation.skipOnVariables;\n      var todos = [{\n        regex: this.regexpUnescape,\n        safeValue: function safeValue(val) {\n          return regexSafe(val);\n        }\n      }, {\n        regex: this.regexp,\n        safeValue: function safeValue(val) {\n          return _this.escapeValue ? regexSafe(_this.escape(val)) : regexSafe(val);\n        }\n      }];\n      todos.forEach(function (todo) {\n        replaces = 0;\n\n        while (match = todo.regex.exec(str)) {\n          value = handleFormat(match[1].trim());\n\n          if (value === undefined) {\n            if (typeof missingInterpolationHandler === 'function') {\n              var temp = missingInterpolationHandler(str, match, options);\n              value = typeof temp === 'string' ? temp : '';\n            } else if (skipOnVariables) {\n              value = match[0];\n              continue;\n            } else {\n              _this.logger.warn(\"missed to pass in variable \".concat(match[1], \" for interpolating \").concat(str));\n\n              value = '';\n            }\n          } else if (typeof value !== 'string' && !_this.useRawValueToEscape) {\n            value = makeString(value);\n          }\n\n          var safeValue = todo.safeValue(value);\n          str = str.replace(match[0], safeValue);\n\n          if (skipOnVariables) {\n            todo.regex.lastIndex += safeValue.length;\n            todo.regex.lastIndex -= match[0].length;\n          } else {\n            todo.regex.lastIndex = 0;\n          }\n\n          replaces++;\n\n          if (replaces >= _this.maxReplaces) {\n            break;\n          }\n        }\n      });\n      return str;\n    }\n  }, {\n    key: \"nest\",\n    value: function nest(str, fc) {\n      var _this2 = this;\n\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var match;\n      var value;\n\n      var clonedOptions = _objectSpread({}, options);\n\n      clonedOptions.applyPostProcessor = false;\n      delete clonedOptions.defaultValue;\n\n      function handleHasOptions(key, inheritedOptions) {\n        var sep = this.nestingOptionsSeparator;\n        if (key.indexOf(sep) < 0) return key;\n        var c = key.split(new RegExp(\"\".concat(sep, \"[ ]*{\")));\n        var optionsString = \"{\".concat(c[1]);\n        key = c[0];\n        optionsString = this.interpolate(optionsString, clonedOptions);\n        optionsString = optionsString.replace(/'/g, '\"');\n\n        try {\n          clonedOptions = JSON.parse(optionsString);\n          if (inheritedOptions) clonedOptions = _objectSpread({}, inheritedOptions, clonedOptions);\n        } catch (e) {\n          this.logger.warn(\"failed parsing options string in nesting for key \".concat(key), e);\n          return \"\".concat(key).concat(sep).concat(optionsString);\n        }\n\n        delete clonedOptions.defaultValue;\n        return key;\n      }\n\n      while (match = this.nestingRegexp.exec(str)) {\n        var formatters = [];\n        var doReduce = false;\n\n        if (match[0].indexOf(this.formatSeparator) !== -1 && !/{.*}/.test(match[1])) {\n          var r = match[1].split(this.formatSeparator).map(function (elem) {\n            return elem.trim();\n          });\n          match[1] = r.shift();\n          formatters = r;\n          doReduce = true;\n        }\n\n        value = fc(handleHasOptions.call(this, match[1].trim(), clonedOptions), clonedOptions);\n        if (value && match[0] === str && typeof value !== 'string') return value;\n        if (typeof value !== 'string') value = makeString(value);\n\n        if (!value) {\n          this.logger.warn(\"missed to resolve \".concat(match[1], \" for nesting \").concat(str));\n          value = '';\n        }\n\n        if (doReduce) {\n          value = formatters.reduce(function (v, f) {\n            return _this2.format(v, f, options.lng, _objectSpread({}, options, {\n              interpolationkey: match[1].trim()\n            }));\n          }, value.trim());\n        }\n\n        str = str.replace(match[0], value);\n        this.regexp.lastIndex = 0;\n      }\n\n      return str;\n    }\n  }]);\n\n  return Interpolator;\n}();\n\nfunction remove(arr, what) {\n  var found = arr.indexOf(what);\n\n  while (found !== -1) {\n    arr.splice(found, 1);\n    found = arr.indexOf(what);\n  }\n}\n\nvar Connector = function (_EventEmitter) {\n  _inherits(Connector, _EventEmitter);\n\n  function Connector(backend, store, services) {\n    var _this;\n\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n    _classCallCheck(this, Connector);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Connector).call(this));\n\n    if (isIE10) {\n      EventEmitter.call(_assertThisInitialized(_this));\n    }\n\n    _this.backend = backend;\n    _this.store = store;\n    _this.services = services;\n    _this.languageUtils = services.languageUtils;\n    _this.options = options;\n    _this.logger = baseLogger.create('backendConnector');\n    _this.state = {};\n    _this.queue = [];\n\n    if (_this.backend && _this.backend.init) {\n      _this.backend.init(services, options.backend, options);\n    }\n\n    return _this;\n  }\n\n  _createClass(Connector, [{\n    key: \"queueLoad\",\n    value: function queueLoad(languages, namespaces, options, callback) {\n      var _this2 = this;\n\n      var toLoad = [];\n      var pending = [];\n      var toLoadLanguages = [];\n      var toLoadNamespaces = [];\n      languages.forEach(function (lng) {\n        var hasAllNamespaces = true;\n        namespaces.forEach(function (ns) {\n          var name = \"\".concat(lng, \"|\").concat(ns);\n\n          if (!options.reload && _this2.store.hasResourceBundle(lng, ns)) {\n            _this2.state[name] = 2;\n          } else if (_this2.state[name] < 0) ; else if (_this2.state[name] === 1) {\n            if (pending.indexOf(name) < 0) pending.push(name);\n          } else {\n            _this2.state[name] = 1;\n            hasAllNamespaces = false;\n            if (pending.indexOf(name) < 0) pending.push(name);\n            if (toLoad.indexOf(name) < 0) toLoad.push(name);\n            if (toLoadNamespaces.indexOf(ns) < 0) toLoadNamespaces.push(ns);\n          }\n        });\n        if (!hasAllNamespaces) toLoadLanguages.push(lng);\n      });\n\n      if (toLoad.length || pending.length) {\n        this.queue.push({\n          pending: pending,\n          loaded: {},\n          errors: [],\n          callback: callback\n        });\n      }\n\n      return {\n        toLoad: toLoad,\n        pending: pending,\n        toLoadLanguages: toLoadLanguages,\n        toLoadNamespaces: toLoadNamespaces\n      };\n    }\n  }, {\n    key: \"loaded\",\n    value: function loaded(name, err, data) {\n      var s = name.split('|');\n      var lng = s[0];\n      var ns = s[1];\n      if (err) this.emit('failedLoading', lng, ns, err);\n\n      if (data) {\n        this.store.addResourceBundle(lng, ns, data);\n      }\n\n      this.state[name] = err ? -1 : 2;\n      var loaded = {};\n      this.queue.forEach(function (q) {\n        pushPath(q.loaded, [lng], ns);\n        remove(q.pending, name);\n        if (err) q.errors.push(err);\n\n        if (q.pending.length === 0 && !q.done) {\n          Object.keys(q.loaded).forEach(function (l) {\n            if (!loaded[l]) loaded[l] = [];\n\n            if (q.loaded[l].length) {\n              q.loaded[l].forEach(function (ns) {\n                if (loaded[l].indexOf(ns) < 0) loaded[l].push(ns);\n              });\n            }\n          });\n          q.done = true;\n\n          if (q.errors.length) {\n            q.callback(q.errors);\n          } else {\n            q.callback();\n          }\n        }\n      });\n      this.emit('loaded', loaded);\n      this.queue = this.queue.filter(function (q) {\n        return !q.done;\n      });\n    }\n  }, {\n    key: \"read\",\n    value: function read(lng, ns, fcName) {\n      var _this3 = this;\n\n      var tried = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n      var wait = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 350;\n      var callback = arguments.length > 5 ? arguments[5] : undefined;\n      if (!lng.length) return callback(null, {});\n      return this.backend[fcName](lng, ns, function (err, data) {\n        if (err && data && tried < 5) {\n          setTimeout(function () {\n            _this3.read.call(_this3, lng, ns, fcName, tried + 1, wait * 2, callback);\n          }, wait);\n          return;\n        }\n\n        callback(err, data);\n      });\n    }\n  }, {\n    key: \"prepareLoading\",\n    value: function prepareLoading(languages, namespaces) {\n      var _this4 = this;\n\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var callback = arguments.length > 3 ? arguments[3] : undefined;\n\n      if (!this.backend) {\n        this.logger.warn('No backend was added via i18next.use. Will not load resources.');\n        return callback && callback();\n      }\n\n      if (typeof languages === 'string') languages = this.languageUtils.toResolveHierarchy(languages);\n      if (typeof namespaces === 'string') namespaces = [namespaces];\n      var toLoad = this.queueLoad(languages, namespaces, options, callback);\n\n      if (!toLoad.toLoad.length) {\n        if (!toLoad.pending.length) callback();\n        return null;\n      }\n\n      toLoad.toLoad.forEach(function (name) {\n        _this4.loadOne(name);\n      });\n    }\n  }, {\n    key: \"load\",\n    value: function load(languages, namespaces, callback) {\n      this.prepareLoading(languages, namespaces, {}, callback);\n    }\n  }, {\n    key: \"reload\",\n    value: function reload(languages, namespaces, callback) {\n      this.prepareLoading(languages, namespaces, {\n        reload: true\n      }, callback);\n    }\n  }, {\n    key: \"loadOne\",\n    value: function loadOne(name) {\n      var _this5 = this;\n\n      var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n      var s = name.split('|');\n      var lng = s[0];\n      var ns = s[1];\n      this.read(lng, ns, 'read', undefined, undefined, function (err, data) {\n        if (err) _this5.logger.warn(\"\".concat(prefix, \"loading namespace \").concat(ns, \" for language \").concat(lng, \" failed\"), err);\n        if (!err && data) _this5.logger.log(\"\".concat(prefix, \"loaded namespace \").concat(ns, \" for language \").concat(lng), data);\n\n        _this5.loaded(name, err, data);\n      });\n    }\n  }, {\n    key: \"saveMissing\",\n    value: function saveMissing(languages, namespace, key, fallbackValue, isUpdate) {\n      var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n\n      if (this.services.utils && this.services.utils.hasLoadedNamespace && !this.services.utils.hasLoadedNamespace(namespace)) {\n        this.logger.warn(\"did not save key \\\"\".concat(key, \"\\\" as the namespace \\\"\").concat(namespace, \"\\\" was not yet loaded\"), 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n        return;\n      }\n\n      if (key === undefined || key === null || key === '') return;\n\n      if (this.backend && this.backend.create) {\n        this.backend.create(languages, namespace, key, fallbackValue, null, _objectSpread({}, options, {\n          isUpdate: isUpdate\n        }));\n      }\n\n      if (!languages || !languages[0]) return;\n      this.store.addResource(languages[0], namespace, key, fallbackValue);\n    }\n  }]);\n\n  return Connector;\n}(EventEmitter);\n\nfunction get() {\n  return {\n    debug: false,\n    initImmediate: true,\n    ns: ['translation'],\n    defaultNS: ['translation'],\n    fallbackLng: ['dev'],\n    fallbackNS: false,\n    whitelist: false,\n    nonExplicitWhitelist: false,\n    supportedLngs: false,\n    nonExplicitSupportedLngs: false,\n    load: 'all',\n    preload: false,\n    simplifyPluralSuffix: true,\n    keySeparator: '.',\n    nsSeparator: ':',\n    pluralSeparator: '_',\n    contextSeparator: '_',\n    partialBundledLanguages: false,\n    saveMissing: false,\n    updateMissing: false,\n    saveMissingTo: 'fallback',\n    saveMissingPlurals: true,\n    missingKeyHandler: false,\n    missingInterpolationHandler: false,\n    postProcess: false,\n    postProcessPassResolved: false,\n    returnNull: true,\n    returnEmptyString: true,\n    returnObjects: false,\n    joinArrays: false,\n    returnedObjectHandler: false,\n    parseMissingKeyHandler: false,\n    appendNamespaceToMissingKey: false,\n    appendNamespaceToCIMode: false,\n    overloadTranslationOptionHandler: function handle(args) {\n      var ret = {};\n      if (_typeof(args[1]) === 'object') ret = args[1];\n      if (typeof args[1] === 'string') ret.defaultValue = args[1];\n      if (typeof args[2] === 'string') ret.tDescription = args[2];\n\n      if (_typeof(args[2]) === 'object' || _typeof(args[3]) === 'object') {\n        var options = args[3] || args[2];\n        Object.keys(options).forEach(function (key) {\n          ret[key] = options[key];\n        });\n      }\n\n      return ret;\n    },\n    interpolation: {\n      escapeValue: true,\n      format: function format(value, _format, lng, options) {\n        return value;\n      },\n      prefix: '{{',\n      suffix: '}}',\n      formatSeparator: ',',\n      unescapePrefix: '-',\n      nestingPrefix: '$t(',\n      nestingSuffix: ')',\n      nestingOptionsSeparator: ',',\n      maxReplaces: 1000,\n      skipOnVariables: false\n    }\n  };\n}\nfunction transformOptions(options) {\n  if (typeof options.ns === 'string') options.ns = [options.ns];\n  if (typeof options.fallbackLng === 'string') options.fallbackLng = [options.fallbackLng];\n  if (typeof options.fallbackNS === 'string') options.fallbackNS = [options.fallbackNS];\n\n  if (options.whitelist) {\n    if (options.whitelist && options.whitelist.indexOf('cimode') < 0) {\n      options.whitelist = options.whitelist.concat(['cimode']);\n    }\n\n    options.supportedLngs = options.whitelist;\n  }\n\n  if (options.nonExplicitWhitelist) {\n    options.nonExplicitSupportedLngs = options.nonExplicitWhitelist;\n  }\n\n  if (options.supportedLngs && options.supportedLngs.indexOf('cimode') < 0) {\n    options.supportedLngs = options.supportedLngs.concat(['cimode']);\n  }\n\n  return options;\n}\n\nfunction noop() {}\n\nvar I18n = function (_EventEmitter) {\n  _inherits(I18n, _EventEmitter);\n\n  function I18n() {\n    var _this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var callback = arguments.length > 1 ? arguments[1] : undefined;\n\n    _classCallCheck(this, I18n);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(I18n).call(this));\n\n    if (isIE10) {\n      EventEmitter.call(_assertThisInitialized(_this));\n    }\n\n    _this.options = transformOptions(options);\n    _this.services = {};\n    _this.logger = baseLogger;\n    _this.modules = {\n      external: []\n    };\n\n    if (callback && !_this.isInitialized && !options.isClone) {\n      if (!_this.options.initImmediate) {\n        _this.init(options, callback);\n\n        return _possibleConstructorReturn(_this, _assertThisInitialized(_this));\n      }\n\n      setTimeout(function () {\n        _this.init(options, callback);\n      }, 0);\n    }\n\n    return _this;\n  }\n\n  _createClass(I18n, [{\n    key: \"init\",\n    value: function init() {\n      var _this2 = this;\n\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments.length > 1 ? arguments[1] : undefined;\n\n      if (typeof options === 'function') {\n        callback = options;\n        options = {};\n      }\n\n      if (options.whitelist && !options.supportedLngs) {\n        this.logger.deprecate('whitelist', 'option \"whitelist\" will be renamed to \"supportedLngs\" in the next major - please make sure to rename this option asap.');\n      }\n\n      if (options.nonExplicitWhitelist && !options.nonExplicitSupportedLngs) {\n        this.logger.deprecate('whitelist', 'options \"nonExplicitWhitelist\" will be renamed to \"nonExplicitSupportedLngs\" in the next major - please make sure to rename this option asap.');\n      }\n\n      this.options = _objectSpread({}, get(), this.options, transformOptions(options));\n      this.format = this.options.interpolation.format;\n      if (!callback) callback = noop;\n\n      function createClassOnDemand(ClassOrObject) {\n        if (!ClassOrObject) return null;\n        if (typeof ClassOrObject === 'function') return new ClassOrObject();\n        return ClassOrObject;\n      }\n\n      if (!this.options.isClone) {\n        if (this.modules.logger) {\n          baseLogger.init(createClassOnDemand(this.modules.logger), this.options);\n        } else {\n          baseLogger.init(null, this.options);\n        }\n\n        var lu = new LanguageUtil(this.options);\n        this.store = new ResourceStore(this.options.resources, this.options);\n        var s = this.services;\n        s.logger = baseLogger;\n        s.resourceStore = this.store;\n        s.languageUtils = lu;\n        s.pluralResolver = new PluralResolver(lu, {\n          prepend: this.options.pluralSeparator,\n          compatibilityJSON: this.options.compatibilityJSON,\n          simplifyPluralSuffix: this.options.simplifyPluralSuffix\n        });\n        s.interpolator = new Interpolator(this.options);\n        s.utils = {\n          hasLoadedNamespace: this.hasLoadedNamespace.bind(this)\n        };\n        s.backendConnector = new Connector(createClassOnDemand(this.modules.backend), s.resourceStore, s, this.options);\n        s.backendConnector.on('*', function (event) {\n          for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            args[_key - 1] = arguments[_key];\n          }\n\n          _this2.emit.apply(_this2, [event].concat(args));\n        });\n\n        if (this.modules.languageDetector) {\n          s.languageDetector = createClassOnDemand(this.modules.languageDetector);\n          s.languageDetector.init(s, this.options.detection, this.options);\n        }\n\n        if (this.modules.i18nFormat) {\n          s.i18nFormat = createClassOnDemand(this.modules.i18nFormat);\n          if (s.i18nFormat.init) s.i18nFormat.init(this);\n        }\n\n        this.translator = new Translator(this.services, this.options);\n        this.translator.on('*', function (event) {\n          for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n            args[_key2 - 1] = arguments[_key2];\n          }\n\n          _this2.emit.apply(_this2, [event].concat(args));\n        });\n        this.modules.external.forEach(function (m) {\n          if (m.init) m.init(_this2);\n        });\n      }\n\n      if (this.options.fallbackLng && !this.services.languageDetector && !this.options.lng) {\n        var codes = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n        if (codes.length > 0 && codes[0] !== 'dev') this.options.lng = codes[0];\n      }\n\n      if (!this.services.languageDetector && !this.options.lng) {\n        this.logger.warn('init: no languageDetector is used and no lng is defined');\n      }\n\n      var storeApi = ['getResource', 'hasResourceBundle', 'getResourceBundle', 'getDataByLanguage'];\n      storeApi.forEach(function (fcName) {\n        _this2[fcName] = function () {\n          var _this2$store;\n\n          return (_this2$store = _this2.store)[fcName].apply(_this2$store, arguments);\n        };\n      });\n      var storeApiChained = ['addResource', 'addResources', 'addResourceBundle', 'removeResourceBundle'];\n      storeApiChained.forEach(function (fcName) {\n        _this2[fcName] = function () {\n          var _this2$store2;\n\n          (_this2$store2 = _this2.store)[fcName].apply(_this2$store2, arguments);\n\n          return _this2;\n        };\n      });\n      var deferred = defer();\n\n      var load = function load() {\n        var finish = function finish(err, t) {\n          if (_this2.isInitialized) _this2.logger.warn('init: i18next is already initialized. You should call init just once!');\n          _this2.isInitialized = true;\n          if (!_this2.options.isClone) _this2.logger.log('initialized', _this2.options);\n\n          _this2.emit('initialized', _this2.options);\n\n          deferred.resolve(t);\n          callback(err, t);\n        };\n\n        if (_this2.languages && _this2.options.compatibilityAPI !== 'v1' && !_this2.isInitialized) return finish(null, _this2.t.bind(_this2));\n\n        _this2.changeLanguage(_this2.options.lng, finish);\n      };\n\n      if (this.options.resources || !this.options.initImmediate) {\n        load();\n      } else {\n        setTimeout(load, 0);\n      }\n\n      return deferred;\n    }\n  }, {\n    key: \"loadResources\",\n    value: function loadResources(language) {\n      var _this3 = this;\n\n      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n      var usedCallback = callback;\n      var usedLng = typeof language === 'string' ? language : this.language;\n      if (typeof language === 'function') usedCallback = language;\n\n      if (!this.options.resources || this.options.partialBundledLanguages) {\n        if (usedLng && usedLng.toLowerCase() === 'cimode') return usedCallback();\n        var toLoad = [];\n\n        var append = function append(lng) {\n          if (!lng) return;\n\n          var lngs = _this3.services.languageUtils.toResolveHierarchy(lng);\n\n          lngs.forEach(function (l) {\n            if (toLoad.indexOf(l) < 0) toLoad.push(l);\n          });\n        };\n\n        if (!usedLng) {\n          var fallbacks = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n          fallbacks.forEach(function (l) {\n            return append(l);\n          });\n        } else {\n          append(usedLng);\n        }\n\n        if (this.options.preload) {\n          this.options.preload.forEach(function (l) {\n            return append(l);\n          });\n        }\n\n        this.services.backendConnector.load(toLoad, this.options.ns, usedCallback);\n      } else {\n        usedCallback(null);\n      }\n    }\n  }, {\n    key: \"reloadResources\",\n    value: function reloadResources(lngs, ns, callback) {\n      var deferred = defer();\n      if (!lngs) lngs = this.languages;\n      if (!ns) ns = this.options.ns;\n      if (!callback) callback = noop;\n      this.services.backendConnector.reload(lngs, ns, function (err) {\n        deferred.resolve();\n        callback(err);\n      });\n      return deferred;\n    }\n  }, {\n    key: \"use\",\n    value: function use(module) {\n      if (!module) throw new Error('You are passing an undefined module! Please check the object you are passing to i18next.use()');\n      if (!module.type) throw new Error('You are passing a wrong module! Please check the object you are passing to i18next.use()');\n\n      if (module.type === 'backend') {\n        this.modules.backend = module;\n      }\n\n      if (module.type === 'logger' || module.log && module.warn && module.error) {\n        this.modules.logger = module;\n      }\n\n      if (module.type === 'languageDetector') {\n        this.modules.languageDetector = module;\n      }\n\n      if (module.type === 'i18nFormat') {\n        this.modules.i18nFormat = module;\n      }\n\n      if (module.type === 'postProcessor') {\n        postProcessor.addPostProcessor(module);\n      }\n\n      if (module.type === '3rdParty') {\n        this.modules.external.push(module);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"changeLanguage\",\n    value: function changeLanguage(lng, callback) {\n      var _this4 = this;\n\n      this.isLanguageChangingTo = lng;\n      var deferred = defer();\n      this.emit('languageChanging', lng);\n\n      var done = function done(err, l) {\n        if (l) {\n          _this4.language = l;\n          _this4.languages = _this4.services.languageUtils.toResolveHierarchy(l);\n\n          _this4.translator.changeLanguage(l);\n\n          _this4.isLanguageChangingTo = undefined;\n\n          _this4.emit('languageChanged', l);\n\n          _this4.logger.log('languageChanged', l);\n        } else {\n          _this4.isLanguageChangingTo = undefined;\n        }\n\n        deferred.resolve(function () {\n          return _this4.t.apply(_this4, arguments);\n        });\n        if (callback) callback(err, function () {\n          return _this4.t.apply(_this4, arguments);\n        });\n      };\n\n      var setLng = function setLng(lngs) {\n        var l = typeof lngs === 'string' ? lngs : _this4.services.languageUtils.getBestMatchFromCodes(lngs);\n\n        if (l) {\n          if (!_this4.language) {\n            _this4.language = l;\n            _this4.languages = _this4.services.languageUtils.toResolveHierarchy(l);\n          }\n\n          if (!_this4.translator.language) _this4.translator.changeLanguage(l);\n          if (_this4.services.languageDetector) _this4.services.languageDetector.cacheUserLanguage(l);\n        }\n\n        _this4.loadResources(l, function (err) {\n          done(err, l);\n        });\n      };\n\n      if (!lng && this.services.languageDetector && !this.services.languageDetector.async) {\n        setLng(this.services.languageDetector.detect());\n      } else if (!lng && this.services.languageDetector && this.services.languageDetector.async) {\n        this.services.languageDetector.detect(setLng);\n      } else {\n        setLng(lng);\n      }\n\n      return deferred;\n    }\n  }, {\n    key: \"getFixedT\",\n    value: function getFixedT(lng, ns) {\n      var _this5 = this;\n\n      var fixedT = function fixedT(key, opts) {\n        var options;\n\n        if (_typeof(opts) !== 'object') {\n          for (var _len3 = arguments.length, rest = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n            rest[_key3 - 2] = arguments[_key3];\n          }\n\n          options = _this5.options.overloadTranslationOptionHandler([key, opts].concat(rest));\n        } else {\n          options = _objectSpread({}, opts);\n        }\n\n        options.lng = options.lng || fixedT.lng;\n        options.lngs = options.lngs || fixedT.lngs;\n        options.ns = options.ns || fixedT.ns;\n        return _this5.t(key, options);\n      };\n\n      if (typeof lng === 'string') {\n        fixedT.lng = lng;\n      } else {\n        fixedT.lngs = lng;\n      }\n\n      fixedT.ns = ns;\n      return fixedT;\n    }\n  }, {\n    key: \"t\",\n    value: function t() {\n      var _this$translator;\n\n      return this.translator && (_this$translator = this.translator).translate.apply(_this$translator, arguments);\n    }\n  }, {\n    key: \"exists\",\n    value: function exists() {\n      var _this$translator2;\n\n      return this.translator && (_this$translator2 = this.translator).exists.apply(_this$translator2, arguments);\n    }\n  }, {\n    key: \"setDefaultNamespace\",\n    value: function setDefaultNamespace(ns) {\n      this.options.defaultNS = ns;\n    }\n  }, {\n    key: \"hasLoadedNamespace\",\n    value: function hasLoadedNamespace(ns) {\n      var _this6 = this;\n\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (!this.isInitialized) {\n        this.logger.warn('hasLoadedNamespace: i18next was not initialized', this.languages);\n        return false;\n      }\n\n      if (!this.languages || !this.languages.length) {\n        this.logger.warn('hasLoadedNamespace: i18n.languages were undefined or empty', this.languages);\n        return false;\n      }\n\n      var lng = this.languages[0];\n      var fallbackLng = this.options ? this.options.fallbackLng : false;\n      var lastLng = this.languages[this.languages.length - 1];\n      if (lng.toLowerCase() === 'cimode') return true;\n\n      var loadNotPending = function loadNotPending(l, n) {\n        var loadState = _this6.services.backendConnector.state[\"\".concat(l, \"|\").concat(n)];\n\n        return loadState === -1 || loadState === 2;\n      };\n\n      if (options.precheck) {\n        var preResult = options.precheck(this, loadNotPending);\n        if (preResult !== undefined) return preResult;\n      }\n\n      if (this.hasResourceBundle(lng, ns)) return true;\n      if (!this.services.backendConnector.backend) return true;\n      if (loadNotPending(lng, ns) && (!fallbackLng || loadNotPending(lastLng, ns))) return true;\n      return false;\n    }\n  }, {\n    key: \"loadNamespaces\",\n    value: function loadNamespaces(ns, callback) {\n      var _this7 = this;\n\n      var deferred = defer();\n\n      if (!this.options.ns) {\n        callback && callback();\n        return Promise.resolve();\n      }\n\n      if (typeof ns === 'string') ns = [ns];\n      ns.forEach(function (n) {\n        if (_this7.options.ns.indexOf(n) < 0) _this7.options.ns.push(n);\n      });\n      this.loadResources(function (err) {\n        deferred.resolve();\n        if (callback) callback(err);\n      });\n      return deferred;\n    }\n  }, {\n    key: \"loadLanguages\",\n    value: function loadLanguages(lngs, callback) {\n      var deferred = defer();\n      if (typeof lngs === 'string') lngs = [lngs];\n      var preloaded = this.options.preload || [];\n      var newLngs = lngs.filter(function (lng) {\n        return preloaded.indexOf(lng) < 0;\n      });\n\n      if (!newLngs.length) {\n        if (callback) callback();\n        return Promise.resolve();\n      }\n\n      this.options.preload = preloaded.concat(newLngs);\n      this.loadResources(function (err) {\n        deferred.resolve();\n        if (callback) callback(err);\n      });\n      return deferred;\n    }\n  }, {\n    key: \"dir\",\n    value: function dir(lng) {\n      if (!lng) lng = this.languages && this.languages.length > 0 ? this.languages[0] : this.language;\n      if (!lng) return 'rtl';\n      var rtlLngs = ['ar', 'shu', 'sqr', 'ssh', 'xaa', 'yhd', 'yud', 'aao', 'abh', 'abv', 'acm', 'acq', 'acw', 'acx', 'acy', 'adf', 'ads', 'aeb', 'aec', 'afb', 'ajp', 'apc', 'apd', 'arb', 'arq', 'ars', 'ary', 'arz', 'auz', 'avl', 'ayh', 'ayl', 'ayn', 'ayp', 'bbz', 'pga', 'he', 'iw', 'ps', 'pbt', 'pbu', 'pst', 'prp', 'prd', 'ug', 'ur', 'ydd', 'yds', 'yih', 'ji', 'yi', 'hbo', 'men', 'xmn', 'fa', 'jpr', 'peo', 'pes', 'prs', 'dv', 'sam'];\n      return rtlLngs.indexOf(this.services.languageUtils.getLanguagePartFromCode(lng)) >= 0 ? 'rtl' : 'ltr';\n    }\n  }, {\n    key: \"createInstance\",\n    value: function createInstance() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments.length > 1 ? arguments[1] : undefined;\n      return new I18n(options, callback);\n    }\n  }, {\n    key: \"cloneInstance\",\n    value: function cloneInstance() {\n      var _this8 = this;\n\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n\n      var mergedOptions = _objectSpread({}, this.options, options, {\n        isClone: true\n      });\n\n      var clone = new I18n(mergedOptions);\n      var membersToCopy = ['store', 'services', 'language'];\n      membersToCopy.forEach(function (m) {\n        clone[m] = _this8[m];\n      });\n      clone.services = _objectSpread({}, this.services);\n      clone.services.utils = {\n        hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n      };\n      clone.translator = new Translator(clone.services, clone.options);\n      clone.translator.on('*', function (event) {\n        for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n          args[_key4 - 1] = arguments[_key4];\n        }\n\n        clone.emit.apply(clone, [event].concat(args));\n      });\n      clone.init(mergedOptions, callback);\n      clone.translator.options = clone.options;\n      clone.translator.backendConnector.services.utils = {\n        hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n      };\n      return clone;\n    }\n  }]);\n\n  return I18n;\n}(EventEmitter);\n\nvar i18next = new I18n();\n\nexport default i18next;\n","import i18next from 'i18next';\n\n\n/*\n    From https://weeknumber.com/how-to/javascript\n*/\n\nexport default class FormatDate {\n\n    static dayOfYear = (date) => Math.floor((date - new Date(date.getFullYear(), 0, 0)) / (1000 * 60 * 60 * 24));\n\n    static isYesterday(someDate) {\n        const yesterday = new Date();\n        yesterday.setDate(yesterday.getDate() - 1);\n    \n        return this.areEqual(someDate, yesterday);\n    }\n\n    static isToday(someDate) {\n        const today = new Date();\n    \n        return this.areEqual(someDate, today);\n    }\n\n    static isCurrentWeek(someDate) {\n        const today = new Date();\n        return (this.dayOfYear(today) - this.dayOfYear(someDate)) <= 7;\n    }\n\n    static isCurrentMonth(someDate) {\n        const today = new Date();\n        return (this.dayOfYear(today) - this.dayOfYear(someDate)) <= 30;\n    }\n\n    static areEqual(date, otherDate) {\n        return date.getDate() === otherDate.getDate() &&\n            date.getMonth() === otherDate.getMonth() &&\n            date.getFullYear() === otherDate.getFullYear();\n    }\n\n    static formatDate(date) {\n\n        if (this.isToday(date) === true) {\n            return i18next.t('general.date.today');\n        } else if (this.isYesterday(date) === true) {\n            return i18next.t('general.date.yesterday');\n        } else {\n\n            var options = { year: 'numeric', month: 'long', day: 'numeric' };\n            return date.toLocaleDateString(\"en-US\", options);\n\n        }\n    }\n\n    static currentDateString() {\n        let date = new Date();\n        return new Date(date.getTime() - (date.getTimezoneOffset() * 60000)).toJSON();\n    }\n\n}","import { SAAuth } from \"../Auth/SAAuth\";\n\nimport { Logger } from './Logger';\n\nimport { Messages, Response, ResponseValues } from '../../shared';\n\nchrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\n    processMessage(request, sendResponse);\n    return true;\n});\n\nfunction processMessage(request, sendResponse) {\n    const messages = {\n        [Messages.Logger.GetLogs]: getLogs,\n        [Messages.Logger.DeleteLogs]: deleteLogs,\n        [Messages.Logger.DeleteAllLogs]: deleteAllLogs,\n        [Messages.Logger.GetLoggingPreferences]: getLoggingPreferences,\n        [Messages.Logger.UpdatePreferences]: updateLoggingPreferences,\n        [Messages.Logger.GetUsageMetrics]: getUsageMetrics \n    }\n\n    async function getLogs() {\n        try {\n            const isLoggedIn = await SAAuth.isLoggedIn();\n            const logs = await Logger.getLogs(isLoggedIn);\n            return new Response(ResponseValues.Success, { logs });\n        } catch(e) {\n            return new Response(ResponseValues.Error, { error: e});\n        }\n    }\n\n    async function deleteLogs(request) {\n        try {\n            const isLoggedIn = await SAAuth.isLoggedIn();\n            await Logger.deleteLogs(request.parameters.logList, isLoggedIn);\n            return new Response(ResponseValues.Success);\n        } catch(e) {\n            return new Response(ResponseValues.Error, { error: e });\n        }\n    }\n\n    async function deleteAllLogs() {\n        try {\n            const isLoggedIn = await SAAuth.isLoggedIn();\n            await Logger.deleteAllLogs(isLoggedIn);\n            return new Response(ResponseValues.Success);\n        } catch(e) {\n            return new Response(ResponseValues.Error, { error: e });\n        }\n    }\n\n    async function getLoggingPreferences() {\n        try {\n            const isLoggedIn = await SAAuth.isLoggedIn();\n            const preferences = await Logger.getPreferences(isLoggedIn);\n            return new Response(ResponseValues.Success, { preferences });\n        } catch(e) {\n            return new Response(ResponseValues.Error, { error: e });\n        }\n    }\n\n    async function updateLoggingPreferences(request) {\n        try {\n            const isLoggedIn = await SAAuth.isLoggedIn();\n            await Logger.setPreferences(isLoggedIn, request.parameters.logging);\n            return new Response(ResponseValues.Success);\n        } catch(e) {\n            return new Response(ResponseValues.Error, { error: e });\n        }\n    }\n\n    async function getUsageMetrics() {\n        try {\n            const isLoggedIn = await SAAuth.isLoggedIn();\n            const metrics = await Logger.getUsageMetrics(isLoggedIn);\n            return new Response(ResponseValues.Success, { metrics });\n        } catch(e) {\n            return new Response(ResponseValues.Error, { error: e });\n        }\n    }\n\n    if (messages[request.action]) {\n        messages[request.action](request)\n        .then((result) => {\n            sendResponse(result);\n        })\n        .catch((error) => {\n            sendResponse(error);\n        });\n    }\n}","import { API } from \"aws-amplify\";\r\nimport b64 from 'base64-arraybuffer';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport BrowserStorage from '../BackgroundTools/BrowserStorage';\r\nimport { StorageKeys } from '../BackgroundTools/StorageKeys';\r\nimport { KeyManager } from '../KeyManager/KeyManager';\r\nimport { SAAuth } from '../Auth/SAAuth';\r\nimport { Tools } from '../../Tools/Tools';\r\nimport { Crypto } from '../../Tools/Crypto';\r\nimport DateFormat from '../../views/Shared/DateFormat';\r\n\r\nimport { ExpirationDateOption, ExpirationDates } from \"../../views/Shared/ExpirationDates\";\r\n\r\n// import { TextEncoder } from 'util';\r\n\r\nimport './LoggerMessage';\r\n\r\nexport class Logger {\r\n\r\n    static async getPreferences(isLoggedIn) {\r\n        return new Promise(async (resolve, _) => {\r\n            BrowserStorage.getKey(StorageKeys.Logger.Preferences, isLoggedIn)\r\n                .then((results) => {\r\n                    resolve(results.preferences);\r\n                })\r\n                .catch(async () => {\r\n\r\n                    if (isLoggedIn) {\r\n                        const apiName = 'logger';\r\n                        const path = '/preferences';\r\n\r\n                        const myInit = {\r\n                            headers: {},\r\n                            response: true,\r\n                        };\r\n\r\n                        const res = await API.get(apiName, path, myInit);\r\n                        const data = res.data;\r\n\r\n                        if (!this.preferencesAreValid(data)) {\r\n\r\n                            await this.setDefaultPreferences();\r\n                            let defaultPreferences = await this.getDefaultPreferences();\r\n\r\n                            resolve(defaultPreferences.preferences);\r\n                            return\r\n\r\n                        }\r\n\r\n                        const preferencesObject = {\r\n                            preferences: data,\r\n                            expirationDate: ExpirationDates.expirationDateInStringFor(ExpirationDateOption.PREFERENCES)\r\n                        }\r\n\r\n                        await BrowserStorage.setKey(\r\n                            StorageKeys.Logger.Preferences, \r\n                            preferencesObject\r\n                        );\r\n\r\n                        resolve(preferencesObject.preferences);\r\n                    } else {\r\n                        await this.setDefaultPreferences();\r\n\r\n                        let defaultPreferences = await this.getDefaultPreferences();\r\n                        await BrowserStorage.setKey(\r\n                            StorageKeys.Logger.Preferences, \r\n                            defaultPreferences\r\n                        );\r\n\r\n                        resolve(defaultPreferences.preferences);\r\n                    }\r\n                })\r\n        });\r\n    }\r\n\r\n    static preferencesAreValid(data) {\r\n        return data.enabled !== undefined && data.retention !== undefined;\r\n    }\r\n\r\n    static createPreferences(logging, retention) {\r\n        return {\r\n            preferences: {\r\n                enabled: logging,\r\n                retention: retention\r\n            },\r\n            expirationDate: ExpirationDates.expirationDateInStringFor(ExpirationDateOption.PREFERENCES)\r\n        }\r\n    }\r\n\r\n    static async getDefaultPreferences(isLoggedIn) {\r\n        let logs = await this.getLogs(isLoggedIn);\r\n        let hasLogs = logs.length > 0;\r\n\r\n        const loggingEnabled = hasLogs;\r\n        const retention = 30;\r\n\r\n        return this.createPreferences(loggingEnabled, retention);\r\n    }\r\n\r\n    static async setDefaultPreferences() {\r\n        const data = await this.getDefaultPreferences();\r\n\r\n        await BrowserStorage.setKey(StorageKeys.Logger.Preferences, data);\r\n    }\r\n\r\n    static setPreferences(isLoggedIn, logging) {\r\n        return this.getPreferences(isLoggedIn).then((preferences) => {\r\n\r\n            return new Promise(async (resolve, reject) => {\r\n                const apiName = 'logger';\r\n                const path = '/preferences';\r\n\r\n                const body = {\r\n                    \"enabled\": logging,\r\n                    \"retention\": preferences.retention ? preferences.retention : 30\r\n                };\r\n\r\n                // Save Locally\r\n                const data = this.createPreferences(logging, preferences.retention ? preferences.retention : 30)\r\n\r\n                await BrowserStorage.setKey(StorageKeys.Logger.Preferences, data);\r\n\r\n                // Send To Server\r\n                const myInit = {\r\n                    headers: {},\r\n                    body: body\r\n                };\r\n\r\n                try {\r\n                    await API.post(apiName, path, myInit);\r\n                    resolve();\r\n                } catch (e) {\r\n                    reject(e);\r\n                }\r\n            });\r\n\r\n        }).catch((e) => {\r\n\r\n        });\r\n    }\r\n\r\n    static calculateTimeSaved(executionResults) {\r\n        return (executionResults.totalClicks * 3) / 60;\r\n    }\r\n\r\n    static async updateMetrics(executionResults) {\r\n        const input = {\r\n            cc: executionResults.totalClicks,\r\n            ws: 1,\r\n            ms: this.calculateTimeSaved(executionResults)\r\n        }\r\n\r\n        const isLoggedIn = await SAAuth.isLoggedIn();\r\n        await this.updateUsageMetrics(input, isLoggedIn);\r\n    }\r\n\r\n    static async prepareWriteLog(executionResults) {    \r\n        Tools.debugLog(\"[CONSENT TRAIL DEBUG] Inside prepareWriteLog.\");    \r\n        const time = DateFormat.currentDateString();\r\n        executionResults.time = time;\r\n\r\n        const isLoggedIn = await SAAuth.isLoggedIn();\r\n        const canWriteLog = await this.canWriteLog(executionResults.hostname, isLoggedIn);\r\n\r\n        Tools.debugLog(\"[CONSENT TRAIL DEBUG] canWriteLog ? \" + canWriteLog);\r\n\r\n        if (canWriteLog) {\r\n            Tools.debugLog(\"Inside prepareWriteLog. Testing canWriteLog.\");\r\n            try {\r\n                Tools.debugLog(\"Yes\");\r\n                await this.writeLog(executionResults, isLoggedIn);\r\n            } catch(e) {\r\n                Tools.debugLog(\"Error writing log: \" + e);\r\n            }\r\n        }\r\n    }\r\n\r\n    static canWriteLog = async (hostname, isLoggedIn) => {\r\n        const hostnameIsEmpty = !(hostname.length > 0);\r\n        const hereToday = await this.haveLogToday(hostname, isLoggedIn);\r\n        const loggingPreferences = await this.getPreferences(isLoggedIn);\r\n\r\n        return !hostnameIsEmpty && !hereToday && loggingPreferences.enabled;\r\n    }\r\n\r\n    static haveLogToday(hostname, isLoggedIn) {\r\n        return new Promise( (resolve, _) => {\r\n            this.getLogs(isLoggedIn)\r\n            .then((logs) => {\r\n                let filteredLogs =\r\n                    logs.filter( (log) => {\r\n                        const logDate = new Date(log.date);\r\n                        return DateFormat.isToday(logDate);\r\n                    });\r\n                let result = filteredLogs.some(log => log['hostname'] === hostname);\r\n\r\n                resolve(result);\r\n            })\r\n            .catch( () => {\r\n                resolve(false);\r\n            });\r\n        });\r\n    }\r\n\r\n    static async getLogs(isLoggedIn) {\r\n        return new Promise(async (resolve, reject) => {\r\n            BrowserStorage.getKey(StorageKeys.Logger.Logs, isLoggedIn)\r\n                .then((results) => {\r\n                    resolve(results.logs);\r\n                })\r\n                .catch(async () => {\r\n                    if (isLoggedIn) {\r\n                        try {\r\n                            const DEK = await KeyManager.getDEK();\r\n                            const apiName = 'logger';\r\n                            const path = '/logs';\r\n\r\n                            const myInit = {\r\n                                headers: {},\r\n                                response: true,\r\n                            };\r\n                            const res = await API.get(apiName, path, myInit);\r\n\r\n                            let decryptedLogs = [];\r\n                            const dc = new TextDecoder();\r\n\r\n                            for (const encryptedLog of res.data) {\r\n                                try {\r\n                                    const decrypted = await Crypto.decrypt(b64.decode(encryptedLog.log), DEK, b64.decode(encryptedLog.iv));\r\n                                    const logBuffer = b64.decode(decrypted);\r\n                                    decryptedLogs.push({\r\n                                        ...JSON.parse(dc.decode(logBuffer)),\r\n                                        pk: encryptedLog.pk,\r\n                                        sk: encryptedLog.sk\r\n                                    });\r\n                                } catch (e) {\r\n\r\n                                }\r\n                            }\r\n\r\n                            decryptedLogs.sort((a, b) => { return a.dateTime > b.dateTime ? -1 : 1 });\r\n\r\n                            const data = {\r\n                                logs: decryptedLogs,\r\n                                expirationDate: ExpirationDates.expirationDateInStringFor(ExpirationDateOption.LOGS)\r\n                            }\r\n\r\n                            await BrowserStorage.setKey(StorageKeys.Logger.Logs, data);\r\n                            resolve(data.logs);\r\n                        } catch (e) {\r\n                            Tools.debugLog(\"Error getting logs: \" + e);\r\n                            reject(e);\r\n                        }\r\n                    } else {\r\n                        // User is not logged in and there are no logs in cache. Init empty cache. No need to use expiration date.\r\n                        const data = {\r\n                            logs: []\r\n                        };\r\n\r\n                        await BrowserStorage.setKey(StorageKeys.Logger.Logs, data);\r\n                        resolve(data.logs);\r\n                    }\r\n                })\r\n        });\r\n    }\r\n\r\n    static async deleteAllLogsFromCache() {\r\n        await BrowserStorage.clearKey(StorageKeys.Logger.Logs);\r\n    }\r\n\r\n    static async deleteLogsFromCache(logList) {\r\n        // 1 - Get logs from cache\r\n        // 2 - Keep only ones not in list\r\n        // 3 - Update cache\r\n        BrowserStorage.getKey(StorageKeys.Logger.Logs)\r\n            .then(async (results) => {\r\n                let cachedLogs = results.logs;\r\n                let updatedLogs = [];\r\n\r\n                // eslint-disable-next-line\r\n                cachedLogs.map((log) => {\r\n                    if (!logList.includes(log.sk)) {\r\n                        updatedLogs.push(log);\r\n                    }\r\n                });\r\n\r\n                const data = {\r\n                    logs: updatedLogs\r\n                }\r\n\r\n                await BrowserStorage.setKey(StorageKeys.Logger.Logs, data);\r\n            })\r\n            .catch((e) => {\r\n\r\n            })\r\n    }\r\n\r\n    static async writeLogToCache(log, isLoggedIn) {\r\n        BrowserStorage.getKey(StorageKeys.Logger.Logs, isLoggedIn)\r\n            .then(async (results) => {\r\n                let cachedLogs = results.logs;\r\n\r\n                // Log limit reached, popping last element\r\n                if (cachedLogs.length === 50) {\r\n                    cachedLogs.pop();\r\n                }\r\n\r\n                cachedLogs.unshift(log);\r\n\r\n                const data = {\r\n                    logs: cachedLogs,\r\n                    expirationDate: isLoggedIn ? ExpirationDates.expirationDateInStringFor(ExpirationDateOption.LOGS) : null\r\n                }\r\n\r\n                await BrowserStorage.setKey(StorageKeys.Logger.Logs, data);\r\n            })\r\n            .catch(async () => {\r\n                let logs = [];\r\n                logs.unshift(log);\r\n\r\n                const data = {\r\n                    logs: logs,\r\n                    expirationDate: ExpirationDates.expirationDateInStringFor(ExpirationDateOption.LOGS)\r\n                }\r\n\r\n                await BrowserStorage.setKey(StorageKeys.Logger.Logs, data);\r\n            })\r\n    }\r\n\r\n    static async deleteAllLogs(isLoggedIn) {\r\n        try {\r\n            await this.deleteAllLogsFromCache()\r\n        } catch (e) {\r\n        }\r\n\r\n        if (isLoggedIn) {\r\n\r\n            return new Promise(async (resolve, reject) => {\r\n                const apiName = 'logger';\r\n                const path = '/logs';\r\n\r\n                const myInit = {\r\n                    headers: {},\r\n                    body: {}\r\n                };\r\n\r\n                try {\r\n                    await API.del(apiName, path, myInit);\r\n                    resolve();\r\n                } catch (e) {\r\n                    reject();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    static async deleteLogs(logList, isLoggedIn) {\r\n        // - Add logs to cache in Write Log as well\r\n        if (isLoggedIn) {\r\n            return new Promise(async (resolve, reject) => {\r\n                // Need to delete logs remotely and update log cache as well.\r\n                const apiName = 'logger';\r\n                const path = '/logs';\r\n\r\n                const myInit = {\r\n                    headers: {},\r\n                    body: logList,\r\n                };\r\n\r\n                try {\r\n                    await API.del(apiName, path, myInit);\r\n                    resolve();\r\n                } catch (e) {\r\n                    reject();\r\n                }\r\n            });\r\n        } else {\r\n            try {\r\n                await this.deleteLogsFromCache(logList);\r\n            } catch (e) {\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    static parseLog(log) {\r\n        log.dateTime = log.time;\r\n\r\n        log.timeSaved = log.totalClicks * 2 + log.cookieItems * 4;\r\n\r\n        log.time = log.time.replace('T', ' ').replace('Z', '');\r\n\r\n        log.date = log.time.split(' ')[0];\r\n        log.time = log.time.split(' ')[1];\r\n        log.time = log.time.split('.')[0];\r\n\r\n        switch (log.outcome) {\r\n            case 'PREFERENCES_APPLIED':\r\n                log.action = \"Your preferences.\"\r\n                break;\r\n            case 'ACCEPTED_DEFAULT':\r\n                log.action = \"Default.\"\r\n                break;\r\n            case 'ACCEPTED_NECESSARY':\r\n                log.action = \"Accepted necessary.\"\r\n                break;\r\n            case 'REJECTED_ALL':\r\n                log.action = \"Rejected all.\"\r\n                break;\r\n            case 'NONE':\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return log;\r\n    }\r\n\r\n    static async writeLog(inputLog, isLoggedIn) {\r\n        Tools.debugLog(\"writeLog()\");\r\n        const log = this.parseLog(inputLog);\r\n\r\n        // Random sk so we can then identify log\r\n        log.sk = uuidv4();\r\n\r\n        if (!isLoggedIn) {\r\n            await this.writeLogToCache(log);\r\n        } else {\r\n            // TODO: Why do we have a function to check if there is a DEK and then retrieve it and not just try to retrieve it directly?\r\n            KeyManager.checkDEK()\r\n                .then(async () => {\r\n                    try {\r\n                        Tools.debugLog(\"writeLog() after checkDEK\");\r\n                        const ec = new TextEncoder();\r\n                        let DEK = await BrowserStorage.getKey(StorageKeys.KeyManager.DEK);\r\n\r\n                        const encryptedLog = await Crypto.encrypt(ec.encode(JSON.stringify(log)), DEK);\r\n                        await this.commitLog(encryptedLog);\r\n                    } catch (e) {\r\n                        Tools.debugLog(\"An Error occurred when trying commit log to server: \" + e);\r\n                    }\r\n                }).catch(e => {\r\n                    Tools.debugLog(\"[CONSENT TRAIL DEBUG] Checking DEK failed.\");\r\n                    BrowserStorage.getKey(StorageKeys.Logger.Backlog, isLoggedIn)\r\n                        .then(async (results) => {\r\n                            results.push(log);\r\n                            await BrowserStorage.setKey(StorageKeys.Logger.Backlog, results);\r\n                        })\r\n                        .catch(async (e) => {\r\n                            Tools.debugLog(\"[CONSENT TRAIL DEBUG] Everything failed.\");\r\n                            let logs = [];\r\n                            logs.push(log);\r\n                            await BrowserStorage.setKey(StorageKeys.Logger.Backlog, logs);\r\n                        })\r\n                });\r\n        }\r\n    }\r\n\r\n    static commitLog(encryptedLog) {\r\n        return new Promise(async (resolve, reject) => {\r\n            const apiName = 'logger';\r\n            const path = '/logs';\r\n            const myInit = {\r\n                headers: {},\r\n                body: encryptedLog\r\n            };\r\n\r\n            try {\r\n                await API.post(apiName, path, myInit);\r\n                resolve();\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    static async writeBacklog() {\r\n        BrowserStorage.getKey(StorageKeys.Logger.Backlog)\r\n            .then(async (results) => {\r\n                results.forEach(log => {\r\n                    this.writeLog(log);\r\n                })\r\n                await BrowserStorage.clearKey(StorageKeys.Logger.Backlog);\r\n            }).catch(() => {\r\n\r\n            });\r\n    }\r\n\r\n    static async getUsageMetrics(isLoggedIn) {\r\n\r\n        return new Promise(async (resolve, reject) => {\r\n            BrowserStorage.getKey(StorageKeys.Logger.UsageMetrics, isLoggedIn)\r\n                .then((results) => {\r\n                    resolve(results.metrics);\r\n                })\r\n                .catch(async () => {\r\n                    const apiName = 'logger';\r\n                    const path = '/metrics';\r\n\r\n                    const myInit = {\r\n                        headers: {},\r\n                        response: true,\r\n                    };\r\n                    try {\r\n                        let res;\r\n                        let data;\r\n\r\n                        if (isLoggedIn) {\r\n                            res = await API.get(apiName, path, myInit);\r\n\r\n                            data = {\r\n                                metrics: res.data,\r\n                                expirationDate: ExpirationDates.expirationDateInStringFor(ExpirationDateOption.USAGE_METRICS)\r\n                            }\r\n\r\n                            await BrowserStorage.setKey(StorageKeys.Logger.UsageMetrics, data);\r\n                            resolve(res.data);\r\n                        } else {\r\n                            // No user logged in and nothing in cache\r\n                            data = {\r\n                                metrics: {\r\n                                    ws: 0,\r\n                                    cc: 0,\r\n                                    ms: 0\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        await BrowserStorage.setKey(StorageKeys.Logger.UsageMetrics, data);\r\n                        resolve(data.metrics);\r\n                    } catch (e) {\r\n                        reject(e);\r\n                    }\r\n                })\r\n        });\r\n    }\r\n\r\n    static async updateUsageMetrics(metrics, isLoggedIn) {\r\n        const apiName = 'logger';\r\n        const path = '/metrics';\r\n\r\n        const myInit = {\r\n            headers: {},\r\n            body: metrics\r\n        };\r\n\r\n        if (!isLoggedIn) {\r\n            try {\r\n                const existingMetrics = await BrowserStorage.getKey(StorageKeys.Logger.UsageMetrics, isLoggedIn);\r\n\r\n                const updatedMetrics = {\r\n                    ws: existingMetrics.metrics.ws + metrics.ws,\r\n                    cc: existingMetrics.metrics.cc + metrics.cc,\r\n                    ms: existingMetrics.metrics.ms + metrics.ms\r\n                };\r\n\r\n                const data = {\r\n                    metrics: updatedMetrics\r\n                };\r\n\r\n                await BrowserStorage.setKey(StorageKeys.Logger.UsageMetrics, data);\r\n            } catch(e) {\r\n                // No metrics in BrowserStorage\r\n                const newMetrics = {\r\n                    ws: metrics.ws,\r\n                    cc: metrics.cc,\r\n                    ms: metrics.ms\r\n                };\r\n\r\n                const data = {\r\n                    metrics: newMetrics\r\n                };\r\n\r\n                await BrowserStorage.setKey(StorageKeys.Logger.UsageMetrics, data);\r\n            }\r\n        }\r\n\r\n        try {\r\n            await API.post(apiName, path, myInit);\r\n            return;\r\n        } catch (e) {\r\n            throw new Error(e);\r\n        }\r\n    }\r\n\r\n    static clearMetricsAndLogs() {\r\n        return BrowserStorage.clearMetricsAndLogs();\r\n    }\r\n    \r\n}","import { KeyManager } from './KeyManager';\nimport { SAAuth } from '../Auth/SAAuth';\n\nimport { Messages, Response, ResponseValues } from '../../shared';\n\nchrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\n    processMessage(request, sendResponse);\n    return true;\n});\n\nfunction processMessage(request, sendResponse) {\n    const messages = {\n        [Messages.KeyManager.CheckDEK]: checkDEK,\n        [Messages.KeyManager.DeleteDEK]: deleteDEK,\n        [Messages.KeyManager.GenerateDEK]: generateDEK,\n        [Messages.KeyManager.GetUserKeys]: getUserKeys,\n        [Messages.KeyManager.SetMasterPassword]: setMasterPassword\n    }\n\n    async function checkDEK() {\n        try {\n            await KeyManager.checkDEK();\n            return new Response(ResponseValues.Success);\n        } catch(e) {\n            return new Response(ResponseValues.Error, { error: e });\n        }\n    }\n\n    async function deleteDEK() {\n        try {\n            await KeyManager.deleteDEK();\n            return new Response(ResponseValues.Success);\n        } catch(e) {\n            return new Response(ResponseValues.Error, { error: e });\n        }\n    }\n\n    async function generateDEK(request) {\n        try {\n            const user = await SAAuth.currentUserInfo();\n            const username = user.username;\n            \n            await SAAuth.authenticateUser({\n                username: username,\n                password: request.parameters.password\n            });\n\n            return new Response(ResponseValues.Success);\n        } catch(e) {\n            return new Response(ResponseValues.Error, { error: e });\n        }\n    }\n\n    async function getUserKeys() {\n        try {\n            const keys = await KeyManager.getUserKeys();\n            return new Response(ResponseValues.Success, { keys });\n        } catch(e) {\n            return new Response(ResponseValues.Error, { error: e });\n        }\n    }\n    \n    async function setMasterPassword(request) {\n        try {\n            await KeyManager.setMasterPassword(request.password);\n            return new Response(ResponseValues.Success);\n        } catch(e) {\n            return new Response(ResponseValues.Error, { error: e });\n        }\n    }\n\n    if (messages[request.action]) {\n        messages[request.action](request)\n        .then((result) => {\n            sendResponse(result);\n        })\n        .catch((error) => {\n            sendResponse(error);\n        });\n    }\n}\n","import { API } from \"aws-amplify\";\nimport b64 from 'base64-arraybuffer';\n\nimport { Logger } from '../Logger/Logger';\nimport BrowserStorage from '../BackgroundTools/BrowserStorage';\nimport { StorageKeys } from '../BackgroundTools/StorageKeys';\nimport { Crypto } from '../../Tools/Crypto';\nimport { Tools } from '../../Tools/Tools';\n\nimport './KMMessage';\n\nexport class KeyManager {\n    static deleteDEK() {\n        return new Promise((resolve, reject) => {\n            BrowserStorage.clearKey(StorageKeys.KeyManager.DEK)\n                .then(() => {\n                    resolve();\n                })\n                .catch((e) => {\n                    reject(e);\n                });\n        });\n    }\n\n    static checkDEK() {\n        return new Promise((resolve, reject) => {\n            BrowserStorage.getKey(StorageKeys.KeyManager.DEK)\n                .then(() => {\n                    resolve();\n                })\n                .catch((e) => {\n                    reject(e);\n                });\n        });\n    }\n\n    static getDEK() {\n        return new Promise((resolve, reject) => {\n            BrowserStorage.getKey(StorageKeys.KeyManager.DEK)\n                .then((dek) => {\n                    resolve(dek);\n                })\n                .catch((e) => {\n                    reject(e);\n                });\n        });\n    }\n\n    static async generateDEK(password) {\n        return new Promise(async (resolve, reject) => {\n            try {\n                const ec = new TextEncoder();\n                const userKeys = await this.getUserKeys();\n                const KEK = await Crypto.generateKEK(ec.encode(password), b64.decode(userKeys.salt));\n                const DEK = await Crypto.decrypt(b64.decode(userKeys.edek), KEK, b64.decode(userKeys.iv));\n\n                await this.saveDEK(DEK);\n                \n                // Have to move this to Logger\n                Logger.writeBacklog();\n                resolve();\n            } catch (e) {\n                reject(e);\n            }\n        })\n    }\n\n    static async updateDEK(DEK) {\n        try {\n            if (DEK !== undefined) {\n                await this.saveDEK(DEK);\n            } else {\n                await this.clearDEK();\n            }\n        } catch(e) {\n            Tools.debugLog(\"Error updating DEK: \" + e);\n        }\n\n    }\n\n    static async saveDEK(DEK) {\n        await BrowserStorage.setKey(StorageKeys.KeyManager.DEK, DEK);\n    }\n\n    static async clearDEK() {\n        await BrowserStorage.clearKey(StorageKeys.KeyManager.DEK);\n    }\n\n    static getUserKeys() {\n        return new Promise(async (resolve, _) => {\n            BrowserStorage.getKey(StorageKeys.KeyManager.UserKeys)\n                .then((results) => {\n                    resolve(results);\n                }).catch(async () => {\n                    const apiName = 'keys';\n                    const path = '/keys';\n\n                    const myInit = {\n                        headers: {},\n                        response: true,\n                    };\n                    const res = await API.get(apiName, path, myInit);\n                    await BrowserStorage.setKey(StorageKeys.KeyManager.UserKeys, res.data);\n                    resolve(res.data);\n                });\n        });\n    }\n\n    static async setMasterPassword(password) {\n        const ec = new TextEncoder();\n        const userKeys = await this.getUserKeys();\n        const KEK = await Crypto.generateKEK(ec.encode(password), b64.decode(userKeys.salt));\n        const DEK = await Crypto.generateDEK();\n        const EDEK = await Crypto.encrypt(DEK, KEK, b64.decode(userKeys.iv));\n\n        return this.commitEDEK(DEK, EDEK);\n    }\n\n    static async changeMasterPassword(oldPassword, newPassword) {\n        const userKeys = await this.getUserKeys();\n        const ec = new TextEncoder();\n\n        // New Key Encryption Key\n        const KEK = await Crypto.generateKEK(ec.encode(newPassword), b64.decode(userKeys.salt));\n\n        try {\n            // If we have a decrypted key in storage we can encrypt it directly with the new KEK and upload it\n            const DEK = await this.getDEK();\n            const newEDEK = await Crypto.encrypt(b64.decode(DEK), KEK, b64.decode(userKeys.iv));\n            await this.commitEDEK(b64.decode(DEK), newEDEK);\n        } catch (e) {\n            // If we don't have a DEK, we need to get it from EDEK\n            if (userKeys.edek) {\n                const oldKEK = await Crypto.generateKEK(ec.encode(oldPassword), b64.decode(userKeys.salt));\n                const DEK = await Crypto.decrypt(b64.decode(userKeys.edek), oldKEK, b64.decode(userKeys.iv));\n                const newEDEK = await Crypto.encrypt(DEK, KEK, b64.decode(userKeys.iv));\n                await this.commitEDEK(DEK, newEDEK);\n            } else {\n                // If there is absolutely nothing available, just set the newPassword as master password.\n                try {\n                    await this.setMasterPassword(newPassword);\n                } catch(e) {\n                    Tools.debugLog(\"Could not change user encryption keys.\");\n                    Tools.debugLog(e);\n                }\n            }\n        }\n        \n    }\n\n    static async commitEDEK(DEK, EDEK) {\n        const userKeys = await this.getUserKeys();\n\n        // Commit EDEK to database + locally\n        return new Promise(async (resolve, reject) => {\n            const apiName = 'keys';\n            const path = '/keys';\n\n            const myInit = {\n                headers: {},\n                body: {\n                    EDEK: EDEK.ciphertext\n                }\n            };\n            await API.post(apiName, path, myInit);\n\n            await BrowserStorage.setKey(StorageKeys.KeyManager.UserKeys, {\n                ...userKeys,\n                edek: EDEK.ciphertext\n            });\n\n            await this.saveDEK(b64.encode(DEK));\n\n            resolve(EDEK.ciphertext);\n        });\n    }\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nvar defaultOptions = {\n  bindI18n: 'languageChanged',\n  bindI18nStore: '',\n  transEmptyNodeValue: '',\n  transSupportBasicHtmlNodes: true,\n  transKeepBasicHtmlNodesFor: ['br', 'strong', 'i', 'p'],\n  useSuspense: true\n};\nvar i18nInstance;\nexport var I18nContext = React.createContext();\nexport function setDefaults() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  defaultOptions = _objectSpread(_objectSpread({}, defaultOptions), options);\n}\nexport function getDefaults() {\n  return defaultOptions;\n}\nexport var ReportNamespaces = function () {\n  function ReportNamespaces() {\n    _classCallCheck(this, ReportNamespaces);\n\n    this.usedNamespaces = {};\n  }\n\n  _createClass(ReportNamespaces, [{\n    key: \"addUsedNamespaces\",\n    value: function addUsedNamespaces(namespaces) {\n      var _this = this;\n\n      namespaces.forEach(function (ns) {\n        if (!_this.usedNamespaces[ns]) _this.usedNamespaces[ns] = true;\n      });\n    }\n  }, {\n    key: \"getUsedNamespaces\",\n    value: function getUsedNamespaces() {\n      return Object.keys(this.usedNamespaces);\n    }\n  }]);\n\n  return ReportNamespaces;\n}();\nexport function setI18n(instance) {\n  i18nInstance = instance;\n}\nexport function getI18n() {\n  return i18nInstance;\n}\nexport var initReactI18next = {\n  type: '3rdParty',\n  init: function init(instance) {\n    setDefaults(instance.options.react);\n    setI18n(instance);\n  }\n};\nexport function composeInitialProps(ForComponent) {\n  return function (ctx) {\n    return new Promise(function (resolve) {\n      var i18nInitialProps = getInitialProps();\n\n      if (ForComponent.getInitialProps) {\n        ForComponent.getInitialProps(ctx).then(function (componentsInitialProps) {\n          resolve(_objectSpread(_objectSpread({}, componentsInitialProps), i18nInitialProps));\n        });\n      } else {\n        resolve(i18nInitialProps);\n      }\n    });\n  };\n}\nexport function getInitialProps() {\n  var i18n = getI18n();\n  var namespaces = i18n.reportNamespaces ? i18n.reportNamespaces.getUsedNamespaces() : [];\n  var ret = {};\n  var initialI18nStore = {};\n  i18n.languages.forEach(function (l) {\n    initialI18nStore[l] = {};\n    namespaces.forEach(function (ns) {\n      initialI18nStore[l][ns] = i18n.getResourceBundle(l, ns) || {};\n    });\n  });\n  ret.initialI18nStore = initialI18nStore;\n  ret.initialLanguage = i18n.language;\n  return ret;\n}","import _classCallCheck from '@babel/runtime/helpers/esm/classCallCheck';\nimport _createClass from '@babel/runtime/helpers/esm/createClass';\n\nvar arr = [];\nvar each = arr.forEach;\nvar slice = arr.slice;\nfunction defaults(obj) {\n  each.call(slice.call(arguments, 1), function (source) {\n    if (source) {\n      for (var prop in source) {\n        if (obj[prop] === undefined) obj[prop] = source[prop];\n      }\n    }\n  });\n  return obj;\n}\n\n// eslint-disable-next-line no-control-regex\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\nvar serializeCookie = function serializeCookie(name, val, options) {\n  var opt = options || {};\n  opt.path = opt.path || '/';\n  var value = encodeURIComponent(val);\n  var str = name + '=' + value;\n\n  if (opt.maxAge > 0) {\n    var maxAge = opt.maxAge - 0;\n    if (isNaN(maxAge)) throw new Error('maxAge should be a Number');\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    if (typeof opt.expires.toUTCString !== 'function') {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + opt.expires.toUTCString();\n  }\n\n  if (opt.httpOnly) str += '; HttpOnly';\n  if (opt.secure) str += '; Secure';\n\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string' ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n\n      case 'none':\n        str += '; SameSite=None';\n        break;\n\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n};\n\nvar cookie = {\n  create: function create(name, value, minutes, domain) {\n    var cookieOptions = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {\n      path: '/',\n      sameSite: 'strict'\n    };\n\n    if (minutes) {\n      cookieOptions.expires = new Date();\n      cookieOptions.expires.setTime(cookieOptions.expires.getTime() + minutes * 60 * 1000);\n    }\n\n    if (domain) cookieOptions.domain = domain;\n    document.cookie = serializeCookie(name, encodeURIComponent(value), cookieOptions);\n  },\n  read: function read(name) {\n    var nameEQ = name + '=';\n    var ca = document.cookie.split(';');\n\n    for (var i = 0; i < ca.length; i++) {\n      var c = ca[i];\n\n      while (c.charAt(0) === ' ') {\n        c = c.substring(1, c.length);\n      }\n\n      if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);\n    }\n\n    return null;\n  },\n  remove: function remove(name) {\n    this.create(name, '', -1);\n  }\n};\nvar cookie$1 = {\n  name: 'cookie',\n  lookup: function lookup(options) {\n    var found;\n\n    if (options.lookupCookie && typeof document !== 'undefined') {\n      var c = cookie.read(options.lookupCookie);\n      if (c) found = c;\n    }\n\n    return found;\n  },\n  cacheUserLanguage: function cacheUserLanguage(lng, options) {\n    if (options.lookupCookie && typeof document !== 'undefined') {\n      cookie.create(options.lookupCookie, lng, options.cookieMinutes, options.cookieDomain, options.cookieOptions);\n    }\n  }\n};\n\nvar querystring = {\n  name: 'querystring',\n  lookup: function lookup(options) {\n    var found;\n\n    if (typeof window !== 'undefined') {\n      var query = window.location.search.substring(1);\n      var params = query.split('&');\n\n      for (var i = 0; i < params.length; i++) {\n        var pos = params[i].indexOf('=');\n\n        if (pos > 0) {\n          var key = params[i].substring(0, pos);\n\n          if (key === options.lookupQuerystring) {\n            found = params[i].substring(pos + 1);\n          }\n        }\n      }\n    }\n\n    return found;\n  }\n};\n\nvar hasLocalStorageSupport = null;\n\nvar localStorageAvailable = function localStorageAvailable() {\n  if (hasLocalStorageSupport !== null) return hasLocalStorageSupport;\n\n  try {\n    hasLocalStorageSupport = window !== 'undefined' && window.localStorage !== null;\n    var testKey = 'i18next.translate.boo';\n    window.localStorage.setItem(testKey, 'foo');\n    window.localStorage.removeItem(testKey);\n  } catch (e) {\n    hasLocalStorageSupport = false;\n  }\n\n  return hasLocalStorageSupport;\n};\n\nvar localStorage = {\n  name: 'localStorage',\n  lookup: function lookup(options) {\n    var found;\n\n    if (options.lookupLocalStorage && localStorageAvailable()) {\n      var lng = window.localStorage.getItem(options.lookupLocalStorage);\n      if (lng) found = lng;\n    }\n\n    return found;\n  },\n  cacheUserLanguage: function cacheUserLanguage(lng, options) {\n    if (options.lookupLocalStorage && localStorageAvailable()) {\n      window.localStorage.setItem(options.lookupLocalStorage, lng);\n    }\n  }\n};\n\nvar hasSessionStorageSupport = null;\n\nvar sessionStorageAvailable = function sessionStorageAvailable() {\n  if (hasSessionStorageSupport !== null) return hasSessionStorageSupport;\n\n  try {\n    hasSessionStorageSupport = window !== 'undefined' && window.sessionStorage !== null;\n    var testKey = 'i18next.translate.boo';\n    window.sessionStorage.setItem(testKey, 'foo');\n    window.sessionStorage.removeItem(testKey);\n  } catch (e) {\n    hasSessionStorageSupport = false;\n  }\n\n  return hasSessionStorageSupport;\n};\n\nvar sessionStorage = {\n  name: 'sessionStorage',\n  lookup: function lookup(options) {\n    var found;\n\n    if (options.lookupSessionStorage && sessionStorageAvailable()) {\n      var lng = window.sessionStorage.getItem(options.lookupSessionStorage);\n      if (lng) found = lng;\n    }\n\n    return found;\n  },\n  cacheUserLanguage: function cacheUserLanguage(lng, options) {\n    if (options.lookupSessionStorage && sessionStorageAvailable()) {\n      window.sessionStorage.setItem(options.lookupSessionStorage, lng);\n    }\n  }\n};\n\nvar navigator$1 = {\n  name: 'navigator',\n  lookup: function lookup(options) {\n    var found = [];\n\n    if (typeof navigator !== 'undefined') {\n      if (navigator.languages) {\n        // chrome only; not an array, so can't use .push.apply instead of iterating\n        for (var i = 0; i < navigator.languages.length; i++) {\n          found.push(navigator.languages[i]);\n        }\n      }\n\n      if (navigator.userLanguage) {\n        found.push(navigator.userLanguage);\n      }\n\n      if (navigator.language) {\n        found.push(navigator.language);\n      }\n    }\n\n    return found.length > 0 ? found : undefined;\n  }\n};\n\nvar htmlTag = {\n  name: 'htmlTag',\n  lookup: function lookup(options) {\n    var found;\n    var htmlTag = options.htmlTag || (typeof document !== 'undefined' ? document.documentElement : null);\n\n    if (htmlTag && typeof htmlTag.getAttribute === 'function') {\n      found = htmlTag.getAttribute('lang');\n    }\n\n    return found;\n  }\n};\n\nvar path = {\n  name: 'path',\n  lookup: function lookup(options) {\n    var found;\n\n    if (typeof window !== 'undefined') {\n      var language = window.location.pathname.match(/\\/([a-zA-Z-]*)/g);\n\n      if (language instanceof Array) {\n        if (typeof options.lookupFromPathIndex === 'number') {\n          if (typeof language[options.lookupFromPathIndex] !== 'string') {\n            return undefined;\n          }\n\n          found = language[options.lookupFromPathIndex].replace('/', '');\n        } else {\n          found = language[0].replace('/', '');\n        }\n      }\n    }\n\n    return found;\n  }\n};\n\nvar subdomain = {\n  name: 'subdomain',\n  lookup: function lookup(options) {\n    var found;\n\n    if (typeof window !== 'undefined') {\n      var language = window.location.href.match(/(?:http[s]*\\:\\/\\/)*(.*?)\\.(?=[^\\/]*\\..{2,5})/gi);\n\n      if (language instanceof Array) {\n        if (typeof options.lookupFromSubdomainIndex === 'number') {\n          found = language[options.lookupFromSubdomainIndex].replace('http://', '').replace('https://', '').replace('.', '');\n        } else {\n          found = language[0].replace('http://', '').replace('https://', '').replace('.', '');\n        }\n      }\n    }\n\n    return found;\n  }\n};\n\nfunction getDefaults() {\n  return {\n    order: ['querystring', 'cookie', 'localStorage', 'sessionStorage', 'navigator', 'htmlTag'],\n    lookupQuerystring: 'lng',\n    lookupCookie: 'i18next',\n    lookupLocalStorage: 'i18nextLng',\n    lookupSessionStorage: 'i18nextLng',\n    // cache user language\n    caches: ['localStorage'],\n    excludeCacheFor: ['cimode'] //cookieMinutes: 10,\n    //cookieDomain: 'myDomain'\n\n  };\n}\n\nvar Browser =\n/*#__PURE__*/\nfunction () {\n  function Browser(services) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Browser);\n\n    this.type = 'languageDetector';\n    this.detectors = {};\n    this.init(services, options);\n  }\n\n  _createClass(Browser, [{\n    key: \"init\",\n    value: function init(services) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var i18nOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      this.services = services;\n      this.options = defaults(options, this.options || {}, getDefaults()); // backwards compatibility\n\n      if (this.options.lookupFromUrlIndex) this.options.lookupFromPathIndex = this.options.lookupFromUrlIndex;\n      this.i18nOptions = i18nOptions;\n      this.addDetector(cookie$1);\n      this.addDetector(querystring);\n      this.addDetector(localStorage);\n      this.addDetector(sessionStorage);\n      this.addDetector(navigator$1);\n      this.addDetector(htmlTag);\n      this.addDetector(path);\n      this.addDetector(subdomain);\n    }\n  }, {\n    key: \"addDetector\",\n    value: function addDetector(detector) {\n      this.detectors[detector.name] = detector;\n    }\n  }, {\n    key: \"detect\",\n    value: function detect(detectionOrder) {\n      var _this = this;\n\n      if (!detectionOrder) detectionOrder = this.options.order;\n      var detected = [];\n      detectionOrder.forEach(function (detectorName) {\n        if (_this.detectors[detectorName]) {\n          var lookup = _this.detectors[detectorName].lookup(_this.options);\n\n          if (lookup && typeof lookup === 'string') lookup = [lookup];\n          if (lookup) detected = detected.concat(lookup);\n        }\n      });\n      if (this.services.languageUtils.getBestMatchFromCodes) return detected; // new i18next v19.5.0\n\n      return detected.length > 0 ? detected[0] : null; // a little backward compatibility\n    }\n  }, {\n    key: \"cacheUserLanguage\",\n    value: function cacheUserLanguage(lng, caches) {\n      var _this2 = this;\n\n      if (!caches) caches = this.options.caches;\n      if (!caches) return;\n      if (this.options.excludeCacheFor && this.options.excludeCacheFor.indexOf(lng) > -1) return;\n      caches.forEach(function (cacheName) {\n        if (_this2.detectors[cacheName]) _this2.detectors[cacheName].cacheUserLanguage(lng, _this2.options);\n      });\n    }\n  }]);\n\n  return Browser;\n}();\n\nBrowser.type = 'languageDetector';\n\nexport default Browser;\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport translationEN from './locales/en/translation.json'\nimport translationPT from './locales/pt/translation.json'\nimport translationDE from './locales/de/translation.json'\nimport translationES from './locales/es/translation.json'\nimport translationRU from './locales/ru/translation.json'\nimport translationNL from './locales/nl/translation.json'\nimport translationIT from './locales/it/translation.json'\nimport translationFR from './locales/fr/translation.json'\n\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\n// the translations\nconst resources = {\n  en: { translation: translationEN }, \n  pt: { translation: translationPT },\n  de: { translation: translationDE },\n  es: { translation: translationES },\n  ru: { translation: translationRU },\n  nl: { translation: translationNL },\n  it: { translation: translationIT },\n  fr: { translation: translationFR }\n};\n\ni18n\n  // load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\n  // learn more: https://github.com/i18next/i18next-http-backend\n  // .use(Backend)\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  .use(LanguageDetector)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    resources: resources,\n    fallbackLng: 'en',\n    debug: false,\n\n    interpolation: {\n      escapeValue: true, // not needed for react as it escapes by default\n    },\n    react: {\n        useSuspense: false\n      }\n  });\n\nexport default i18n;","import { Whitelist } from './Whitelist';\nimport { Messages, Response, ResponseValues } from '../../shared';\n\nchrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\n    processMessage(request, sendResponse);\n    return true;\n});\n\nfunction processMessage(request, sendResponse) {\n    const messages = {\n        [Messages.Whitelist.GetDisabledHostnames]: getDisabledHostnames,\n        [Messages.Whitelist.SaveDisabledHostnames]: saveDisabledHostnames,\n        [Messages.Whitelist.HostnameIsBlocked]: hostnameIsBlocked,\n        [Messages.Whitelist.UpdateHostnameState]: updateHostnameState\n    };\n\n    async function getDisabledHostnames() {\n        try {\n            const disabledHostnames = await Whitelist.getDisabledHostnames();\n            return new Response(ResponseValues.Success, { disabledHostnames });\n        } catch(e) {\n            return new Response(ResponseValues.Error, { error: e });\n        }\n    }\n\n    async function saveDisabledHostnames(request) {\n        try {\n            await Whitelist.saveDisabledHostnames(request.parameters.disabledHostnames);\n            return new Response(ResponseValues.Success);\n        } catch(e) {\n            return new Response(ResponseValues.Error, { error: e });\n        }\n    }\n\n    async function hostnameIsBlocked(request) {\n        try {\n            const isBlocked = await Whitelist.hostnameIsBlocked(request.parameters.hostname);\n            return new Response(ResponseValues.Success, { isBlocked });\n        } catch(e) {\n            return new Response(ResponseValues.Error, { error: e });\n        }\n    }\n\n    async function updateHostnameState(request) {\n        try {\n            await Whitelist.updateHostnameState(request.parameters.hostname, request.parameters.state);\n            return new Response(ResponseValues.Success);\n        } catch(e) {\n            return new Response(ResponseValues.Error, e);\n        }\n    }\n\n    if (messages[request.action]) {\n        messages[request.action](request)\n        .then((result) => {\n            sendResponse(result);\n        })\n        .catch((error) => {\n            sendResponse(error);\n        });\n    }\n}\n","import BrowserStorage from \"../BackgroundTools/BrowserStorage\";\nimport { StorageKeys } from \"../BackgroundTools/StorageKeys\";\n\nimport './WhitelistMessages';\n\nexport class Whitelist {\n    static async hostnameIsBlocked(hostname) {\n        try {\n            const disabledHostnames = await BrowserStorage.getKey(StorageKeys.Whitelist.Whitelist);\n            return disabledHostnames.includes(hostname);\n        } catch {\n            return false;\n        }\n    } \n\n    static async updateHostnameState(hostname, state) {\n        try {\n            let disabledHostnames = await this.getDisabledHostnames();\n\n            // If state is true, remove hostname from disabledHostnames\n            if (state) {\n                disabledHostnames =\n                    disabledHostnames.filter(disabledHostname => disabledHostname !== hostname);\n            } else {\n                disabledHostnames.push(hostname);\n            }\n\n            await this.saveDisabledHostnames(disabledHostnames);\n        } catch(e) {\n            throw new Error(e);\n        }\n    }\n\n    static async getDisabledHostnames() {\n        try {\n            const disabledHostnames = await BrowserStorage.getKey(StorageKeys.Whitelist.Whitelist);\n            return disabledHostnames;\n        } catch(e) {\n            return [];\n        }\n    }\n\n    static async saveDisabledHostnames(hostnames) {\n        try {\n            await BrowserStorage.setKey(StorageKeys.Whitelist.Whitelist, hostnames);\n        } catch(e) {\n            throw new Error(e);\n        }\n    }\n}","import { Messages, Response, ResponseValues } from '../../shared';\r\nimport { Entitlement, SubscriptionVerificationNotification } from './Entitlement';\r\n\r\nchrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\r\n    processMessage(request, sendResponse);\r\n    return true;\r\n});\r\n\r\nfunction processMessage(request, sendResponse) {\r\n    const messages = {\r\n        [Messages.Entitlement.GetUserEntitlement]: getUserEntitlement,\r\n        [Messages.Entitlement.IncrementCounter]: incrementCounter,\r\n        [Messages.Entitlement.GetCurrentEntitlement]: getCurrentEntitlement,\r\n        [Messages.Entitlement.GetCounter]: getCounter,\r\n        [Messages.Entitlement.SubscriptionVerificationNotification.GetPopupShownAt]: getVerifyPopupShownAt,\r\n        [Messages.Entitlement.SubscriptionVerificationNotification.ShowPopup]: showVerifyPopup,\r\n    }\r\n\r\n    async function getUserEntitlement() {\r\n        try {\r\n            const hasEntitlement = await Entitlement.getUserEntitlement();\r\n            const isRCIdSynced = await Entitlement.getIsRCIdSynced()\r\n            const installedAt = await Entitlement.getRCIdInstalledAt()\r\n\r\n            return new Response(ResponseValues.Success, {\r\n                hasEntitlement: hasEntitlement,\r\n                isRCIdSynced,\r\n                installedAt,\r\n            });\r\n        } catch(e) {\r\n            return new Response(ResponseValues.Success, {\r\n                hasEntitlement: true,\r\n                isRCIdSynced: true,\r\n                installedAt: null\r\n            });\r\n        }\r\n    }\r\n\r\n    async function incrementCounter(request) {\r\n        try {\r\n            await Entitlement.incrementCounter({ hostname: request.parameters.hostname });\r\n            return new Response(ResponseValues.Success, { });\r\n        } catch(e) {\r\n            return new Response(ResponseValues.Error, { });\r\n        }\r\n    }\r\n\r\n    async function getCurrentEntitlement(){\r\n        try {\r\n            const hasEntitlement = await Entitlement.getCurrentEntitlement();\r\n            const isRCIdSynced = await Entitlement.getIsRCIdSynced()\r\n            const installedAt = await Entitlement.getRCIdInstalledAt()\r\n\r\n            return new Response(ResponseValues.Success, {\r\n                hasEntitlement: hasEntitlement,\r\n                isRCIdSynced,\r\n                installedAt\r\n            });\r\n        } catch(e) {\r\n            return new Response(ResponseValues.Error, {\r\n                hasEntitlement: true,\r\n                isRCIdSynced: true,\r\n                installedAt: null\r\n            });\r\n        }\r\n    }\r\n\r\n    async function getCounter() {\r\n        try {\r\n            const counter = await Entitlement.getCounter();\r\n            return new Response(ResponseValues.Success, { counter: counter });\r\n        } catch(e) {\r\n            return new Response(ResponseValues.Error, { counter: 0 });\r\n        }\r\n    }\r\n\r\n    async function getVerifyPopupShownAt() {\r\n        try {\r\n            const popupShownAt = await SubscriptionVerificationNotification.getPopupShownAt()\r\n            return new Response(ResponseValues.Success, { popupShownAt: popupShownAt });\r\n        } catch (e) {\r\n            return new Response(ResponseValues.Error, { popupShownAt: null });\r\n        }\r\n    }\r\n\r\n    async function showVerifyPopup() {\r\n        try {\r\n            const url = chrome.runtime.getURL(\"update.html\");\r\n            await chrome.tabs.create({ url });\r\n            await SubscriptionVerificationNotification.setPopupShownAt()\r\n            return new Response(ResponseValues.Success, {});\r\n        } catch (e) {\r\n            return new Response(ResponseValues.Error, {});\r\n        }\r\n    }\r\n\r\n    if (messages[request.action]) {\r\n        messages[request.action](request)\r\n        .then((result) => {\r\n            sendResponse(result);\r\n        })\r\n        .catch((error) => {\r\n            sendResponse(error);\r\n        });\r\n    }\r\n}\r\n","export const EntitlementConstants = {\n    FREE_DAILY: 3\n}","import { SAAuth } from './SAAuth';\r\nimport { KeyManager } from '../KeyManager/KeyManager';\r\nimport OpenAccountPage from '../../shared/OpenAccountPage';\r\n\r\nimport { Messages, Response, ResponseValues } from '../../shared';\r\n\r\nlet signInWindow;\r\n\r\nchrome.runtime.onMessage.addListener((request, _, sendResponse) => {\r\n    processMessage(request, sendResponse);\r\n    return true;\r\n});\r\n\r\nfunction processMessage(request, sendResponse) {\r\n    const messages = {\r\n       [Messages.Auth.OpenSignIn]: openSignIn,\r\n       [Messages.Auth.OpenSignUp]: openSignUp,\r\n       [Messages.Auth.OpenForgotPassword]: openForgotPassword,\r\n       [Messages.Auth.AuthenticateUser]: authenticateUser,\r\n       [Messages.Auth.BuildUserSession]: buildUserSession,\r\n       [Messages.Auth.SignInFromExtension]: signInFromExtension,\r\n       [Messages.Auth.SignOut]: signOut,\r\n       [Messages.Auth.CheckAuth]: checkAuth,\r\n       [Messages.Auth.ChangeUserPassword]: changeUserPassword,\r\n       [Messages.Auth.DeleteUser]: deleteUser\r\n    };\r\n\r\n    async function openSignIn() {\r\n        const window = await OpenAccountPage.openSignIn()\r\n        signInWindow = window;\r\n        return new Response(ResponseValues.Success);\r\n    }\r\n\r\n    async function openSignUp(request) {\r\n        const window = await OpenAccountPage.openSignUp(request.parameters.fromOnboard);\r\n        signInWindow = window;\r\n        return new Response(ResponseValues.Success);\r\n    }\r\n\r\n    async function openForgotPassword(request) {\r\n        const window = await OpenAccountPage.openForgotPassword(request.parameters.fromOnboard);\r\n        signInWindow = window;\r\n        return new Response(ResponseValues.Success);\r\n    }\r\n\r\n    async function authenticateUser(request) {\r\n        try {\r\n            const user = await SAAuth.authenticateUser(request.credentials);\r\n            chrome.tabs.remove(signInWindow.id);\r\n            \r\n            if (!request.fromOnboard) {\r\n                chrome.runtime.openOptionsPage();\r\n            }\r\n            \r\n            return new Response(ResponseValues.Success, user);\r\n        } catch(e) {\r\n            return new Response(ResponseValues.Error, e);\r\n        }\r\n    }\r\n\r\n    async function signInFromExtension(request) {\r\n        try {\r\n            const user = await SAAuth.authenticateUser(request.parameters.credentials);\r\n            return new Response(ResponseValues.Success, user);\r\n        } catch(e) {\r\n            return new Response(ResponseValues.Error, e);\r\n        }\r\n    }\r\n\r\n    async function buildUserSession(request) {\r\n        try {\r\n            await SAAuth.buildUserSessionFromSession(request.session);\r\n            chrome.tabs.remove(signInWindow.id);\r\n            \r\n            if (!request.fromOnboard) {\r\n                chrome.runtime.openOptionsPage();\r\n            }\r\n\r\n            return new Response(ResponseValues.Success);\r\n        } catch(e) {\r\n            return new Response(ResponseValues.Error, e);\r\n        }\r\n    }\r\n\r\n    async function signOut() {\r\n        try {\r\n            await SAAuth.logoutUser();\r\n            return new Response(ResponseValues.Success);\r\n        } catch(e) {\r\n            return new Response(ResponseValues.Error, e);\r\n        }\r\n    }\r\n\r\n    async function checkAuth() {\r\n        try {\r\n            const user = await SAAuth.currentAuthenticatedUser();\r\n            return new Response(ResponseValues.Success, user);\r\n        } catch(e) {\r\n            return new Response(ResponseValues.Error, e);\r\n        }\r\n    }\r\n\r\n    async function changeUserPassword(request) {\r\n        try {\r\n            await SAAuth.changePassword(request.parameters.oldPassword, request.parameters.newPassword);\r\n            await KeyManager.changeMasterPassword(request.parameters.oldPassword, request.parameters.newPassword);\r\n\r\n            return new Response(ResponseValues.Success);\r\n        } catch(e) {\r\n            return new Response(ResponseValues.Error, e);\r\n        }\r\n    }\r\n\r\n    async function deleteUser() {\r\n        try {\r\n            await SAAuth.deleteUser();\r\n            await SAAuth.logoutUser();\r\n\r\n            return new Response(ResponseValues.Success);\r\n        } catch(e) {\r\n            return new Response(ResponseValues.Error, e);\r\n        }\r\n    }\r\n\r\n    if (messages[request.action]) {\r\n        messages[request.action](request)\r\n        .then((result) => {\r\n            sendResponse(result);\r\n        })\r\n        .catch((error) => {\r\n            sendResponse(error);\r\n        });\r\n    }\r\n} \r\n\r\n","import './EntitlementMessage';\r\n\r\nimport BrowserStorage from '../BackgroundTools/BrowserStorage';\r\nimport { StorageKeys } from '../BackgroundTools/StorageKeys';\r\nimport BrowserHelper from '../../shared/BrowserHelper';\r\n\r\nimport { EntitlementConstants } from './Constants';\r\nimport { SARefreshable } from '../SARefreshable/SARefreshable';\r\nimport { BackgroundTools } from '../BackgroundTools/BackgroundTools';\r\n\r\nexport class Entitlement {\r\n\r\n    static getTodayString() {\r\n      return new Date().setHours(0, 0, 0, 0);\r\n    }\r\n\r\n    static async getUserEntitlement() {\r\n      // User is always entitled if this is not Safari on iOS\r\n      if (!BrowserHelper.isMobileSafari(navigator.userAgent)) {\r\n        return true;  \r\n      }\r\n\r\n      try {\r\n        await SARefreshable.getUserEntitlement();\r\n      } catch(e) {\r\n        console.log(\"Couldn't refresh entitlement.\");\r\n      }\r\n\r\n      try {\r\n        const hasEntitlement = await BrowserStorage.getKey(StorageKeys.Entitlement.HasEntitlement, false);\r\n        // Immediately return true if user is entitled. \r\n        if (hasEntitlement.hasEntitlement) {\r\n          return true;\r\n        } \r\n\r\n        const numberOfRuns = await this.getCounter();\r\n\r\n        if (numberOfRuns >= EntitlementConstants.FREE_DAILY) {\r\n          await BackgroundTools.showSubscribe();\r\n          return false;\r\n        }\r\n\r\n        return true;\r\n      } catch(e) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    static async getCounter() {\r\n      try {\r\n        const result = await BrowserStorage.getKey(StorageKeys.Entitlement.NumberOfRuns + this.getTodayString());\r\n        return result.numberOfRuns;\r\n      } catch(e) {\r\n        return 0;\r\n      }\r\n    }\r\n\r\n    static async incrementCounter({ hostname }) {\r\n      if (hostname === 'dev.super-agent.com' || hostname === 'account.super-agent.com') {\r\n        return;\r\n      }\r\n      // Check if we have a key already\r\n      // If not, delete everything with the prefix and create for today\r\n      try {\r\n        const result = await BrowserStorage.getKey(StorageKeys.Entitlement.NumberOfRuns + this.getTodayString());\r\n        let numberOfRuns = result.numberOfRuns;\r\n\r\n        await BrowserStorage.setKey(StorageKeys.Entitlement.NumberOfRuns + this.getTodayString(), {\r\n          numberOfRuns: numberOfRuns + 1\r\n        });\r\n\r\n        return;\r\n      } catch (e) {\r\n        await BrowserStorage.clearAllWithPrefix(StorageKeys.Entitlement.NumberOfRuns);\r\n        await BrowserStorage.setKey(StorageKeys.Entitlement.NumberOfRuns + this.getTodayString(), {\r\n          numberOfRuns: 1\r\n        });\r\n        return;\r\n      }\r\n    }\r\n    \r\n    static async setUserEntitlement(hasEntitlement) {\r\n      try {\r\n        await BrowserStorage.setKey(StorageKeys.Entitlement.HasEntitlement, {\r\n          hasEntitlement: hasEntitlement\r\n        });\r\n      } catch(e) {\r\n        \r\n      }\r\n    }\r\n\r\n    static async setUserIsRCIdSynced(isRCIdSynced) {\r\n      try {\r\n        await BrowserStorage.setKey(StorageKeys.Entitlement.IsRCIdSynced, {\r\n          isRCIdSynced: isRCIdSynced\r\n        })\r\n      } catch (e) {\r\n\r\n      }\r\n    }\r\n\r\n    static async getCurrentEntitlement() {\r\n      // User is always entitled if this is not Safari on iOS\r\n      if (!BrowserHelper.isMobileSafari(navigator.userAgent)) {\r\n        return true;\r\n      }\r\n\r\n      try {\r\n        await SARefreshable.getUserEntitlement();\r\n      } catch(e) {\r\n        console.log(\"Couldn't refresh entitlement.\");\r\n      }\r\n\r\n      try {\r\n        const hasEntitlement = await BrowserStorage.getKey(StorageKeys.Entitlement.HasEntitlement, false);\r\n        // Immediately return true if user is entitled.\r\n        return hasEntitlement.hasEntitlement\r\n      } catch(e) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n  static async getIsRCIdSynced() {\r\n    // User is always entitled if this is not Safari on iOS\r\n    if (!BrowserHelper.isMobileSafari(navigator.userAgent)) {\r\n      return true;\r\n    }\r\n\r\n    try {\r\n      const isRCIdSynced = await BrowserStorage.getKey(StorageKeys.Entitlement.IsRCIdSynced, false);\r\n      // Immediately return true if user is entitled.\r\n      return isRCIdSynced.isRCIdSynced\r\n    } catch(e) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async getRCIdInstalledAt() {\r\n    if (!BrowserHelper.isMobileSafari(navigator.userAgent)) {\r\n      return null;\r\n    }\r\n\r\n    try {\r\n      const RCIdInstalledAt = await BrowserStorage.getKey(StorageKeys.Entitlement.InstalledAt, false);\r\n      return RCIdInstalledAt.installedAt\r\n    } catch(e) {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  static async setRCIdExpiration({ hasEntitlement, isRCIdSynced }){\r\n    if (!BrowserHelper.isMobileSafari(navigator.userAgent)) {\r\n      return\r\n    }\r\n\r\n    if (this.isSubscribedButNotSynced({ hasEntitlement, isRCIdSynced })) {\r\n      try {\r\n        const installedAt = await Entitlement.getRCIdInstalledAt()\r\n        if (installedAt) {\r\n          return\r\n        }\r\n        await this.setInstalledAt()\r\n      } catch (e) {\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  static isSubscribedButNotSynced({ hasEntitlement, isRCIdSynced }) {\r\n    return hasEntitlement && !isRCIdSynced\r\n  }\r\n\r\n  static async setInstalledAt() {\r\n    await BrowserStorage.setKey(StorageKeys.Entitlement.InstalledAt, { installedAt: this.getTodayString() })\r\n  }\r\n}\r\n\r\nexport class SubscriptionVerificationNotification {\r\n  static async setPopupShownAt() {\r\n    await BrowserStorage.setKey(StorageKeys.Entitlement.PopupShownAt, { popupShownAt: Entitlement.getTodayString() })\r\n  }\r\n\r\n  static async getPopupShownAt() {\r\n    try {\r\n      const popupShownAt = await BrowserStorage.getKey(StorageKeys.Entitlement.PopupShownAt, false);\r\n      return popupShownAt.popupShownAt || null;\r\n    } catch (e) {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n","// Owned\r\nimport NativeMessaging from \"../../shared/NativeMessaging\";\r\nimport i18n from \"../../i18n.js\";\r\nimport { UserPreferences } from '../UserPreferences/UserPreferences'\r\nimport { Whitelist } from '../Whitelist/Whitelist';\r\nimport { Entitlement } from \"../Entitlement/Entitlement\";\r\n\r\nexport class SARefreshable {\r\n\r\n    static async refreshUserPreferences() {\r\n        await UserPreferences.refreshUserPreferences();\r\n    }\r\n\r\n    static async refreshCurrentLanguage() {\r\n        const currentLanguage = await NativeMessaging.sendNativeMessageIfPossibleWithResponse(\"CurrentLanguage\");        \r\n        i18n.changeLanguage(currentLanguage.language);\r\n    }\r\n\r\n    static async refreshWhitelist() {\r\n        const response = await NativeMessaging.sendNativeMessageIfPossibleWithResponse(\"Whitelist\");\r\n        await Whitelist.saveDisabledHostnames(response.whitelist);\r\n    }\r\n\r\n    static async getUserEntitlement() {\r\n        const response = await NativeMessaging.sendNativeMessageIfPossibleWithResponse(\"HasEntitlement\");\r\n        await Entitlement.setUserEntitlement(response.hasEntitlement);\r\n        await Entitlement.setUserIsRCIdSynced(response.isRCIdSynced);\r\n        await Entitlement.setRCIdExpiration(response);\r\n    }\r\n\r\n}\r\n","const awsmobile = {\n    \"pinpoint_project_id\": \"ec154762e77c4f738c4e4fe52211a2bc\",\n    \"kinesis_stream_name\": \"SAAnalytics\",\n    \"aws_project_region\": \"eu-west-1\",\n    \"aws_cognito_region\": \"eu-west-1\",\n    \"aws_user_pools_id\": \"eu-west-1_iv6CkI7wU\",\n    \"aws_cognito_identity_pool_id\": \"eu-west-1:440e7f2b-90fd-4d33-9d12-5196f57ad346\",\n    \"aws_user_pools_web_client_id\": \"1490es0lrupfegbui6tbhn8fdt\",\n    \"aws_appsync_graphqlEndpoint\": \"https://pigjwerg2bhf5oqucbjnd6oatq.appsync-api.eu-west-1.amazonaws.com/graphql\",\n    \"aws_appsync_region\": \"eu-west-1\",\n    \"aws_appsync_authenticationType\": \"AMAZON_COGNITO_USER_POOLS\",\n    \"aws_user_files_s3_bucket\": \"magicmakerstack-magicstorage584335d1-1twqrtirhswh6\",\n    \"aws_user_files_s3_bucket_region\": \"eu-west-1\",\n    \"aws_magicmaker_distribution_url\": \"https://files-dev.super-agent.com/public\",\n    \"aws_cloud_logic_custom\": [\n        {\n            \"name\": \"magic\",\n            \"endpoint\": \"https://dfm14g4e2d.execute-api.eu-west-1.amazonaws.com/prod\",\n            \"region\": \"eu-west-1\"\n        },\n        {\n            \"name\": \"logger\",\n            \"endpoint\": \"https://y0bh5wmgve.execute-api.eu-west-1.amazonaws.com/prod\",\n            \"region\": \"eu-west-1\"\n        },\n        {\n            \"name\": \"keys\",\n            \"endpoint\": \"https://kmik8r3h40.execute-api.eu-west-1.amazonaws.com/prod\",\n            \"region\": \"eu-west-1\"\n        },\n        {\n            \"name\": \"reporter\",\n            \"endpoint\": \"https://53ayhhadge.execute-api.eu-west-1.amazonaws.com/prod\",\n            \"region\": \"eu-west-1\"\n        },\n        {\n            \"name\": \"auth\",\n            \"endpoint\": \"https://4gg1c3erh2.execute-api.eu-west-1.amazonaws.com/prod\",\n            \"region\": \"eu-west-1\"\n        }\n    ]\n};\n\nexport default awsmobile;","import awsconfigdev from '../Config/aws-exports-devtest';\nimport awsconfig from '../Config/aws-exports';\n\nexport default class OpenAccountPage {\n    static isDev = () => {\n        return awsconfig.aws_user_pools_id === awsconfigdev.aws_user_pools_id;\n    }\n\n    static openSignIn = async () => {\n        const domain = this.isDev() ? \"dev\" : \"account\";\n        return new Promise((resolve, reject) => {\n            chrome.tabs.create({url: `https://${domain}.super-agent.com/signin?fromExtension=true`}, (tab) => {\n                resolve(tab);\n            });\n        });\n    }\n\n    static openSignUp = async (fromOnboard) => {\n        const domain = this.isDev() ? \"dev\" : \"account\";\n        return new Promise((resolve, reject) => {\n            const param = fromOnboard ? \"?fromOnboard=true\" : \"?fromExtension=true\";\n            chrome.tabs.create({url: `https://${domain}.super-agent.com/signup${param}`}, (tab) => {\n                resolve(tab);\n            });\n        });\n    }\n\n    static openForgotPassword = async (fromOnboard) => {\n        const domain = this.isDev() ? \"dev\" : \"account\";\n        return new Promise((resolve, reject) => {\n            const param = fromOnboard ? \"?fromOnboard=true\" : \"?fromExtension=true\";\n            chrome.tabs.create({url: `https://${domain}.super-agent.com/resetpassword${param}`}, (tab) => {\n                resolve(tab);\n            });\n        });\n    }\n}","// Amplify\r\nimport awsconfig from '../../Config/aws-exports';\r\nimport { Auth, Hub, API } from 'aws-amplify';\r\n\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\n// External\r\nimport {\r\n    CognitoUser,\r\n    CognitoUserSession,\r\n    CognitoIdToken,\r\n    CognitoAccessToken,\r\n    CognitoRefreshToken,\r\n    CognitoUserPool\r\n} from \"amazon-cognito-identity-js\";\r\n\r\n// Owned\r\nimport BrowserStorage  from '../BackgroundTools/BrowserStorage';\r\nimport { Tools } from '../../Tools/Tools';\r\nimport { TokenStorage } from '../../Tools/TokenStorage';\r\nimport { KeyManager } from '../KeyManager/KeyManager';\r\nimport NativeMessaging from '../../shared/NativeMessaging';\r\nimport { SARefreshable } from '../SARefreshable/SARefreshable'\r\nimport { Logger } from '../Logger/Logger';\r\n\r\nimport './AuthMessage';\r\n\r\n// Auth events\r\nconst listener = (data) => {\r\n    switch (data.payload.event) {\r\n        case 'signIn':\r\n            Tools.debugLog(\"SignIn Auth event: \", data);\r\n            break;\r\n        case 'signOut':\r\n            Tools.debugLog(\"SignOut Auth event: \", data);\r\n            SAAuth.performLogout();\r\n            break;\r\n        case 'tokenRefresh':\r\n            Tools.debugLog(\"TokenRefresh Auth event: \", data);\r\n            break;\r\n        case 'tokenRefresh_failure':\r\n            Tools.debugLog(\"TokenRefreshFailure Auth event: \");\r\n            Tools.debugLog(data, true);\r\n\r\n            switch (data.payload.data.code) {\r\n                case 'NetworkError':\r\n                    Tools.debugLog(\"Network error refreshing token.\");\r\n                    break;\r\n                case 'NotAuthorizedException':\r\n                    Tools.debugLog(\"Tokens have expired.\");\r\n                    SAAuth.logoutUser();\r\n                    break;\r\n                case 'TooManyRequestsException':\r\n                    Tools.debugLog(\"Too many token refresh requests. Probably don't need to refresh this much, do we?\");\r\n                    break;\r\n                default:\r\n                    if (window.navigator.onLine) {\r\n                        SAAuth.logoutUser();\r\n                    }\r\n                    break;\r\n            }\r\n            break;\r\n        default:\r\n            Tools.debugLog(\"Default Auth event: \", data);\r\n    }\r\n}\r\n\r\nHub.listen('auth', listener);\r\n\r\nlet authPort;\r\n\r\nchrome.runtime.onConnect.addListener(function (port) {\r\n    if (port.name === \"optionsAuthListener\") {\r\n        authPort = port;\r\n    }\r\n});\r\n\r\nexport class SAAuth {\r\n\r\n    static isTokenExpired(token) {\r\n        const decodedToken = jwt_decode(token);\r\n\r\n        const expirationTime = decodedToken.exp;\r\n        const now = Math.round(Date.now() / 1000);\r\n\r\n        return now >= expirationTime;\r\n    }\r\n\r\n    static async isLoggedIn() {\r\n        try {\r\n            await Auth.currentAuthenticatedUser();\r\n            return true;\r\n        }\r\n        catch {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    static async currentSession() {\r\n        return Auth.currentSession();\r\n    }\r\n\r\n    static currentUserInfo() {\r\n        return Auth.currentUserInfo();\r\n    }\r\n\r\n    static async checkAuthenticatedUser() {\r\n        try {\r\n            const cognitoUser = await Auth.currentAuthenticatedUser();\r\n            const currentSession = await Auth.currentSession();\r\n            Tools.debugLog(\"[checkAuthenticatedUser] Current session: \");\r\n            Tools.debugLog(currentSession, true);\r\n\r\n            // Change this to refresh only if needed\r\n            if (this.isTokenExpired(currentSession.getAccessToken().getJwtToken())) {\r\n                Tools.debugLog(\"Token expired. Refreshing.\");\r\n                cognitoUser.refreshSession(currentSession.getRefreshToken(), (err, session) => {\r\n                    if (session) {\r\n                        Tools.debugLog(\"Refreshed session!\");\r\n                        Tools.debugLog(\"[BACKGROUND] User logged in: \" + JSON.stringify(session));\r\n                    } else {\r\n                        Tools.debugLog(\"Error refreshing session.\");\r\n                        Tools.debugLog(\"[BACKGROUND] Check Authenticated User without session\");\r\n                        Tools.debugLog(err, true);\r\n                    }\r\n                });\r\n            }\r\n\r\n            return;\r\n        } catch (e) {\r\n            Tools.debugLog(\"[BACKGROUND] User not logged in.\");\r\n            Tools.debugLog(e, true);\r\n            throw new Error(e);\r\n        }\r\n    }\r\n\r\n    static async currentAuthenticatedUser() {\r\n        try {\r\n            await this.checkAuthenticatedUser();\r\n            const user = await Auth.currentAuthenticatedUser();\r\n            return user;\r\n        } catch(e) {\r\n            throw new Error(e);\r\n        }\r\n    }\r\n\r\n    static logoutUser() {\r\n        Tools.debugLog(\"[BACKGROUND] Logout user called\");\r\n\r\n        return new Promise((resolve, _) => {\r\n            Auth.signOut()\r\n                .then(() => {\r\n                    this.performLogout()\r\n                    resolve();\r\n                })\r\n                .catch(async (e) => {\r\n                    Tools.debugLog(\"Couldn't Logout User correctly. But will remove session. Error:\");\r\n                    Tools.debugLog(e, true);\r\n                    await this.performLogout();\r\n                    resolve();\r\n                });\r\n        });\r\n    }\r\n\r\n    static performLogin() {\r\n        try {\r\n            this.sendAuthMessage();\r\n        } catch (e) {\r\n            Tools.debugLog(\"sendAuthMessage error\");\r\n            Tools.debugLog(e, true);\r\n            // Options not listening\r\n        }\r\n    }\r\n\r\n    static async performLogout() {\r\n        await Logger.clearMetricsAndLogs();\r\n        this.sendAuthMessage();\r\n    }\r\n\r\n    static sendAuthMessage() {\r\n        if (authPort === undefined) {\r\n            return\r\n        }\r\n\r\n        authPort.postMessage({\r\n            type: \"VALIDATE_AUTH\"\r\n        });\r\n\r\n    }\r\n\r\n    static async authenticateUser(credentials) {\r\n        return new Promise((resolve, reject) => {\r\n            Auth.signIn(credentials.username, credentials.password)\r\n                .then(async (user) => {\r\n                    await BrowserStorage.clearAllExceptWithStartingKey(\"Cognito\");\r\n\r\n                    if (user.challengeName === 'NEW_PASSWORD_REQUIRED') {\r\n                        chrome.tabs.create({ 'url': 'https://account.super-agent.com/' });\r\n                        reject('background.reset_password');\r\n                    }\r\n\r\n                    const keys = await KeyManager.getUserKeys();\r\n                    \r\n                    if (keys.edek) {\r\n                        KeyManager.generateDEK(credentials.password)\r\n                            .then((result) => {\r\n                                this.performLogin();\r\n                                resolve(user);\r\n                            })\r\n                            .catch((e) => {\r\n                                // If there is an error here decryption failed, which means user has changed password\r\n                                // Need to generate keys again\r\n                                KeyManager.setMasterPassword(credentials.password)\r\n                                    .then((result) => {\r\n                                        this.performLogin();\r\n                                        resolve(user);\r\n                                    });\r\n                            })\r\n                    } else {\r\n                        KeyManager.setMasterPassword(credentials.password)\r\n                            .then((result) => {\r\n                                this.performLogin();\r\n                                resolve(user);\r\n                            });\r\n                    }\r\n                })\r\n                .catch(async (e) => {\r\n                    try {\r\n                        await this.logoutUser();\r\n                    } catch (e) {\r\n                        Tools.debugLog(\"Error logging user out: \");\r\n                        Tools.debugLog(e, true);\r\n                    }\r\n                    \r\n                    switch (e.code) {\r\n                        case 'NotAuthorizedException':\r\n                        case 'UserNotFoundException':\r\n                            reject('background.wrong_credentials');\r\n                            break;\r\n                        default:\r\n                            reject('background.unknown_error');\r\n                            break;\r\n\r\n                    }\r\n\r\n                });\r\n        });\r\n    }\r\n\r\n    static async changePassword(oldPassword, newPassword) {\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                const user = await Auth.currentAuthenticatedUser();\r\n                await Auth.changePassword(user, oldPassword, newPassword);\r\n                resolve();\r\n            } catch (e) {\r\n                Tools.debugLog(\"Error changing password\");\r\n                Tools.debugLog(e, true);\r\n                reject(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    static async requestRefreshIfNeeded(hasSomeUpdate) {\r\n        if (hasSomeUpdate === false) {\r\n            return\r\n        }\r\n\r\n        await SARefreshable.refreshUserPreferences();\r\n        await SARefreshable.refreshCurrentLanguage();\r\n        await SARefreshable.refreshWhitelist();\r\n    }\r\n\r\n    // Why do we have this here? There's too much coupling to the native app\r\n    static async checkAppSession() {\r\n        try {\r\n            const appAuthKeys = await NativeMessaging.sendNativeMessageIfPossibleWithResponse(\"AuthKeys\");\r\n            \r\n            if (appAuthKeys === undefined) {\r\n                return;\r\n            }\r\n            Tools.debugLog(\"[checkAppSession] Got app auth keys: \");\r\n            Tools.debugLog(appAuthKeys, true);\r\n\r\n            this.requestRefreshIfNeeded(appAuthKeys.hasSomeUpdate);\r\n            \r\n            try {\r\n                await KeyManager.updateDEK(appAuthKeys.dek);\r\n            }\r\n            catch (e) {\r\n                Tools.debugLog(\"Couldn't update DEK\");\r\n            }\r\n\r\n            // If doesn't have tokens and last sign in was made using the app -> Logout\r\n            if (this.shouldPerformLogout(appAuthKeys)) {\r\n                Tools.debugLog(\"Logging out SAAuth checkAppSession()\");\r\n                await this.logoutUser();\r\n            }\r\n\r\n            let extensionSession = undefined;\r\n            let username = undefined;\r\n\r\n            try {\r\n                await this.checkAuthenticatedUser();\r\n                const userSession = await Auth.currentSession();\r\n\r\n                Tools.debugLog(\"[checkAppSession] User Session: \");\r\n                Tools.debugLog(userSession, true);\r\n\r\n                username = userSession.getIdToken().payload['cognito:username'];\r\n                Tools.debugLog(\"[checkAppSession] Username: \");\r\n                Tools.debugLog(username);\r\n            } catch (e) {\r\n                Tools.debugLog(\"No Current Session. Will continue execution\");\r\n            }\r\n\r\n            // The extension has a session, but if it's different from the app, build session using app tokens.\r\n            if ((extensionSession && username !== appAuthKeys.username)) {\r\n                // || (extensionSession === undefined && this.shouldPerformSignIn(appAuthKeys))) {\r\n                Tools.debugLog(\"Session in Web Extension is different from App. Build from App Session\");\r\n                \r\n                try {\r\n                    await this.logoutUser();\r\n                } catch(e) {\r\n                    Tools.debugLog(\"Error Performing Logout. But don't worry, we can ignore and continue execution\");\r\n                }\r\n                \r\n                await this.buildUserSessionFromAppSession();\r\n            }\r\n\r\n        } catch (e) {\r\n            Tools.debugLog(\"Checking App Session error:\" + e);\r\n        }\r\n\r\n    }\r\n\r\n    static async deleteUser() {\r\n        return new Promise(async (resolve, reject) => {\r\n            // Need to delete logs remotely and update log cache as well.\r\n            const apiName = 'auth';\r\n            const path = '/auth';\r\n\r\n            const myInit = {\r\n                headers: {},\r\n            };\r\n\r\n            try {\r\n                await API.del(apiName, path, myInit);\r\n                resolve();\r\n            } catch (e) {\r\n                reject();\r\n            }\r\n        });\r\n    }\r\n\r\n    static async buildUserSessionFromAppSession() {\r\n        try {\r\n            Tools.debugLog(\"buildUserSessionFromAppSession\");\r\n\r\n            const appAuthKeys = await NativeMessaging.sendNativeMessageIfPossibleWithResponse(\"AuthKeys\");\r\n\r\n            if (this.shouldPerformLogout(appAuthKeys)) {\r\n                await this.logoutUser();\r\n                return\r\n            }\r\n\r\n            if (this.shouldPerformSignIn(appAuthKeys)) {\r\n                return await this.buildUserSession(\r\n                    appAuthKeys.idToken,\r\n                    appAuthKeys.accessToken,\r\n                    appAuthKeys.refreshToken,\r\n                    appAuthKeys.username\r\n                );\r\n            }\r\n\r\n        } catch (e) {\r\n            Tools.debugLog(\"buildUserSessionFromAppSession with error: \" + e);\r\n        }\r\n\r\n    }\r\n\r\n    static shouldPerformLogout(appAuthKeys) {\r\n        if (appAuthKeys.username === undefined && appAuthKeys.didSignInThroughApp === true) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    static shouldPerformSignIn(appAuthKeys) {\r\n        if (appAuthKeys.username !== undefined &&\r\n            appAuthKeys.idToken !== undefined &&\r\n            appAuthKeys.accessToken !== undefined &&\r\n            appAuthKeys.refreshToken !== undefined) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    static async buildUserSessionFromSession(session) {\r\n        return await this.buildUserSession(\r\n            session.idToken.jwtToken,\r\n            session.accessToken.jwtToken,\r\n            session.refreshToken.token,\r\n            session.idToken.payload['cognito:username']\r\n        );\r\n\r\n    }\r\n\r\n    static async buildUserSession(idTokenString, accessTokenString, refreshTokenString, username) {\r\n        try {\r\n            let idToken = new CognitoIdToken({\r\n                IdToken: idTokenString\r\n            });\r\n            let accessToken = new CognitoAccessToken({\r\n                AccessToken: accessTokenString\r\n            });\r\n            let refreshToken = new CognitoRefreshToken({\r\n                RefreshToken: refreshTokenString\r\n            });\r\n\r\n            const sessionData = {\r\n                IdToken: idToken,\r\n                AccessToken: accessToken,\r\n                RefreshToken: refreshToken,\r\n            }\r\n\r\n            const user = new CognitoUser({\r\n                Username: username,\r\n                Pool: new CognitoUserPool({\r\n                    UserPoolId: awsconfig.aws_user_pools_id,\r\n                    ClientId: awsconfig.aws_user_pools_web_client_id\r\n                }),\r\n                Storage: TokenStorage\r\n            });\r\n\r\n            let userSession = new CognitoUserSession(sessionData);\r\n\r\n            Tools.debugLog(\"Building user session with: \");\r\n            Tools.debugLog(userSession, true);\r\n            if (userSession.isValid() === false) {\r\n                try {\r\n                    await this.checkAuthenticatedUser();\r\n                } catch(e) {\r\n\r\n                }\r\n            }\r\n\r\n            user.setSignInUserSession(userSession);\r\n\r\n            this.sendAuthMessage();\r\n        } catch (e) {\r\n            Tools.debugLog(\"[BACKGROUND] - buildUserSession - Error building user session: \" + e);\r\n        }\r\n    }\r\n}","import { UserPreferences } from \"./UserPreferences\";\nimport { SAAuth } from \"../Auth/SAAuth\";\n\nimport { Messages, Response, ResponseValues } from '../../shared';\n\nchrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\n    processMessage(request, sendResponse);\n    return true;\n});\n\nfunction processMessage(request, sendResponse) {\n    const messages = {\n       [Messages.UserPreferences.GetUserPreferences]: getUserPreferences,\n       [Messages.UserPreferences.SetUserPreferences]: setUserPreferences\n    }\n\n    async function getUserPreferences() {\n        try {\n            const isLoggedIn = await SAAuth.isLoggedIn();\n            const userPreferences = await UserPreferences.getUserPreferences(isLoggedIn);\n            return new Response(ResponseValues.Success, { userPreferences });\n        } catch(e) {\n            return new Response(ResponseValues.Success, { userPreferences: UserPreferences.getDefaultPreferences() });\n        }\n    }\n\n    async function setUserPreferences(request) {\n        try {\n            const isLoggedIn = await SAAuth.isLoggedIn();\n            await UserPreferences.setUserPreferences(request.parameters.userPreferences, isLoggedIn)\n            return new Response(ResponseValues.Success);\n        } catch(e) {\n            return new Response(ResponseValues.Error);\n        }\n    }\n\n    if (messages[request.action]) {\n        messages[request.action](request)\n        .then((result) => {\n            sendResponse(result);\n        })\n        .catch((error) => {\n            sendResponse(error);\n        });\n    }\n}","/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { ConsoleLogger as Logger } from '../Logger';\n\nconst logger = new Logger('ClientDevice_Browser');\n\nexport function clientInfo() {\n\tif (typeof window === 'undefined') {\n\t\treturn {};\n\t}\n\n\treturn browserClientInfo();\n}\n\nfunction browserClientInfo() {\n\tif (typeof window === 'undefined') {\n\t\tlogger.warn('No window object available to get browser client info');\n\t\treturn {};\n\t}\n\n\tconst nav = window.navigator;\n\tif (!nav) {\n\t\tlogger.warn('No navigator object available to get browser client info');\n\t\treturn {};\n\t}\n\n\tconst { platform, product, vendor, userAgent, language } = nav;\n\tconst type = browserType(userAgent);\n\tconst timezone = browserTimezone();\n\n\treturn {\n\t\tplatform,\n\t\tmake: product || vendor,\n\t\tmodel: type.type,\n\t\tversion: type.version,\n\t\tappVersion: [type.type, type.version].join('/'),\n\t\tlanguage,\n\t\ttimezone,\n\t};\n}\n\nexport function dimension() {\n\tif (typeof window === 'undefined') {\n\t\tlogger.warn('No window object available to get browser client info');\n\t\treturn { width: 320, height: 320 };\n\t}\n\n\treturn {\n\t\twidth: window.innerWidth,\n\t\theight: window.innerHeight,\n\t};\n}\n\nfunction browserTimezone() {\n\tconst tzMatch = /\\(([A-Za-z\\s].*)\\)/.exec(new Date().toString());\n\treturn tzMatch ? tzMatch[1] || '' : '';\n}\n\nexport function browserType(userAgent: string) {\n\tconst operaMatch = /.+(Opera[\\s[A-Z]*|OPR[\\sA-Z]*)\\/([0-9\\.]+).*/i.exec(\n\t\tuserAgent\n\t);\n\tif (operaMatch) {\n\t\treturn { type: operaMatch[1], version: operaMatch[2] };\n\t}\n\n\tconst ieMatch = /.+(Trident|Edge)\\/([0-9\\.]+).*/i.exec(userAgent);\n\tif (ieMatch) {\n\t\treturn { type: ieMatch[1], version: ieMatch[2] };\n\t}\n\n\tconst cfMatch = /.+(Chrome|Firefox|FxiOS)\\/([0-9\\.]+).*/i.exec(userAgent);\n\tif (cfMatch) {\n\t\treturn { type: cfMatch[1], version: cfMatch[2] };\n\t}\n\n\tconst sMatch = /.+(Safari)\\/([0-9\\.]+).*/i.exec(userAgent);\n\tif (sMatch) {\n\t\treturn { type: sMatch[1], version: sMatch[2] };\n\t}\n\n\tconst awkMatch = /.+(AppleWebKit)\\/([0-9\\.]+).*/i.exec(userAgent);\n\tif (awkMatch) {\n\t\treturn { type: awkMatch[1], version: awkMatch[2] };\n\t}\n\n\tconst anyMatch = /.*([A-Z]+)\\/([0-9\\.]+).*/i.exec(userAgent);\n\tif (anyMatch) {\n\t\treturn { type: anyMatch[1], version: anyMatch[2] };\n\t}\n\n\treturn { type: '', version: '' };\n}\n","/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nimport { clientInfo, dimension } from './browser';\n\nexport class ClientDevice {\n\tstatic clientInfo() {\n\t\treturn clientInfo();\n\t}\n\n\tstatic dimension() {\n\t\treturn dimension();\n\t}\n}\n\n/**\n * @deprecated use named import\n */\nexport default ClientDevice;\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import {\n  ADMChannelRequest,\n  ADMChannelResponse,\n  APNSChannelRequest,\n  APNSChannelResponse,\n  APNSPushNotificationTemplate,\n  APNSSandboxChannelRequest,\n  APNSSandboxChannelResponse,\n  APNSVoipChannelRequest,\n  APNSVoipChannelResponse,\n  APNSVoipSandboxChannelRequest,\n  APNSVoipSandboxChannelResponse,\n  AddressConfiguration,\n  AndroidPushNotificationTemplate,\n  ApplicationSettingsResource,\n  AttributesResource,\n  BaiduChannelRequest,\n  BaiduChannelResponse,\n  BaseKpiResult,\n  CampaignHook,\n  CampaignLimits,\n  CampaignResponse,\n  DefaultPushNotificationTemplate,\n  DeliveryStatus,\n  DirectMessageConfiguration,\n  EmailChannelRequest,\n  EmailChannelResponse,\n  EmailTemplateRequest,\n  EndpointBatchRequest,\n  EndpointMessageResult,\n  EndpointRequest,\n  EndpointSendConfiguration,\n  EndpointsResponse,\n  EventStream,\n  EventsRequest,\n  EventsResponse,\n  ExportJobsResponse,\n  GCMChannelRequest,\n  GCMChannelResponse,\n  ImportJobsResponse,\n  JourneyResponse,\n  MessageBody,\n  PushNotificationTemplateRequest,\n  QuietTime,\n  RecommenderConfigurationResponse,\n  SMSChannelResponse,\n  SMSTemplateRequest,\n  SegmentResponse,\n  State,\n  TemplateConfiguration,\n  TemplateType,\n  VoiceChannelResponse,\n  VoiceTemplateRequest,\n  WriteCampaignRequest,\n  WriteJourneyRequest,\n  WriteSegmentRequest,\n} from \"./models_0\";\n\nexport interface GetJourneyDateRangeKpiRequest {\n  /**\n   * <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>\n   */\n  ApplicationId: string | undefined;\n\n  /**\n   * <p>The last date and time to retrieve data for, as part of an inclusive date range that filters the query results. This value should be in extended ISO 8601 format and use Coordinated Universal Time (UTC), for example: 2019-07-26T20:00:00Z for 8:00 PM UTC July 26, 2019.</p>\n   */\n  EndTime?: Date;\n\n  /**\n   * <p>The unique identifier for the journey.</p>\n   */\n  JourneyId: string | undefined;\n\n  /**\n   * <p>The name of the metric, also referred to as a <i>key performance indicator (KPI)</i>, to retrieve data for. This value describes the associated metric and consists of two or more terms, which are comprised of lowercase alphanumeric characters, separated by a hyphen. Examples are email-open-rate and successful-delivery-rate. For a list of valid values, see the <a href=\"https://docs.aws.amazon.com/pinpoint/latest/developerguide/analytics-standard-metrics.html\">Amazon Pinpoint Developer Guide</a>.</p>\n   */\n  KpiName: string | undefined;\n\n  /**\n   * <p>The  string that specifies which page of results to return in a paginated response. This parameter is not supported for application, campaign, and journey metrics.</p>\n   */\n  NextToken?: string;\n\n  /**\n   * <p>The maximum number of items to include in each page of a paginated response. This parameter is not supported for application, campaign, and journey metrics.</p>\n   */\n  PageSize?: string;\n\n  /**\n   * <p>The first date and time to retrieve data for, as part of an inclusive date range that filters the query results. This value should be in extended ISO 8601 format and use Coordinated Universal Time (UTC), for example: 2019-07-19T20:00:00Z for 8:00 PM UTC July 19, 2019. This value should also be fewer than 90 days from the current day.</p>\n   */\n  StartTime?: Date;\n}\n\nexport namespace GetJourneyDateRangeKpiRequest {\n  export const filterSensitiveLog = (obj: GetJourneyDateRangeKpiRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Provides the results of a query that retrieved the data for a standard engagement metric that applies to a journey, and provides information about that query.</p>\n */\nexport interface JourneyDateRangeKpiResponse {\n  /**\n   * <p>The unique identifier for the application that the metric applies to.</p>\n   */\n  ApplicationId: string | undefined;\n\n  /**\n   * <p>The last date and time of the date range that was used to filter the query results, in extended ISO 8601 format. The date range is inclusive.</p>\n   */\n  EndTime: Date | undefined;\n\n  /**\n   * <p>The unique identifier for the journey that the metric applies to.</p>\n   */\n  JourneyId: string | undefined;\n\n  /**\n   * <p>The name of the metric, also referred to as a <i>key performance indicator (KPI)</i>, that the data was retrieved for. This value describes the associated metric and consists of two or more terms, which are comprised of lowercase alphanumeric characters, separated by a hyphen. For a list of possible values, see the <a href=\"https://docs.aws.amazon.com/pinpoint/latest/developerguide/analytics-standard-metrics.html\">Amazon Pinpoint Developer Guide</a>.</p>\n   */\n  KpiName: string | undefined;\n\n  /**\n   * <p>An array of objects that contains the results of the query. Each object contains the value for the metric and metadata about that value.</p>\n   */\n  KpiResult: BaseKpiResult | undefined;\n\n  /**\n   * <p>The string to use in a subsequent request to get the next page of results in a paginated response. This value is null for the Journey Engagement Metrics resource because the resource returns all results in a single page.</p>\n   */\n  NextToken?: string;\n\n  /**\n   * <p>The first date and time of the date range that was used to filter the query results, in extended ISO 8601 format. The date range is inclusive.</p>\n   */\n  StartTime: Date | undefined;\n}\n\nexport namespace JourneyDateRangeKpiResponse {\n  export const filterSensitiveLog = (obj: JourneyDateRangeKpiResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetJourneyDateRangeKpiResponse {\n  /**\n   * <p>Provides the results of a query that retrieved the data for a standard engagement metric that applies to a journey, and provides information about that query.</p>\n   */\n  JourneyDateRangeKpiResponse: JourneyDateRangeKpiResponse | undefined;\n}\n\nexport namespace GetJourneyDateRangeKpiResponse {\n  export const filterSensitiveLog = (obj: GetJourneyDateRangeKpiResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetJourneyExecutionActivityMetricsRequest {\n  /**\n   * <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>\n   */\n  ApplicationId: string | undefined;\n\n  /**\n   * <p>The unique identifier for the journey activity.</p>\n   */\n  JourneyActivityId: string | undefined;\n\n  /**\n   * <p>The unique identifier for the journey.</p>\n   */\n  JourneyId: string | undefined;\n\n  /**\n   * <p>The  string that specifies which page of results to return in a paginated response. This parameter is not supported for application, campaign, and journey metrics.</p>\n   */\n  NextToken?: string;\n\n  /**\n   * <p>The maximum number of items to include in each page of a paginated response. This parameter is not supported for application, campaign, and journey metrics.</p>\n   */\n  PageSize?: string;\n}\n\nexport namespace GetJourneyExecutionActivityMetricsRequest {\n  export const filterSensitiveLog = (obj: GetJourneyExecutionActivityMetricsRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Provides the results of a query that retrieved the data for a standard execution metric that applies to a journey activity, and provides information about that query.</p>\n */\nexport interface JourneyExecutionActivityMetricsResponse {\n  /**\n   * <p>The type of activity that the metric applies to. Possible values are:</p> <ul><li><p>CONDITIONAL_SPLIT - For a yes/no split activity, which is an activity that sends participants down one of two paths in a journey.</p></li> <li><p>HOLDOUT - For a holdout activity, which is an activity that stops a journey for a specified percentage of participants.</p></li> <li><p>MESSAGE - For an email activity, which is an activity that sends an email message to participants.</p></li> <li><p>MULTI_CONDITIONAL_SPLIT - For a multivariate split activity, which is an activity that sends participants down one of as many as five paths in a journey.</p></li> <li><p>RANDOM_SPLIT - For a random split activity, which is an activity that sends specified percentages of participants down one of as many as five paths in a journey.</p></li> <li><p>WAIT - For a wait activity, which is an activity that waits for a certain amount of time or until a specific date and time before moving participants to the next activity in a journey.</p></li></ul>\n   */\n  ActivityType: string | undefined;\n\n  /**\n   * <p>The unique identifier for the application that the metric applies to.</p>\n   */\n  ApplicationId: string | undefined;\n\n  /**\n   * <p>The unique identifier for the activity that the metric applies to.</p>\n   */\n  JourneyActivityId: string | undefined;\n\n  /**\n   * <p>The unique identifier for the journey that the metric applies to.</p>\n   */\n  JourneyId: string | undefined;\n\n  /**\n   * <p>The date and time, in ISO 8601 format, when Amazon Pinpoint last evaluated the execution status of the activity and updated the data for the metric.</p>\n   */\n  LastEvaluatedTime: string | undefined;\n\n  /**\n   * <p>A JSON object that contains the results of the query. The results vary depending on the type of activity (ActivityType). For information about the structure and contents of the results, see the <a href=\"https://docs.aws.amazon.com/pinpoint/latest/developerguide/analytics-standard-metrics.html\">Amazon Pinpoint Developer Guide</a>.</p>\n   */\n  Metrics: { [key: string]: string } | undefined;\n}\n\nexport namespace JourneyExecutionActivityMetricsResponse {\n  export const filterSensitiveLog = (obj: JourneyExecutionActivityMetricsResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetJourneyExecutionActivityMetricsResponse {\n  /**\n   * <p>Provides the results of a query that retrieved the data for a standard execution metric that applies to a journey activity, and provides information about that query.</p>\n   */\n  JourneyExecutionActivityMetricsResponse: JourneyExecutionActivityMetricsResponse | undefined;\n}\n\nexport namespace GetJourneyExecutionActivityMetricsResponse {\n  export const filterSensitiveLog = (obj: GetJourneyExecutionActivityMetricsResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetJourneyExecutionMetricsRequest {\n  /**\n   * <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>\n   */\n  ApplicationId: string | undefined;\n\n  /**\n   * <p>The unique identifier for the journey.</p>\n   */\n  JourneyId: string | undefined;\n\n  /**\n   * <p>The  string that specifies which page of results to return in a paginated response. This parameter is not supported for application, campaign, and journey metrics.</p>\n   */\n  NextToken?: string;\n\n  /**\n   * <p>The maximum number of items to include in each page of a paginated response. This parameter is not supported for application, campaign, and journey metrics.</p>\n   */\n  PageSize?: string;\n}\n\nexport namespace GetJourneyExecutionMetricsRequest {\n  export const filterSensitiveLog = (obj: GetJourneyExecutionMetricsRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Provides the results of a query that retrieved the data for a standard execution metric that applies to a journey, and provides information about that query.</p>\n */\nexport interface JourneyExecutionMetricsResponse {\n  /**\n   * <p>The unique identifier for the application that the metric applies to.</p>\n   */\n  ApplicationId: string | undefined;\n\n  /**\n   * <p>The unique identifier for the journey that the metric applies to.</p>\n   */\n  JourneyId: string | undefined;\n\n  /**\n   * <p>The date and time, in ISO 8601 format, when Amazon Pinpoint last evaluated the journey and updated the data for the metric.</p>\n   */\n  LastEvaluatedTime: string | undefined;\n\n  /**\n   * <p>A JSON object that contains the results of the query. For information about the structure and contents of the results, see the <a href=\"https://docs.aws.amazon.com//pinpoint/latest/developerguide/analytics-standard-metrics.html\">Amazon Pinpoint Developer Guide</a>.</p>\n   */\n  Metrics: { [key: string]: string } | undefined;\n}\n\nexport namespace JourneyExecutionMetricsResponse {\n  export const filterSensitiveLog = (obj: JourneyExecutionMetricsResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetJourneyExecutionMetricsResponse {\n  /**\n   * <p>Provides the results of a query that retrieved the data for a standard execution metric that applies to a journey, and provides information about that query.</p>\n   */\n  JourneyExecutionMetricsResponse: JourneyExecutionMetricsResponse | undefined;\n}\n\nexport namespace GetJourneyExecutionMetricsResponse {\n  export const filterSensitiveLog = (obj: GetJourneyExecutionMetricsResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetPushTemplateRequest {\n  /**\n   * <p>The name of the message template. A template name must start with an alphanumeric character and can contain a maximum of 128 characters. The characters can be alphanumeric characters, underscores (_), or hyphens (-). Template names are case sensitive.</p>\n   */\n  TemplateName: string | undefined;\n\n  /**\n   * <p>The unique identifier for the version of the message template to update, retrieve information about, or delete. To retrieve identifiers and other information for all the versions of a template, use the <link  linkend=\"templates-template-name-template-type-versions\">Template Versions</link> resource.</p> <p>If specified, this value must match the identifier for an existing template version. If specified for an update operation, this value must match the identifier for the latest existing version of the template. This restriction helps ensure that race conditions don't occur.</p> <p>If you don't specify a value for this parameter, Amazon Pinpoint does the following:</p> <ul><li><p>For a get operation, retrieves information about the active version of the template.</p></li> <li><p>For an update operation, saves the updates to (overwrites) the latest existing version of the template, if the create-new-version parameter isn't used or is set to false.</p></li> <li><p>For a delete operation, deletes the template, including all versions of the template.</p></li></ul>\n   */\n  Version?: string;\n}\n\nexport namespace GetPushTemplateRequest {\n  export const filterSensitiveLog = (obj: GetPushTemplateRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Provides information about the content and settings for a message template that can be used in messages that are sent through a push notification channel.</p>\n */\nexport interface PushNotificationTemplateResponse {\n  /**\n   * <p>The message template that's used for the ADM (Amazon Device Messaging) channel. This message template overrides the default template for push notification channels (DefaultPushNotificationTemplate).</p>\n   */\n  ADM?: AndroidPushNotificationTemplate;\n\n  /**\n   * <p>The message template that's used for the APNs (Apple Push Notification service) channel. This message template overrides the default template for push notification channels (DefaultPushNotificationTemplate).</p>\n   */\n  APNS?: APNSPushNotificationTemplate;\n\n  /**\n   * <p>The Amazon Resource Name (ARN) of the message template.</p>\n   */\n  Arn?: string;\n\n  /**\n   * <p>The message template that's used for the Baidu (Baidu Cloud Push) channel. This message template overrides the default template for push notification channels (DefaultPushNotificationTemplate).</p>\n   */\n  Baidu?: AndroidPushNotificationTemplate;\n\n  /**\n   * <p>The date, in ISO 8601 format, when the message template was created.</p>\n   */\n  CreationDate: string | undefined;\n\n  /**\n   * <p>The default message template that's used for push notification channels.</p>\n   */\n  Default?: DefaultPushNotificationTemplate;\n\n  /**\n   * <p>The JSON object that specifies the default values that are used for message variables in the message template. This object is a set of key-value pairs. Each key defines a message variable in the template. The corresponding value defines the default value for that variable.</p>\n   */\n  DefaultSubstitutions?: string;\n\n  /**\n   * <p>The message template that's used for the GCM channel, which is used to send notifications through the Firebase Cloud Messaging (FCM), formerly Google Cloud Messaging (GCM), service. This message template overrides the default template for push notification channels (DefaultPushNotificationTemplate).</p>\n   */\n  GCM?: AndroidPushNotificationTemplate;\n\n  /**\n   * <p>The date, in ISO 8601 format, when the message template was last modified.</p>\n   */\n  LastModifiedDate: string | undefined;\n\n  /**\n   * <p>The unique identifier for the recommender model that's used by the message template.</p>\n   */\n  RecommenderId?: string;\n\n  /**\n   * <p>A string-to-string map of key-value pairs that identifies the tags that are associated with the message template. Each tag consists of a required tag key and an associated tag value.</p>\n   */\n  tags?: { [key: string]: string };\n\n  /**\n   * <p>The custom description of the message template.</p>\n   */\n  TemplateDescription?: string;\n\n  /**\n   * <p>The name of the message template.</p>\n   */\n  TemplateName: string | undefined;\n\n  /**\n   * <p>The type of channel that the message template is designed for. For a push notification template, this value is PUSH.</p>\n   */\n  TemplateType: TemplateType | string | undefined;\n\n  /**\n   * <p>The unique identifier, as an integer, for the active version of the message template, or the version of the template that you specified by using the version parameter in your request.</p>\n   */\n  Version?: string;\n}\n\nexport namespace PushNotificationTemplateResponse {\n  export const filterSensitiveLog = (obj: PushNotificationTemplateResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetPushTemplateResponse {\n  /**\n   * <p>Provides information about the content and settings for a message template that can be used in messages that are sent through a push notification channel.</p>\n   */\n  PushNotificationTemplateResponse: PushNotificationTemplateResponse | undefined;\n}\n\nexport namespace GetPushTemplateResponse {\n  export const filterSensitiveLog = (obj: GetPushTemplateResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetRecommenderConfigurationRequest {\n  /**\n   * <p>The unique identifier for the recommender model configuration. This identifier is displayed as the <b>Recommender ID</b> on the Amazon Pinpoint console.</p>\n   */\n  RecommenderId: string | undefined;\n}\n\nexport namespace GetRecommenderConfigurationRequest {\n  export const filterSensitiveLog = (obj: GetRecommenderConfigurationRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetRecommenderConfigurationResponse {\n  /**\n   * <p>Provides information about Amazon Pinpoint configuration settings for retrieving and processing data from a recommender model.</p>\n   */\n  RecommenderConfigurationResponse: RecommenderConfigurationResponse | undefined;\n}\n\nexport namespace GetRecommenderConfigurationResponse {\n  export const filterSensitiveLog = (obj: GetRecommenderConfigurationResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetRecommenderConfigurationsRequest {\n  /**\n   * <p>The maximum number of items to include in each page of a paginated response. This parameter is not supported for application, campaign, and journey metrics.</p>\n   */\n  PageSize?: string;\n\n  /**\n   * <p>The NextToken string that specifies which page of results to return in a paginated response.</p>\n   */\n  Token?: string;\n}\n\nexport namespace GetRecommenderConfigurationsRequest {\n  export const filterSensitiveLog = (obj: GetRecommenderConfigurationsRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Provides information about all the recommender model configurations that are associated with your Amazon Pinpoint account.</p>\n */\nexport interface ListRecommenderConfigurationsResponse {\n  /**\n   * <p>An array of responses, one for each recommender model configuration that's associated with your Amazon Pinpoint account.</p>\n   */\n  Item: RecommenderConfigurationResponse[] | undefined;\n\n  /**\n   * <p>The string to use in a subsequent request to get the next page of results in a paginated response. This value is null if there are no additional pages.</p>\n   */\n  NextToken?: string;\n}\n\nexport namespace ListRecommenderConfigurationsResponse {\n  export const filterSensitiveLog = (obj: ListRecommenderConfigurationsResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetRecommenderConfigurationsResponse {\n  /**\n   * <p>Provides information about all the recommender model configurations that are associated with your Amazon Pinpoint account.</p>\n   */\n  ListRecommenderConfigurationsResponse: ListRecommenderConfigurationsResponse | undefined;\n}\n\nexport namespace GetRecommenderConfigurationsResponse {\n  export const filterSensitiveLog = (obj: GetRecommenderConfigurationsResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetSegmentRequest {\n  /**\n   * <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>\n   */\n  ApplicationId: string | undefined;\n\n  /**\n   * <p>The unique identifier for the segment.</p>\n   */\n  SegmentId: string | undefined;\n}\n\nexport namespace GetSegmentRequest {\n  export const filterSensitiveLog = (obj: GetSegmentRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetSegmentResponse {\n  /**\n   * <p>Provides information about the configuration, dimension, and other settings for a segment.</p>\n   */\n  SegmentResponse: SegmentResponse | undefined;\n}\n\nexport namespace GetSegmentResponse {\n  export const filterSensitiveLog = (obj: GetSegmentResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetSegmentExportJobsRequest {\n  /**\n   * <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>\n   */\n  ApplicationId: string | undefined;\n\n  /**\n   * <p>The maximum number of items to include in each page of a paginated response. This parameter is not supported for application, campaign, and journey metrics.</p>\n   */\n  PageSize?: string;\n\n  /**\n   * <p>The unique identifier for the segment.</p>\n   */\n  SegmentId: string | undefined;\n\n  /**\n   * <p>The NextToken string that specifies which page of results to return in a paginated response.</p>\n   */\n  Token?: string;\n}\n\nexport namespace GetSegmentExportJobsRequest {\n  export const filterSensitiveLog = (obj: GetSegmentExportJobsRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetSegmentExportJobsResponse {\n  /**\n   * <p>Provides information about all the export jobs that are associated with an application or segment. An export job is a job that exports endpoint definitions to a file.</p>\n   */\n  ExportJobsResponse: ExportJobsResponse | undefined;\n}\n\nexport namespace GetSegmentExportJobsResponse {\n  export const filterSensitiveLog = (obj: GetSegmentExportJobsResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetSegmentImportJobsRequest {\n  /**\n   * <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>\n   */\n  ApplicationId: string | undefined;\n\n  /**\n   * <p>The maximum number of items to include in each page of a paginated response. This parameter is not supported for application, campaign, and journey metrics.</p>\n   */\n  PageSize?: string;\n\n  /**\n   * <p>The unique identifier for the segment.</p>\n   */\n  SegmentId: string | undefined;\n\n  /**\n   * <p>The NextToken string that specifies which page of results to return in a paginated response.</p>\n   */\n  Token?: string;\n}\n\nexport namespace GetSegmentImportJobsRequest {\n  export const filterSensitiveLog = (obj: GetSegmentImportJobsRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetSegmentImportJobsResponse {\n  /**\n   * <p>Provides information about the status and settings of all the import jobs that are associated with an application or segment. An import job is a job that imports endpoint definitions from one or more files.</p>\n   */\n  ImportJobsResponse: ImportJobsResponse | undefined;\n}\n\nexport namespace GetSegmentImportJobsResponse {\n  export const filterSensitiveLog = (obj: GetSegmentImportJobsResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetSegmentsRequest {\n  /**\n   * <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>\n   */\n  ApplicationId: string | undefined;\n\n  /**\n   * <p>The maximum number of items to include in each page of a paginated response. This parameter is not supported for application, campaign, and journey metrics.</p>\n   */\n  PageSize?: string;\n\n  /**\n   * <p>The NextToken string that specifies which page of results to return in a paginated response.</p>\n   */\n  Token?: string;\n}\n\nexport namespace GetSegmentsRequest {\n  export const filterSensitiveLog = (obj: GetSegmentsRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Provides information about all the segments that are associated with an application.</p>\n */\nexport interface SegmentsResponse {\n  /**\n   * <p>An array of responses, one for each segment that's associated with the application (Segments resource) or each version of a segment that's associated with the application (Segment Versions resource).</p>\n   */\n  Item: SegmentResponse[] | undefined;\n\n  /**\n   * <p>The string to use in a subsequent request to get the next page of results in a paginated response. This value is null if there are no additional pages.</p>\n   */\n  NextToken?: string;\n}\n\nexport namespace SegmentsResponse {\n  export const filterSensitiveLog = (obj: SegmentsResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetSegmentsResponse {\n  /**\n   * <p>Provides information about all the segments that are associated with an application.</p>\n   */\n  SegmentsResponse: SegmentsResponse | undefined;\n}\n\nexport namespace GetSegmentsResponse {\n  export const filterSensitiveLog = (obj: GetSegmentsResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetSegmentVersionRequest {\n  /**\n   * <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>\n   */\n  ApplicationId: string | undefined;\n\n  /**\n   * <p>The unique identifier for the segment.</p>\n   */\n  SegmentId: string | undefined;\n\n  /**\n   * <p>The unique version number (Version property) for the campaign version.</p>\n   */\n  Version: string | undefined;\n}\n\nexport namespace GetSegmentVersionRequest {\n  export const filterSensitiveLog = (obj: GetSegmentVersionRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetSegmentVersionResponse {\n  /**\n   * <p>Provides information about the configuration, dimension, and other settings for a segment.</p>\n   */\n  SegmentResponse: SegmentResponse | undefined;\n}\n\nexport namespace GetSegmentVersionResponse {\n  export const filterSensitiveLog = (obj: GetSegmentVersionResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetSegmentVersionsRequest {\n  /**\n   * <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>\n   */\n  ApplicationId: string | undefined;\n\n  /**\n   * <p>The maximum number of items to include in each page of a paginated response. This parameter is not supported for application, campaign, and journey metrics.</p>\n   */\n  PageSize?: string;\n\n  /**\n   * <p>The unique identifier for the segment.</p>\n   */\n  SegmentId: string | undefined;\n\n  /**\n   * <p>The NextToken string that specifies which page of results to return in a paginated response.</p>\n   */\n  Token?: string;\n}\n\nexport namespace GetSegmentVersionsRequest {\n  export const filterSensitiveLog = (obj: GetSegmentVersionsRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetSegmentVersionsResponse {\n  /**\n   * <p>Provides information about all the segments that are associated with an application.</p>\n   */\n  SegmentsResponse: SegmentsResponse | undefined;\n}\n\nexport namespace GetSegmentVersionsResponse {\n  export const filterSensitiveLog = (obj: GetSegmentVersionsResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetSmsChannelRequest {\n  /**\n   * <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>\n   */\n  ApplicationId: string | undefined;\n}\n\nexport namespace GetSmsChannelRequest {\n  export const filterSensitiveLog = (obj: GetSmsChannelRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetSmsChannelResponse {\n  /**\n   * <p>Provides information about the status and settings of the SMS channel for an application.</p>\n   */\n  SMSChannelResponse: SMSChannelResponse | undefined;\n}\n\nexport namespace GetSmsChannelResponse {\n  export const filterSensitiveLog = (obj: GetSmsChannelResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetSmsTemplateRequest {\n  /**\n   * <p>The name of the message template. A template name must start with an alphanumeric character and can contain a maximum of 128 characters. The characters can be alphanumeric characters, underscores (_), or hyphens (-). Template names are case sensitive.</p>\n   */\n  TemplateName: string | undefined;\n\n  /**\n   * <p>The unique identifier for the version of the message template to update, retrieve information about, or delete. To retrieve identifiers and other information for all the versions of a template, use the <link  linkend=\"templates-template-name-template-type-versions\">Template Versions</link> resource.</p> <p>If specified, this value must match the identifier for an existing template version. If specified for an update operation, this value must match the identifier for the latest existing version of the template. This restriction helps ensure that race conditions don't occur.</p> <p>If you don't specify a value for this parameter, Amazon Pinpoint does the following:</p> <ul><li><p>For a get operation, retrieves information about the active version of the template.</p></li> <li><p>For an update operation, saves the updates to (overwrites) the latest existing version of the template, if the create-new-version parameter isn't used or is set to false.</p></li> <li><p>For a delete operation, deletes the template, including all versions of the template.</p></li></ul>\n   */\n  Version?: string;\n}\n\nexport namespace GetSmsTemplateRequest {\n  export const filterSensitiveLog = (obj: GetSmsTemplateRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Provides information about the content and settings for a message template that can be used in text messages that are sent through the SMS channel.</p>\n */\nexport interface SMSTemplateResponse {\n  /**\n   * <p>The Amazon Resource Name (ARN) of the message template.</p>\n   */\n  Arn?: string;\n\n  /**\n   * <p>The message body that's used in text messages that are based on the message template.</p>\n   */\n  Body?: string;\n\n  /**\n   * <p>The date, in ISO 8601 format, when the message template was created.</p>\n   */\n  CreationDate: string | undefined;\n\n  /**\n   * <p>The JSON object that specifies the default values that are used for message variables in the message template. This object is a set of key-value pairs. Each key defines a message variable in the template. The corresponding value defines the default value for that variable.</p>\n   */\n  DefaultSubstitutions?: string;\n\n  /**\n   * <p>The date, in ISO 8601 format, when the message template was last modified.</p>\n   */\n  LastModifiedDate: string | undefined;\n\n  /**\n   * <p>The unique identifier for the recommender model that's used by the message template.</p>\n   */\n  RecommenderId?: string;\n\n  /**\n   * <p>A string-to-string map of key-value pairs that identifies the tags that are associated with the message template. Each tag consists of a required tag key and an associated tag value.</p>\n   */\n  tags?: { [key: string]: string };\n\n  /**\n   * <p>The custom description of the message template.</p>\n   */\n  TemplateDescription?: string;\n\n  /**\n   * <p>The name of the message template.</p>\n   */\n  TemplateName: string | undefined;\n\n  /**\n   * <p>The type of channel that the message template is designed for. For an SMS template, this value is SMS.</p>\n   */\n  TemplateType: TemplateType | string | undefined;\n\n  /**\n   * <p>The unique identifier, as an integer, for the active version of the message template, or the version of the template that you specified by using the version parameter in your request.</p>\n   */\n  Version?: string;\n}\n\nexport namespace SMSTemplateResponse {\n  export const filterSensitiveLog = (obj: SMSTemplateResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetSmsTemplateResponse {\n  /**\n   * <p>Provides information about the content and settings for a message template that can be used in text messages that are sent through the SMS channel.</p>\n   */\n  SMSTemplateResponse: SMSTemplateResponse | undefined;\n}\n\nexport namespace GetSmsTemplateResponse {\n  export const filterSensitiveLog = (obj: GetSmsTemplateResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetUserEndpointsRequest {\n  /**\n   * <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>\n   */\n  ApplicationId: string | undefined;\n\n  /**\n   * <p>The unique identifier for the user.</p>\n   */\n  UserId: string | undefined;\n}\n\nexport namespace GetUserEndpointsRequest {\n  export const filterSensitiveLog = (obj: GetUserEndpointsRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetUserEndpointsResponse {\n  /**\n   * <p>Provides information about all the endpoints that are associated with a user ID.</p>\n   */\n  EndpointsResponse: EndpointsResponse | undefined;\n}\n\nexport namespace GetUserEndpointsResponse {\n  export const filterSensitiveLog = (obj: GetUserEndpointsResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetVoiceChannelRequest {\n  /**\n   * <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>\n   */\n  ApplicationId: string | undefined;\n}\n\nexport namespace GetVoiceChannelRequest {\n  export const filterSensitiveLog = (obj: GetVoiceChannelRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetVoiceChannelResponse {\n  /**\n   * <p>Provides information about the status and settings of the voice channel for an application.</p>\n   */\n  VoiceChannelResponse: VoiceChannelResponse | undefined;\n}\n\nexport namespace GetVoiceChannelResponse {\n  export const filterSensitiveLog = (obj: GetVoiceChannelResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetVoiceTemplateRequest {\n  /**\n   * <p>The name of the message template. A template name must start with an alphanumeric character and can contain a maximum of 128 characters. The characters can be alphanumeric characters, underscores (_), or hyphens (-). Template names are case sensitive.</p>\n   */\n  TemplateName: string | undefined;\n\n  /**\n   * <p>The unique identifier for the version of the message template to update, retrieve information about, or delete. To retrieve identifiers and other information for all the versions of a template, use the <link  linkend=\"templates-template-name-template-type-versions\">Template Versions</link> resource.</p> <p>If specified, this value must match the identifier for an existing template version. If specified for an update operation, this value must match the identifier for the latest existing version of the template. This restriction helps ensure that race conditions don't occur.</p> <p>If you don't specify a value for this parameter, Amazon Pinpoint does the following:</p> <ul><li><p>For a get operation, retrieves information about the active version of the template.</p></li> <li><p>For an update operation, saves the updates to (overwrites) the latest existing version of the template, if the create-new-version parameter isn't used or is set to false.</p></li> <li><p>For a delete operation, deletes the template, including all versions of the template.</p></li></ul>\n   */\n  Version?: string;\n}\n\nexport namespace GetVoiceTemplateRequest {\n  export const filterSensitiveLog = (obj: GetVoiceTemplateRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Provides information about the content and settings for a message template that can be used in messages that are sent through the voice channel.</p>\n */\nexport interface VoiceTemplateResponse {\n  /**\n   * <p>The Amazon Resource Name (ARN) of the message template.</p>\n   */\n  Arn?: string;\n\n  /**\n   * <p>The text of the script that's used in messages that are based on the message template, in plain text format.</p>\n   */\n  Body?: string;\n\n  /**\n   * <p>The date, in ISO 8601 format, when the message template was created.</p>\n   */\n  CreationDate: string | undefined;\n\n  /**\n   * <p>The JSON object that specifies the default values that are used for message variables in the message template. This object is a set of key-value pairs. Each key defines a message variable in the template. The corresponding value defines the default value for that variable.</p>\n   */\n  DefaultSubstitutions?: string;\n\n  /**\n   * <p>The code for the language that's used when synthesizing the text of the script in messages that are based on the message template. For a list of supported languages and the code for each one, see the <a href=\"https://docs.aws.amazon.com/polly/latest/dg/what-is.html\">Amazon Polly Developer Guide</a>.</p>\n   */\n  LanguageCode?: string;\n\n  /**\n   * <p>The date, in ISO 8601 format, when the message template was last modified.</p>\n   */\n  LastModifiedDate: string | undefined;\n\n  /**\n   * <p>A string-to-string map of key-value pairs that identifies the tags that are associated with the message template. Each tag consists of a required tag key and an associated tag value.</p>\n   */\n  tags?: { [key: string]: string };\n\n  /**\n   * <p>The custom description of the message template.</p>\n   */\n  TemplateDescription?: string;\n\n  /**\n   * <p>The name of the message template.</p>\n   */\n  TemplateName: string | undefined;\n\n  /**\n   * <p>The type of channel that the message template is designed for. For a voice template, this value is VOICE.</p>\n   */\n  TemplateType: TemplateType | string | undefined;\n\n  /**\n   * <p>The unique identifier, as an integer, for the active version of the message template, or the version of the template that you specified by using the version parameter in your request.</p>\n   */\n  Version?: string;\n\n  /**\n   * <p>The name of the voice that's used when delivering messages that are based on the message template. For a list of supported voices, see the <a href=\"https://docs.aws.amazon.com/polly/latest/dg/what-is.html\">Amazon Polly Developer Guide</a>.</p>\n   */\n  VoiceId?: string;\n}\n\nexport namespace VoiceTemplateResponse {\n  export const filterSensitiveLog = (obj: VoiceTemplateResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetVoiceTemplateResponse {\n  /**\n   * <p>Provides information about the content and settings for a message template that can be used in messages that are sent through the voice channel.</p>\n   */\n  VoiceTemplateResponse: VoiceTemplateResponse | undefined;\n}\n\nexport namespace GetVoiceTemplateResponse {\n  export const filterSensitiveLog = (obj: GetVoiceTemplateResponse): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Provides information about the status, configuration, and other settings for all the journeys that are associated with an application.</p>\n */\nexport interface JourneysResponse {\n  /**\n   * <p>An array of responses, one for each journey that's associated with the application.</p>\n   */\n  Item: JourneyResponse[] | undefined;\n\n  /**\n   * <p>The string to use in a subsequent request to get the next page of results in a paginated response. This value is null if there are no additional pages.</p>\n   */\n  NextToken?: string;\n}\n\nexport namespace JourneysResponse {\n  export const filterSensitiveLog = (obj: JourneysResponse): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Changes the status of a journey.</p>\n */\nexport interface JourneyStateRequest {\n  /**\n   * <p>The status of the journey. Currently, the only supported value is CANCELLED.</p> <p>If you cancel a journey, Amazon Pinpoint continues to perform activities that are currently in progress, until those activities are complete. Amazon Pinpoint also continues to collect and aggregate analytics data for those activities, until they are complete, and any activities that were complete when you cancelled the journey.</p> <p>After you cancel a journey, you can't add, change, or remove any activities from the journey. In addition, Amazon Pinpoint stops evaluating the journey and doesn't perform any activities that haven't started.</p>\n   */\n  State?: State | string;\n}\n\nexport namespace JourneyStateRequest {\n  export const filterSensitiveLog = (obj: JourneyStateRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface ListJourneysRequest {\n  /**\n   * <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>\n   */\n  ApplicationId: string | undefined;\n\n  /**\n   * <p>The maximum number of items to include in each page of a paginated response. This parameter is not supported for application, campaign, and journey metrics.</p>\n   */\n  PageSize?: string;\n\n  /**\n   * <p>The NextToken string that specifies which page of results to return in a paginated response.</p>\n   */\n  Token?: string;\n}\n\nexport namespace ListJourneysRequest {\n  export const filterSensitiveLog = (obj: ListJourneysRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface ListJourneysResponse {\n  /**\n   * <p>Provides information about the status, configuration, and other settings for all the journeys that are associated with an application.</p>\n   */\n  JourneysResponse: JourneysResponse | undefined;\n}\n\nexport namespace ListJourneysResponse {\n  export const filterSensitiveLog = (obj: ListJourneysResponse): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Provides information about a message template that's associated with your Amazon Pinpoint account.</p>\n */\nexport interface TemplateResponse {\n  /**\n   * <p>The Amazon Resource Name (ARN) of the message template. This value isn't included in a TemplateResponse object. To retrieve the ARN of a template, use the GetEmailTemplate, GetPushTemplate, GetSmsTemplate, or GetVoiceTemplate operation, depending on the type of template that you want to retrieve the ARN for.</p>\n   */\n  Arn?: string;\n\n  /**\n   * <p>The date, in ISO 8601 format, when the message template was created.</p>\n   */\n  CreationDate: string | undefined;\n\n  /**\n   * <p>The JSON object that specifies the default values that are used for message variables in the message template. This object isn't included in a TemplateResponse object. To retrieve this object for a template, use the GetEmailTemplate, GetPushTemplate, GetSmsTemplate, or GetVoiceTemplate operation, depending on the type of template that you want to retrieve the object for.</p>\n   */\n  DefaultSubstitutions?: string;\n\n  /**\n   * <p>The date, in ISO 8601 format, when the message template was last modified.</p>\n   */\n  LastModifiedDate: string | undefined;\n\n  /**\n   * <p>A map of key-value pairs that identifies the tags that are associated with the message template. This object isn't included in a TemplateResponse object. To retrieve this object for a template, use the GetEmailTemplate, GetPushTemplate, GetSmsTemplate, or GetVoiceTemplate operation, depending on the type of template that you want to retrieve the object for.</p>\n   */\n  tags?: { [key: string]: string };\n\n  /**\n   * <p>The custom description of the message template. This value isn't included in a TemplateResponse object. To retrieve the description of a template, use the GetEmailTemplate, GetPushTemplate, GetSmsTemplate, or GetVoiceTemplate operation, depending on the type of template that you want to retrieve the description for.</p>\n   */\n  TemplateDescription?: string;\n\n  /**\n   * <p>The name of the message template.</p>\n   */\n  TemplateName: string | undefined;\n\n  /**\n   * <p>The type of channel that the message template is designed for. Possible values are: EMAIL, PUSH, SMS, and VOICE.</p>\n   */\n  TemplateType: TemplateType | string | undefined;\n\n  /**\n   * <p>The unique identifier, as an integer, for the active version of the message template.</p>\n   */\n  Version?: string;\n}\n\nexport namespace TemplateResponse {\n  export const filterSensitiveLog = (obj: TemplateResponse): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Provides information about a specific version of a message template.</p>\n */\nexport interface TemplateVersionResponse {\n  /**\n   * <p>The date, in ISO 8601 format, when the version of the message template was created.</p>\n   */\n  CreationDate: string | undefined;\n\n  /**\n   * <p>A JSON object that specifies the default values that are used for message variables in the version of the message template. This object is a set of key-value pairs. Each key defines a message variable in the template. The corresponding value defines the default value for that variable.</p>\n   */\n  DefaultSubstitutions?: string;\n\n  /**\n   * <p>The date, in ISO 8601 format, when the version of the message template was last modified.</p>\n   */\n  LastModifiedDate: string | undefined;\n\n  /**\n   * <p>The custom description of the version of the message template.</p>\n   */\n  TemplateDescription?: string;\n\n  /**\n   * <p>The name of the message template.</p>\n   */\n  TemplateName: string | undefined;\n\n  /**\n   * <p>The type of channel that the message template is designed for. Possible values are: EMAIL, PUSH, SMS, and VOICE.</p>\n   */\n  TemplateType: string | undefined;\n\n  /**\n   * <p>The unique identifier for the version of the message template. This value is an integer that Amazon Pinpoint automatically increments and assigns to each new version of a template.</p>\n   */\n  Version?: string;\n}\n\nexport namespace TemplateVersionResponse {\n  export const filterSensitiveLog = (obj: TemplateVersionResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface ListTagsForResourceRequest {\n  /**\n   * <p>The Amazon Resource Name (ARN) of the resource.</p>\n   */\n  ResourceArn: string | undefined;\n}\n\nexport namespace ListTagsForResourceRequest {\n  export const filterSensitiveLog = (obj: ListTagsForResourceRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Specifies the tags (keys and values) for an application, campaign, message template, or segment.</p>\n */\nexport interface TagsModel {\n  /**\n   * <p>A string-to-string map of key-value pairs that defines the tags for an application, campaign, message template, or segment. Each of these resources can have a maximum of 50 tags.</p> <p>Each tag consists of a required tag key and an associated tag value. The maximum length of a tag key is 128 characters. The maximum length of a tag value is 256 characters.</p>\n   */\n  tags: { [key: string]: string } | undefined;\n}\n\nexport namespace TagsModel {\n  export const filterSensitiveLog = (obj: TagsModel): any => ({\n    ...obj,\n  });\n}\n\nexport interface ListTagsForResourceResponse {\n  /**\n   * <p>Specifies the tags (keys and values) for an application, campaign, message template, or segment.</p>\n   */\n  TagsModel: TagsModel | undefined;\n}\n\nexport namespace ListTagsForResourceResponse {\n  export const filterSensitiveLog = (obj: ListTagsForResourceResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface ListTemplatesRequest {\n  /**\n   * <p>The  string that specifies which page of results to return in a paginated response. This parameter is not supported for application, campaign, and journey metrics.</p>\n   */\n  NextToken?: string;\n\n  /**\n   * <p>The maximum number of items to include in each page of a paginated response. This parameter is not supported for application, campaign, and journey metrics.</p>\n   */\n  PageSize?: string;\n\n  /**\n   * <p>The substring to match in the names of the message templates to include in the results. If you specify this value, Amazon Pinpoint returns only those templates whose names begin with the value that you specify.</p>\n   */\n  Prefix?: string;\n\n  /**\n   * <p>The type of message template to include in the results. Valid values are: EMAIL, PUSH, SMS, and VOICE. To include all types of templates in the results, don't include this parameter in your request.</p>\n   */\n  TemplateType?: string;\n}\n\nexport namespace ListTemplatesRequest {\n  export const filterSensitiveLog = (obj: ListTemplatesRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Provides information about all the message templates that are associated with your Amazon Pinpoint account.</p>\n */\nexport interface TemplatesResponse {\n  /**\n   * <p>An array of responses, one for each message template that's associated with your Amazon Pinpoint account and meets any filter criteria that you specified in the request.</p>\n   */\n  Item: TemplateResponse[] | undefined;\n\n  /**\n   * <p>The string to use in a subsequent request to get the next page of results in a paginated response. This value is null if there are no additional pages.</p>\n   */\n  NextToken?: string;\n}\n\nexport namespace TemplatesResponse {\n  export const filterSensitiveLog = (obj: TemplatesResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface ListTemplatesResponse {\n  /**\n   * <p>Provides information about all the message templates that are associated with your Amazon Pinpoint account.</p>\n   */\n  TemplatesResponse: TemplatesResponse | undefined;\n}\n\nexport namespace ListTemplatesResponse {\n  export const filterSensitiveLog = (obj: ListTemplatesResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface ListTemplateVersionsRequest {\n  /**\n   * <p>The  string that specifies which page of results to return in a paginated response. This parameter is not supported for application, campaign, and journey metrics.</p>\n   */\n  NextToken?: string;\n\n  /**\n   * <p>The maximum number of items to include in each page of a paginated response. This parameter is not supported for application, campaign, and journey metrics.</p>\n   */\n  PageSize?: string;\n\n  /**\n   * <p>The name of the message template. A template name must start with an alphanumeric character and can contain a maximum of 128 characters. The characters can be alphanumeric characters, underscores (_), or hyphens (-). Template names are case sensitive.</p>\n   */\n  TemplateName: string | undefined;\n\n  /**\n   * <p>The type of channel that the message template is designed for. Valid values are: EMAIL, PUSH, SMS, and VOICE.</p>\n   */\n  TemplateType: string | undefined;\n}\n\nexport namespace ListTemplateVersionsRequest {\n  export const filterSensitiveLog = (obj: ListTemplateVersionsRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Provides information about all the versions of a specific message template.</p>\n */\nexport interface TemplateVersionsResponse {\n  /**\n   * <p>An array of responses, one for each version of the message template.</p>\n   */\n  Item: TemplateVersionResponse[] | undefined;\n\n  /**\n   * <p>The message that's returned from the API for the request to retrieve information about all the versions of the message template.</p>\n   */\n  Message?: string;\n\n  /**\n   * <p>The string to use in a subsequent request to get the next page of results in a paginated response. This value is null if there are no additional pages.</p>\n   */\n  NextToken?: string;\n\n  /**\n   * <p>The unique identifier for the request to retrieve information about all the versions of the message template.</p>\n   */\n  RequestID?: string;\n}\n\nexport namespace TemplateVersionsResponse {\n  export const filterSensitiveLog = (obj: TemplateVersionsResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface ListTemplateVersionsResponse {\n  /**\n   * <p>Provides information about all the versions of a specific message template.</p>\n   */\n  TemplateVersionsResponse: TemplateVersionsResponse | undefined;\n}\n\nexport namespace ListTemplateVersionsResponse {\n  export const filterSensitiveLog = (obj: ListTemplateVersionsResponse): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Provides information about the results of sending a message directly to an endpoint address.</p>\n */\nexport interface MessageResult {\n  /**\n   * <p>The delivery status of the message. Possible values are:</p> <ul> <li><p>DUPLICATE - The endpoint address is a duplicate of another endpoint address. Amazon Pinpoint won't attempt to send the message again.</p></li>   <li><p>OPT_OUT - The user who's associated with the endpoint address has opted out of receiving messages from you. Amazon Pinpoint won't attempt to send the message again.</p></li> <li><p>PERMANENT_FAILURE - An error occurred when delivering the message to the endpoint address. Amazon Pinpoint won't attempt to send the message again.</p></li>   <li><p>SUCCESSFUL - The message was successfully delivered to the endpoint address.</p></li> <li><p>TEMPORARY_FAILURE - A temporary error occurred. Amazon Pinpoint won't attempt to send the message again.</p></li> <li><p>THROTTLED - Amazon Pinpoint throttled the operation to send the message to the endpoint address.</p></li> <li><p>TIMEOUT - The message couldn't be sent within the timeout period.</p></li> <li><p>UNKNOWN_FAILURE - An unknown error occurred.</p></li></ul>\n   */\n  DeliveryStatus: DeliveryStatus | string | undefined;\n\n  /**\n   * <p>The unique identifier for the message that was sent.</p>\n   */\n  MessageId?: string;\n\n  /**\n   * <p>The downstream service status code for delivering the message.</p>\n   */\n  StatusCode: number | undefined;\n\n  /**\n   * <p>The status message for delivering the message.</p>\n   */\n  StatusMessage?: string;\n\n  /**\n   * <p>For push notifications that are sent through the GCM channel, specifies whether the endpoint's device registration token was updated as part of delivering the message.</p>\n   */\n  UpdatedToken?: string;\n}\n\nexport namespace MessageResult {\n  export const filterSensitiveLog = (obj: MessageResult): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Specifies the configuration and other settings for a message.</p>\n */\nexport interface MessageRequest {\n  /**\n   * <p>A map of key-value pairs, where each key is an address and each value is an <a href=\"https://docs.aws.amazon.com/pinpoint/latest/apireference/apps-application-id-messages.html#apps-application-id-messages-model-addressconfiguration\">AddressConfiguration</a> object. An address can be a push notification token, a phone number, or an email address. You can use an <a href=\"https://docs.aws.amazon.com/pinpoint/latest/apireference/apps-application-id-messages.html#apps-application-id-messages-model-addressconfiguration\">AddressConfiguration</a> object to tailor the message for an address by specifying settings such as content overrides and message variables.</p>\n   */\n  Addresses?: { [key: string]: AddressConfiguration };\n\n  /**\n   * <p>A map of custom attributes to attach to the message. For a push notification, this payload is added to the data.pinpoint object. For an email or text message, this payload is added to email/SMS delivery receipt event attributes.</p>\n   */\n  Context?: { [key: string]: string };\n\n  /**\n   * <p>A map of key-value pairs, where each key is an endpoint ID and each value is an <a href=\"https://docs.aws.amazon.com/pinpoint/latest/apireference/apps-application-id-messages.html#apps-application-id-messages-model-endpointsendconfiguration\">EndpointSendConfiguration</a> object. You can use an <a href=\"https://docs.aws.amazon.com/pinpoint/latest/apireference/apps-application-id-messages.html#apps-application-id-messages-model-endpointsendconfiguration\">EndpointSendConfiguration</a> object to tailor the message for an endpoint by specifying settings such as content overrides and message variables.</p>\n   */\n  Endpoints?: { [key: string]: EndpointSendConfiguration };\n\n  /**\n   * <p>The settings and content for the default message and any default messages that you defined for specific channels.</p>\n   */\n  MessageConfiguration: DirectMessageConfiguration | undefined;\n\n  /**\n   * <p>The message template to use for the message.</p>\n   */\n  TemplateConfiguration?: TemplateConfiguration;\n\n  /**\n   * <p>The unique identifier for tracing the message. This identifier is visible to message recipients.</p>\n   */\n  TraceId?: string;\n}\n\nexport namespace MessageRequest {\n  export const filterSensitiveLog = (obj: MessageRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Provides information about the results of a request to send a message to an endpoint address.</p>\n */\nexport interface MessageResponse {\n  /**\n   * <p>The unique identifier for the application that was used to send the message.</p>\n   */\n  ApplicationId: string | undefined;\n\n  /**\n   * <p>A map that contains a multipart response for each address that the message was sent to. In the map, the endpoint ID is the key and the result is the value.</p>\n   */\n  EndpointResult?: { [key: string]: EndpointMessageResult };\n\n  /**\n   * <p>The identifier for the original request that the message was delivered for.</p>\n   */\n  RequestId?: string;\n\n  /**\n   * <p>A map that contains a multipart response for each address (email address, phone number, or push notification token) that the message was sent to. In the map, the address is the key and the result is the value.</p>\n   */\n  Result?: { [key: string]: MessageResult };\n}\n\nexport namespace MessageResponse {\n  export const filterSensitiveLog = (obj: MessageResponse): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Specifies a phone number to validate and retrieve information about.</p>\n */\nexport interface NumberValidateRequest {\n  /**\n   * <p>The two-character code, in ISO 3166-1 alpha-2 format, for the country or region where the phone number was originally registered.</p>\n   */\n  IsoCountryCode?: string;\n\n  /**\n   * <p>The phone number to retrieve information about. The phone number that you provide should include a valid numeric country code. Otherwise, the operation might result in an error.</p>\n   */\n  PhoneNumber?: string;\n}\n\nexport namespace NumberValidateRequest {\n  export const filterSensitiveLog = (obj: NumberValidateRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Provides information about a phone number.</p>\n */\nexport interface NumberValidateResponse {\n  /**\n   * <p>The carrier or service provider that the phone number is currently registered with. In some countries and regions, this value may be the carrier or service provider that the phone number was originally registered with.</p>\n   */\n  Carrier?: string;\n\n  /**\n   * <p>The name of the city where the phone number was originally registered.</p>\n   */\n  City?: string;\n\n  /**\n   * <p>The cleansed phone number, in E.164 format, for the location where the phone number was originally registered.</p>\n   */\n  CleansedPhoneNumberE164?: string;\n\n  /**\n   * <p>The cleansed phone number, in the format for the location where the phone number was originally registered.</p>\n   */\n  CleansedPhoneNumberNational?: string;\n\n  /**\n   * <p>The name of the country or region where the phone number was originally registered.</p>\n   */\n  Country?: string;\n\n  /**\n   * <p>The two-character code, in ISO 3166-1 alpha-2 format, for the country or region where the phone number was originally registered.</p>\n   */\n  CountryCodeIso2?: string;\n\n  /**\n   * <p>The numeric code for the country or region where the phone number was originally registered.</p>\n   */\n  CountryCodeNumeric?: string;\n\n  /**\n   * <p>The name of the county where the phone number was originally registered.</p>\n   */\n  County?: string;\n\n  /**\n   * <p>The two-character code, in ISO 3166-1 alpha-2 format, that was sent in the request body.</p>\n   */\n  OriginalCountryCodeIso2?: string;\n\n  /**\n   * <p>The phone number that was sent in the request body.</p>\n   */\n  OriginalPhoneNumber?: string;\n\n  /**\n   * <p>The description of the phone type. Valid values are: MOBILE, LANDLINE, VOIP,\n   *                   INVALID, PREPAID, and OTHER.</p>\n   */\n  PhoneType?: string;\n\n  /**\n   * <p>The phone type, represented by an integer. Valid values are: 0 (mobile), 1 (landline), 2 (VoIP), 3 (invalid), 4 (other), and 5 (prepaid).</p>\n   */\n  PhoneTypeCode?: number;\n\n  /**\n   * <p>The time zone for the location where the phone number was originally registered.</p>\n   */\n  Timezone?: string;\n\n  /**\n   * <p>The postal or ZIP code for the location where the phone number was originally registered.</p>\n   */\n  ZipCode?: string;\n}\n\nexport namespace NumberValidateResponse {\n  export const filterSensitiveLog = (obj: NumberValidateResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface PhoneNumberValidateRequest {\n  /**\n   * <p>Specifies a phone number to validate and retrieve information about.</p>\n   */\n  NumberValidateRequest: NumberValidateRequest | undefined;\n}\n\nexport namespace PhoneNumberValidateRequest {\n  export const filterSensitiveLog = (obj: PhoneNumberValidateRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface PhoneNumberValidateResponse {\n  /**\n   * <p>Provides information about a phone number.</p>\n   */\n  NumberValidateResponse: NumberValidateResponse | undefined;\n}\n\nexport namespace PhoneNumberValidateResponse {\n  export const filterSensitiveLog = (obj: PhoneNumberValidateResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface PutEventsRequest {\n  /**\n   * <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>\n   */\n  ApplicationId: string | undefined;\n\n  /**\n   * <p>Specifies a batch of events to process.</p>\n   */\n  EventsRequest: EventsRequest | undefined;\n}\n\nexport namespace PutEventsRequest {\n  export const filterSensitiveLog = (obj: PutEventsRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface PutEventsResponse {\n  /**\n   * <p>Provides information about endpoints and the events that they're associated with.</p>\n   */\n  EventsResponse: EventsResponse | undefined;\n}\n\nexport namespace PutEventsResponse {\n  export const filterSensitiveLog = (obj: PutEventsResponse): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Specifies the Amazon Resource Name (ARN) of an event stream to publish events to and the AWS Identity and Access Management (IAM) role to use when publishing those events.</p>\n */\nexport interface WriteEventStream {\n  /**\n   * <p>The Amazon Resource Name (ARN) of the Amazon Kinesis data stream or Amazon Kinesis Data Firehose delivery stream that you want to publish event data to.</p> <p>For a Kinesis data stream, the ARN format is: arn:aws:kinesis:<replaceable>region</replaceable>:<replaceable>account-id</replaceable>:stream/<replaceable>stream_name</replaceable>\n   *                </p> <p>For a Kinesis Data Firehose delivery stream, the ARN format is: arn:aws:firehose:<replaceable>region</replaceable>:<replaceable>account-id</replaceable>:deliverystream/<replaceable>stream_name</replaceable>\n   *                </p>\n   */\n  DestinationStreamArn: string | undefined;\n\n  /**\n   * <p>The AWS Identity and Access Management (IAM) role that authorizes Amazon Pinpoint to publish event data to the stream in your AWS account.</p>\n   */\n  RoleArn: string | undefined;\n}\n\nexport namespace WriteEventStream {\n  export const filterSensitiveLog = (obj: WriteEventStream): any => ({\n    ...obj,\n  });\n}\n\nexport interface PutEventStreamRequest {\n  /**\n   * <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>\n   */\n  ApplicationId: string | undefined;\n\n  /**\n   * <p>Specifies the Amazon Resource Name (ARN) of an event stream to publish events to and the AWS Identity and Access Management (IAM) role to use when publishing those events.</p>\n   */\n  WriteEventStream: WriteEventStream | undefined;\n}\n\nexport namespace PutEventStreamRequest {\n  export const filterSensitiveLog = (obj: PutEventStreamRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface PutEventStreamResponse {\n  /**\n   * <p>Specifies settings for publishing event data to an Amazon Kinesis data stream or an Amazon Kinesis Data Firehose delivery stream.</p>\n   */\n  EventStream: EventStream | undefined;\n}\n\nexport namespace PutEventStreamResponse {\n  export const filterSensitiveLog = (obj: PutEventStreamResponse): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Specifies one or more attributes to remove from all the endpoints that are associated with an application.</p>\n */\nexport interface UpdateAttributesRequest {\n  /**\n   * <p>An array of the attributes to remove from all the endpoints that are associated with the application. The array can specify the complete, exact name of each attribute to remove or it can specify a glob pattern that an attribute name must match in order for the attribute to be removed.</p>\n   */\n  Blacklist?: string[];\n}\n\nexport namespace UpdateAttributesRequest {\n  export const filterSensitiveLog = (obj: UpdateAttributesRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface RemoveAttributesRequest {\n  /**\n   * <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>\n   */\n  ApplicationId: string | undefined;\n\n  /**\n   * <p>The type of attribute or attributes to remove. Valid values are:</p> <ul><li><p>endpoint-custom-attributes - Custom attributes that describe endpoints, such as the date when an associated user opted in or out of receiving communications from you through a specific type of channel.</p></li> <li><p>endpoint-metric-attributes - Custom metrics that your app reports to Amazon Pinpoint for endpoints, such as the number of app sessions or the number of items left in a cart.</p></li> <li><p>endpoint-user-attributes - Custom attributes that describe users, such as first name, last name, and age.</p></li></ul>\n   */\n  AttributeType: string | undefined;\n\n  /**\n   * <p>Specifies one or more attributes to remove from all the endpoints that are associated with an application.</p>\n   */\n  UpdateAttributesRequest: UpdateAttributesRequest | undefined;\n}\n\nexport namespace RemoveAttributesRequest {\n  export const filterSensitiveLog = (obj: RemoveAttributesRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface RemoveAttributesResponse {\n  /**\n   * <p>Provides information about the type and the names of attributes that were removed from all the endpoints that are associated with an application.</p>\n   */\n  AttributesResource: AttributesResource | undefined;\n}\n\nexport namespace RemoveAttributesResponse {\n  export const filterSensitiveLog = (obj: RemoveAttributesResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface SendMessagesRequest {\n  /**\n   * <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>\n   */\n  ApplicationId: string | undefined;\n\n  /**\n   * <p>Specifies the configuration and other settings for a message.</p>\n   */\n  MessageRequest: MessageRequest | undefined;\n}\n\nexport namespace SendMessagesRequest {\n  export const filterSensitiveLog = (obj: SendMessagesRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface SendMessagesResponse {\n  /**\n   * <p>Provides information about the results of a request to send a message to an endpoint address.</p>\n   */\n  MessageResponse: MessageResponse | undefined;\n}\n\nexport namespace SendMessagesResponse {\n  export const filterSensitiveLog = (obj: SendMessagesResponse): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Specifies the configuration and other settings for a message to send to all the endpoints that are associated with a list of users.</p>\n */\nexport interface SendUsersMessageRequest {\n  /**\n   * <p>A map of custom attribute-value pairs. For a push notification, Amazon Pinpoint adds these attributes to the data.pinpoint object in the body of the notification payload. Amazon Pinpoint also provides these attributes in the events that it generates for users-messages deliveries.</p>\n   */\n  Context?: { [key: string]: string };\n\n  /**\n   * <p>The settings and content for the default message and any default messages that you defined for specific channels.</p>\n   */\n  MessageConfiguration: DirectMessageConfiguration | undefined;\n\n  /**\n   * <p>The message template to use for the message.</p>\n   */\n  TemplateConfiguration?: TemplateConfiguration;\n\n  /**\n   * <p>The unique identifier for tracing the message. This identifier is visible to message recipients.</p>\n   */\n  TraceId?: string;\n\n  /**\n   * <p>A map that associates user IDs with <a href=\"https://docs.aws.amazon.com/pinpoint/latest/apireference/apps-application-id-messages.html#apps-application-id-messages-model-endpointsendconfiguration\">EndpointSendConfiguration</a> objects. You can use an <a href=\"https://docs.aws.amazon.com/pinpoint/latest/apireference/apps-application-id-messages.html#apps-application-id-messages-model-endpointsendconfiguration\">EndpointSendConfiguration</a> object to tailor the message for a user by specifying settings such as content overrides and message variables.</p>\n   */\n  Users: { [key: string]: EndpointSendConfiguration } | undefined;\n}\n\nexport namespace SendUsersMessageRequest {\n  export const filterSensitiveLog = (obj: SendUsersMessageRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface SendUsersMessagesRequest {\n  /**\n   * <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>\n   */\n  ApplicationId: string | undefined;\n\n  /**\n   * <p>Specifies the configuration and other settings for a message to send to all the endpoints that are associated with a list of users.</p>\n   */\n  SendUsersMessageRequest: SendUsersMessageRequest | undefined;\n}\n\nexport namespace SendUsersMessagesRequest {\n  export const filterSensitiveLog = (obj: SendUsersMessagesRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Provides information about which users and endpoints a message was sent to.</p>\n */\nexport interface SendUsersMessageResponse {\n  /**\n   * <p>The unique identifier for the application that was used to send the message.</p>\n   */\n  ApplicationId: string | undefined;\n\n  /**\n   * <p>The unique identifier that was assigned to the message request.</p>\n   */\n  RequestId?: string;\n\n  /**\n   * <p>An object that indicates which endpoints the message was sent to, for each user. The object lists user IDs and, for each user ID, provides the endpoint IDs that the message was sent to. For each endpoint ID, it provides an EndpointMessageResult object.</p>\n   */\n  Result?: { [key: string]: { [key: string]: EndpointMessageResult } };\n}\n\nexport namespace SendUsersMessageResponse {\n  export const filterSensitiveLog = (obj: SendUsersMessageResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface SendUsersMessagesResponse {\n  /**\n   * <p>Provides information about which users and endpoints a message was sent to.</p>\n   */\n  SendUsersMessageResponse: SendUsersMessageResponse | undefined;\n}\n\nexport namespace SendUsersMessagesResponse {\n  export const filterSensitiveLog = (obj: SendUsersMessagesResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface TagResourceRequest {\n  /**\n   * <p>The Amazon Resource Name (ARN) of the resource.</p>\n   */\n  ResourceArn: string | undefined;\n\n  /**\n   * <p>Specifies the tags (keys and values) for an application, campaign, message template, or segment.</p>\n   */\n  TagsModel: TagsModel | undefined;\n}\n\nexport namespace TagResourceRequest {\n  export const filterSensitiveLog = (obj: TagResourceRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface UntagResourceRequest {\n  /**\n   * <p>The Amazon Resource Name (ARN) of the resource.</p>\n   */\n  ResourceArn: string | undefined;\n\n  /**\n   * <p>The key of the tag to remove from the resource. To remove multiple tags, append the tagKeys parameter and argument for each additional tag to remove, separated by an ampersand (&amp;).</p>\n   */\n  TagKeys: string[] | undefined;\n}\n\nexport namespace UntagResourceRequest {\n  export const filterSensitiveLog = (obj: UntagResourceRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface UpdateAdmChannelRequest {\n  /**\n   * <p>Specifies the status and settings of the ADM (Amazon Device Messaging) channel for an application.</p>\n   */\n  ADMChannelRequest: ADMChannelRequest | undefined;\n\n  /**\n   * <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>\n   */\n  ApplicationId: string | undefined;\n}\n\nexport namespace UpdateAdmChannelRequest {\n  export const filterSensitiveLog = (obj: UpdateAdmChannelRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface UpdateAdmChannelResponse {\n  /**\n   * <p>Provides information about the status and settings of the ADM (Amazon Device Messaging) channel for an application.</p>\n   */\n  ADMChannelResponse: ADMChannelResponse | undefined;\n}\n\nexport namespace UpdateAdmChannelResponse {\n  export const filterSensitiveLog = (obj: UpdateAdmChannelResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface UpdateApnsChannelRequest {\n  /**\n   * <p>Specifies the status and settings of the APNs (Apple Push Notification service) channel for an application.</p>\n   */\n  APNSChannelRequest: APNSChannelRequest | undefined;\n\n  /**\n   * <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>\n   */\n  ApplicationId: string | undefined;\n}\n\nexport namespace UpdateApnsChannelRequest {\n  export const filterSensitiveLog = (obj: UpdateApnsChannelRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface UpdateApnsChannelResponse {\n  /**\n   * <p>Provides information about the status and settings of the APNs (Apple Push Notification service) channel for an application.</p>\n   */\n  APNSChannelResponse: APNSChannelResponse | undefined;\n}\n\nexport namespace UpdateApnsChannelResponse {\n  export const filterSensitiveLog = (obj: UpdateApnsChannelResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface UpdateApnsSandboxChannelRequest {\n  /**\n   * <p>Specifies the status and settings of the APNs (Apple Push Notification service) sandbox channel for an application.</p>\n   */\n  APNSSandboxChannelRequest: APNSSandboxChannelRequest | undefined;\n\n  /**\n   * <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>\n   */\n  ApplicationId: string | undefined;\n}\n\nexport namespace UpdateApnsSandboxChannelRequest {\n  export const filterSensitiveLog = (obj: UpdateApnsSandboxChannelRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface UpdateApnsSandboxChannelResponse {\n  /**\n   * <p>Provides information about the status and settings of the APNs (Apple Push Notification service) sandbox channel for an application.</p>\n   */\n  APNSSandboxChannelResponse: APNSSandboxChannelResponse | undefined;\n}\n\nexport namespace UpdateApnsSandboxChannelResponse {\n  export const filterSensitiveLog = (obj: UpdateApnsSandboxChannelResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface UpdateApnsVoipChannelRequest {\n  /**\n   * <p>Specifies the status and settings of the APNs (Apple Push Notification service) VoIP channel for an application.</p>\n   */\n  APNSVoipChannelRequest: APNSVoipChannelRequest | undefined;\n\n  /**\n   * <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>\n   */\n  ApplicationId: string | undefined;\n}\n\nexport namespace UpdateApnsVoipChannelRequest {\n  export const filterSensitiveLog = (obj: UpdateApnsVoipChannelRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface UpdateApnsVoipChannelResponse {\n  /**\n   * <p>Provides information about the status and settings of the APNs (Apple Push Notification service) VoIP channel for an application.</p>\n   */\n  APNSVoipChannelResponse: APNSVoipChannelResponse | undefined;\n}\n\nexport namespace UpdateApnsVoipChannelResponse {\n  export const filterSensitiveLog = (obj: UpdateApnsVoipChannelResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface UpdateApnsVoipSandboxChannelRequest {\n  /**\n   * <p>Specifies the status and settings of the APNs (Apple Push Notification service) VoIP sandbox channel for an application.</p>\n   */\n  APNSVoipSandboxChannelRequest: APNSVoipSandboxChannelRequest | undefined;\n\n  /**\n   * <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>\n   */\n  ApplicationId: string | undefined;\n}\n\nexport namespace UpdateApnsVoipSandboxChannelRequest {\n  export const filterSensitiveLog = (obj: UpdateApnsVoipSandboxChannelRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface UpdateApnsVoipSandboxChannelResponse {\n  /**\n   * <p>Provides information about the status and settings of the APNs (Apple Push Notification service) VoIP sandbox channel for an application.</p>\n   */\n  APNSVoipSandboxChannelResponse: APNSVoipSandboxChannelResponse | undefined;\n}\n\nexport namespace UpdateApnsVoipSandboxChannelResponse {\n  export const filterSensitiveLog = (obj: UpdateApnsVoipSandboxChannelResponse): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Specifies the default settings for an application.</p>\n */\nexport interface WriteApplicationSettingsRequest {\n  /**\n   * <p>The settings for the AWS Lambda function to invoke by default as a code hook for campaigns in the application. You can use this hook to customize segments that are used by campaigns in the application.</p> <p>To override these settings and define custom settings for a specific campaign, use the CampaignHook object of the <link  linkend=\"apps-application-id-campaigns-campaign-id\">Campaign</link> resource.</p>\n   */\n  CampaignHook?: CampaignHook;\n\n  /**\n   * <p>Specifies whether to enable application-related alarms in Amazon CloudWatch.</p>\n   */\n  CloudWatchMetricsEnabled?: boolean;\n\n  EventTaggingEnabled?: boolean;\n  /**\n   * <p>The default sending limits for campaigns in the application. To override these limits and define custom limits for a specific campaign or journey, use the <link  linkend=\"apps-application-id-campaigns-campaign-id\">Campaign</link> resource or the <link  linkend=\"apps-application-id-journeys-journey-id\">Journey</link> resource, respectively.</p>\n   */\n  Limits?: CampaignLimits;\n\n  /**\n   * <p>The default quiet time for campaigns in the application. Quiet time is a specific time range when messages aren't sent to endpoints, if all the following conditions are met:</p> <ul><li><p>The EndpointDemographic.Timezone property of the endpoint is set to a valid value.</p></li> <li><p>The current time in the endpoint's time zone is later than or equal to the time specified by the QuietTime.Start property for the application (or a campaign or journey that has custom quiet time settings).</p></li> <li><p>The current time in the endpoint's time zone is earlier than or equal to the time specified by the QuietTime.End property for the application (or a campaign or journey that has custom quiet time settings).</p></li></ul> <p>If any of the preceding conditions isn't met, the endpoint will receive messages from a campaign or journey, even if quiet time is enabled.</p> <p>To override the default quiet time settings for a specific campaign or journey, use the <link  linkend=\"apps-application-id-campaigns-campaign-id\">Campaign</link> resource or the <link  linkend=\"apps-application-id-journeys-journey-id\">Journey</link> resource to define a custom quiet time for the campaign or journey.</p>\n   */\n  QuietTime?: QuietTime;\n}\n\nexport namespace WriteApplicationSettingsRequest {\n  export const filterSensitiveLog = (obj: WriteApplicationSettingsRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface UpdateApplicationSettingsRequest {\n  /**\n   * <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>\n   */\n  ApplicationId: string | undefined;\n\n  /**\n   * <p>Specifies the default settings for an application.</p>\n   */\n  WriteApplicationSettingsRequest: WriteApplicationSettingsRequest | undefined;\n}\n\nexport namespace UpdateApplicationSettingsRequest {\n  export const filterSensitiveLog = (obj: UpdateApplicationSettingsRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface UpdateApplicationSettingsResponse {\n  /**\n   * <p>Provides information about an application, including the default settings for an application.</p>\n   */\n  ApplicationSettingsResource: ApplicationSettingsResource | undefined;\n}\n\nexport namespace UpdateApplicationSettingsResponse {\n  export const filterSensitiveLog = (obj: UpdateApplicationSettingsResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface UpdateBaiduChannelRequest {\n  /**\n   * <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>\n   */\n  ApplicationId: string | undefined;\n\n  /**\n   * <p>Specifies the status and settings of the Baidu (Baidu Cloud Push) channel for an application.</p>\n   */\n  BaiduChannelRequest: BaiduChannelRequest | undefined;\n}\n\nexport namespace UpdateBaiduChannelRequest {\n  export const filterSensitiveLog = (obj: UpdateBaiduChannelRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface UpdateBaiduChannelResponse {\n  /**\n   * <p>Provides information about the status and settings of the Baidu (Baidu Cloud Push) channel for an application.</p>\n   */\n  BaiduChannelResponse: BaiduChannelResponse | undefined;\n}\n\nexport namespace UpdateBaiduChannelResponse {\n  export const filterSensitiveLog = (obj: UpdateBaiduChannelResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface UpdateCampaignRequest {\n  /**\n   * <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>\n   */\n  ApplicationId: string | undefined;\n\n  /**\n   * <p>The unique identifier for the campaign.</p>\n   */\n  CampaignId: string | undefined;\n\n  /**\n   * <p>Specifies the configuration and other settings for a campaign.</p>\n   */\n  WriteCampaignRequest: WriteCampaignRequest | undefined;\n}\n\nexport namespace UpdateCampaignRequest {\n  export const filterSensitiveLog = (obj: UpdateCampaignRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface UpdateCampaignResponse {\n  /**\n   * <p>Provides information about the status, configuration, and other settings for a campaign.</p>\n   */\n  CampaignResponse: CampaignResponse | undefined;\n}\n\nexport namespace UpdateCampaignResponse {\n  export const filterSensitiveLog = (obj: UpdateCampaignResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface UpdateEmailChannelRequest {\n  /**\n   * <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>\n   */\n  ApplicationId: string | undefined;\n\n  /**\n   * <p>Specifies the status and settings of the email channel for an application.</p>\n   */\n  EmailChannelRequest: EmailChannelRequest | undefined;\n}\n\nexport namespace UpdateEmailChannelRequest {\n  export const filterSensitiveLog = (obj: UpdateEmailChannelRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface UpdateEmailChannelResponse {\n  /**\n   * <p>Provides information about the status and settings of the email channel for an application.</p>\n   */\n  EmailChannelResponse: EmailChannelResponse | undefined;\n}\n\nexport namespace UpdateEmailChannelResponse {\n  export const filterSensitiveLog = (obj: UpdateEmailChannelResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface UpdateEmailTemplateRequest {\n  /**\n   * <p>Specifies whether to save the updates as a new version of the message template. Valid values are: true, save the updates as a new version; and, false, save the updates to (overwrite) the latest existing version of the template.</p> <p>If you don't specify a value for this parameter, Amazon Pinpoint saves the updates to (overwrites) the latest existing version of the template. If you specify a value of true for this parameter, don't specify a value for the version parameter. Otherwise, an error will occur.</p>\n   */\n  CreateNewVersion?: boolean;\n\n  /**\n   * <p>Specifies the content and settings for a message template that can be used in messages that are sent through the email channel.</p>\n   */\n  EmailTemplateRequest: EmailTemplateRequest | undefined;\n\n  /**\n   * <p>The name of the message template. A template name must start with an alphanumeric character and can contain a maximum of 128 characters. The characters can be alphanumeric characters, underscores (_), or hyphens (-). Template names are case sensitive.</p>\n   */\n  TemplateName: string | undefined;\n\n  /**\n   * <p>The unique identifier for the version of the message template to update, retrieve information about, or delete. To retrieve identifiers and other information for all the versions of a template, use the <link  linkend=\"templates-template-name-template-type-versions\">Template Versions</link> resource.</p> <p>If specified, this value must match the identifier for an existing template version. If specified for an update operation, this value must match the identifier for the latest existing version of the template. This restriction helps ensure that race conditions don't occur.</p> <p>If you don't specify a value for this parameter, Amazon Pinpoint does the following:</p> <ul><li><p>For a get operation, retrieves information about the active version of the template.</p></li> <li><p>For an update operation, saves the updates to (overwrites) the latest existing version of the template, if the create-new-version parameter isn't used or is set to false.</p></li> <li><p>For a delete operation, deletes the template, including all versions of the template.</p></li></ul>\n   */\n  Version?: string;\n}\n\nexport namespace UpdateEmailTemplateRequest {\n  export const filterSensitiveLog = (obj: UpdateEmailTemplateRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface UpdateEmailTemplateResponse {\n  /**\n   * <p>Provides information about an API request or response.</p>\n   */\n  MessageBody: MessageBody | undefined;\n}\n\nexport namespace UpdateEmailTemplateResponse {\n  export const filterSensitiveLog = (obj: UpdateEmailTemplateResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface UpdateEndpointRequest {\n  /**\n   * <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>\n   */\n  ApplicationId: string | undefined;\n\n  /**\n   * <p>The unique identifier for the endpoint.</p>\n   */\n  EndpointId: string | undefined;\n\n  /**\n   * <p>Specifies the channel type and other settings for an endpoint.</p>\n   */\n  EndpointRequest: EndpointRequest | undefined;\n}\n\nexport namespace UpdateEndpointRequest {\n  export const filterSensitiveLog = (obj: UpdateEndpointRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface UpdateEndpointResponse {\n  /**\n   * <p>Provides information about an API request or response.</p>\n   */\n  MessageBody: MessageBody | undefined;\n}\n\nexport namespace UpdateEndpointResponse {\n  export const filterSensitiveLog = (obj: UpdateEndpointResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface UpdateEndpointsBatchRequest {\n  /**\n   * <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>\n   */\n  ApplicationId: string | undefined;\n\n  /**\n   * <p>Specifies a batch of endpoints to create or update and the settings and attributes to set or change for each endpoint.</p>\n   */\n  EndpointBatchRequest: EndpointBatchRequest | undefined;\n}\n\nexport namespace UpdateEndpointsBatchRequest {\n  export const filterSensitiveLog = (obj: UpdateEndpointsBatchRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface UpdateEndpointsBatchResponse {\n  /**\n   * <p>Provides information about an API request or response.</p>\n   */\n  MessageBody: MessageBody | undefined;\n}\n\nexport namespace UpdateEndpointsBatchResponse {\n  export const filterSensitiveLog = (obj: UpdateEndpointsBatchResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface UpdateGcmChannelRequest {\n  /**\n   * <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>\n   */\n  ApplicationId: string | undefined;\n\n  /**\n   * <p>Specifies the status and settings of the GCM channel for an application. This channel enables Amazon Pinpoint to send push notifications through the Firebase Cloud Messaging (FCM), formerly Google Cloud Messaging (GCM), service.</p>\n   */\n  GCMChannelRequest: GCMChannelRequest | undefined;\n}\n\nexport namespace UpdateGcmChannelRequest {\n  export const filterSensitiveLog = (obj: UpdateGcmChannelRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface UpdateGcmChannelResponse {\n  /**\n   * <p>Provides information about the status and settings of the GCM channel for an application. The GCM channel enables Amazon Pinpoint to send push notifications through the Firebase Cloud Messaging (FCM), formerly Google Cloud Messaging (GCM), service.</p>\n   */\n  GCMChannelResponse: GCMChannelResponse | undefined;\n}\n\nexport namespace UpdateGcmChannelResponse {\n  export const filterSensitiveLog = (obj: UpdateGcmChannelResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface UpdateJourneyRequest {\n  /**\n   * <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>\n   */\n  ApplicationId: string | undefined;\n\n  /**\n   * <p>The unique identifier for the journey.</p>\n   */\n  JourneyId: string | undefined;\n\n  /**\n   * <p>Specifies the configuration and other settings for a journey.</p>\n   */\n  WriteJourneyRequest: WriteJourneyRequest | undefined;\n}\n\nexport namespace UpdateJourneyRequest {\n  export const filterSensitiveLog = (obj: UpdateJourneyRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface UpdateJourneyResponse {\n  /**\n   * <p>Provides information about the status, configuration, and other settings for a journey.</p>\n   */\n  JourneyResponse: JourneyResponse | undefined;\n}\n\nexport namespace UpdateJourneyResponse {\n  export const filterSensitiveLog = (obj: UpdateJourneyResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface UpdateJourneyStateRequest {\n  /**\n   * <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>\n   */\n  ApplicationId: string | undefined;\n\n  /**\n   * <p>The unique identifier for the journey.</p>\n   */\n  JourneyId: string | undefined;\n\n  /**\n   * <p>Changes the status of a journey.</p>\n   */\n  JourneyStateRequest: JourneyStateRequest | undefined;\n}\n\nexport namespace UpdateJourneyStateRequest {\n  export const filterSensitiveLog = (obj: UpdateJourneyStateRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface UpdateJourneyStateResponse {\n  /**\n   * <p>Provides information about the status, configuration, and other settings for a journey.</p>\n   */\n  JourneyResponse: JourneyResponse | undefined;\n}\n\nexport namespace UpdateJourneyStateResponse {\n  export const filterSensitiveLog = (obj: UpdateJourneyStateResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface UpdatePushTemplateRequest {\n  /**\n   * <p>Specifies whether to save the updates as a new version of the message template. Valid values are: true, save the updates as a new version; and, false, save the updates to (overwrite) the latest existing version of the template.</p> <p>If you don't specify a value for this parameter, Amazon Pinpoint saves the updates to (overwrites) the latest existing version of the template. If you specify a value of true for this parameter, don't specify a value for the version parameter. Otherwise, an error will occur.</p>\n   */\n  CreateNewVersion?: boolean;\n\n  /**\n   * <p>Specifies the content and settings for a message template that can be used in messages that are sent through a push notification channel.</p>\n   */\n  PushNotificationTemplateRequest: PushNotificationTemplateRequest | undefined;\n\n  /**\n   * <p>The name of the message template. A template name must start with an alphanumeric character and can contain a maximum of 128 characters. The characters can be alphanumeric characters, underscores (_), or hyphens (-). Template names are case sensitive.</p>\n   */\n  TemplateName: string | undefined;\n\n  /**\n   * <p>The unique identifier for the version of the message template to update, retrieve information about, or delete. To retrieve identifiers and other information for all the versions of a template, use the <link  linkend=\"templates-template-name-template-type-versions\">Template Versions</link> resource.</p> <p>If specified, this value must match the identifier for an existing template version. If specified for an update operation, this value must match the identifier for the latest existing version of the template. This restriction helps ensure that race conditions don't occur.</p> <p>If you don't specify a value for this parameter, Amazon Pinpoint does the following:</p> <ul><li><p>For a get operation, retrieves information about the active version of the template.</p></li> <li><p>For an update operation, saves the updates to (overwrites) the latest existing version of the template, if the create-new-version parameter isn't used or is set to false.</p></li> <li><p>For a delete operation, deletes the template, including all versions of the template.</p></li></ul>\n   */\n  Version?: string;\n}\n\nexport namespace UpdatePushTemplateRequest {\n  export const filterSensitiveLog = (obj: UpdatePushTemplateRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface UpdatePushTemplateResponse {\n  /**\n   * <p>Provides information about an API request or response.</p>\n   */\n  MessageBody: MessageBody | undefined;\n}\n\nexport namespace UpdatePushTemplateResponse {\n  export const filterSensitiveLog = (obj: UpdatePushTemplateResponse): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Specifies Amazon Pinpoint configuration settings for retrieving and processing recommendation data from a recommender model.</p>\n */\nexport interface UpdateRecommenderConfigurationShape {\n  /**\n   * <p>A map of key-value pairs that defines 1-10 custom endpoint or user attributes, depending on the value for the RecommendationProviderIdType property. Each of these attributes temporarily stores a recommended item that's retrieved from the recommender model and sent to an AWS Lambda function for additional processing. Each attribute can be used as a message variable in a message template.</p> <p>In the map, the key is the name of a custom attribute and the value is a custom display name for that attribute. The display name appears in the <b>Attribute finder</b> of the template editor on the Amazon Pinpoint console. The following restrictions apply to these names:</p> <ul><li><p>An attribute name must start with a letter or number and it can contain up to 50 characters. The characters can be letters, numbers, underscores (_), or hyphens (-). Attribute names are case sensitive and must be unique.</p></li> <li><p>An attribute display name must start with a letter or number and it can contain up to 25 characters. The characters can be letters, numbers, spaces, underscores (_), or hyphens (-).</p></li></ul> <p>This object is required if the configuration invokes an AWS Lambda function (RecommendationTransformerUri) to process recommendation data. Otherwise, don't include this object in your request.</p>\n   */\n  Attributes?: { [key: string]: string };\n\n  /**\n   * <p>A custom description of the configuration for the recommender model. The description can contain up to 128 characters. The characters can be letters, numbers, spaces, or the following symbols: _ ; () , ‐.</p>\n   */\n  Description?: string;\n\n  /**\n   * <p>A custom name of the configuration for the recommender model. The name must start with a letter or number and it can contain up to 128 characters. The characters can be letters, numbers, spaces, underscores (_), or hyphens (-).</p>\n   */\n  Name?: string;\n\n  /**\n   * <p>The type of Amazon Pinpoint ID to associate with unique user IDs in the recommender model. This value enables the model to use attribute and event data that’s specific to a particular endpoint or user in an Amazon Pinpoint application. Valid values are:</p> <ul><li><p>PINPOINT_ENDPOINT_ID - Associate each user in the model with a particular endpoint in Amazon Pinpoint. The data is correlated based on endpoint IDs in Amazon Pinpoint. This is the default value.</p></li> <li><p>PINPOINT_USER_ID - Associate each user in the model with a particular user and endpoint in Amazon Pinpoint. The data is correlated based on user IDs in Amazon Pinpoint. If you specify this value, an endpoint definition in Amazon Pinpoint has to specify both a user ID (UserId) and an endpoint ID. Otherwise, messages won’t be sent to the user's endpoint.</p></li></ul>\n   */\n  RecommendationProviderIdType?: string;\n\n  /**\n   * <p>The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that authorizes Amazon Pinpoint to retrieve recommendation data from the recommender model.</p>\n   */\n  RecommendationProviderRoleArn: string | undefined;\n\n  /**\n   * <p>The Amazon Resource Name (ARN) of the recommender model to retrieve recommendation data from. This value must match the ARN of an Amazon Personalize campaign.</p>\n   */\n  RecommendationProviderUri: string | undefined;\n\n  /**\n   * <p>The name or Amazon Resource Name (ARN) of the AWS Lambda function to invoke for additional processing of recommendation data that's retrieved from the recommender model.</p>\n   */\n  RecommendationTransformerUri?: string;\n\n  /**\n   * <p>A custom display name for the standard endpoint or user attribute (RecommendationItems) that temporarily stores recommended items for each endpoint or user, depending on the value for the RecommendationProviderIdType property. This value is required if the configuration doesn't invoke an AWS Lambda function (RecommendationTransformerUri) to perform additional processing of recommendation data.</p> <p>This name appears in the <b>Attribute finder</b> of the template editor on the Amazon Pinpoint console. The name can contain up to 25 characters. The characters can be letters, numbers, spaces, underscores (_), or hyphens (-). These restrictions don't apply to attribute values.</p>\n   */\n  RecommendationsDisplayName?: string;\n\n  /**\n   * <p>The number of recommended items to retrieve from the model for each endpoint or user, depending on the value for the RecommendationProviderIdType property. This number determines how many recommended items are available for use in message variables. The minimum value is 1. The maximum value is 5. The default value is 5.</p> <p>To use multiple recommended items and custom attributes with message variables, you have to use an AWS Lambda function (RecommendationTransformerUri) to perform additional processing of recommendation data.</p>\n   */\n  RecommendationsPerMessage?: number;\n}\n\nexport namespace UpdateRecommenderConfigurationShape {\n  export const filterSensitiveLog = (obj: UpdateRecommenderConfigurationShape): any => ({\n    ...obj,\n  });\n}\n\nexport interface UpdateRecommenderConfigurationRequest {\n  /**\n   * <p>The unique identifier for the recommender model configuration. This identifier is displayed as the <b>Recommender ID</b> on the Amazon Pinpoint console.</p>\n   */\n  RecommenderId: string | undefined;\n\n  /**\n   * <p>Specifies Amazon Pinpoint configuration settings for retrieving and processing recommendation data from a recommender model.</p>\n   */\n  UpdateRecommenderConfiguration: UpdateRecommenderConfigurationShape | undefined;\n}\n\nexport namespace UpdateRecommenderConfigurationRequest {\n  export const filterSensitiveLog = (obj: UpdateRecommenderConfigurationRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface UpdateRecommenderConfigurationResponse {\n  /**\n   * <p>Provides information about Amazon Pinpoint configuration settings for retrieving and processing data from a recommender model.</p>\n   */\n  RecommenderConfigurationResponse: RecommenderConfigurationResponse | undefined;\n}\n\nexport namespace UpdateRecommenderConfigurationResponse {\n  export const filterSensitiveLog = (obj: UpdateRecommenderConfigurationResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface UpdateSegmentRequest {\n  /**\n   * <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>\n   */\n  ApplicationId: string | undefined;\n\n  /**\n   * <p>The unique identifier for the segment.</p>\n   */\n  SegmentId: string | undefined;\n\n  /**\n   * <p>Specifies the configuration, dimension, and other settings for a segment. A WriteSegmentRequest object can include a Dimensions object or a SegmentGroups object, but not both.</p>\n   */\n  WriteSegmentRequest: WriteSegmentRequest | undefined;\n}\n\nexport namespace UpdateSegmentRequest {\n  export const filterSensitiveLog = (obj: UpdateSegmentRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface UpdateSegmentResponse {\n  /**\n   * <p>Provides information about the configuration, dimension, and other settings for a segment.</p>\n   */\n  SegmentResponse: SegmentResponse | undefined;\n}\n\nexport namespace UpdateSegmentResponse {\n  export const filterSensitiveLog = (obj: UpdateSegmentResponse): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Specifies the status and settings of the SMS channel for an application.</p>\n */\nexport interface SMSChannelRequest {\n  /**\n   * <p>Specifies whether to enable the SMS channel for the application.</p>\n   */\n  Enabled?: boolean;\n\n  /**\n   * <p>The identity that you want to display on recipients' devices when they receive messages from the SMS channel.</p>\n   */\n  SenderId?: string;\n\n  /**\n   * <p>The registered short code that you want to use when you send messages through the SMS channel.</p>\n   */\n  ShortCode?: string;\n}\n\nexport namespace SMSChannelRequest {\n  export const filterSensitiveLog = (obj: SMSChannelRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface UpdateSmsChannelRequest {\n  /**\n   * <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>\n   */\n  ApplicationId: string | undefined;\n\n  /**\n   * <p>Specifies the status and settings of the SMS channel for an application.</p>\n   */\n  SMSChannelRequest: SMSChannelRequest | undefined;\n}\n\nexport namespace UpdateSmsChannelRequest {\n  export const filterSensitiveLog = (obj: UpdateSmsChannelRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface UpdateSmsChannelResponse {\n  /**\n   * <p>Provides information about the status and settings of the SMS channel for an application.</p>\n   */\n  SMSChannelResponse: SMSChannelResponse | undefined;\n}\n\nexport namespace UpdateSmsChannelResponse {\n  export const filterSensitiveLog = (obj: UpdateSmsChannelResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface UpdateSmsTemplateRequest {\n  /**\n   * <p>Specifies whether to save the updates as a new version of the message template. Valid values are: true, save the updates as a new version; and, false, save the updates to (overwrite) the latest existing version of the template.</p> <p>If you don't specify a value for this parameter, Amazon Pinpoint saves the updates to (overwrites) the latest existing version of the template. If you specify a value of true for this parameter, don't specify a value for the version parameter. Otherwise, an error will occur.</p>\n   */\n  CreateNewVersion?: boolean;\n\n  /**\n   * <p>Specifies the content and settings for a message template that can be used in text messages that are sent through the SMS channel.</p>\n   */\n  SMSTemplateRequest: SMSTemplateRequest | undefined;\n\n  /**\n   * <p>The name of the message template. A template name must start with an alphanumeric character and can contain a maximum of 128 characters. The characters can be alphanumeric characters, underscores (_), or hyphens (-). Template names are case sensitive.</p>\n   */\n  TemplateName: string | undefined;\n\n  /**\n   * <p>The unique identifier for the version of the message template to update, retrieve information about, or delete. To retrieve identifiers and other information for all the versions of a template, use the <link  linkend=\"templates-template-name-template-type-versions\">Template Versions</link> resource.</p> <p>If specified, this value must match the identifier for an existing template version. If specified for an update operation, this value must match the identifier for the latest existing version of the template. This restriction helps ensure that race conditions don't occur.</p> <p>If you don't specify a value for this parameter, Amazon Pinpoint does the following:</p> <ul><li><p>For a get operation, retrieves information about the active version of the template.</p></li> <li><p>For an update operation, saves the updates to (overwrites) the latest existing version of the template, if the create-new-version parameter isn't used or is set to false.</p></li> <li><p>For a delete operation, deletes the template, including all versions of the template.</p></li></ul>\n   */\n  Version?: string;\n}\n\nexport namespace UpdateSmsTemplateRequest {\n  export const filterSensitiveLog = (obj: UpdateSmsTemplateRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface UpdateSmsTemplateResponse {\n  /**\n   * <p>Provides information about an API request or response.</p>\n   */\n  MessageBody: MessageBody | undefined;\n}\n\nexport namespace UpdateSmsTemplateResponse {\n  export const filterSensitiveLog = (obj: UpdateSmsTemplateResponse): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Specifies which version of a message template to use as the active version of the template.</p>\n */\nexport interface TemplateActiveVersionRequest {\n  /**\n   * <p>The version of the message template to use as the active version of the template. Valid values are: latest, for the most recent version of the template; or, the unique identifier for any existing version of the template. If you specify an identifier, the value must match the identifier for an existing template version. To retrieve a list of versions and version identifiers for a template, use the <link  linkend=\"templates-template-name-template-type-versions\">Template Versions</link> resource.</p>\n   */\n  Version?: string;\n}\n\nexport namespace TemplateActiveVersionRequest {\n  export const filterSensitiveLog = (obj: TemplateActiveVersionRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface UpdateTemplateActiveVersionRequest {\n  /**\n   * <p>Specifies which version of a message template to use as the active version of the template.</p>\n   */\n  TemplateActiveVersionRequest: TemplateActiveVersionRequest | undefined;\n\n  /**\n   * <p>The name of the message template. A template name must start with an alphanumeric character and can contain a maximum of 128 characters. The characters can be alphanumeric characters, underscores (_), or hyphens (-). Template names are case sensitive.</p>\n   */\n  TemplateName: string | undefined;\n\n  /**\n   * <p>The type of channel that the message template is designed for. Valid values are: EMAIL, PUSH, SMS, and VOICE.</p>\n   */\n  TemplateType: string | undefined;\n}\n\nexport namespace UpdateTemplateActiveVersionRequest {\n  export const filterSensitiveLog = (obj: UpdateTemplateActiveVersionRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface UpdateTemplateActiveVersionResponse {\n  /**\n   * <p>Provides information about an API request or response.</p>\n   */\n  MessageBody: MessageBody | undefined;\n}\n\nexport namespace UpdateTemplateActiveVersionResponse {\n  export const filterSensitiveLog = (obj: UpdateTemplateActiveVersionResponse): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Specifies the status and settings of the voice channel for an application.</p>\n */\nexport interface VoiceChannelRequest {\n  /**\n   * <p>Specifies whether to enable the voice channel for the application.</p>\n   */\n  Enabled?: boolean;\n}\n\nexport namespace VoiceChannelRequest {\n  export const filterSensitiveLog = (obj: VoiceChannelRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface UpdateVoiceChannelRequest {\n  /**\n   * <p>The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</p>\n   */\n  ApplicationId: string | undefined;\n\n  /**\n   * <p>Specifies the status and settings of the voice channel for an application.</p>\n   */\n  VoiceChannelRequest: VoiceChannelRequest | undefined;\n}\n\nexport namespace UpdateVoiceChannelRequest {\n  export const filterSensitiveLog = (obj: UpdateVoiceChannelRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface UpdateVoiceChannelResponse {\n  /**\n   * <p>Provides information about the status and settings of the voice channel for an application.</p>\n   */\n  VoiceChannelResponse: VoiceChannelResponse | undefined;\n}\n\nexport namespace UpdateVoiceChannelResponse {\n  export const filterSensitiveLog = (obj: UpdateVoiceChannelResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface UpdateVoiceTemplateRequest {\n  /**\n   * <p>Specifies whether to save the updates as a new version of the message template. Valid values are: true, save the updates as a new version; and, false, save the updates to (overwrite) the latest existing version of the template.</p> <p>If you don't specify a value for this parameter, Amazon Pinpoint saves the updates to (overwrites) the latest existing version of the template. If you specify a value of true for this parameter, don't specify a value for the version parameter. Otherwise, an error will occur.</p>\n   */\n  CreateNewVersion?: boolean;\n\n  /**\n   * <p>The name of the message template. A template name must start with an alphanumeric character and can contain a maximum of 128 characters. The characters can be alphanumeric characters, underscores (_), or hyphens (-). Template names are case sensitive.</p>\n   */\n  TemplateName: string | undefined;\n\n  /**\n   * <p>The unique identifier for the version of the message template to update, retrieve information about, or delete. To retrieve identifiers and other information for all the versions of a template, use the <link  linkend=\"templates-template-name-template-type-versions\">Template Versions</link> resource.</p> <p>If specified, this value must match the identifier for an existing template version. If specified for an update operation, this value must match the identifier for the latest existing version of the template. This restriction helps ensure that race conditions don't occur.</p> <p>If you don't specify a value for this parameter, Amazon Pinpoint does the following:</p> <ul><li><p>For a get operation, retrieves information about the active version of the template.</p></li> <li><p>For an update operation, saves the updates to (overwrites) the latest existing version of the template, if the create-new-version parameter isn't used or is set to false.</p></li> <li><p>For a delete operation, deletes the template, including all versions of the template.</p></li></ul>\n   */\n  Version?: string;\n\n  /**\n   * <p>Specifies the content and settings for a message template that can be used in messages that are sent through the voice channel.</p>\n   */\n  VoiceTemplateRequest: VoiceTemplateRequest | undefined;\n}\n\nexport namespace UpdateVoiceTemplateRequest {\n  export const filterSensitiveLog = (obj: UpdateVoiceTemplateRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface UpdateVoiceTemplateResponse {\n  /**\n   * <p>Provides information about an API request or response.</p>\n   */\n  MessageBody: MessageBody | undefined;\n}\n\nexport namespace UpdateVoiceTemplateResponse {\n  export const filterSensitiveLog = (obj: UpdateVoiceTemplateResponse): any => ({\n    ...obj,\n  });\n}\n","import { CreateAppCommandInput, CreateAppCommandOutput } from \"../commands/CreateAppCommand\";\nimport { CreateCampaignCommandInput, CreateCampaignCommandOutput } from \"../commands/CreateCampaignCommand\";\nimport {\n  CreateEmailTemplateCommandInput,\n  CreateEmailTemplateCommandOutput,\n} from \"../commands/CreateEmailTemplateCommand\";\nimport { CreateExportJobCommandInput, CreateExportJobCommandOutput } from \"../commands/CreateExportJobCommand\";\nimport { CreateImportJobCommandInput, CreateImportJobCommandOutput } from \"../commands/CreateImportJobCommand\";\nimport { CreateJourneyCommandInput, CreateJourneyCommandOutput } from \"../commands/CreateJourneyCommand\";\nimport { CreatePushTemplateCommandInput, CreatePushTemplateCommandOutput } from \"../commands/CreatePushTemplateCommand\";\nimport {\n  CreateRecommenderConfigurationCommandInput,\n  CreateRecommenderConfigurationCommandOutput,\n} from \"../commands/CreateRecommenderConfigurationCommand\";\nimport { CreateSegmentCommandInput, CreateSegmentCommandOutput } from \"../commands/CreateSegmentCommand\";\nimport { CreateSmsTemplateCommandInput, CreateSmsTemplateCommandOutput } from \"../commands/CreateSmsTemplateCommand\";\nimport {\n  CreateVoiceTemplateCommandInput,\n  CreateVoiceTemplateCommandOutput,\n} from \"../commands/CreateVoiceTemplateCommand\";\nimport { DeleteAdmChannelCommandInput, DeleteAdmChannelCommandOutput } from \"../commands/DeleteAdmChannelCommand\";\nimport { DeleteApnsChannelCommandInput, DeleteApnsChannelCommandOutput } from \"../commands/DeleteApnsChannelCommand\";\nimport {\n  DeleteApnsSandboxChannelCommandInput,\n  DeleteApnsSandboxChannelCommandOutput,\n} from \"../commands/DeleteApnsSandboxChannelCommand\";\nimport {\n  DeleteApnsVoipChannelCommandInput,\n  DeleteApnsVoipChannelCommandOutput,\n} from \"../commands/DeleteApnsVoipChannelCommand\";\nimport {\n  DeleteApnsVoipSandboxChannelCommandInput,\n  DeleteApnsVoipSandboxChannelCommandOutput,\n} from \"../commands/DeleteApnsVoipSandboxChannelCommand\";\nimport { DeleteAppCommandInput, DeleteAppCommandOutput } from \"../commands/DeleteAppCommand\";\nimport { DeleteBaiduChannelCommandInput, DeleteBaiduChannelCommandOutput } from \"../commands/DeleteBaiduChannelCommand\";\nimport { DeleteCampaignCommandInput, DeleteCampaignCommandOutput } from \"../commands/DeleteCampaignCommand\";\nimport { DeleteEmailChannelCommandInput, DeleteEmailChannelCommandOutput } from \"../commands/DeleteEmailChannelCommand\";\nimport {\n  DeleteEmailTemplateCommandInput,\n  DeleteEmailTemplateCommandOutput,\n} from \"../commands/DeleteEmailTemplateCommand\";\nimport { DeleteEndpointCommandInput, DeleteEndpointCommandOutput } from \"../commands/DeleteEndpointCommand\";\nimport { DeleteEventStreamCommandInput, DeleteEventStreamCommandOutput } from \"../commands/DeleteEventStreamCommand\";\nimport { DeleteGcmChannelCommandInput, DeleteGcmChannelCommandOutput } from \"../commands/DeleteGcmChannelCommand\";\nimport { DeleteJourneyCommandInput, DeleteJourneyCommandOutput } from \"../commands/DeleteJourneyCommand\";\nimport { DeletePushTemplateCommandInput, DeletePushTemplateCommandOutput } from \"../commands/DeletePushTemplateCommand\";\nimport {\n  DeleteRecommenderConfigurationCommandInput,\n  DeleteRecommenderConfigurationCommandOutput,\n} from \"../commands/DeleteRecommenderConfigurationCommand\";\nimport { DeleteSegmentCommandInput, DeleteSegmentCommandOutput } from \"../commands/DeleteSegmentCommand\";\nimport { DeleteSmsChannelCommandInput, DeleteSmsChannelCommandOutput } from \"../commands/DeleteSmsChannelCommand\";\nimport { DeleteSmsTemplateCommandInput, DeleteSmsTemplateCommandOutput } from \"../commands/DeleteSmsTemplateCommand\";\nimport {\n  DeleteUserEndpointsCommandInput,\n  DeleteUserEndpointsCommandOutput,\n} from \"../commands/DeleteUserEndpointsCommand\";\nimport { DeleteVoiceChannelCommandInput, DeleteVoiceChannelCommandOutput } from \"../commands/DeleteVoiceChannelCommand\";\nimport {\n  DeleteVoiceTemplateCommandInput,\n  DeleteVoiceTemplateCommandOutput,\n} from \"../commands/DeleteVoiceTemplateCommand\";\nimport { GetAdmChannelCommandInput, GetAdmChannelCommandOutput } from \"../commands/GetAdmChannelCommand\";\nimport { GetApnsChannelCommandInput, GetApnsChannelCommandOutput } from \"../commands/GetApnsChannelCommand\";\nimport {\n  GetApnsSandboxChannelCommandInput,\n  GetApnsSandboxChannelCommandOutput,\n} from \"../commands/GetApnsSandboxChannelCommand\";\nimport { GetApnsVoipChannelCommandInput, GetApnsVoipChannelCommandOutput } from \"../commands/GetApnsVoipChannelCommand\";\nimport {\n  GetApnsVoipSandboxChannelCommandInput,\n  GetApnsVoipSandboxChannelCommandOutput,\n} from \"../commands/GetApnsVoipSandboxChannelCommand\";\nimport { GetAppCommandInput, GetAppCommandOutput } from \"../commands/GetAppCommand\";\nimport {\n  GetApplicationDateRangeKpiCommandInput,\n  GetApplicationDateRangeKpiCommandOutput,\n} from \"../commands/GetApplicationDateRangeKpiCommand\";\nimport {\n  GetApplicationSettingsCommandInput,\n  GetApplicationSettingsCommandOutput,\n} from \"../commands/GetApplicationSettingsCommand\";\nimport { GetAppsCommandInput, GetAppsCommandOutput } from \"../commands/GetAppsCommand\";\nimport { GetBaiduChannelCommandInput, GetBaiduChannelCommandOutput } from \"../commands/GetBaiduChannelCommand\";\nimport {\n  GetCampaignActivitiesCommandInput,\n  GetCampaignActivitiesCommandOutput,\n} from \"../commands/GetCampaignActivitiesCommand\";\nimport { GetCampaignCommandInput, GetCampaignCommandOutput } from \"../commands/GetCampaignCommand\";\nimport {\n  GetCampaignDateRangeKpiCommandInput,\n  GetCampaignDateRangeKpiCommandOutput,\n} from \"../commands/GetCampaignDateRangeKpiCommand\";\nimport { GetCampaignVersionCommandInput, GetCampaignVersionCommandOutput } from \"../commands/GetCampaignVersionCommand\";\nimport {\n  GetCampaignVersionsCommandInput,\n  GetCampaignVersionsCommandOutput,\n} from \"../commands/GetCampaignVersionsCommand\";\nimport { GetCampaignsCommandInput, GetCampaignsCommandOutput } from \"../commands/GetCampaignsCommand\";\nimport { GetChannelsCommandInput, GetChannelsCommandOutput } from \"../commands/GetChannelsCommand\";\nimport { GetEmailChannelCommandInput, GetEmailChannelCommandOutput } from \"../commands/GetEmailChannelCommand\";\nimport { GetEmailTemplateCommandInput, GetEmailTemplateCommandOutput } from \"../commands/GetEmailTemplateCommand\";\nimport { GetEndpointCommandInput, GetEndpointCommandOutput } from \"../commands/GetEndpointCommand\";\nimport { GetEventStreamCommandInput, GetEventStreamCommandOutput } from \"../commands/GetEventStreamCommand\";\nimport { GetExportJobCommandInput, GetExportJobCommandOutput } from \"../commands/GetExportJobCommand\";\nimport { GetExportJobsCommandInput, GetExportJobsCommandOutput } from \"../commands/GetExportJobsCommand\";\nimport { GetGcmChannelCommandInput, GetGcmChannelCommandOutput } from \"../commands/GetGcmChannelCommand\";\nimport { GetImportJobCommandInput, GetImportJobCommandOutput } from \"../commands/GetImportJobCommand\";\nimport { GetImportJobsCommandInput, GetImportJobsCommandOutput } from \"../commands/GetImportJobsCommand\";\nimport { GetJourneyCommandInput, GetJourneyCommandOutput } from \"../commands/GetJourneyCommand\";\nimport {\n  GetJourneyDateRangeKpiCommandInput,\n  GetJourneyDateRangeKpiCommandOutput,\n} from \"../commands/GetJourneyDateRangeKpiCommand\";\nimport {\n  GetJourneyExecutionActivityMetricsCommandInput,\n  GetJourneyExecutionActivityMetricsCommandOutput,\n} from \"../commands/GetJourneyExecutionActivityMetricsCommand\";\nimport {\n  GetJourneyExecutionMetricsCommandInput,\n  GetJourneyExecutionMetricsCommandOutput,\n} from \"../commands/GetJourneyExecutionMetricsCommand\";\nimport { GetPushTemplateCommandInput, GetPushTemplateCommandOutput } from \"../commands/GetPushTemplateCommand\";\nimport {\n  GetRecommenderConfigurationCommandInput,\n  GetRecommenderConfigurationCommandOutput,\n} from \"../commands/GetRecommenderConfigurationCommand\";\nimport {\n  GetRecommenderConfigurationsCommandInput,\n  GetRecommenderConfigurationsCommandOutput,\n} from \"../commands/GetRecommenderConfigurationsCommand\";\nimport { GetSegmentCommandInput, GetSegmentCommandOutput } from \"../commands/GetSegmentCommand\";\nimport {\n  GetSegmentExportJobsCommandInput,\n  GetSegmentExportJobsCommandOutput,\n} from \"../commands/GetSegmentExportJobsCommand\";\nimport {\n  GetSegmentImportJobsCommandInput,\n  GetSegmentImportJobsCommandOutput,\n} from \"../commands/GetSegmentImportJobsCommand\";\nimport { GetSegmentVersionCommandInput, GetSegmentVersionCommandOutput } from \"../commands/GetSegmentVersionCommand\";\nimport { GetSegmentVersionsCommandInput, GetSegmentVersionsCommandOutput } from \"../commands/GetSegmentVersionsCommand\";\nimport { GetSegmentsCommandInput, GetSegmentsCommandOutput } from \"../commands/GetSegmentsCommand\";\nimport { GetSmsChannelCommandInput, GetSmsChannelCommandOutput } from \"../commands/GetSmsChannelCommand\";\nimport { GetSmsTemplateCommandInput, GetSmsTemplateCommandOutput } from \"../commands/GetSmsTemplateCommand\";\nimport { GetUserEndpointsCommandInput, GetUserEndpointsCommandOutput } from \"../commands/GetUserEndpointsCommand\";\nimport { GetVoiceChannelCommandInput, GetVoiceChannelCommandOutput } from \"../commands/GetVoiceChannelCommand\";\nimport { GetVoiceTemplateCommandInput, GetVoiceTemplateCommandOutput } from \"../commands/GetVoiceTemplateCommand\";\nimport { ListJourneysCommandInput, ListJourneysCommandOutput } from \"../commands/ListJourneysCommand\";\nimport {\n  ListTagsForResourceCommandInput,\n  ListTagsForResourceCommandOutput,\n} from \"../commands/ListTagsForResourceCommand\";\nimport {\n  ListTemplateVersionsCommandInput,\n  ListTemplateVersionsCommandOutput,\n} from \"../commands/ListTemplateVersionsCommand\";\nimport { ListTemplatesCommandInput, ListTemplatesCommandOutput } from \"../commands/ListTemplatesCommand\";\nimport {\n  PhoneNumberValidateCommandInput,\n  PhoneNumberValidateCommandOutput,\n} from \"../commands/PhoneNumberValidateCommand\";\nimport { PutEventStreamCommandInput, PutEventStreamCommandOutput } from \"../commands/PutEventStreamCommand\";\nimport { PutEventsCommandInput, PutEventsCommandOutput } from \"../commands/PutEventsCommand\";\nimport { RemoveAttributesCommandInput, RemoveAttributesCommandOutput } from \"../commands/RemoveAttributesCommand\";\nimport { SendMessagesCommandInput, SendMessagesCommandOutput } from \"../commands/SendMessagesCommand\";\nimport { SendUsersMessagesCommandInput, SendUsersMessagesCommandOutput } from \"../commands/SendUsersMessagesCommand\";\nimport { TagResourceCommandInput, TagResourceCommandOutput } from \"../commands/TagResourceCommand\";\nimport { UntagResourceCommandInput, UntagResourceCommandOutput } from \"../commands/UntagResourceCommand\";\nimport { UpdateAdmChannelCommandInput, UpdateAdmChannelCommandOutput } from \"../commands/UpdateAdmChannelCommand\";\nimport { UpdateApnsChannelCommandInput, UpdateApnsChannelCommandOutput } from \"../commands/UpdateApnsChannelCommand\";\nimport {\n  UpdateApnsSandboxChannelCommandInput,\n  UpdateApnsSandboxChannelCommandOutput,\n} from \"../commands/UpdateApnsSandboxChannelCommand\";\nimport {\n  UpdateApnsVoipChannelCommandInput,\n  UpdateApnsVoipChannelCommandOutput,\n} from \"../commands/UpdateApnsVoipChannelCommand\";\nimport {\n  UpdateApnsVoipSandboxChannelCommandInput,\n  UpdateApnsVoipSandboxChannelCommandOutput,\n} from \"../commands/UpdateApnsVoipSandboxChannelCommand\";\nimport {\n  UpdateApplicationSettingsCommandInput,\n  UpdateApplicationSettingsCommandOutput,\n} from \"../commands/UpdateApplicationSettingsCommand\";\nimport { UpdateBaiduChannelCommandInput, UpdateBaiduChannelCommandOutput } from \"../commands/UpdateBaiduChannelCommand\";\nimport { UpdateCampaignCommandInput, UpdateCampaignCommandOutput } from \"../commands/UpdateCampaignCommand\";\nimport { UpdateEmailChannelCommandInput, UpdateEmailChannelCommandOutput } from \"../commands/UpdateEmailChannelCommand\";\nimport {\n  UpdateEmailTemplateCommandInput,\n  UpdateEmailTemplateCommandOutput,\n} from \"../commands/UpdateEmailTemplateCommand\";\nimport { UpdateEndpointCommandInput, UpdateEndpointCommandOutput } from \"../commands/UpdateEndpointCommand\";\nimport {\n  UpdateEndpointsBatchCommandInput,\n  UpdateEndpointsBatchCommandOutput,\n} from \"../commands/UpdateEndpointsBatchCommand\";\nimport { UpdateGcmChannelCommandInput, UpdateGcmChannelCommandOutput } from \"../commands/UpdateGcmChannelCommand\";\nimport { UpdateJourneyCommandInput, UpdateJourneyCommandOutput } from \"../commands/UpdateJourneyCommand\";\nimport { UpdateJourneyStateCommandInput, UpdateJourneyStateCommandOutput } from \"../commands/UpdateJourneyStateCommand\";\nimport { UpdatePushTemplateCommandInput, UpdatePushTemplateCommandOutput } from \"../commands/UpdatePushTemplateCommand\";\nimport {\n  UpdateRecommenderConfigurationCommandInput,\n  UpdateRecommenderConfigurationCommandOutput,\n} from \"../commands/UpdateRecommenderConfigurationCommand\";\nimport { UpdateSegmentCommandInput, UpdateSegmentCommandOutput } from \"../commands/UpdateSegmentCommand\";\nimport { UpdateSmsChannelCommandInput, UpdateSmsChannelCommandOutput } from \"../commands/UpdateSmsChannelCommand\";\nimport { UpdateSmsTemplateCommandInput, UpdateSmsTemplateCommandOutput } from \"../commands/UpdateSmsTemplateCommand\";\nimport {\n  UpdateTemplateActiveVersionCommandInput,\n  UpdateTemplateActiveVersionCommandOutput,\n} from \"../commands/UpdateTemplateActiveVersionCommand\";\nimport { UpdateVoiceChannelCommandInput, UpdateVoiceChannelCommandOutput } from \"../commands/UpdateVoiceChannelCommand\";\nimport {\n  UpdateVoiceTemplateCommandInput,\n  UpdateVoiceTemplateCommandOutput,\n} from \"../commands/UpdateVoiceTemplateCommand\";\nimport {\n  ADMChannelRequest,\n  ADMChannelResponse,\n  ADMMessage,\n  APNSChannelRequest,\n  APNSChannelResponse,\n  APNSMessage,\n  APNSPushNotificationTemplate,\n  APNSSandboxChannelRequest,\n  APNSSandboxChannelResponse,\n  APNSVoipChannelRequest,\n  APNSVoipChannelResponse,\n  APNSVoipSandboxChannelRequest,\n  APNSVoipSandboxChannelResponse,\n  ActivitiesResponse,\n  Activity,\n  ActivityResponse,\n  AddressConfiguration,\n  AndroidPushNotificationTemplate,\n  ApplicationDateRangeKpiResponse,\n  ApplicationResponse,\n  ApplicationSettingsResource,\n  ApplicationsResponse,\n  AttributeDimension,\n  AttributesResource,\n  BadRequestException,\n  BaiduChannelRequest,\n  BaiduChannelResponse,\n  BaiduMessage,\n  BaseKpiResult,\n  CampaignCustomMessage,\n  CampaignDateRangeKpiResponse,\n  CampaignEmailMessage,\n  CampaignEventFilter,\n  CampaignHook,\n  CampaignLimits,\n  CampaignResponse,\n  CampaignSmsMessage,\n  CampaignState,\n  CampaignsResponse,\n  ChannelResponse,\n  ChannelsResponse,\n  Condition,\n  ConditionalSplitActivity,\n  ConflictException,\n  CreateApplicationRequest,\n  CreateRecommenderConfigurationShape,\n  CreateTemplateMessageBody,\n  CustomDeliveryConfiguration,\n  CustomMessageActivity,\n  DefaultMessage,\n  DefaultPushNotificationMessage,\n  DefaultPushNotificationTemplate,\n  DirectMessageConfiguration,\n  EmailChannelRequest,\n  EmailChannelResponse,\n  EmailMessage,\n  EmailMessageActivity,\n  EmailTemplateRequest,\n  EmailTemplateResponse,\n  EndpointBatchItem,\n  EndpointBatchRequest,\n  EndpointDemographic,\n  EndpointItemResponse,\n  EndpointLocation,\n  EndpointMessageResult,\n  EndpointRequest,\n  EndpointResponse,\n  EndpointSendConfiguration,\n  EndpointUser,\n  EndpointsResponse,\n  Event,\n  EventCondition,\n  EventDimensions,\n  EventFilter,\n  EventItemResponse,\n  EventStartCondition,\n  EventStream,\n  EventsBatch,\n  EventsRequest,\n  EventsResponse,\n  ExportJobRequest,\n  ExportJobResource,\n  ExportJobResponse,\n  ExportJobsResponse,\n  ForbiddenException,\n  GCMChannelRequest,\n  GCMChannelResponse,\n  GCMMessage,\n  GPSCoordinates,\n  GPSPointDimension,\n  HoldoutActivity,\n  ImportJobRequest,\n  ImportJobResource,\n  ImportJobResponse,\n  ImportJobsResponse,\n  InternalServerErrorException,\n  ItemResponse,\n  JourneyCustomMessage,\n  JourneyEmailMessage,\n  JourneyLimits,\n  JourneyPushMessage,\n  JourneyResponse,\n  JourneySMSMessage,\n  JourneySchedule,\n  Message,\n  MessageBody,\n  MessageConfiguration,\n  MethodNotAllowedException,\n  MetricDimension,\n  MultiConditionalBranch,\n  MultiConditionalSplitActivity,\n  NotFoundException,\n  PayloadTooLargeException,\n  PublicEndpoint,\n  PushMessageActivity,\n  PushNotificationTemplateRequest,\n  QuietTime,\n  RandomSplitActivity,\n  RandomSplitEntry,\n  RawEmail,\n  RecencyDimension,\n  RecommenderConfigurationResponse,\n  ResultRow,\n  ResultRowValue,\n  SMSChannelResponse,\n  SMSMessage,\n  SMSMessageActivity,\n  SMSTemplateRequest,\n  Schedule,\n  SegmentBehaviors,\n  SegmentCondition,\n  SegmentDemographics,\n  SegmentDimensions,\n  SegmentGroup,\n  SegmentGroupList,\n  SegmentImportResource,\n  SegmentLocation,\n  SegmentReference,\n  SegmentResponse,\n  Session,\n  SetDimension,\n  SimpleCondition,\n  SimpleEmail,\n  SimpleEmailPart,\n  StartCondition,\n  Template,\n  TemplateConfiguration,\n  TooManyRequestsException,\n  TreatmentResource,\n  VoiceChannelResponse,\n  VoiceMessage,\n  VoiceTemplateRequest,\n  WaitActivity,\n  WaitTime,\n  WriteCampaignRequest,\n  WriteJourneyRequest,\n  WriteSegmentRequest,\n  WriteTreatmentResource,\n  __EndpointTypesElement,\n} from \"../models/models_0\";\nimport {\n  JourneyDateRangeKpiResponse,\n  JourneyExecutionActivityMetricsResponse,\n  JourneyExecutionMetricsResponse,\n  JourneyStateRequest,\n  JourneysResponse,\n  ListRecommenderConfigurationsResponse,\n  MessageRequest,\n  MessageResponse,\n  MessageResult,\n  NumberValidateRequest,\n  NumberValidateResponse,\n  PushNotificationTemplateResponse,\n  SMSChannelRequest,\n  SMSTemplateResponse,\n  SegmentsResponse,\n  SendUsersMessageRequest,\n  SendUsersMessageResponse,\n  TagsModel,\n  TemplateActiveVersionRequest,\n  TemplateResponse,\n  TemplateVersionResponse,\n  TemplateVersionsResponse,\n  TemplatesResponse,\n  UpdateAttributesRequest,\n  UpdateRecommenderConfigurationShape,\n  VoiceChannelRequest,\n  VoiceTemplateResponse,\n  WriteApplicationSettingsRequest,\n  WriteEventStream,\n} from \"../models/models_1\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport {\n  SmithyException as __SmithyException,\n  extendedEncodeURIComponent as __extendedEncodeURIComponent,\n} from \"@aws-sdk/smithy-client\";\nimport {\n  Endpoint as __Endpoint,\n  MetadataBearer as __MetadataBearer,\n  ResponseMetadata as __ResponseMetadata,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport const serializeAws_restJson1CreateAppCommand = async (\n  input: CreateAppCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps\";\n  let body: any;\n  if (input.CreateApplicationRequest !== undefined) {\n    body = serializeAws_restJson1CreateApplicationRequest(input.CreateApplicationRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1CreateCampaignCommand = async (\n  input: CreateCampaignCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/campaigns\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  if (input.WriteCampaignRequest !== undefined) {\n    body = serializeAws_restJson1WriteCampaignRequest(input.WriteCampaignRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1CreateEmailTemplateCommand = async (\n  input: CreateEmailTemplateCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/templates/{TemplateName}/email\";\n  if (input.TemplateName !== undefined) {\n    const labelValue: string = input.TemplateName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n  }\n  let body: any;\n  if (input.EmailTemplateRequest !== undefined) {\n    body = serializeAws_restJson1EmailTemplateRequest(input.EmailTemplateRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1CreateExportJobCommand = async (\n  input: CreateExportJobCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/jobs/export\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  if (input.ExportJobRequest !== undefined) {\n    body = serializeAws_restJson1ExportJobRequest(input.ExportJobRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1CreateImportJobCommand = async (\n  input: CreateImportJobCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/jobs/import\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  if (input.ImportJobRequest !== undefined) {\n    body = serializeAws_restJson1ImportJobRequest(input.ImportJobRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1CreateJourneyCommand = async (\n  input: CreateJourneyCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/journeys\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  if (input.WriteJourneyRequest !== undefined) {\n    body = serializeAws_restJson1WriteJourneyRequest(input.WriteJourneyRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1CreatePushTemplateCommand = async (\n  input: CreatePushTemplateCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/templates/{TemplateName}/push\";\n  if (input.TemplateName !== undefined) {\n    const labelValue: string = input.TemplateName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n  }\n  let body: any;\n  if (input.PushNotificationTemplateRequest !== undefined) {\n    body = serializeAws_restJson1PushNotificationTemplateRequest(input.PushNotificationTemplateRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1CreateRecommenderConfigurationCommand = async (\n  input: CreateRecommenderConfigurationCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/recommenders\";\n  let body: any;\n  if (input.CreateRecommenderConfiguration !== undefined) {\n    body = serializeAws_restJson1CreateRecommenderConfigurationShape(input.CreateRecommenderConfiguration, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1CreateSegmentCommand = async (\n  input: CreateSegmentCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/segments\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  if (input.WriteSegmentRequest !== undefined) {\n    body = serializeAws_restJson1WriteSegmentRequest(input.WriteSegmentRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1CreateSmsTemplateCommand = async (\n  input: CreateSmsTemplateCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/templates/{TemplateName}/sms\";\n  if (input.TemplateName !== undefined) {\n    const labelValue: string = input.TemplateName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n  }\n  let body: any;\n  if (input.SMSTemplateRequest !== undefined) {\n    body = serializeAws_restJson1SMSTemplateRequest(input.SMSTemplateRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1CreateVoiceTemplateCommand = async (\n  input: CreateVoiceTemplateCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/templates/{TemplateName}/voice\";\n  if (input.TemplateName !== undefined) {\n    const labelValue: string = input.TemplateName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n  }\n  let body: any;\n  if (input.VoiceTemplateRequest !== undefined) {\n    body = serializeAws_restJson1VoiceTemplateRequest(input.VoiceTemplateRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1DeleteAdmChannelCommand = async (\n  input: DeleteAdmChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/adm\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1DeleteApnsChannelCommand = async (\n  input: DeleteApnsChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1DeleteApnsSandboxChannelCommand = async (\n  input: DeleteApnsSandboxChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_sandbox\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1DeleteApnsVoipChannelCommand = async (\n  input: DeleteApnsVoipChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_voip\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1DeleteApnsVoipSandboxChannelCommand = async (\n  input: DeleteApnsVoipSandboxChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_voip_sandbox\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1DeleteAppCommand = async (\n  input: DeleteAppCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1DeleteBaiduChannelCommand = async (\n  input: DeleteBaiduChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/baidu\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1DeleteCampaignCommand = async (\n  input: DeleteCampaignCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/campaigns/{CampaignId}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.CampaignId !== undefined) {\n    const labelValue: string = input.CampaignId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: CampaignId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{CampaignId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: CampaignId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1DeleteEmailChannelCommand = async (\n  input: DeleteEmailChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/email\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1DeleteEmailTemplateCommand = async (\n  input: DeleteEmailTemplateCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/templates/{TemplateName}/email\";\n  if (input.TemplateName !== undefined) {\n    const labelValue: string = input.TemplateName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n  }\n  const query: any = {\n    ...(input.Version !== undefined && { version: input.Version }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1DeleteEndpointCommand = async (\n  input: DeleteEndpointCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/endpoints/{EndpointId}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.EndpointId !== undefined) {\n    const labelValue: string = input.EndpointId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: EndpointId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{EndpointId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: EndpointId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1DeleteEventStreamCommand = async (\n  input: DeleteEventStreamCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/eventstream\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1DeleteGcmChannelCommand = async (\n  input: DeleteGcmChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/gcm\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1DeleteJourneyCommand = async (\n  input: DeleteJourneyCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/journeys/{JourneyId}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.JourneyId !== undefined) {\n    const labelValue: string = input.JourneyId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: JourneyId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{JourneyId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: JourneyId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1DeletePushTemplateCommand = async (\n  input: DeletePushTemplateCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/templates/{TemplateName}/push\";\n  if (input.TemplateName !== undefined) {\n    const labelValue: string = input.TemplateName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n  }\n  const query: any = {\n    ...(input.Version !== undefined && { version: input.Version }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1DeleteRecommenderConfigurationCommand = async (\n  input: DeleteRecommenderConfigurationCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/recommenders/{RecommenderId}\";\n  if (input.RecommenderId !== undefined) {\n    const labelValue: string = input.RecommenderId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: RecommenderId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{RecommenderId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: RecommenderId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1DeleteSegmentCommand = async (\n  input: DeleteSegmentCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/segments/{SegmentId}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.SegmentId !== undefined) {\n    const labelValue: string = input.SegmentId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: SegmentId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{SegmentId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: SegmentId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1DeleteSmsChannelCommand = async (\n  input: DeleteSmsChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/sms\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1DeleteSmsTemplateCommand = async (\n  input: DeleteSmsTemplateCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/templates/{TemplateName}/sms\";\n  if (input.TemplateName !== undefined) {\n    const labelValue: string = input.TemplateName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n  }\n  const query: any = {\n    ...(input.Version !== undefined && { version: input.Version }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1DeleteUserEndpointsCommand = async (\n  input: DeleteUserEndpointsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/users/{UserId}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.UserId !== undefined) {\n    const labelValue: string = input.UserId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: UserId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{UserId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: UserId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1DeleteVoiceChannelCommand = async (\n  input: DeleteVoiceChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/voice\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1DeleteVoiceTemplateCommand = async (\n  input: DeleteVoiceTemplateCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/templates/{TemplateName}/voice\";\n  if (input.TemplateName !== undefined) {\n    const labelValue: string = input.TemplateName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n  }\n  const query: any = {\n    ...(input.Version !== undefined && { version: input.Version }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetAdmChannelCommand = async (\n  input: GetAdmChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/adm\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetApnsChannelCommand = async (\n  input: GetApnsChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetApnsSandboxChannelCommand = async (\n  input: GetApnsSandboxChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_sandbox\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetApnsVoipChannelCommand = async (\n  input: GetApnsVoipChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_voip\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetApnsVoipSandboxChannelCommand = async (\n  input: GetApnsVoipSandboxChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_voip_sandbox\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetAppCommand = async (\n  input: GetAppCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetApplicationDateRangeKpiCommand = async (\n  input: GetApplicationDateRangeKpiCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/kpis/daterange/{KpiName}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.KpiName !== undefined) {\n    const labelValue: string = input.KpiName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: KpiName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{KpiName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: KpiName.\");\n  }\n  const query: any = {\n    ...(input.EndTime !== undefined && { \"end-time\": (input.EndTime.toISOString().split(\".\")[0] + \"Z\").toString() }),\n    ...(input.NextToken !== undefined && { \"next-token\": input.NextToken }),\n    ...(input.PageSize !== undefined && { \"page-size\": input.PageSize }),\n    ...(input.StartTime !== undefined && {\n      \"start-time\": (input.StartTime.toISOString().split(\".\")[0] + \"Z\").toString(),\n    }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetApplicationSettingsCommand = async (\n  input: GetApplicationSettingsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/settings\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetAppsCommand = async (\n  input: GetAppsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps\";\n  const query: any = {\n    ...(input.PageSize !== undefined && { \"page-size\": input.PageSize }),\n    ...(input.Token !== undefined && { token: input.Token }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetBaiduChannelCommand = async (\n  input: GetBaiduChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/baidu\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetCampaignCommand = async (\n  input: GetCampaignCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/campaigns/{CampaignId}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.CampaignId !== undefined) {\n    const labelValue: string = input.CampaignId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: CampaignId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{CampaignId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: CampaignId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetCampaignActivitiesCommand = async (\n  input: GetCampaignActivitiesCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/campaigns/{CampaignId}/activities\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.CampaignId !== undefined) {\n    const labelValue: string = input.CampaignId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: CampaignId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{CampaignId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: CampaignId.\");\n  }\n  const query: any = {\n    ...(input.PageSize !== undefined && { \"page-size\": input.PageSize }),\n    ...(input.Token !== undefined && { token: input.Token }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetCampaignDateRangeKpiCommand = async (\n  input: GetCampaignDateRangeKpiCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/campaigns/{CampaignId}/kpis/daterange/{KpiName}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.CampaignId !== undefined) {\n    const labelValue: string = input.CampaignId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: CampaignId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{CampaignId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: CampaignId.\");\n  }\n  if (input.KpiName !== undefined) {\n    const labelValue: string = input.KpiName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: KpiName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{KpiName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: KpiName.\");\n  }\n  const query: any = {\n    ...(input.EndTime !== undefined && { \"end-time\": (input.EndTime.toISOString().split(\".\")[0] + \"Z\").toString() }),\n    ...(input.NextToken !== undefined && { \"next-token\": input.NextToken }),\n    ...(input.PageSize !== undefined && { \"page-size\": input.PageSize }),\n    ...(input.StartTime !== undefined && {\n      \"start-time\": (input.StartTime.toISOString().split(\".\")[0] + \"Z\").toString(),\n    }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetCampaignsCommand = async (\n  input: GetCampaignsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/campaigns\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  const query: any = {\n    ...(input.PageSize !== undefined && { \"page-size\": input.PageSize }),\n    ...(input.Token !== undefined && { token: input.Token }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetCampaignVersionCommand = async (\n  input: GetCampaignVersionCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/campaigns/{CampaignId}/versions/{Version}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.CampaignId !== undefined) {\n    const labelValue: string = input.CampaignId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: CampaignId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{CampaignId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: CampaignId.\");\n  }\n  if (input.Version !== undefined) {\n    const labelValue: string = input.Version;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Version.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Version}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Version.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetCampaignVersionsCommand = async (\n  input: GetCampaignVersionsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/campaigns/{CampaignId}/versions\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.CampaignId !== undefined) {\n    const labelValue: string = input.CampaignId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: CampaignId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{CampaignId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: CampaignId.\");\n  }\n  const query: any = {\n    ...(input.PageSize !== undefined && { \"page-size\": input.PageSize }),\n    ...(input.Token !== undefined && { token: input.Token }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetChannelsCommand = async (\n  input: GetChannelsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetEmailChannelCommand = async (\n  input: GetEmailChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/email\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetEmailTemplateCommand = async (\n  input: GetEmailTemplateCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/templates/{TemplateName}/email\";\n  if (input.TemplateName !== undefined) {\n    const labelValue: string = input.TemplateName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n  }\n  const query: any = {\n    ...(input.Version !== undefined && { version: input.Version }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetEndpointCommand = async (\n  input: GetEndpointCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/endpoints/{EndpointId}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.EndpointId !== undefined) {\n    const labelValue: string = input.EndpointId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: EndpointId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{EndpointId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: EndpointId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetEventStreamCommand = async (\n  input: GetEventStreamCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/eventstream\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetExportJobCommand = async (\n  input: GetExportJobCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/jobs/export/{JobId}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.JobId !== undefined) {\n    const labelValue: string = input.JobId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: JobId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{JobId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: JobId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetExportJobsCommand = async (\n  input: GetExportJobsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/jobs/export\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  const query: any = {\n    ...(input.PageSize !== undefined && { \"page-size\": input.PageSize }),\n    ...(input.Token !== undefined && { token: input.Token }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetGcmChannelCommand = async (\n  input: GetGcmChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/gcm\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetImportJobCommand = async (\n  input: GetImportJobCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/jobs/import/{JobId}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.JobId !== undefined) {\n    const labelValue: string = input.JobId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: JobId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{JobId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: JobId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetImportJobsCommand = async (\n  input: GetImportJobsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/jobs/import\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  const query: any = {\n    ...(input.PageSize !== undefined && { \"page-size\": input.PageSize }),\n    ...(input.Token !== undefined && { token: input.Token }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetJourneyCommand = async (\n  input: GetJourneyCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/journeys/{JourneyId}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.JourneyId !== undefined) {\n    const labelValue: string = input.JourneyId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: JourneyId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{JourneyId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: JourneyId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetJourneyDateRangeKpiCommand = async (\n  input: GetJourneyDateRangeKpiCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/journeys/{JourneyId}/kpis/daterange/{KpiName}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.JourneyId !== undefined) {\n    const labelValue: string = input.JourneyId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: JourneyId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{JourneyId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: JourneyId.\");\n  }\n  if (input.KpiName !== undefined) {\n    const labelValue: string = input.KpiName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: KpiName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{KpiName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: KpiName.\");\n  }\n  const query: any = {\n    ...(input.EndTime !== undefined && { \"end-time\": (input.EndTime.toISOString().split(\".\")[0] + \"Z\").toString() }),\n    ...(input.NextToken !== undefined && { \"next-token\": input.NextToken }),\n    ...(input.PageSize !== undefined && { \"page-size\": input.PageSize }),\n    ...(input.StartTime !== undefined && {\n      \"start-time\": (input.StartTime.toISOString().split(\".\")[0] + \"Z\").toString(),\n    }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetJourneyExecutionActivityMetricsCommand = async (\n  input: GetJourneyExecutionActivityMetricsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/journeys/{JourneyId}/activities/{JourneyActivityId}/execution-metrics\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.JourneyActivityId !== undefined) {\n    const labelValue: string = input.JourneyActivityId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: JourneyActivityId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{JourneyActivityId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: JourneyActivityId.\");\n  }\n  if (input.JourneyId !== undefined) {\n    const labelValue: string = input.JourneyId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: JourneyId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{JourneyId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: JourneyId.\");\n  }\n  const query: any = {\n    ...(input.NextToken !== undefined && { \"next-token\": input.NextToken }),\n    ...(input.PageSize !== undefined && { \"page-size\": input.PageSize }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetJourneyExecutionMetricsCommand = async (\n  input: GetJourneyExecutionMetricsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/journeys/{JourneyId}/execution-metrics\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.JourneyId !== undefined) {\n    const labelValue: string = input.JourneyId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: JourneyId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{JourneyId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: JourneyId.\");\n  }\n  const query: any = {\n    ...(input.NextToken !== undefined && { \"next-token\": input.NextToken }),\n    ...(input.PageSize !== undefined && { \"page-size\": input.PageSize }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetPushTemplateCommand = async (\n  input: GetPushTemplateCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/templates/{TemplateName}/push\";\n  if (input.TemplateName !== undefined) {\n    const labelValue: string = input.TemplateName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n  }\n  const query: any = {\n    ...(input.Version !== undefined && { version: input.Version }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetRecommenderConfigurationCommand = async (\n  input: GetRecommenderConfigurationCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/recommenders/{RecommenderId}\";\n  if (input.RecommenderId !== undefined) {\n    const labelValue: string = input.RecommenderId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: RecommenderId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{RecommenderId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: RecommenderId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetRecommenderConfigurationsCommand = async (\n  input: GetRecommenderConfigurationsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/recommenders\";\n  const query: any = {\n    ...(input.PageSize !== undefined && { \"page-size\": input.PageSize }),\n    ...(input.Token !== undefined && { token: input.Token }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetSegmentCommand = async (\n  input: GetSegmentCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/segments/{SegmentId}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.SegmentId !== undefined) {\n    const labelValue: string = input.SegmentId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: SegmentId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{SegmentId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: SegmentId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetSegmentExportJobsCommand = async (\n  input: GetSegmentExportJobsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/segments/{SegmentId}/jobs/export\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.SegmentId !== undefined) {\n    const labelValue: string = input.SegmentId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: SegmentId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{SegmentId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: SegmentId.\");\n  }\n  const query: any = {\n    ...(input.PageSize !== undefined && { \"page-size\": input.PageSize }),\n    ...(input.Token !== undefined && { token: input.Token }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetSegmentImportJobsCommand = async (\n  input: GetSegmentImportJobsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/segments/{SegmentId}/jobs/import\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.SegmentId !== undefined) {\n    const labelValue: string = input.SegmentId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: SegmentId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{SegmentId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: SegmentId.\");\n  }\n  const query: any = {\n    ...(input.PageSize !== undefined && { \"page-size\": input.PageSize }),\n    ...(input.Token !== undefined && { token: input.Token }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetSegmentsCommand = async (\n  input: GetSegmentsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/segments\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  const query: any = {\n    ...(input.PageSize !== undefined && { \"page-size\": input.PageSize }),\n    ...(input.Token !== undefined && { token: input.Token }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetSegmentVersionCommand = async (\n  input: GetSegmentVersionCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/segments/{SegmentId}/versions/{Version}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.SegmentId !== undefined) {\n    const labelValue: string = input.SegmentId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: SegmentId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{SegmentId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: SegmentId.\");\n  }\n  if (input.Version !== undefined) {\n    const labelValue: string = input.Version;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Version.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Version}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Version.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetSegmentVersionsCommand = async (\n  input: GetSegmentVersionsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/segments/{SegmentId}/versions\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.SegmentId !== undefined) {\n    const labelValue: string = input.SegmentId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: SegmentId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{SegmentId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: SegmentId.\");\n  }\n  const query: any = {\n    ...(input.PageSize !== undefined && { \"page-size\": input.PageSize }),\n    ...(input.Token !== undefined && { token: input.Token }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetSmsChannelCommand = async (\n  input: GetSmsChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/sms\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetSmsTemplateCommand = async (\n  input: GetSmsTemplateCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/templates/{TemplateName}/sms\";\n  if (input.TemplateName !== undefined) {\n    const labelValue: string = input.TemplateName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n  }\n  const query: any = {\n    ...(input.Version !== undefined && { version: input.Version }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetUserEndpointsCommand = async (\n  input: GetUserEndpointsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/users/{UserId}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.UserId !== undefined) {\n    const labelValue: string = input.UserId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: UserId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{UserId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: UserId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetVoiceChannelCommand = async (\n  input: GetVoiceChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/voice\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetVoiceTemplateCommand = async (\n  input: GetVoiceTemplateCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/templates/{TemplateName}/voice\";\n  if (input.TemplateName !== undefined) {\n    const labelValue: string = input.TemplateName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n  }\n  const query: any = {\n    ...(input.Version !== undefined && { version: input.Version }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1ListJourneysCommand = async (\n  input: ListJourneysCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/journeys\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  const query: any = {\n    ...(input.PageSize !== undefined && { \"page-size\": input.PageSize }),\n    ...(input.Token !== undefined && { token: input.Token }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1ListTagsForResourceCommand = async (\n  input: ListTagsForResourceCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/tags/{ResourceArn}\";\n  if (input.ResourceArn !== undefined) {\n    const labelValue: string = input.ResourceArn;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ResourceArn.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ResourceArn}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ResourceArn.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1ListTemplatesCommand = async (\n  input: ListTemplatesCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/templates\";\n  const query: any = {\n    ...(input.NextToken !== undefined && { \"next-token\": input.NextToken }),\n    ...(input.PageSize !== undefined && { \"page-size\": input.PageSize }),\n    ...(input.Prefix !== undefined && { prefix: input.Prefix }),\n    ...(input.TemplateType !== undefined && { \"template-type\": input.TemplateType }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1ListTemplateVersionsCommand = async (\n  input: ListTemplateVersionsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/templates/{TemplateName}/{TemplateType}/versions\";\n  if (input.TemplateName !== undefined) {\n    const labelValue: string = input.TemplateName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n  }\n  if (input.TemplateType !== undefined) {\n    const labelValue: string = input.TemplateType;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: TemplateType.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{TemplateType}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: TemplateType.\");\n  }\n  const query: any = {\n    ...(input.NextToken !== undefined && { \"next-token\": input.NextToken }),\n    ...(input.PageSize !== undefined && { \"page-size\": input.PageSize }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1PhoneNumberValidateCommand = async (\n  input: PhoneNumberValidateCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/phone/number/validate\";\n  let body: any;\n  if (input.NumberValidateRequest !== undefined) {\n    body = serializeAws_restJson1NumberValidateRequest(input.NumberValidateRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1PutEventsCommand = async (\n  input: PutEventsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/events\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  if (input.EventsRequest !== undefined) {\n    body = serializeAws_restJson1EventsRequest(input.EventsRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1PutEventStreamCommand = async (\n  input: PutEventStreamCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/eventstream\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  if (input.WriteEventStream !== undefined) {\n    body = serializeAws_restJson1WriteEventStream(input.WriteEventStream, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1RemoveAttributesCommand = async (\n  input: RemoveAttributesCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/attributes/{AttributeType}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.AttributeType !== undefined) {\n    const labelValue: string = input.AttributeType;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: AttributeType.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{AttributeType}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: AttributeType.\");\n  }\n  let body: any;\n  if (input.UpdateAttributesRequest !== undefined) {\n    body = serializeAws_restJson1UpdateAttributesRequest(input.UpdateAttributesRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1SendMessagesCommand = async (\n  input: SendMessagesCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/messages\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  if (input.MessageRequest !== undefined) {\n    body = serializeAws_restJson1MessageRequest(input.MessageRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1SendUsersMessagesCommand = async (\n  input: SendUsersMessagesCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/users-messages\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  if (input.SendUsersMessageRequest !== undefined) {\n    body = serializeAws_restJson1SendUsersMessageRequest(input.SendUsersMessageRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1TagResourceCommand = async (\n  input: TagResourceCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/tags/{ResourceArn}\";\n  if (input.ResourceArn !== undefined) {\n    const labelValue: string = input.ResourceArn;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ResourceArn.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ResourceArn}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ResourceArn.\");\n  }\n  let body: any;\n  if (input.TagsModel !== undefined) {\n    body = serializeAws_restJson1TagsModel(input.TagsModel, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UntagResourceCommand = async (\n  input: UntagResourceCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/tags/{ResourceArn}\";\n  if (input.ResourceArn !== undefined) {\n    const labelValue: string = input.ResourceArn;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ResourceArn.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ResourceArn}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ResourceArn.\");\n  }\n  const query: any = {\n    ...(input.TagKeys !== undefined && { tagKeys: (input.TagKeys || []).map((_entry) => _entry) }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdateAdmChannelCommand = async (\n  input: UpdateAdmChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/adm\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  if (input.ADMChannelRequest !== undefined) {\n    body = serializeAws_restJson1ADMChannelRequest(input.ADMChannelRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdateApnsChannelCommand = async (\n  input: UpdateApnsChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  if (input.APNSChannelRequest !== undefined) {\n    body = serializeAws_restJson1APNSChannelRequest(input.APNSChannelRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdateApnsSandboxChannelCommand = async (\n  input: UpdateApnsSandboxChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_sandbox\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  if (input.APNSSandboxChannelRequest !== undefined) {\n    body = serializeAws_restJson1APNSSandboxChannelRequest(input.APNSSandboxChannelRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdateApnsVoipChannelCommand = async (\n  input: UpdateApnsVoipChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_voip\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  if (input.APNSVoipChannelRequest !== undefined) {\n    body = serializeAws_restJson1APNSVoipChannelRequest(input.APNSVoipChannelRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdateApnsVoipSandboxChannelCommand = async (\n  input: UpdateApnsVoipSandboxChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_voip_sandbox\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  if (input.APNSVoipSandboxChannelRequest !== undefined) {\n    body = serializeAws_restJson1APNSVoipSandboxChannelRequest(input.APNSVoipSandboxChannelRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdateApplicationSettingsCommand = async (\n  input: UpdateApplicationSettingsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/settings\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  if (input.WriteApplicationSettingsRequest !== undefined) {\n    body = serializeAws_restJson1WriteApplicationSettingsRequest(input.WriteApplicationSettingsRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdateBaiduChannelCommand = async (\n  input: UpdateBaiduChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/baidu\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  if (input.BaiduChannelRequest !== undefined) {\n    body = serializeAws_restJson1BaiduChannelRequest(input.BaiduChannelRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdateCampaignCommand = async (\n  input: UpdateCampaignCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/campaigns/{CampaignId}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.CampaignId !== undefined) {\n    const labelValue: string = input.CampaignId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: CampaignId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{CampaignId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: CampaignId.\");\n  }\n  let body: any;\n  if (input.WriteCampaignRequest !== undefined) {\n    body = serializeAws_restJson1WriteCampaignRequest(input.WriteCampaignRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdateEmailChannelCommand = async (\n  input: UpdateEmailChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/email\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  if (input.EmailChannelRequest !== undefined) {\n    body = serializeAws_restJson1EmailChannelRequest(input.EmailChannelRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdateEmailTemplateCommand = async (\n  input: UpdateEmailTemplateCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/templates/{TemplateName}/email\";\n  if (input.TemplateName !== undefined) {\n    const labelValue: string = input.TemplateName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n  }\n  const query: any = {\n    ...(input.CreateNewVersion !== undefined && { \"create-new-version\": input.CreateNewVersion.toString() }),\n    ...(input.Version !== undefined && { version: input.Version }),\n  };\n  let body: any;\n  if (input.EmailTemplateRequest !== undefined) {\n    body = serializeAws_restJson1EmailTemplateRequest(input.EmailTemplateRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdateEndpointCommand = async (\n  input: UpdateEndpointCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/endpoints/{EndpointId}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.EndpointId !== undefined) {\n    const labelValue: string = input.EndpointId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: EndpointId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{EndpointId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: EndpointId.\");\n  }\n  let body: any;\n  if (input.EndpointRequest !== undefined) {\n    body = serializeAws_restJson1EndpointRequest(input.EndpointRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdateEndpointsBatchCommand = async (\n  input: UpdateEndpointsBatchCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/endpoints\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  if (input.EndpointBatchRequest !== undefined) {\n    body = serializeAws_restJson1EndpointBatchRequest(input.EndpointBatchRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdateGcmChannelCommand = async (\n  input: UpdateGcmChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/gcm\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  if (input.GCMChannelRequest !== undefined) {\n    body = serializeAws_restJson1GCMChannelRequest(input.GCMChannelRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdateJourneyCommand = async (\n  input: UpdateJourneyCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/journeys/{JourneyId}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.JourneyId !== undefined) {\n    const labelValue: string = input.JourneyId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: JourneyId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{JourneyId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: JourneyId.\");\n  }\n  let body: any;\n  if (input.WriteJourneyRequest !== undefined) {\n    body = serializeAws_restJson1WriteJourneyRequest(input.WriteJourneyRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdateJourneyStateCommand = async (\n  input: UpdateJourneyStateCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/journeys/{JourneyId}/state\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.JourneyId !== undefined) {\n    const labelValue: string = input.JourneyId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: JourneyId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{JourneyId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: JourneyId.\");\n  }\n  let body: any;\n  if (input.JourneyStateRequest !== undefined) {\n    body = serializeAws_restJson1JourneyStateRequest(input.JourneyStateRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdatePushTemplateCommand = async (\n  input: UpdatePushTemplateCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/templates/{TemplateName}/push\";\n  if (input.TemplateName !== undefined) {\n    const labelValue: string = input.TemplateName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n  }\n  const query: any = {\n    ...(input.CreateNewVersion !== undefined && { \"create-new-version\": input.CreateNewVersion.toString() }),\n    ...(input.Version !== undefined && { version: input.Version }),\n  };\n  let body: any;\n  if (input.PushNotificationTemplateRequest !== undefined) {\n    body = serializeAws_restJson1PushNotificationTemplateRequest(input.PushNotificationTemplateRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdateRecommenderConfigurationCommand = async (\n  input: UpdateRecommenderConfigurationCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/recommenders/{RecommenderId}\";\n  if (input.RecommenderId !== undefined) {\n    const labelValue: string = input.RecommenderId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: RecommenderId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{RecommenderId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: RecommenderId.\");\n  }\n  let body: any;\n  if (input.UpdateRecommenderConfiguration !== undefined) {\n    body = serializeAws_restJson1UpdateRecommenderConfigurationShape(input.UpdateRecommenderConfiguration, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdateSegmentCommand = async (\n  input: UpdateSegmentCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/segments/{SegmentId}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.SegmentId !== undefined) {\n    const labelValue: string = input.SegmentId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: SegmentId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{SegmentId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: SegmentId.\");\n  }\n  let body: any;\n  if (input.WriteSegmentRequest !== undefined) {\n    body = serializeAws_restJson1WriteSegmentRequest(input.WriteSegmentRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdateSmsChannelCommand = async (\n  input: UpdateSmsChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/sms\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  if (input.SMSChannelRequest !== undefined) {\n    body = serializeAws_restJson1SMSChannelRequest(input.SMSChannelRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdateSmsTemplateCommand = async (\n  input: UpdateSmsTemplateCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/templates/{TemplateName}/sms\";\n  if (input.TemplateName !== undefined) {\n    const labelValue: string = input.TemplateName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n  }\n  const query: any = {\n    ...(input.CreateNewVersion !== undefined && { \"create-new-version\": input.CreateNewVersion.toString() }),\n    ...(input.Version !== undefined && { version: input.Version }),\n  };\n  let body: any;\n  if (input.SMSTemplateRequest !== undefined) {\n    body = serializeAws_restJson1SMSTemplateRequest(input.SMSTemplateRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdateTemplateActiveVersionCommand = async (\n  input: UpdateTemplateActiveVersionCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/templates/{TemplateName}/{TemplateType}/active-version\";\n  if (input.TemplateName !== undefined) {\n    const labelValue: string = input.TemplateName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n  }\n  if (input.TemplateType !== undefined) {\n    const labelValue: string = input.TemplateType;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: TemplateType.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{TemplateType}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: TemplateType.\");\n  }\n  let body: any;\n  if (input.TemplateActiveVersionRequest !== undefined) {\n    body = serializeAws_restJson1TemplateActiveVersionRequest(input.TemplateActiveVersionRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdateVoiceChannelCommand = async (\n  input: UpdateVoiceChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/voice\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  if (input.VoiceChannelRequest !== undefined) {\n    body = serializeAws_restJson1VoiceChannelRequest(input.VoiceChannelRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdateVoiceTemplateCommand = async (\n  input: UpdateVoiceTemplateCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/templates/{TemplateName}/voice\";\n  if (input.TemplateName !== undefined) {\n    const labelValue: string = input.TemplateName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n  }\n  const query: any = {\n    ...(input.CreateNewVersion !== undefined && { \"create-new-version\": input.CreateNewVersion.toString() }),\n    ...(input.Version !== undefined && { version: input.Version }),\n  };\n  let body: any;\n  if (input.VoiceTemplateRequest !== undefined) {\n    body = serializeAws_restJson1VoiceTemplateRequest(input.VoiceTemplateRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const deserializeAws_restJson1CreateAppCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateAppCommandOutput> => {\n  if (output.statusCode !== 201 && output.statusCode >= 300) {\n    return deserializeAws_restJson1CreateAppCommandError(output, context);\n  }\n  const contents: CreateAppCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ApplicationResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.ApplicationResponse = deserializeAws_restJson1ApplicationResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1CreateAppCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateAppCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1CreateCampaignCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateCampaignCommandOutput> => {\n  if (output.statusCode !== 201 && output.statusCode >= 300) {\n    return deserializeAws_restJson1CreateCampaignCommandError(output, context);\n  }\n  const contents: CreateCampaignCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    CampaignResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.CampaignResponse = deserializeAws_restJson1CampaignResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1CreateCampaignCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateCampaignCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1CreateEmailTemplateCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateEmailTemplateCommandOutput> => {\n  if (output.statusCode !== 201 && output.statusCode >= 300) {\n    return deserializeAws_restJson1CreateEmailTemplateCommandError(output, context);\n  }\n  const contents: CreateEmailTemplateCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    CreateTemplateMessageBody: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.CreateTemplateMessageBody = deserializeAws_restJson1CreateTemplateMessageBody(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1CreateEmailTemplateCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateEmailTemplateCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1CreateExportJobCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateExportJobCommandOutput> => {\n  if (output.statusCode !== 202 && output.statusCode >= 300) {\n    return deserializeAws_restJson1CreateExportJobCommandError(output, context);\n  }\n  const contents: CreateExportJobCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ExportJobResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.ExportJobResponse = deserializeAws_restJson1ExportJobResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1CreateExportJobCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateExportJobCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1CreateImportJobCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateImportJobCommandOutput> => {\n  if (output.statusCode !== 201 && output.statusCode >= 300) {\n    return deserializeAws_restJson1CreateImportJobCommandError(output, context);\n  }\n  const contents: CreateImportJobCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ImportJobResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.ImportJobResponse = deserializeAws_restJson1ImportJobResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1CreateImportJobCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateImportJobCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1CreateJourneyCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateJourneyCommandOutput> => {\n  if (output.statusCode !== 201 && output.statusCode >= 300) {\n    return deserializeAws_restJson1CreateJourneyCommandError(output, context);\n  }\n  const contents: CreateJourneyCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    JourneyResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.JourneyResponse = deserializeAws_restJson1JourneyResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1CreateJourneyCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateJourneyCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1CreatePushTemplateCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreatePushTemplateCommandOutput> => {\n  if (output.statusCode !== 201 && output.statusCode >= 300) {\n    return deserializeAws_restJson1CreatePushTemplateCommandError(output, context);\n  }\n  const contents: CreatePushTemplateCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    CreateTemplateMessageBody: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.CreateTemplateMessageBody = deserializeAws_restJson1CreateTemplateMessageBody(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1CreatePushTemplateCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreatePushTemplateCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1CreateRecommenderConfigurationCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateRecommenderConfigurationCommandOutput> => {\n  if (output.statusCode !== 201 && output.statusCode >= 300) {\n    return deserializeAws_restJson1CreateRecommenderConfigurationCommandError(output, context);\n  }\n  const contents: CreateRecommenderConfigurationCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    RecommenderConfigurationResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.RecommenderConfigurationResponse = deserializeAws_restJson1RecommenderConfigurationResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1CreateRecommenderConfigurationCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateRecommenderConfigurationCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1CreateSegmentCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateSegmentCommandOutput> => {\n  if (output.statusCode !== 201 && output.statusCode >= 300) {\n    return deserializeAws_restJson1CreateSegmentCommandError(output, context);\n  }\n  const contents: CreateSegmentCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    SegmentResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.SegmentResponse = deserializeAws_restJson1SegmentResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1CreateSegmentCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateSegmentCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1CreateSmsTemplateCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateSmsTemplateCommandOutput> => {\n  if (output.statusCode !== 201 && output.statusCode >= 300) {\n    return deserializeAws_restJson1CreateSmsTemplateCommandError(output, context);\n  }\n  const contents: CreateSmsTemplateCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    CreateTemplateMessageBody: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.CreateTemplateMessageBody = deserializeAws_restJson1CreateTemplateMessageBody(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1CreateSmsTemplateCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateSmsTemplateCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1CreateVoiceTemplateCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateVoiceTemplateCommandOutput> => {\n  if (output.statusCode !== 201 && output.statusCode >= 300) {\n    return deserializeAws_restJson1CreateVoiceTemplateCommandError(output, context);\n  }\n  const contents: CreateVoiceTemplateCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    CreateTemplateMessageBody: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.CreateTemplateMessageBody = deserializeAws_restJson1CreateTemplateMessageBody(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1CreateVoiceTemplateCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateVoiceTemplateCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1DeleteAdmChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteAdmChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeleteAdmChannelCommandError(output, context);\n  }\n  const contents: DeleteAdmChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ADMChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.ADMChannelResponse = deserializeAws_restJson1ADMChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeleteAdmChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteAdmChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1DeleteApnsChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteApnsChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeleteApnsChannelCommandError(output, context);\n  }\n  const contents: DeleteApnsChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    APNSChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.APNSChannelResponse = deserializeAws_restJson1APNSChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeleteApnsChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteApnsChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1DeleteApnsSandboxChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteApnsSandboxChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeleteApnsSandboxChannelCommandError(output, context);\n  }\n  const contents: DeleteApnsSandboxChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    APNSSandboxChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.APNSSandboxChannelResponse = deserializeAws_restJson1APNSSandboxChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeleteApnsSandboxChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteApnsSandboxChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1DeleteApnsVoipChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteApnsVoipChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeleteApnsVoipChannelCommandError(output, context);\n  }\n  const contents: DeleteApnsVoipChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    APNSVoipChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.APNSVoipChannelResponse = deserializeAws_restJson1APNSVoipChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeleteApnsVoipChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteApnsVoipChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1DeleteApnsVoipSandboxChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteApnsVoipSandboxChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeleteApnsVoipSandboxChannelCommandError(output, context);\n  }\n  const contents: DeleteApnsVoipSandboxChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    APNSVoipSandboxChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.APNSVoipSandboxChannelResponse = deserializeAws_restJson1APNSVoipSandboxChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeleteApnsVoipSandboxChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteApnsVoipSandboxChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1DeleteAppCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteAppCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeleteAppCommandError(output, context);\n  }\n  const contents: DeleteAppCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ApplicationResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.ApplicationResponse = deserializeAws_restJson1ApplicationResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeleteAppCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteAppCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1DeleteBaiduChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteBaiduChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeleteBaiduChannelCommandError(output, context);\n  }\n  const contents: DeleteBaiduChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    BaiduChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.BaiduChannelResponse = deserializeAws_restJson1BaiduChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeleteBaiduChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteBaiduChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1DeleteCampaignCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteCampaignCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeleteCampaignCommandError(output, context);\n  }\n  const contents: DeleteCampaignCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    CampaignResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.CampaignResponse = deserializeAws_restJson1CampaignResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeleteCampaignCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteCampaignCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1DeleteEmailChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteEmailChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeleteEmailChannelCommandError(output, context);\n  }\n  const contents: DeleteEmailChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    EmailChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.EmailChannelResponse = deserializeAws_restJson1EmailChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeleteEmailChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteEmailChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1DeleteEmailTemplateCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteEmailTemplateCommandOutput> => {\n  if (output.statusCode !== 202 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeleteEmailTemplateCommandError(output, context);\n  }\n  const contents: DeleteEmailTemplateCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    MessageBody: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.MessageBody = deserializeAws_restJson1MessageBody(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeleteEmailTemplateCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteEmailTemplateCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1DeleteEndpointCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteEndpointCommandOutput> => {\n  if (output.statusCode !== 202 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeleteEndpointCommandError(output, context);\n  }\n  const contents: DeleteEndpointCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    EndpointResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.EndpointResponse = deserializeAws_restJson1EndpointResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeleteEndpointCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteEndpointCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1DeleteEventStreamCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteEventStreamCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeleteEventStreamCommandError(output, context);\n  }\n  const contents: DeleteEventStreamCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    EventStream: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.EventStream = deserializeAws_restJson1EventStream(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeleteEventStreamCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteEventStreamCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1DeleteGcmChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteGcmChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeleteGcmChannelCommandError(output, context);\n  }\n  const contents: DeleteGcmChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    GCMChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.GCMChannelResponse = deserializeAws_restJson1GCMChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeleteGcmChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteGcmChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1DeleteJourneyCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteJourneyCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeleteJourneyCommandError(output, context);\n  }\n  const contents: DeleteJourneyCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    JourneyResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.JourneyResponse = deserializeAws_restJson1JourneyResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeleteJourneyCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteJourneyCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1DeletePushTemplateCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeletePushTemplateCommandOutput> => {\n  if (output.statusCode !== 202 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeletePushTemplateCommandError(output, context);\n  }\n  const contents: DeletePushTemplateCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    MessageBody: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.MessageBody = deserializeAws_restJson1MessageBody(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeletePushTemplateCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeletePushTemplateCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1DeleteRecommenderConfigurationCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteRecommenderConfigurationCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeleteRecommenderConfigurationCommandError(output, context);\n  }\n  const contents: DeleteRecommenderConfigurationCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    RecommenderConfigurationResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.RecommenderConfigurationResponse = deserializeAws_restJson1RecommenderConfigurationResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeleteRecommenderConfigurationCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteRecommenderConfigurationCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1DeleteSegmentCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteSegmentCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeleteSegmentCommandError(output, context);\n  }\n  const contents: DeleteSegmentCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    SegmentResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.SegmentResponse = deserializeAws_restJson1SegmentResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeleteSegmentCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteSegmentCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1DeleteSmsChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteSmsChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeleteSmsChannelCommandError(output, context);\n  }\n  const contents: DeleteSmsChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    SMSChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.SMSChannelResponse = deserializeAws_restJson1SMSChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeleteSmsChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteSmsChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1DeleteSmsTemplateCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteSmsTemplateCommandOutput> => {\n  if (output.statusCode !== 202 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeleteSmsTemplateCommandError(output, context);\n  }\n  const contents: DeleteSmsTemplateCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    MessageBody: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.MessageBody = deserializeAws_restJson1MessageBody(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeleteSmsTemplateCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteSmsTemplateCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1DeleteUserEndpointsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteUserEndpointsCommandOutput> => {\n  if (output.statusCode !== 202 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeleteUserEndpointsCommandError(output, context);\n  }\n  const contents: DeleteUserEndpointsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    EndpointsResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.EndpointsResponse = deserializeAws_restJson1EndpointsResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeleteUserEndpointsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteUserEndpointsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1DeleteVoiceChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteVoiceChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeleteVoiceChannelCommandError(output, context);\n  }\n  const contents: DeleteVoiceChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    VoiceChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.VoiceChannelResponse = deserializeAws_restJson1VoiceChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeleteVoiceChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteVoiceChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1DeleteVoiceTemplateCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteVoiceTemplateCommandOutput> => {\n  if (output.statusCode !== 202 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeleteVoiceTemplateCommandError(output, context);\n  }\n  const contents: DeleteVoiceTemplateCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    MessageBody: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.MessageBody = deserializeAws_restJson1MessageBody(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeleteVoiceTemplateCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteVoiceTemplateCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetAdmChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetAdmChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetAdmChannelCommandError(output, context);\n  }\n  const contents: GetAdmChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ADMChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.ADMChannelResponse = deserializeAws_restJson1ADMChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetAdmChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetAdmChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetApnsChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetApnsChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetApnsChannelCommandError(output, context);\n  }\n  const contents: GetApnsChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    APNSChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.APNSChannelResponse = deserializeAws_restJson1APNSChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetApnsChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetApnsChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetApnsSandboxChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetApnsSandboxChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetApnsSandboxChannelCommandError(output, context);\n  }\n  const contents: GetApnsSandboxChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    APNSSandboxChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.APNSSandboxChannelResponse = deserializeAws_restJson1APNSSandboxChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetApnsSandboxChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetApnsSandboxChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetApnsVoipChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetApnsVoipChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetApnsVoipChannelCommandError(output, context);\n  }\n  const contents: GetApnsVoipChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    APNSVoipChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.APNSVoipChannelResponse = deserializeAws_restJson1APNSVoipChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetApnsVoipChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetApnsVoipChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetApnsVoipSandboxChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetApnsVoipSandboxChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetApnsVoipSandboxChannelCommandError(output, context);\n  }\n  const contents: GetApnsVoipSandboxChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    APNSVoipSandboxChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.APNSVoipSandboxChannelResponse = deserializeAws_restJson1APNSVoipSandboxChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetApnsVoipSandboxChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetApnsVoipSandboxChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetAppCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetAppCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetAppCommandError(output, context);\n  }\n  const contents: GetAppCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ApplicationResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.ApplicationResponse = deserializeAws_restJson1ApplicationResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetAppCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetAppCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetApplicationDateRangeKpiCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetApplicationDateRangeKpiCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetApplicationDateRangeKpiCommandError(output, context);\n  }\n  const contents: GetApplicationDateRangeKpiCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ApplicationDateRangeKpiResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.ApplicationDateRangeKpiResponse = deserializeAws_restJson1ApplicationDateRangeKpiResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetApplicationDateRangeKpiCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetApplicationDateRangeKpiCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetApplicationSettingsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetApplicationSettingsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetApplicationSettingsCommandError(output, context);\n  }\n  const contents: GetApplicationSettingsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ApplicationSettingsResource: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.ApplicationSettingsResource = deserializeAws_restJson1ApplicationSettingsResource(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetApplicationSettingsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetApplicationSettingsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetAppsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetAppsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetAppsCommandError(output, context);\n  }\n  const contents: GetAppsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ApplicationsResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.ApplicationsResponse = deserializeAws_restJson1ApplicationsResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetAppsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetAppsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetBaiduChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetBaiduChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetBaiduChannelCommandError(output, context);\n  }\n  const contents: GetBaiduChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    BaiduChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.BaiduChannelResponse = deserializeAws_restJson1BaiduChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetBaiduChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetBaiduChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetCampaignCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetCampaignCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetCampaignCommandError(output, context);\n  }\n  const contents: GetCampaignCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    CampaignResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.CampaignResponse = deserializeAws_restJson1CampaignResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetCampaignCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetCampaignCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetCampaignActivitiesCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetCampaignActivitiesCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetCampaignActivitiesCommandError(output, context);\n  }\n  const contents: GetCampaignActivitiesCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ActivitiesResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.ActivitiesResponse = deserializeAws_restJson1ActivitiesResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetCampaignActivitiesCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetCampaignActivitiesCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetCampaignDateRangeKpiCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetCampaignDateRangeKpiCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetCampaignDateRangeKpiCommandError(output, context);\n  }\n  const contents: GetCampaignDateRangeKpiCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    CampaignDateRangeKpiResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.CampaignDateRangeKpiResponse = deserializeAws_restJson1CampaignDateRangeKpiResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetCampaignDateRangeKpiCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetCampaignDateRangeKpiCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetCampaignsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetCampaignsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetCampaignsCommandError(output, context);\n  }\n  const contents: GetCampaignsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    CampaignsResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.CampaignsResponse = deserializeAws_restJson1CampaignsResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetCampaignsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetCampaignsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetCampaignVersionCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetCampaignVersionCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetCampaignVersionCommandError(output, context);\n  }\n  const contents: GetCampaignVersionCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    CampaignResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.CampaignResponse = deserializeAws_restJson1CampaignResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetCampaignVersionCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetCampaignVersionCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetCampaignVersionsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetCampaignVersionsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetCampaignVersionsCommandError(output, context);\n  }\n  const contents: GetCampaignVersionsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    CampaignsResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.CampaignsResponse = deserializeAws_restJson1CampaignsResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetCampaignVersionsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetCampaignVersionsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetChannelsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetChannelsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetChannelsCommandError(output, context);\n  }\n  const contents: GetChannelsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ChannelsResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.ChannelsResponse = deserializeAws_restJson1ChannelsResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetChannelsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetChannelsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetEmailChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetEmailChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetEmailChannelCommandError(output, context);\n  }\n  const contents: GetEmailChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    EmailChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.EmailChannelResponse = deserializeAws_restJson1EmailChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetEmailChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetEmailChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetEmailTemplateCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetEmailTemplateCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetEmailTemplateCommandError(output, context);\n  }\n  const contents: GetEmailTemplateCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    EmailTemplateResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.EmailTemplateResponse = deserializeAws_restJson1EmailTemplateResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetEmailTemplateCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetEmailTemplateCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetEndpointCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetEndpointCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetEndpointCommandError(output, context);\n  }\n  const contents: GetEndpointCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    EndpointResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.EndpointResponse = deserializeAws_restJson1EndpointResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetEndpointCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetEndpointCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetEventStreamCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetEventStreamCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetEventStreamCommandError(output, context);\n  }\n  const contents: GetEventStreamCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    EventStream: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.EventStream = deserializeAws_restJson1EventStream(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetEventStreamCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetEventStreamCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetExportJobCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetExportJobCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetExportJobCommandError(output, context);\n  }\n  const contents: GetExportJobCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ExportJobResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.ExportJobResponse = deserializeAws_restJson1ExportJobResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetExportJobCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetExportJobCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetExportJobsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetExportJobsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetExportJobsCommandError(output, context);\n  }\n  const contents: GetExportJobsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ExportJobsResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.ExportJobsResponse = deserializeAws_restJson1ExportJobsResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetExportJobsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetExportJobsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetGcmChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetGcmChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetGcmChannelCommandError(output, context);\n  }\n  const contents: GetGcmChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    GCMChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.GCMChannelResponse = deserializeAws_restJson1GCMChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetGcmChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetGcmChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetImportJobCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetImportJobCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetImportJobCommandError(output, context);\n  }\n  const contents: GetImportJobCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ImportJobResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.ImportJobResponse = deserializeAws_restJson1ImportJobResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetImportJobCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetImportJobCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetImportJobsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetImportJobsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetImportJobsCommandError(output, context);\n  }\n  const contents: GetImportJobsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ImportJobsResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.ImportJobsResponse = deserializeAws_restJson1ImportJobsResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetImportJobsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetImportJobsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetJourneyCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetJourneyCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetJourneyCommandError(output, context);\n  }\n  const contents: GetJourneyCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    JourneyResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.JourneyResponse = deserializeAws_restJson1JourneyResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetJourneyCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetJourneyCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetJourneyDateRangeKpiCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetJourneyDateRangeKpiCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetJourneyDateRangeKpiCommandError(output, context);\n  }\n  const contents: GetJourneyDateRangeKpiCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    JourneyDateRangeKpiResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.JourneyDateRangeKpiResponse = deserializeAws_restJson1JourneyDateRangeKpiResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetJourneyDateRangeKpiCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetJourneyDateRangeKpiCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetJourneyExecutionActivityMetricsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetJourneyExecutionActivityMetricsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetJourneyExecutionActivityMetricsCommandError(output, context);\n  }\n  const contents: GetJourneyExecutionActivityMetricsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    JourneyExecutionActivityMetricsResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.JourneyExecutionActivityMetricsResponse = deserializeAws_restJson1JourneyExecutionActivityMetricsResponse(\n    data,\n    context\n  );\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetJourneyExecutionActivityMetricsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetJourneyExecutionActivityMetricsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetJourneyExecutionMetricsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetJourneyExecutionMetricsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetJourneyExecutionMetricsCommandError(output, context);\n  }\n  const contents: GetJourneyExecutionMetricsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    JourneyExecutionMetricsResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.JourneyExecutionMetricsResponse = deserializeAws_restJson1JourneyExecutionMetricsResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetJourneyExecutionMetricsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetJourneyExecutionMetricsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetPushTemplateCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetPushTemplateCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetPushTemplateCommandError(output, context);\n  }\n  const contents: GetPushTemplateCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    PushNotificationTemplateResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.PushNotificationTemplateResponse = deserializeAws_restJson1PushNotificationTemplateResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetPushTemplateCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetPushTemplateCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetRecommenderConfigurationCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetRecommenderConfigurationCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetRecommenderConfigurationCommandError(output, context);\n  }\n  const contents: GetRecommenderConfigurationCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    RecommenderConfigurationResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.RecommenderConfigurationResponse = deserializeAws_restJson1RecommenderConfigurationResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetRecommenderConfigurationCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetRecommenderConfigurationCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetRecommenderConfigurationsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetRecommenderConfigurationsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetRecommenderConfigurationsCommandError(output, context);\n  }\n  const contents: GetRecommenderConfigurationsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ListRecommenderConfigurationsResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.ListRecommenderConfigurationsResponse = deserializeAws_restJson1ListRecommenderConfigurationsResponse(\n    data,\n    context\n  );\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetRecommenderConfigurationsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetRecommenderConfigurationsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetSegmentCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetSegmentCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetSegmentCommandError(output, context);\n  }\n  const contents: GetSegmentCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    SegmentResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.SegmentResponse = deserializeAws_restJson1SegmentResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetSegmentCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetSegmentCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetSegmentExportJobsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetSegmentExportJobsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetSegmentExportJobsCommandError(output, context);\n  }\n  const contents: GetSegmentExportJobsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ExportJobsResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.ExportJobsResponse = deserializeAws_restJson1ExportJobsResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetSegmentExportJobsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetSegmentExportJobsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetSegmentImportJobsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetSegmentImportJobsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetSegmentImportJobsCommandError(output, context);\n  }\n  const contents: GetSegmentImportJobsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ImportJobsResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.ImportJobsResponse = deserializeAws_restJson1ImportJobsResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetSegmentImportJobsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetSegmentImportJobsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetSegmentsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetSegmentsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetSegmentsCommandError(output, context);\n  }\n  const contents: GetSegmentsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    SegmentsResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.SegmentsResponse = deserializeAws_restJson1SegmentsResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetSegmentsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetSegmentsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetSegmentVersionCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetSegmentVersionCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetSegmentVersionCommandError(output, context);\n  }\n  const contents: GetSegmentVersionCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    SegmentResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.SegmentResponse = deserializeAws_restJson1SegmentResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetSegmentVersionCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetSegmentVersionCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetSegmentVersionsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetSegmentVersionsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetSegmentVersionsCommandError(output, context);\n  }\n  const contents: GetSegmentVersionsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    SegmentsResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.SegmentsResponse = deserializeAws_restJson1SegmentsResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetSegmentVersionsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetSegmentVersionsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetSmsChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetSmsChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetSmsChannelCommandError(output, context);\n  }\n  const contents: GetSmsChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    SMSChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.SMSChannelResponse = deserializeAws_restJson1SMSChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetSmsChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetSmsChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetSmsTemplateCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetSmsTemplateCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetSmsTemplateCommandError(output, context);\n  }\n  const contents: GetSmsTemplateCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    SMSTemplateResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.SMSTemplateResponse = deserializeAws_restJson1SMSTemplateResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetSmsTemplateCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetSmsTemplateCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetUserEndpointsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetUserEndpointsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetUserEndpointsCommandError(output, context);\n  }\n  const contents: GetUserEndpointsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    EndpointsResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.EndpointsResponse = deserializeAws_restJson1EndpointsResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetUserEndpointsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetUserEndpointsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetVoiceChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetVoiceChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetVoiceChannelCommandError(output, context);\n  }\n  const contents: GetVoiceChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    VoiceChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.VoiceChannelResponse = deserializeAws_restJson1VoiceChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetVoiceChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetVoiceChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetVoiceTemplateCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetVoiceTemplateCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetVoiceTemplateCommandError(output, context);\n  }\n  const contents: GetVoiceTemplateCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    VoiceTemplateResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.VoiceTemplateResponse = deserializeAws_restJson1VoiceTemplateResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetVoiceTemplateCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetVoiceTemplateCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1ListJourneysCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListJourneysCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1ListJourneysCommandError(output, context);\n  }\n  const contents: ListJourneysCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    JourneysResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.JourneysResponse = deserializeAws_restJson1JourneysResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1ListJourneysCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListJourneysCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1ListTagsForResourceCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListTagsForResourceCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1ListTagsForResourceCommandError(output, context);\n  }\n  const contents: ListTagsForResourceCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    TagsModel: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.TagsModel = deserializeAws_restJson1TagsModel(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1ListTagsForResourceCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListTagsForResourceCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1ListTemplatesCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListTemplatesCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1ListTemplatesCommandError(output, context);\n  }\n  const contents: ListTemplatesCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    TemplatesResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.TemplatesResponse = deserializeAws_restJson1TemplatesResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1ListTemplatesCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListTemplatesCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1ListTemplateVersionsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListTemplateVersionsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1ListTemplateVersionsCommandError(output, context);\n  }\n  const contents: ListTemplateVersionsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    TemplateVersionsResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.TemplateVersionsResponse = deserializeAws_restJson1TemplateVersionsResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1ListTemplateVersionsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListTemplateVersionsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1PhoneNumberValidateCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PhoneNumberValidateCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1PhoneNumberValidateCommandError(output, context);\n  }\n  const contents: PhoneNumberValidateCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    NumberValidateResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.NumberValidateResponse = deserializeAws_restJson1NumberValidateResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1PhoneNumberValidateCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PhoneNumberValidateCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1PutEventsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutEventsCommandOutput> => {\n  if (output.statusCode !== 202 && output.statusCode >= 300) {\n    return deserializeAws_restJson1PutEventsCommandError(output, context);\n  }\n  const contents: PutEventsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    EventsResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.EventsResponse = deserializeAws_restJson1EventsResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1PutEventsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutEventsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1PutEventStreamCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutEventStreamCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1PutEventStreamCommandError(output, context);\n  }\n  const contents: PutEventStreamCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    EventStream: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.EventStream = deserializeAws_restJson1EventStream(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1PutEventStreamCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutEventStreamCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1RemoveAttributesCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<RemoveAttributesCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1RemoveAttributesCommandError(output, context);\n  }\n  const contents: RemoveAttributesCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    AttributesResource: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.AttributesResource = deserializeAws_restJson1AttributesResource(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1RemoveAttributesCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<RemoveAttributesCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1SendMessagesCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<SendMessagesCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1SendMessagesCommandError(output, context);\n  }\n  const contents: SendMessagesCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    MessageResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.MessageResponse = deserializeAws_restJson1MessageResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1SendMessagesCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<SendMessagesCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1SendUsersMessagesCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<SendUsersMessagesCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1SendUsersMessagesCommandError(output, context);\n  }\n  const contents: SendUsersMessagesCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    SendUsersMessageResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.SendUsersMessageResponse = deserializeAws_restJson1SendUsersMessageResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1SendUsersMessagesCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<SendUsersMessagesCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1TagResourceCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<TagResourceCommandOutput> => {\n  if (output.statusCode !== 204 && output.statusCode >= 300) {\n    return deserializeAws_restJson1TagResourceCommandError(output, context);\n  }\n  const contents: TagResourceCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  await collectBody(output.body, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1TagResourceCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<TagResourceCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UntagResourceCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UntagResourceCommandOutput> => {\n  if (output.statusCode !== 204 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UntagResourceCommandError(output, context);\n  }\n  const contents: UntagResourceCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  await collectBody(output.body, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UntagResourceCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UntagResourceCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdateAdmChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateAdmChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdateAdmChannelCommandError(output, context);\n  }\n  const contents: UpdateAdmChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ADMChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.ADMChannelResponse = deserializeAws_restJson1ADMChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdateAdmChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateAdmChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdateApnsChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateApnsChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdateApnsChannelCommandError(output, context);\n  }\n  const contents: UpdateApnsChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    APNSChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.APNSChannelResponse = deserializeAws_restJson1APNSChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdateApnsChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateApnsChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdateApnsSandboxChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateApnsSandboxChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdateApnsSandboxChannelCommandError(output, context);\n  }\n  const contents: UpdateApnsSandboxChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    APNSSandboxChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.APNSSandboxChannelResponse = deserializeAws_restJson1APNSSandboxChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdateApnsSandboxChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateApnsSandboxChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdateApnsVoipChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateApnsVoipChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdateApnsVoipChannelCommandError(output, context);\n  }\n  const contents: UpdateApnsVoipChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    APNSVoipChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.APNSVoipChannelResponse = deserializeAws_restJson1APNSVoipChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdateApnsVoipChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateApnsVoipChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdateApnsVoipSandboxChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateApnsVoipSandboxChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdateApnsVoipSandboxChannelCommandError(output, context);\n  }\n  const contents: UpdateApnsVoipSandboxChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    APNSVoipSandboxChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.APNSVoipSandboxChannelResponse = deserializeAws_restJson1APNSVoipSandboxChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdateApnsVoipSandboxChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateApnsVoipSandboxChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdateApplicationSettingsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateApplicationSettingsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdateApplicationSettingsCommandError(output, context);\n  }\n  const contents: UpdateApplicationSettingsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ApplicationSettingsResource: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.ApplicationSettingsResource = deserializeAws_restJson1ApplicationSettingsResource(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdateApplicationSettingsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateApplicationSettingsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdateBaiduChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateBaiduChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdateBaiduChannelCommandError(output, context);\n  }\n  const contents: UpdateBaiduChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    BaiduChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.BaiduChannelResponse = deserializeAws_restJson1BaiduChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdateBaiduChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateBaiduChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdateCampaignCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateCampaignCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdateCampaignCommandError(output, context);\n  }\n  const contents: UpdateCampaignCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    CampaignResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.CampaignResponse = deserializeAws_restJson1CampaignResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdateCampaignCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateCampaignCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdateEmailChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateEmailChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdateEmailChannelCommandError(output, context);\n  }\n  const contents: UpdateEmailChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    EmailChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.EmailChannelResponse = deserializeAws_restJson1EmailChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdateEmailChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateEmailChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdateEmailTemplateCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateEmailTemplateCommandOutput> => {\n  if (output.statusCode !== 202 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdateEmailTemplateCommandError(output, context);\n  }\n  const contents: UpdateEmailTemplateCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    MessageBody: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.MessageBody = deserializeAws_restJson1MessageBody(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdateEmailTemplateCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateEmailTemplateCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdateEndpointCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateEndpointCommandOutput> => {\n  if (output.statusCode !== 202 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdateEndpointCommandError(output, context);\n  }\n  const contents: UpdateEndpointCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    MessageBody: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.MessageBody = deserializeAws_restJson1MessageBody(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdateEndpointCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateEndpointCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdateEndpointsBatchCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateEndpointsBatchCommandOutput> => {\n  if (output.statusCode !== 202 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdateEndpointsBatchCommandError(output, context);\n  }\n  const contents: UpdateEndpointsBatchCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    MessageBody: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.MessageBody = deserializeAws_restJson1MessageBody(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdateEndpointsBatchCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateEndpointsBatchCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdateGcmChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateGcmChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdateGcmChannelCommandError(output, context);\n  }\n  const contents: UpdateGcmChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    GCMChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.GCMChannelResponse = deserializeAws_restJson1GCMChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdateGcmChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateGcmChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdateJourneyCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateJourneyCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdateJourneyCommandError(output, context);\n  }\n  const contents: UpdateJourneyCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    JourneyResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.JourneyResponse = deserializeAws_restJson1JourneyResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdateJourneyCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateJourneyCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ConflictException\":\n    case \"com.amazonaws.pinpoint#ConflictException\":\n      response = {\n        ...(await deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdateJourneyStateCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateJourneyStateCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdateJourneyStateCommandError(output, context);\n  }\n  const contents: UpdateJourneyStateCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    JourneyResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.JourneyResponse = deserializeAws_restJson1JourneyResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdateJourneyStateCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateJourneyStateCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdatePushTemplateCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdatePushTemplateCommandOutput> => {\n  if (output.statusCode !== 202 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdatePushTemplateCommandError(output, context);\n  }\n  const contents: UpdatePushTemplateCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    MessageBody: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.MessageBody = deserializeAws_restJson1MessageBody(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdatePushTemplateCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdatePushTemplateCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdateRecommenderConfigurationCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateRecommenderConfigurationCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdateRecommenderConfigurationCommandError(output, context);\n  }\n  const contents: UpdateRecommenderConfigurationCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    RecommenderConfigurationResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.RecommenderConfigurationResponse = deserializeAws_restJson1RecommenderConfigurationResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdateRecommenderConfigurationCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateRecommenderConfigurationCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdateSegmentCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateSegmentCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdateSegmentCommandError(output, context);\n  }\n  const contents: UpdateSegmentCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    SegmentResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.SegmentResponse = deserializeAws_restJson1SegmentResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdateSegmentCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateSegmentCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdateSmsChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateSmsChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdateSmsChannelCommandError(output, context);\n  }\n  const contents: UpdateSmsChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    SMSChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.SMSChannelResponse = deserializeAws_restJson1SMSChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdateSmsChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateSmsChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdateSmsTemplateCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateSmsTemplateCommandOutput> => {\n  if (output.statusCode !== 202 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdateSmsTemplateCommandError(output, context);\n  }\n  const contents: UpdateSmsTemplateCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    MessageBody: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.MessageBody = deserializeAws_restJson1MessageBody(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdateSmsTemplateCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateSmsTemplateCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdateTemplateActiveVersionCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateTemplateActiveVersionCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdateTemplateActiveVersionCommandError(output, context);\n  }\n  const contents: UpdateTemplateActiveVersionCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    MessageBody: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.MessageBody = deserializeAws_restJson1MessageBody(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdateTemplateActiveVersionCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateTemplateActiveVersionCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdateVoiceChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateVoiceChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdateVoiceChannelCommandError(output, context);\n  }\n  const contents: UpdateVoiceChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    VoiceChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.VoiceChannelResponse = deserializeAws_restJson1VoiceChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdateVoiceChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateVoiceChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdateVoiceTemplateCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateVoiceTemplateCommandOutput> => {\n  if (output.statusCode !== 202 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdateVoiceTemplateCommandError(output, context);\n  }\n  const contents: UpdateVoiceTemplateCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    MessageBody: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.MessageBody = deserializeAws_restJson1MessageBody(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdateVoiceTemplateCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateVoiceTemplateCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nconst deserializeAws_restJson1BadRequestExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<BadRequestException> => {\n  const contents: BadRequestException = {\n    name: \"BadRequestException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    Message: undefined,\n    RequestID: undefined,\n  };\n  const data: any = parsedOutput.body;\n  if (data.Message !== undefined && data.Message !== null) {\n    contents.Message = data.Message;\n  }\n  if (data.RequestID !== undefined && data.RequestID !== null) {\n    contents.RequestID = data.RequestID;\n  }\n  return contents;\n};\n\nconst deserializeAws_restJson1ConflictExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<ConflictException> => {\n  const contents: ConflictException = {\n    name: \"ConflictException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    Message: undefined,\n    RequestID: undefined,\n  };\n  const data: any = parsedOutput.body;\n  if (data.Message !== undefined && data.Message !== null) {\n    contents.Message = data.Message;\n  }\n  if (data.RequestID !== undefined && data.RequestID !== null) {\n    contents.RequestID = data.RequestID;\n  }\n  return contents;\n};\n\nconst deserializeAws_restJson1ForbiddenExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<ForbiddenException> => {\n  const contents: ForbiddenException = {\n    name: \"ForbiddenException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    Message: undefined,\n    RequestID: undefined,\n  };\n  const data: any = parsedOutput.body;\n  if (data.Message !== undefined && data.Message !== null) {\n    contents.Message = data.Message;\n  }\n  if (data.RequestID !== undefined && data.RequestID !== null) {\n    contents.RequestID = data.RequestID;\n  }\n  return contents;\n};\n\nconst deserializeAws_restJson1InternalServerErrorExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<InternalServerErrorException> => {\n  const contents: InternalServerErrorException = {\n    name: \"InternalServerErrorException\",\n    $fault: \"server\",\n    $metadata: deserializeMetadata(parsedOutput),\n    Message: undefined,\n    RequestID: undefined,\n  };\n  const data: any = parsedOutput.body;\n  if (data.Message !== undefined && data.Message !== null) {\n    contents.Message = data.Message;\n  }\n  if (data.RequestID !== undefined && data.RequestID !== null) {\n    contents.RequestID = data.RequestID;\n  }\n  return contents;\n};\n\nconst deserializeAws_restJson1MethodNotAllowedExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<MethodNotAllowedException> => {\n  const contents: MethodNotAllowedException = {\n    name: \"MethodNotAllowedException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    Message: undefined,\n    RequestID: undefined,\n  };\n  const data: any = parsedOutput.body;\n  if (data.Message !== undefined && data.Message !== null) {\n    contents.Message = data.Message;\n  }\n  if (data.RequestID !== undefined && data.RequestID !== null) {\n    contents.RequestID = data.RequestID;\n  }\n  return contents;\n};\n\nconst deserializeAws_restJson1NotFoundExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<NotFoundException> => {\n  const contents: NotFoundException = {\n    name: \"NotFoundException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    Message: undefined,\n    RequestID: undefined,\n  };\n  const data: any = parsedOutput.body;\n  if (data.Message !== undefined && data.Message !== null) {\n    contents.Message = data.Message;\n  }\n  if (data.RequestID !== undefined && data.RequestID !== null) {\n    contents.RequestID = data.RequestID;\n  }\n  return contents;\n};\n\nconst deserializeAws_restJson1PayloadTooLargeExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<PayloadTooLargeException> => {\n  const contents: PayloadTooLargeException = {\n    name: \"PayloadTooLargeException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    Message: undefined,\n    RequestID: undefined,\n  };\n  const data: any = parsedOutput.body;\n  if (data.Message !== undefined && data.Message !== null) {\n    contents.Message = data.Message;\n  }\n  if (data.RequestID !== undefined && data.RequestID !== null) {\n    contents.RequestID = data.RequestID;\n  }\n  return contents;\n};\n\nconst deserializeAws_restJson1TooManyRequestsExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<TooManyRequestsException> => {\n  const contents: TooManyRequestsException = {\n    name: \"TooManyRequestsException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    Message: undefined,\n    RequestID: undefined,\n  };\n  const data: any = parsedOutput.body;\n  if (data.Message !== undefined && data.Message !== null) {\n    contents.Message = data.Message;\n  }\n  if (data.RequestID !== undefined && data.RequestID !== null) {\n    contents.RequestID = data.RequestID;\n  }\n  return contents;\n};\n\nconst serializeAws_restJson1Activity = (input: Activity, context: __SerdeContext): any => {\n  return {\n    ...(input.CUSTOM !== undefined &&\n      input.CUSTOM !== null && { CUSTOM: serializeAws_restJson1CustomMessageActivity(input.CUSTOM, context) }),\n    ...(input.ConditionalSplit !== undefined &&\n      input.ConditionalSplit !== null && {\n        ConditionalSplit: serializeAws_restJson1ConditionalSplitActivity(input.ConditionalSplit, context),\n      }),\n    ...(input.Description !== undefined && input.Description !== null && { Description: input.Description }),\n    ...(input.EMAIL !== undefined &&\n      input.EMAIL !== null && { EMAIL: serializeAws_restJson1EmailMessageActivity(input.EMAIL, context) }),\n    ...(input.Holdout !== undefined &&\n      input.Holdout !== null && { Holdout: serializeAws_restJson1HoldoutActivity(input.Holdout, context) }),\n    ...(input.MultiCondition !== undefined &&\n      input.MultiCondition !== null && {\n        MultiCondition: serializeAws_restJson1MultiConditionalSplitActivity(input.MultiCondition, context),\n      }),\n    ...(input.PUSH !== undefined &&\n      input.PUSH !== null && { PUSH: serializeAws_restJson1PushMessageActivity(input.PUSH, context) }),\n    ...(input.RandomSplit !== undefined &&\n      input.RandomSplit !== null && {\n        RandomSplit: serializeAws_restJson1RandomSplitActivity(input.RandomSplit, context),\n      }),\n    ...(input.SMS !== undefined &&\n      input.SMS !== null && { SMS: serializeAws_restJson1SMSMessageActivity(input.SMS, context) }),\n    ...(input.Wait !== undefined &&\n      input.Wait !== null && { Wait: serializeAws_restJson1WaitActivity(input.Wait, context) }),\n  };\n};\n\nconst serializeAws_restJson1AddressConfiguration = (input: AddressConfiguration, context: __SerdeContext): any => {\n  return {\n    ...(input.BodyOverride !== undefined && input.BodyOverride !== null && { BodyOverride: input.BodyOverride }),\n    ...(input.ChannelType !== undefined && input.ChannelType !== null && { ChannelType: input.ChannelType }),\n    ...(input.Context !== undefined &&\n      input.Context !== null && { Context: serializeAws_restJson1MapOf__string(input.Context, context) }),\n    ...(input.RawContent !== undefined && input.RawContent !== null && { RawContent: input.RawContent }),\n    ...(input.Substitutions !== undefined &&\n      input.Substitutions !== null && {\n        Substitutions: serializeAws_restJson1MapOfListOf__string(input.Substitutions, context),\n      }),\n    ...(input.TitleOverride !== undefined && input.TitleOverride !== null && { TitleOverride: input.TitleOverride }),\n  };\n};\n\nconst serializeAws_restJson1ADMChannelRequest = (input: ADMChannelRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.ClientId !== undefined && input.ClientId !== null && { ClientId: input.ClientId }),\n    ...(input.ClientSecret !== undefined && input.ClientSecret !== null && { ClientSecret: input.ClientSecret }),\n    ...(input.Enabled !== undefined && input.Enabled !== null && { Enabled: input.Enabled }),\n  };\n};\n\nconst serializeAws_restJson1ADMMessage = (input: ADMMessage, context: __SerdeContext): any => {\n  return {\n    ...(input.Action !== undefined && input.Action !== null && { Action: input.Action }),\n    ...(input.Body !== undefined && input.Body !== null && { Body: input.Body }),\n    ...(input.ConsolidationKey !== undefined &&\n      input.ConsolidationKey !== null && { ConsolidationKey: input.ConsolidationKey }),\n    ...(input.Data !== undefined &&\n      input.Data !== null && { Data: serializeAws_restJson1MapOf__string(input.Data, context) }),\n    ...(input.ExpiresAfter !== undefined && input.ExpiresAfter !== null && { ExpiresAfter: input.ExpiresAfter }),\n    ...(input.IconReference !== undefined && input.IconReference !== null && { IconReference: input.IconReference }),\n    ...(input.ImageIconUrl !== undefined && input.ImageIconUrl !== null && { ImageIconUrl: input.ImageIconUrl }),\n    ...(input.ImageUrl !== undefined && input.ImageUrl !== null && { ImageUrl: input.ImageUrl }),\n    ...(input.MD5 !== undefined && input.MD5 !== null && { MD5: input.MD5 }),\n    ...(input.RawContent !== undefined && input.RawContent !== null && { RawContent: input.RawContent }),\n    ...(input.SilentPush !== undefined && input.SilentPush !== null && { SilentPush: input.SilentPush }),\n    ...(input.SmallImageIconUrl !== undefined &&\n      input.SmallImageIconUrl !== null && { SmallImageIconUrl: input.SmallImageIconUrl }),\n    ...(input.Sound !== undefined && input.Sound !== null && { Sound: input.Sound }),\n    ...(input.Substitutions !== undefined &&\n      input.Substitutions !== null && {\n        Substitutions: serializeAws_restJson1MapOfListOf__string(input.Substitutions, context),\n      }),\n    ...(input.Title !== undefined && input.Title !== null && { Title: input.Title }),\n    ...(input.Url !== undefined && input.Url !== null && { Url: input.Url }),\n  };\n};\n\nconst serializeAws_restJson1AndroidPushNotificationTemplate = (\n  input: AndroidPushNotificationTemplate,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.Action !== undefined && input.Action !== null && { Action: input.Action }),\n    ...(input.Body !== undefined && input.Body !== null && { Body: input.Body }),\n    ...(input.ImageIconUrl !== undefined && input.ImageIconUrl !== null && { ImageIconUrl: input.ImageIconUrl }),\n    ...(input.ImageUrl !== undefined && input.ImageUrl !== null && { ImageUrl: input.ImageUrl }),\n    ...(input.RawContent !== undefined && input.RawContent !== null && { RawContent: input.RawContent }),\n    ...(input.SmallImageIconUrl !== undefined &&\n      input.SmallImageIconUrl !== null && { SmallImageIconUrl: input.SmallImageIconUrl }),\n    ...(input.Sound !== undefined && input.Sound !== null && { Sound: input.Sound }),\n    ...(input.Title !== undefined && input.Title !== null && { Title: input.Title }),\n    ...(input.Url !== undefined && input.Url !== null && { Url: input.Url }),\n  };\n};\n\nconst serializeAws_restJson1APNSChannelRequest = (input: APNSChannelRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.BundleId !== undefined && input.BundleId !== null && { BundleId: input.BundleId }),\n    ...(input.Certificate !== undefined && input.Certificate !== null && { Certificate: input.Certificate }),\n    ...(input.DefaultAuthenticationMethod !== undefined &&\n      input.DefaultAuthenticationMethod !== null && { DefaultAuthenticationMethod: input.DefaultAuthenticationMethod }),\n    ...(input.Enabled !== undefined && input.Enabled !== null && { Enabled: input.Enabled }),\n    ...(input.PrivateKey !== undefined && input.PrivateKey !== null && { PrivateKey: input.PrivateKey }),\n    ...(input.TeamId !== undefined && input.TeamId !== null && { TeamId: input.TeamId }),\n    ...(input.TokenKey !== undefined && input.TokenKey !== null && { TokenKey: input.TokenKey }),\n    ...(input.TokenKeyId !== undefined && input.TokenKeyId !== null && { TokenKeyId: input.TokenKeyId }),\n  };\n};\n\nconst serializeAws_restJson1APNSMessage = (input: APNSMessage, context: __SerdeContext): any => {\n  return {\n    ...(input.APNSPushType !== undefined && input.APNSPushType !== null && { APNSPushType: input.APNSPushType }),\n    ...(input.Action !== undefined && input.Action !== null && { Action: input.Action }),\n    ...(input.Badge !== undefined && input.Badge !== null && { Badge: input.Badge }),\n    ...(input.Body !== undefined && input.Body !== null && { Body: input.Body }),\n    ...(input.Category !== undefined && input.Category !== null && { Category: input.Category }),\n    ...(input.CollapseId !== undefined && input.CollapseId !== null && { CollapseId: input.CollapseId }),\n    ...(input.Data !== undefined &&\n      input.Data !== null && { Data: serializeAws_restJson1MapOf__string(input.Data, context) }),\n    ...(input.MediaUrl !== undefined && input.MediaUrl !== null && { MediaUrl: input.MediaUrl }),\n    ...(input.PreferredAuthenticationMethod !== undefined &&\n      input.PreferredAuthenticationMethod !== null && {\n        PreferredAuthenticationMethod: input.PreferredAuthenticationMethod,\n      }),\n    ...(input.Priority !== undefined && input.Priority !== null && { Priority: input.Priority }),\n    ...(input.RawContent !== undefined && input.RawContent !== null && { RawContent: input.RawContent }),\n    ...(input.SilentPush !== undefined && input.SilentPush !== null && { SilentPush: input.SilentPush }),\n    ...(input.Sound !== undefined && input.Sound !== null && { Sound: input.Sound }),\n    ...(input.Substitutions !== undefined &&\n      input.Substitutions !== null && {\n        Substitutions: serializeAws_restJson1MapOfListOf__string(input.Substitutions, context),\n      }),\n    ...(input.ThreadId !== undefined && input.ThreadId !== null && { ThreadId: input.ThreadId }),\n    ...(input.TimeToLive !== undefined && input.TimeToLive !== null && { TimeToLive: input.TimeToLive }),\n    ...(input.Title !== undefined && input.Title !== null && { Title: input.Title }),\n    ...(input.Url !== undefined && input.Url !== null && { Url: input.Url }),\n  };\n};\n\nconst serializeAws_restJson1APNSPushNotificationTemplate = (\n  input: APNSPushNotificationTemplate,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.Action !== undefined && input.Action !== null && { Action: input.Action }),\n    ...(input.Body !== undefined && input.Body !== null && { Body: input.Body }),\n    ...(input.MediaUrl !== undefined && input.MediaUrl !== null && { MediaUrl: input.MediaUrl }),\n    ...(input.RawContent !== undefined && input.RawContent !== null && { RawContent: input.RawContent }),\n    ...(input.Sound !== undefined && input.Sound !== null && { Sound: input.Sound }),\n    ...(input.Title !== undefined && input.Title !== null && { Title: input.Title }),\n    ...(input.Url !== undefined && input.Url !== null && { Url: input.Url }),\n  };\n};\n\nconst serializeAws_restJson1APNSSandboxChannelRequest = (\n  input: APNSSandboxChannelRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.BundleId !== undefined && input.BundleId !== null && { BundleId: input.BundleId }),\n    ...(input.Certificate !== undefined && input.Certificate !== null && { Certificate: input.Certificate }),\n    ...(input.DefaultAuthenticationMethod !== undefined &&\n      input.DefaultAuthenticationMethod !== null && { DefaultAuthenticationMethod: input.DefaultAuthenticationMethod }),\n    ...(input.Enabled !== undefined && input.Enabled !== null && { Enabled: input.Enabled }),\n    ...(input.PrivateKey !== undefined && input.PrivateKey !== null && { PrivateKey: input.PrivateKey }),\n    ...(input.TeamId !== undefined && input.TeamId !== null && { TeamId: input.TeamId }),\n    ...(input.TokenKey !== undefined && input.TokenKey !== null && { TokenKey: input.TokenKey }),\n    ...(input.TokenKeyId !== undefined && input.TokenKeyId !== null && { TokenKeyId: input.TokenKeyId }),\n  };\n};\n\nconst serializeAws_restJson1APNSVoipChannelRequest = (input: APNSVoipChannelRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.BundleId !== undefined && input.BundleId !== null && { BundleId: input.BundleId }),\n    ...(input.Certificate !== undefined && input.Certificate !== null && { Certificate: input.Certificate }),\n    ...(input.DefaultAuthenticationMethod !== undefined &&\n      input.DefaultAuthenticationMethod !== null && { DefaultAuthenticationMethod: input.DefaultAuthenticationMethod }),\n    ...(input.Enabled !== undefined && input.Enabled !== null && { Enabled: input.Enabled }),\n    ...(input.PrivateKey !== undefined && input.PrivateKey !== null && { PrivateKey: input.PrivateKey }),\n    ...(input.TeamId !== undefined && input.TeamId !== null && { TeamId: input.TeamId }),\n    ...(input.TokenKey !== undefined && input.TokenKey !== null && { TokenKey: input.TokenKey }),\n    ...(input.TokenKeyId !== undefined && input.TokenKeyId !== null && { TokenKeyId: input.TokenKeyId }),\n  };\n};\n\nconst serializeAws_restJson1APNSVoipSandboxChannelRequest = (\n  input: APNSVoipSandboxChannelRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.BundleId !== undefined && input.BundleId !== null && { BundleId: input.BundleId }),\n    ...(input.Certificate !== undefined && input.Certificate !== null && { Certificate: input.Certificate }),\n    ...(input.DefaultAuthenticationMethod !== undefined &&\n      input.DefaultAuthenticationMethod !== null && { DefaultAuthenticationMethod: input.DefaultAuthenticationMethod }),\n    ...(input.Enabled !== undefined && input.Enabled !== null && { Enabled: input.Enabled }),\n    ...(input.PrivateKey !== undefined && input.PrivateKey !== null && { PrivateKey: input.PrivateKey }),\n    ...(input.TeamId !== undefined && input.TeamId !== null && { TeamId: input.TeamId }),\n    ...(input.TokenKey !== undefined && input.TokenKey !== null && { TokenKey: input.TokenKey }),\n    ...(input.TokenKeyId !== undefined && input.TokenKeyId !== null && { TokenKeyId: input.TokenKeyId }),\n  };\n};\n\nconst serializeAws_restJson1AttributeDimension = (input: AttributeDimension, context: __SerdeContext): any => {\n  return {\n    ...(input.AttributeType !== undefined && input.AttributeType !== null && { AttributeType: input.AttributeType }),\n    ...(input.Values !== undefined &&\n      input.Values !== null && { Values: serializeAws_restJson1ListOf__string(input.Values, context) }),\n  };\n};\n\nconst serializeAws_restJson1BaiduChannelRequest = (input: BaiduChannelRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.ApiKey !== undefined && input.ApiKey !== null && { ApiKey: input.ApiKey }),\n    ...(input.Enabled !== undefined && input.Enabled !== null && { Enabled: input.Enabled }),\n    ...(input.SecretKey !== undefined && input.SecretKey !== null && { SecretKey: input.SecretKey }),\n  };\n};\n\nconst serializeAws_restJson1BaiduMessage = (input: BaiduMessage, context: __SerdeContext): any => {\n  return {\n    ...(input.Action !== undefined && input.Action !== null && { Action: input.Action }),\n    ...(input.Body !== undefined && input.Body !== null && { Body: input.Body }),\n    ...(input.Data !== undefined &&\n      input.Data !== null && { Data: serializeAws_restJson1MapOf__string(input.Data, context) }),\n    ...(input.IconReference !== undefined && input.IconReference !== null && { IconReference: input.IconReference }),\n    ...(input.ImageIconUrl !== undefined && input.ImageIconUrl !== null && { ImageIconUrl: input.ImageIconUrl }),\n    ...(input.ImageUrl !== undefined && input.ImageUrl !== null && { ImageUrl: input.ImageUrl }),\n    ...(input.RawContent !== undefined && input.RawContent !== null && { RawContent: input.RawContent }),\n    ...(input.SilentPush !== undefined && input.SilentPush !== null && { SilentPush: input.SilentPush }),\n    ...(input.SmallImageIconUrl !== undefined &&\n      input.SmallImageIconUrl !== null && { SmallImageIconUrl: input.SmallImageIconUrl }),\n    ...(input.Sound !== undefined && input.Sound !== null && { Sound: input.Sound }),\n    ...(input.Substitutions !== undefined &&\n      input.Substitutions !== null && {\n        Substitutions: serializeAws_restJson1MapOfListOf__string(input.Substitutions, context),\n      }),\n    ...(input.TimeToLive !== undefined && input.TimeToLive !== null && { TimeToLive: input.TimeToLive }),\n    ...(input.Title !== undefined && input.Title !== null && { Title: input.Title }),\n    ...(input.Url !== undefined && input.Url !== null && { Url: input.Url }),\n  };\n};\n\nconst serializeAws_restJson1CampaignCustomMessage = (input: CampaignCustomMessage, context: __SerdeContext): any => {\n  return {\n    ...(input.Data !== undefined && input.Data !== null && { Data: input.Data }),\n  };\n};\n\nconst serializeAws_restJson1CampaignEmailMessage = (input: CampaignEmailMessage, context: __SerdeContext): any => {\n  return {\n    ...(input.Body !== undefined && input.Body !== null && { Body: input.Body }),\n    ...(input.FromAddress !== undefined && input.FromAddress !== null && { FromAddress: input.FromAddress }),\n    ...(input.HtmlBody !== undefined && input.HtmlBody !== null && { HtmlBody: input.HtmlBody }),\n    ...(input.Title !== undefined && input.Title !== null && { Title: input.Title }),\n  };\n};\n\nconst serializeAws_restJson1CampaignEventFilter = (input: CampaignEventFilter, context: __SerdeContext): any => {\n  return {\n    ...(input.Dimensions !== undefined &&\n      input.Dimensions !== null && { Dimensions: serializeAws_restJson1EventDimensions(input.Dimensions, context) }),\n    ...(input.FilterType !== undefined && input.FilterType !== null && { FilterType: input.FilterType }),\n  };\n};\n\nconst serializeAws_restJson1CampaignHook = (input: CampaignHook, context: __SerdeContext): any => {\n  return {\n    ...(input.LambdaFunctionName !== undefined &&\n      input.LambdaFunctionName !== null && { LambdaFunctionName: input.LambdaFunctionName }),\n    ...(input.Mode !== undefined && input.Mode !== null && { Mode: input.Mode }),\n    ...(input.WebUrl !== undefined && input.WebUrl !== null && { WebUrl: input.WebUrl }),\n  };\n};\n\nconst serializeAws_restJson1CampaignLimits = (input: CampaignLimits, context: __SerdeContext): any => {\n  return {\n    ...(input.Daily !== undefined && input.Daily !== null && { Daily: input.Daily }),\n    ...(input.MaximumDuration !== undefined &&\n      input.MaximumDuration !== null && { MaximumDuration: input.MaximumDuration }),\n    ...(input.MessagesPerSecond !== undefined &&\n      input.MessagesPerSecond !== null && { MessagesPerSecond: input.MessagesPerSecond }),\n    ...(input.Total !== undefined && input.Total !== null && { Total: input.Total }),\n  };\n};\n\nconst serializeAws_restJson1CampaignSmsMessage = (input: CampaignSmsMessage, context: __SerdeContext): any => {\n  return {\n    ...(input.Body !== undefined && input.Body !== null && { Body: input.Body }),\n    ...(input.MessageType !== undefined && input.MessageType !== null && { MessageType: input.MessageType }),\n    ...(input.SenderId !== undefined && input.SenderId !== null && { SenderId: input.SenderId }),\n  };\n};\n\nconst serializeAws_restJson1Condition = (input: Condition, context: __SerdeContext): any => {\n  return {\n    ...(input.Conditions !== undefined &&\n      input.Conditions !== null && {\n        Conditions: serializeAws_restJson1ListOfSimpleCondition(input.Conditions, context),\n      }),\n    ...(input.Operator !== undefined && input.Operator !== null && { Operator: input.Operator }),\n  };\n};\n\nconst serializeAws_restJson1ConditionalSplitActivity = (\n  input: ConditionalSplitActivity,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.Condition !== undefined &&\n      input.Condition !== null && { Condition: serializeAws_restJson1Condition(input.Condition, context) }),\n    ...(input.EvaluationWaitTime !== undefined &&\n      input.EvaluationWaitTime !== null && {\n        EvaluationWaitTime: serializeAws_restJson1WaitTime(input.EvaluationWaitTime, context),\n      }),\n    ...(input.FalseActivity !== undefined && input.FalseActivity !== null && { FalseActivity: input.FalseActivity }),\n    ...(input.TrueActivity !== undefined && input.TrueActivity !== null && { TrueActivity: input.TrueActivity }),\n  };\n};\n\nconst serializeAws_restJson1CreateApplicationRequest = (\n  input: CreateApplicationRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.Name !== undefined && input.Name !== null && { Name: input.Name }),\n    ...(input.tags !== undefined &&\n      input.tags !== null && { tags: serializeAws_restJson1MapOf__string(input.tags, context) }),\n  };\n};\n\nconst serializeAws_restJson1CreateRecommenderConfigurationShape = (\n  input: CreateRecommenderConfigurationShape,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.Attributes !== undefined &&\n      input.Attributes !== null && { Attributes: serializeAws_restJson1MapOf__string(input.Attributes, context) }),\n    ...(input.Description !== undefined && input.Description !== null && { Description: input.Description }),\n    ...(input.Name !== undefined && input.Name !== null && { Name: input.Name }),\n    ...(input.RecommendationProviderIdType !== undefined &&\n      input.RecommendationProviderIdType !== null && {\n        RecommendationProviderIdType: input.RecommendationProviderIdType,\n      }),\n    ...(input.RecommendationProviderRoleArn !== undefined &&\n      input.RecommendationProviderRoleArn !== null && {\n        RecommendationProviderRoleArn: input.RecommendationProviderRoleArn,\n      }),\n    ...(input.RecommendationProviderUri !== undefined &&\n      input.RecommendationProviderUri !== null && { RecommendationProviderUri: input.RecommendationProviderUri }),\n    ...(input.RecommendationTransformerUri !== undefined &&\n      input.RecommendationTransformerUri !== null && {\n        RecommendationTransformerUri: input.RecommendationTransformerUri,\n      }),\n    ...(input.RecommendationsDisplayName !== undefined &&\n      input.RecommendationsDisplayName !== null && { RecommendationsDisplayName: input.RecommendationsDisplayName }),\n    ...(input.RecommendationsPerMessage !== undefined &&\n      input.RecommendationsPerMessage !== null && { RecommendationsPerMessage: input.RecommendationsPerMessage }),\n  };\n};\n\nconst serializeAws_restJson1CustomDeliveryConfiguration = (\n  input: CustomDeliveryConfiguration,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.DeliveryUri !== undefined && input.DeliveryUri !== null && { DeliveryUri: input.DeliveryUri }),\n    ...(input.EndpointTypes !== undefined &&\n      input.EndpointTypes !== null && {\n        EndpointTypes: serializeAws_restJson1ListOf__EndpointTypesElement(input.EndpointTypes, context),\n      }),\n  };\n};\n\nconst serializeAws_restJson1CustomMessageActivity = (input: CustomMessageActivity, context: __SerdeContext): any => {\n  return {\n    ...(input.DeliveryUri !== undefined && input.DeliveryUri !== null && { DeliveryUri: input.DeliveryUri }),\n    ...(input.EndpointTypes !== undefined &&\n      input.EndpointTypes !== null && {\n        EndpointTypes: serializeAws_restJson1ListOf__EndpointTypesElement(input.EndpointTypes, context),\n      }),\n    ...(input.MessageConfig !== undefined &&\n      input.MessageConfig !== null && {\n        MessageConfig: serializeAws_restJson1JourneyCustomMessage(input.MessageConfig, context),\n      }),\n    ...(input.NextActivity !== undefined && input.NextActivity !== null && { NextActivity: input.NextActivity }),\n    ...(input.TemplateName !== undefined && input.TemplateName !== null && { TemplateName: input.TemplateName }),\n    ...(input.TemplateVersion !== undefined &&\n      input.TemplateVersion !== null && { TemplateVersion: input.TemplateVersion }),\n  };\n};\n\nconst serializeAws_restJson1DefaultMessage = (input: DefaultMessage, context: __SerdeContext): any => {\n  return {\n    ...(input.Body !== undefined && input.Body !== null && { Body: input.Body }),\n    ...(input.Substitutions !== undefined &&\n      input.Substitutions !== null && {\n        Substitutions: serializeAws_restJson1MapOfListOf__string(input.Substitutions, context),\n      }),\n  };\n};\n\nconst serializeAws_restJson1DefaultPushNotificationMessage = (\n  input: DefaultPushNotificationMessage,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.Action !== undefined && input.Action !== null && { Action: input.Action }),\n    ...(input.Body !== undefined && input.Body !== null && { Body: input.Body }),\n    ...(input.Data !== undefined &&\n      input.Data !== null && { Data: serializeAws_restJson1MapOf__string(input.Data, context) }),\n    ...(input.SilentPush !== undefined && input.SilentPush !== null && { SilentPush: input.SilentPush }),\n    ...(input.Substitutions !== undefined &&\n      input.Substitutions !== null && {\n        Substitutions: serializeAws_restJson1MapOfListOf__string(input.Substitutions, context),\n      }),\n    ...(input.Title !== undefined && input.Title !== null && { Title: input.Title }),\n    ...(input.Url !== undefined && input.Url !== null && { Url: input.Url }),\n  };\n};\n\nconst serializeAws_restJson1DefaultPushNotificationTemplate = (\n  input: DefaultPushNotificationTemplate,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.Action !== undefined && input.Action !== null && { Action: input.Action }),\n    ...(input.Body !== undefined && input.Body !== null && { Body: input.Body }),\n    ...(input.Sound !== undefined && input.Sound !== null && { Sound: input.Sound }),\n    ...(input.Title !== undefined && input.Title !== null && { Title: input.Title }),\n    ...(input.Url !== undefined && input.Url !== null && { Url: input.Url }),\n  };\n};\n\nconst serializeAws_restJson1DirectMessageConfiguration = (\n  input: DirectMessageConfiguration,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.ADMMessage !== undefined &&\n      input.ADMMessage !== null && { ADMMessage: serializeAws_restJson1ADMMessage(input.ADMMessage, context) }),\n    ...(input.APNSMessage !== undefined &&\n      input.APNSMessage !== null && { APNSMessage: serializeAws_restJson1APNSMessage(input.APNSMessage, context) }),\n    ...(input.BaiduMessage !== undefined &&\n      input.BaiduMessage !== null && { BaiduMessage: serializeAws_restJson1BaiduMessage(input.BaiduMessage, context) }),\n    ...(input.DefaultMessage !== undefined &&\n      input.DefaultMessage !== null && {\n        DefaultMessage: serializeAws_restJson1DefaultMessage(input.DefaultMessage, context),\n      }),\n    ...(input.DefaultPushNotificationMessage !== undefined &&\n      input.DefaultPushNotificationMessage !== null && {\n        DefaultPushNotificationMessage: serializeAws_restJson1DefaultPushNotificationMessage(\n          input.DefaultPushNotificationMessage,\n          context\n        ),\n      }),\n    ...(input.EmailMessage !== undefined &&\n      input.EmailMessage !== null && { EmailMessage: serializeAws_restJson1EmailMessage(input.EmailMessage, context) }),\n    ...(input.GCMMessage !== undefined &&\n      input.GCMMessage !== null && { GCMMessage: serializeAws_restJson1GCMMessage(input.GCMMessage, context) }),\n    ...(input.SMSMessage !== undefined &&\n      input.SMSMessage !== null && { SMSMessage: serializeAws_restJson1SMSMessage(input.SMSMessage, context) }),\n    ...(input.VoiceMessage !== undefined &&\n      input.VoiceMessage !== null && { VoiceMessage: serializeAws_restJson1VoiceMessage(input.VoiceMessage, context) }),\n  };\n};\n\nconst serializeAws_restJson1EmailChannelRequest = (input: EmailChannelRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.ConfigurationSet !== undefined &&\n      input.ConfigurationSet !== null && { ConfigurationSet: input.ConfigurationSet }),\n    ...(input.Enabled !== undefined && input.Enabled !== null && { Enabled: input.Enabled }),\n    ...(input.FromAddress !== undefined && input.FromAddress !== null && { FromAddress: input.FromAddress }),\n    ...(input.Identity !== undefined && input.Identity !== null && { Identity: input.Identity }),\n    ...(input.RoleArn !== undefined && input.RoleArn !== null && { RoleArn: input.RoleArn }),\n  };\n};\n\nconst serializeAws_restJson1EmailMessage = (input: EmailMessage, context: __SerdeContext): any => {\n  return {\n    ...(input.Body !== undefined && input.Body !== null && { Body: input.Body }),\n    ...(input.FeedbackForwardingAddress !== undefined &&\n      input.FeedbackForwardingAddress !== null && { FeedbackForwardingAddress: input.FeedbackForwardingAddress }),\n    ...(input.FromAddress !== undefined && input.FromAddress !== null && { FromAddress: input.FromAddress }),\n    ...(input.RawEmail !== undefined &&\n      input.RawEmail !== null && { RawEmail: serializeAws_restJson1RawEmail(input.RawEmail, context) }),\n    ...(input.ReplyToAddresses !== undefined &&\n      input.ReplyToAddresses !== null && {\n        ReplyToAddresses: serializeAws_restJson1ListOf__string(input.ReplyToAddresses, context),\n      }),\n    ...(input.SimpleEmail !== undefined &&\n      input.SimpleEmail !== null && { SimpleEmail: serializeAws_restJson1SimpleEmail(input.SimpleEmail, context) }),\n    ...(input.Substitutions !== undefined &&\n      input.Substitutions !== null && {\n        Substitutions: serializeAws_restJson1MapOfListOf__string(input.Substitutions, context),\n      }),\n  };\n};\n\nconst serializeAws_restJson1EmailMessageActivity = (input: EmailMessageActivity, context: __SerdeContext): any => {\n  return {\n    ...(input.MessageConfig !== undefined &&\n      input.MessageConfig !== null && {\n        MessageConfig: serializeAws_restJson1JourneyEmailMessage(input.MessageConfig, context),\n      }),\n    ...(input.NextActivity !== undefined && input.NextActivity !== null && { NextActivity: input.NextActivity }),\n    ...(input.TemplateName !== undefined && input.TemplateName !== null && { TemplateName: input.TemplateName }),\n    ...(input.TemplateVersion !== undefined &&\n      input.TemplateVersion !== null && { TemplateVersion: input.TemplateVersion }),\n  };\n};\n\nconst serializeAws_restJson1EmailTemplateRequest = (input: EmailTemplateRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.DefaultSubstitutions !== undefined &&\n      input.DefaultSubstitutions !== null && { DefaultSubstitutions: input.DefaultSubstitutions }),\n    ...(input.HtmlPart !== undefined && input.HtmlPart !== null && { HtmlPart: input.HtmlPart }),\n    ...(input.RecommenderId !== undefined && input.RecommenderId !== null && { RecommenderId: input.RecommenderId }),\n    ...(input.Subject !== undefined && input.Subject !== null && { Subject: input.Subject }),\n    ...(input.TemplateDescription !== undefined &&\n      input.TemplateDescription !== null && { TemplateDescription: input.TemplateDescription }),\n    ...(input.TextPart !== undefined && input.TextPart !== null && { TextPart: input.TextPart }),\n    ...(input.tags !== undefined &&\n      input.tags !== null && { tags: serializeAws_restJson1MapOf__string(input.tags, context) }),\n  };\n};\n\nconst serializeAws_restJson1EndpointBatchItem = (input: EndpointBatchItem, context: __SerdeContext): any => {\n  return {\n    ...(input.Address !== undefined && input.Address !== null && { Address: input.Address }),\n    ...(input.Attributes !== undefined &&\n      input.Attributes !== null && {\n        Attributes: serializeAws_restJson1MapOfListOf__string(input.Attributes, context),\n      }),\n    ...(input.ChannelType !== undefined && input.ChannelType !== null && { ChannelType: input.ChannelType }),\n    ...(input.Demographic !== undefined &&\n      input.Demographic !== null && {\n        Demographic: serializeAws_restJson1EndpointDemographic(input.Demographic, context),\n      }),\n    ...(input.EffectiveDate !== undefined && input.EffectiveDate !== null && { EffectiveDate: input.EffectiveDate }),\n    ...(input.EndpointStatus !== undefined &&\n      input.EndpointStatus !== null && { EndpointStatus: input.EndpointStatus }),\n    ...(input.Id !== undefined && input.Id !== null && { Id: input.Id }),\n    ...(input.Location !== undefined &&\n      input.Location !== null && { Location: serializeAws_restJson1EndpointLocation(input.Location, context) }),\n    ...(input.Metrics !== undefined &&\n      input.Metrics !== null && { Metrics: serializeAws_restJson1MapOf__double(input.Metrics, context) }),\n    ...(input.OptOut !== undefined && input.OptOut !== null && { OptOut: input.OptOut }),\n    ...(input.RequestId !== undefined && input.RequestId !== null && { RequestId: input.RequestId }),\n    ...(input.User !== undefined &&\n      input.User !== null && { User: serializeAws_restJson1EndpointUser(input.User, context) }),\n  };\n};\n\nconst serializeAws_restJson1EndpointBatchRequest = (input: EndpointBatchRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.Item !== undefined &&\n      input.Item !== null && { Item: serializeAws_restJson1ListOfEndpointBatchItem(input.Item, context) }),\n  };\n};\n\nconst serializeAws_restJson1EndpointDemographic = (input: EndpointDemographic, context: __SerdeContext): any => {\n  return {\n    ...(input.AppVersion !== undefined && input.AppVersion !== null && { AppVersion: input.AppVersion }),\n    ...(input.Locale !== undefined && input.Locale !== null && { Locale: input.Locale }),\n    ...(input.Make !== undefined && input.Make !== null && { Make: input.Make }),\n    ...(input.Model !== undefined && input.Model !== null && { Model: input.Model }),\n    ...(input.ModelVersion !== undefined && input.ModelVersion !== null && { ModelVersion: input.ModelVersion }),\n    ...(input.Platform !== undefined && input.Platform !== null && { Platform: input.Platform }),\n    ...(input.PlatformVersion !== undefined &&\n      input.PlatformVersion !== null && { PlatformVersion: input.PlatformVersion }),\n    ...(input.Timezone !== undefined && input.Timezone !== null && { Timezone: input.Timezone }),\n  };\n};\n\nconst serializeAws_restJson1EndpointLocation = (input: EndpointLocation, context: __SerdeContext): any => {\n  return {\n    ...(input.City !== undefined && input.City !== null && { City: input.City }),\n    ...(input.Country !== undefined && input.Country !== null && { Country: input.Country }),\n    ...(input.Latitude !== undefined && input.Latitude !== null && { Latitude: input.Latitude }),\n    ...(input.Longitude !== undefined && input.Longitude !== null && { Longitude: input.Longitude }),\n    ...(input.PostalCode !== undefined && input.PostalCode !== null && { PostalCode: input.PostalCode }),\n    ...(input.Region !== undefined && input.Region !== null && { Region: input.Region }),\n  };\n};\n\nconst serializeAws_restJson1EndpointRequest = (input: EndpointRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.Address !== undefined && input.Address !== null && { Address: input.Address }),\n    ...(input.Attributes !== undefined &&\n      input.Attributes !== null && {\n        Attributes: serializeAws_restJson1MapOfListOf__string(input.Attributes, context),\n      }),\n    ...(input.ChannelType !== undefined && input.ChannelType !== null && { ChannelType: input.ChannelType }),\n    ...(input.Demographic !== undefined &&\n      input.Demographic !== null && {\n        Demographic: serializeAws_restJson1EndpointDemographic(input.Demographic, context),\n      }),\n    ...(input.EffectiveDate !== undefined && input.EffectiveDate !== null && { EffectiveDate: input.EffectiveDate }),\n    ...(input.EndpointStatus !== undefined &&\n      input.EndpointStatus !== null && { EndpointStatus: input.EndpointStatus }),\n    ...(input.Location !== undefined &&\n      input.Location !== null && { Location: serializeAws_restJson1EndpointLocation(input.Location, context) }),\n    ...(input.Metrics !== undefined &&\n      input.Metrics !== null && { Metrics: serializeAws_restJson1MapOf__double(input.Metrics, context) }),\n    ...(input.OptOut !== undefined && input.OptOut !== null && { OptOut: input.OptOut }),\n    ...(input.RequestId !== undefined && input.RequestId !== null && { RequestId: input.RequestId }),\n    ...(input.User !== undefined &&\n      input.User !== null && { User: serializeAws_restJson1EndpointUser(input.User, context) }),\n  };\n};\n\nconst serializeAws_restJson1EndpointSendConfiguration = (\n  input: EndpointSendConfiguration,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.BodyOverride !== undefined && input.BodyOverride !== null && { BodyOverride: input.BodyOverride }),\n    ...(input.Context !== undefined &&\n      input.Context !== null && { Context: serializeAws_restJson1MapOf__string(input.Context, context) }),\n    ...(input.RawContent !== undefined && input.RawContent !== null && { RawContent: input.RawContent }),\n    ...(input.Substitutions !== undefined &&\n      input.Substitutions !== null && {\n        Substitutions: serializeAws_restJson1MapOfListOf__string(input.Substitutions, context),\n      }),\n    ...(input.TitleOverride !== undefined && input.TitleOverride !== null && { TitleOverride: input.TitleOverride }),\n  };\n};\n\nconst serializeAws_restJson1EndpointUser = (input: EndpointUser, context: __SerdeContext): any => {\n  return {\n    ...(input.UserAttributes !== undefined &&\n      input.UserAttributes !== null && {\n        UserAttributes: serializeAws_restJson1MapOfListOf__string(input.UserAttributes, context),\n      }),\n    ...(input.UserId !== undefined && input.UserId !== null && { UserId: input.UserId }),\n  };\n};\n\nconst serializeAws_restJson1Event = (input: Event, context: __SerdeContext): any => {\n  return {\n    ...(input.AppPackageName !== undefined &&\n      input.AppPackageName !== null && { AppPackageName: input.AppPackageName }),\n    ...(input.AppTitle !== undefined && input.AppTitle !== null && { AppTitle: input.AppTitle }),\n    ...(input.AppVersionCode !== undefined &&\n      input.AppVersionCode !== null && { AppVersionCode: input.AppVersionCode }),\n    ...(input.Attributes !== undefined &&\n      input.Attributes !== null && { Attributes: serializeAws_restJson1MapOf__string(input.Attributes, context) }),\n    ...(input.ClientSdkVersion !== undefined &&\n      input.ClientSdkVersion !== null && { ClientSdkVersion: input.ClientSdkVersion }),\n    ...(input.EventType !== undefined && input.EventType !== null && { EventType: input.EventType }),\n    ...(input.Metrics !== undefined &&\n      input.Metrics !== null && { Metrics: serializeAws_restJson1MapOf__double(input.Metrics, context) }),\n    ...(input.SdkName !== undefined && input.SdkName !== null && { SdkName: input.SdkName }),\n    ...(input.Session !== undefined &&\n      input.Session !== null && { Session: serializeAws_restJson1Session(input.Session, context) }),\n    ...(input.Timestamp !== undefined && input.Timestamp !== null && { Timestamp: input.Timestamp }),\n  };\n};\n\nconst serializeAws_restJson1EventCondition = (input: EventCondition, context: __SerdeContext): any => {\n  return {\n    ...(input.Dimensions !== undefined &&\n      input.Dimensions !== null && { Dimensions: serializeAws_restJson1EventDimensions(input.Dimensions, context) }),\n    ...(input.MessageActivity !== undefined &&\n      input.MessageActivity !== null && { MessageActivity: input.MessageActivity }),\n  };\n};\n\nconst serializeAws_restJson1EventDimensions = (input: EventDimensions, context: __SerdeContext): any => {\n  return {\n    ...(input.Attributes !== undefined &&\n      input.Attributes !== null && {\n        Attributes: serializeAws_restJson1MapOfAttributeDimension(input.Attributes, context),\n      }),\n    ...(input.EventType !== undefined &&\n      input.EventType !== null && { EventType: serializeAws_restJson1SetDimension(input.EventType, context) }),\n    ...(input.Metrics !== undefined &&\n      input.Metrics !== null && { Metrics: serializeAws_restJson1MapOfMetricDimension(input.Metrics, context) }),\n  };\n};\n\nconst serializeAws_restJson1EventFilter = (input: EventFilter, context: __SerdeContext): any => {\n  return {\n    ...(input.Dimensions !== undefined &&\n      input.Dimensions !== null && { Dimensions: serializeAws_restJson1EventDimensions(input.Dimensions, context) }),\n    ...(input.FilterType !== undefined && input.FilterType !== null && { FilterType: input.FilterType }),\n  };\n};\n\nconst serializeAws_restJson1EventsBatch = (input: EventsBatch, context: __SerdeContext): any => {\n  return {\n    ...(input.Endpoint !== undefined &&\n      input.Endpoint !== null && { Endpoint: serializeAws_restJson1PublicEndpoint(input.Endpoint, context) }),\n    ...(input.Events !== undefined &&\n      input.Events !== null && { Events: serializeAws_restJson1MapOfEvent(input.Events, context) }),\n  };\n};\n\nconst serializeAws_restJson1EventsRequest = (input: EventsRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.BatchItem !== undefined &&\n      input.BatchItem !== null && { BatchItem: serializeAws_restJson1MapOfEventsBatch(input.BatchItem, context) }),\n  };\n};\n\nconst serializeAws_restJson1EventStartCondition = (input: EventStartCondition, context: __SerdeContext): any => {\n  return {\n    ...(input.EventFilter !== undefined &&\n      input.EventFilter !== null && { EventFilter: serializeAws_restJson1EventFilter(input.EventFilter, context) }),\n    ...(input.SegmentId !== undefined && input.SegmentId !== null && { SegmentId: input.SegmentId }),\n  };\n};\n\nconst serializeAws_restJson1ExportJobRequest = (input: ExportJobRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.RoleArn !== undefined && input.RoleArn !== null && { RoleArn: input.RoleArn }),\n    ...(input.S3UrlPrefix !== undefined && input.S3UrlPrefix !== null && { S3UrlPrefix: input.S3UrlPrefix }),\n    ...(input.SegmentId !== undefined && input.SegmentId !== null && { SegmentId: input.SegmentId }),\n    ...(input.SegmentVersion !== undefined &&\n      input.SegmentVersion !== null && { SegmentVersion: input.SegmentVersion }),\n  };\n};\n\nconst serializeAws_restJson1GCMChannelRequest = (input: GCMChannelRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.ApiKey !== undefined && input.ApiKey !== null && { ApiKey: input.ApiKey }),\n    ...(input.Enabled !== undefined && input.Enabled !== null && { Enabled: input.Enabled }),\n  };\n};\n\nconst serializeAws_restJson1GCMMessage = (input: GCMMessage, context: __SerdeContext): any => {\n  return {\n    ...(input.Action !== undefined && input.Action !== null && { Action: input.Action }),\n    ...(input.Body !== undefined && input.Body !== null && { Body: input.Body }),\n    ...(input.CollapseKey !== undefined && input.CollapseKey !== null && { CollapseKey: input.CollapseKey }),\n    ...(input.Data !== undefined &&\n      input.Data !== null && { Data: serializeAws_restJson1MapOf__string(input.Data, context) }),\n    ...(input.IconReference !== undefined && input.IconReference !== null && { IconReference: input.IconReference }),\n    ...(input.ImageIconUrl !== undefined && input.ImageIconUrl !== null && { ImageIconUrl: input.ImageIconUrl }),\n    ...(input.ImageUrl !== undefined && input.ImageUrl !== null && { ImageUrl: input.ImageUrl }),\n    ...(input.Priority !== undefined && input.Priority !== null && { Priority: input.Priority }),\n    ...(input.RawContent !== undefined && input.RawContent !== null && { RawContent: input.RawContent }),\n    ...(input.RestrictedPackageName !== undefined &&\n      input.RestrictedPackageName !== null && { RestrictedPackageName: input.RestrictedPackageName }),\n    ...(input.SilentPush !== undefined && input.SilentPush !== null && { SilentPush: input.SilentPush }),\n    ...(input.SmallImageIconUrl !== undefined &&\n      input.SmallImageIconUrl !== null && { SmallImageIconUrl: input.SmallImageIconUrl }),\n    ...(input.Sound !== undefined && input.Sound !== null && { Sound: input.Sound }),\n    ...(input.Substitutions !== undefined &&\n      input.Substitutions !== null && {\n        Substitutions: serializeAws_restJson1MapOfListOf__string(input.Substitutions, context),\n      }),\n    ...(input.TimeToLive !== undefined && input.TimeToLive !== null && { TimeToLive: input.TimeToLive }),\n    ...(input.Title !== undefined && input.Title !== null && { Title: input.Title }),\n    ...(input.Url !== undefined && input.Url !== null && { Url: input.Url }),\n  };\n};\n\nconst serializeAws_restJson1GPSCoordinates = (input: GPSCoordinates, context: __SerdeContext): any => {\n  return {\n    ...(input.Latitude !== undefined && input.Latitude !== null && { Latitude: input.Latitude }),\n    ...(input.Longitude !== undefined && input.Longitude !== null && { Longitude: input.Longitude }),\n  };\n};\n\nconst serializeAws_restJson1GPSPointDimension = (input: GPSPointDimension, context: __SerdeContext): any => {\n  return {\n    ...(input.Coordinates !== undefined &&\n      input.Coordinates !== null && { Coordinates: serializeAws_restJson1GPSCoordinates(input.Coordinates, context) }),\n    ...(input.RangeInKilometers !== undefined &&\n      input.RangeInKilometers !== null && { RangeInKilometers: input.RangeInKilometers }),\n  };\n};\n\nconst serializeAws_restJson1HoldoutActivity = (input: HoldoutActivity, context: __SerdeContext): any => {\n  return {\n    ...(input.NextActivity !== undefined && input.NextActivity !== null && { NextActivity: input.NextActivity }),\n    ...(input.Percentage !== undefined && input.Percentage !== null && { Percentage: input.Percentage }),\n  };\n};\n\nconst serializeAws_restJson1ImportJobRequest = (input: ImportJobRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.DefineSegment !== undefined && input.DefineSegment !== null && { DefineSegment: input.DefineSegment }),\n    ...(input.ExternalId !== undefined && input.ExternalId !== null && { ExternalId: input.ExternalId }),\n    ...(input.Format !== undefined && input.Format !== null && { Format: input.Format }),\n    ...(input.RegisterEndpoints !== undefined &&\n      input.RegisterEndpoints !== null && { RegisterEndpoints: input.RegisterEndpoints }),\n    ...(input.RoleArn !== undefined && input.RoleArn !== null && { RoleArn: input.RoleArn }),\n    ...(input.S3Url !== undefined && input.S3Url !== null && { S3Url: input.S3Url }),\n    ...(input.SegmentId !== undefined && input.SegmentId !== null && { SegmentId: input.SegmentId }),\n    ...(input.SegmentName !== undefined && input.SegmentName !== null && { SegmentName: input.SegmentName }),\n  };\n};\n\nconst serializeAws_restJson1JourneyCustomMessage = (input: JourneyCustomMessage, context: __SerdeContext): any => {\n  return {\n    ...(input.Data !== undefined && input.Data !== null && { Data: input.Data }),\n  };\n};\n\nconst serializeAws_restJson1JourneyEmailMessage = (input: JourneyEmailMessage, context: __SerdeContext): any => {\n  return {\n    ...(input.FromAddress !== undefined && input.FromAddress !== null && { FromAddress: input.FromAddress }),\n  };\n};\n\nconst serializeAws_restJson1JourneyLimits = (input: JourneyLimits, context: __SerdeContext): any => {\n  return {\n    ...(input.DailyCap !== undefined && input.DailyCap !== null && { DailyCap: input.DailyCap }),\n    ...(input.EndpointReentryCap !== undefined &&\n      input.EndpointReentryCap !== null && { EndpointReentryCap: input.EndpointReentryCap }),\n    ...(input.MessagesPerSecond !== undefined &&\n      input.MessagesPerSecond !== null && { MessagesPerSecond: input.MessagesPerSecond }),\n  };\n};\n\nconst serializeAws_restJson1JourneyPushMessage = (input: JourneyPushMessage, context: __SerdeContext): any => {\n  return {\n    ...(input.TimeToLive !== undefined && input.TimeToLive !== null && { TimeToLive: input.TimeToLive }),\n  };\n};\n\nconst serializeAws_restJson1JourneySchedule = (input: JourneySchedule, context: __SerdeContext): any => {\n  return {\n    ...(input.EndTime !== undefined &&\n      input.EndTime !== null && { EndTime: input.EndTime.toISOString().split(\".\")[0] + \"Z\" }),\n    ...(input.StartTime !== undefined &&\n      input.StartTime !== null && { StartTime: input.StartTime.toISOString().split(\".\")[0] + \"Z\" }),\n    ...(input.Timezone !== undefined && input.Timezone !== null && { Timezone: input.Timezone }),\n  };\n};\n\nconst serializeAws_restJson1JourneySMSMessage = (input: JourneySMSMessage, context: __SerdeContext): any => {\n  return {\n    ...(input.MessageType !== undefined && input.MessageType !== null && { MessageType: input.MessageType }),\n    ...(input.SenderId !== undefined && input.SenderId !== null && { SenderId: input.SenderId }),\n  };\n};\n\nconst serializeAws_restJson1JourneyStateRequest = (input: JourneyStateRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.State !== undefined && input.State !== null && { State: input.State }),\n  };\n};\n\nconst serializeAws_restJson1ListOf__EndpointTypesElement = (\n  input: (__EndpointTypesElement | string)[],\n  context: __SerdeContext\n): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst serializeAws_restJson1ListOf__string = (input: string[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst serializeAws_restJson1ListOfEndpointBatchItem = (input: EndpointBatchItem[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return serializeAws_restJson1EndpointBatchItem(entry, context);\n    });\n};\n\nconst serializeAws_restJson1ListOfMultiConditionalBranch = (\n  input: MultiConditionalBranch[],\n  context: __SerdeContext\n): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return serializeAws_restJson1MultiConditionalBranch(entry, context);\n    });\n};\n\nconst serializeAws_restJson1ListOfRandomSplitEntry = (input: RandomSplitEntry[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return serializeAws_restJson1RandomSplitEntry(entry, context);\n    });\n};\n\nconst serializeAws_restJson1ListOfSegmentDimensions = (input: SegmentDimensions[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return serializeAws_restJson1SegmentDimensions(entry, context);\n    });\n};\n\nconst serializeAws_restJson1ListOfSegmentGroup = (input: SegmentGroup[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return serializeAws_restJson1SegmentGroup(entry, context);\n    });\n};\n\nconst serializeAws_restJson1ListOfSegmentReference = (input: SegmentReference[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return serializeAws_restJson1SegmentReference(entry, context);\n    });\n};\n\nconst serializeAws_restJson1ListOfSimpleCondition = (input: SimpleCondition[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return serializeAws_restJson1SimpleCondition(entry, context);\n    });\n};\n\nconst serializeAws_restJson1ListOfWriteTreatmentResource = (\n  input: WriteTreatmentResource[],\n  context: __SerdeContext\n): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return serializeAws_restJson1WriteTreatmentResource(entry, context);\n    });\n};\n\nconst serializeAws_restJson1MapOf__double = (input: { [key: string]: number }, context: __SerdeContext): any => {\n  return Object.entries(input).reduce((acc: { [key: string]: number }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: value,\n    };\n  }, {});\n};\n\nconst serializeAws_restJson1MapOf__string = (input: { [key: string]: string }, context: __SerdeContext): any => {\n  return Object.entries(input).reduce((acc: { [key: string]: string }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: value,\n    };\n  }, {});\n};\n\nconst serializeAws_restJson1MapOfActivity = (input: { [key: string]: Activity }, context: __SerdeContext): any => {\n  return Object.entries(input).reduce((acc: { [key: string]: Activity }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: serializeAws_restJson1Activity(value, context),\n    };\n  }, {});\n};\n\nconst serializeAws_restJson1MapOfAddressConfiguration = (\n  input: { [key: string]: AddressConfiguration },\n  context: __SerdeContext\n): any => {\n  return Object.entries(input).reduce((acc: { [key: string]: AddressConfiguration }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: serializeAws_restJson1AddressConfiguration(value, context),\n    };\n  }, {});\n};\n\nconst serializeAws_restJson1MapOfAttributeDimension = (\n  input: { [key: string]: AttributeDimension },\n  context: __SerdeContext\n): any => {\n  return Object.entries(input).reduce((acc: { [key: string]: AttributeDimension }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: serializeAws_restJson1AttributeDimension(value, context),\n    };\n  }, {});\n};\n\nconst serializeAws_restJson1MapOfEndpointSendConfiguration = (\n  input: { [key: string]: EndpointSendConfiguration },\n  context: __SerdeContext\n): any => {\n  return Object.entries(input).reduce(\n    (acc: { [key: string]: EndpointSendConfiguration }, [key, value]: [string, any]) => {\n      if (value === null) {\n        return acc;\n      }\n      return {\n        ...acc,\n        [key]: serializeAws_restJson1EndpointSendConfiguration(value, context),\n      };\n    },\n    {}\n  );\n};\n\nconst serializeAws_restJson1MapOfEvent = (input: { [key: string]: Event }, context: __SerdeContext): any => {\n  return Object.entries(input).reduce((acc: { [key: string]: Event }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: serializeAws_restJson1Event(value, context),\n    };\n  }, {});\n};\n\nconst serializeAws_restJson1MapOfEventsBatch = (\n  input: { [key: string]: EventsBatch },\n  context: __SerdeContext\n): any => {\n  return Object.entries(input).reduce((acc: { [key: string]: EventsBatch }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: serializeAws_restJson1EventsBatch(value, context),\n    };\n  }, {});\n};\n\nconst serializeAws_restJson1MapOfListOf__string = (\n  input: { [key: string]: string[] },\n  context: __SerdeContext\n): any => {\n  return Object.entries(input).reduce((acc: { [key: string]: string[] }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: serializeAws_restJson1ListOf__string(value, context),\n    };\n  }, {});\n};\n\nconst serializeAws_restJson1MapOfMetricDimension = (\n  input: { [key: string]: MetricDimension },\n  context: __SerdeContext\n): any => {\n  return Object.entries(input).reduce((acc: { [key: string]: MetricDimension }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: serializeAws_restJson1MetricDimension(value, context),\n    };\n  }, {});\n};\n\nconst serializeAws_restJson1Message = (input: Message, context: __SerdeContext): any => {\n  return {\n    ...(input.Action !== undefined && input.Action !== null && { Action: input.Action }),\n    ...(input.Body !== undefined && input.Body !== null && { Body: input.Body }),\n    ...(input.ImageIconUrl !== undefined && input.ImageIconUrl !== null && { ImageIconUrl: input.ImageIconUrl }),\n    ...(input.ImageSmallIconUrl !== undefined &&\n      input.ImageSmallIconUrl !== null && { ImageSmallIconUrl: input.ImageSmallIconUrl }),\n    ...(input.ImageUrl !== undefined && input.ImageUrl !== null && { ImageUrl: input.ImageUrl }),\n    ...(input.JsonBody !== undefined && input.JsonBody !== null && { JsonBody: input.JsonBody }),\n    ...(input.MediaUrl !== undefined && input.MediaUrl !== null && { MediaUrl: input.MediaUrl }),\n    ...(input.RawContent !== undefined && input.RawContent !== null && { RawContent: input.RawContent }),\n    ...(input.SilentPush !== undefined && input.SilentPush !== null && { SilentPush: input.SilentPush }),\n    ...(input.TimeToLive !== undefined && input.TimeToLive !== null && { TimeToLive: input.TimeToLive }),\n    ...(input.Title !== undefined && input.Title !== null && { Title: input.Title }),\n    ...(input.Url !== undefined && input.Url !== null && { Url: input.Url }),\n  };\n};\n\nconst serializeAws_restJson1MessageConfiguration = (input: MessageConfiguration, context: __SerdeContext): any => {\n  return {\n    ...(input.ADMMessage !== undefined &&\n      input.ADMMessage !== null && { ADMMessage: serializeAws_restJson1Message(input.ADMMessage, context) }),\n    ...(input.APNSMessage !== undefined &&\n      input.APNSMessage !== null && { APNSMessage: serializeAws_restJson1Message(input.APNSMessage, context) }),\n    ...(input.BaiduMessage !== undefined &&\n      input.BaiduMessage !== null && { BaiduMessage: serializeAws_restJson1Message(input.BaiduMessage, context) }),\n    ...(input.CustomMessage !== undefined &&\n      input.CustomMessage !== null && {\n        CustomMessage: serializeAws_restJson1CampaignCustomMessage(input.CustomMessage, context),\n      }),\n    ...(input.DefaultMessage !== undefined &&\n      input.DefaultMessage !== null && {\n        DefaultMessage: serializeAws_restJson1Message(input.DefaultMessage, context),\n      }),\n    ...(input.EmailMessage !== undefined &&\n      input.EmailMessage !== null && {\n        EmailMessage: serializeAws_restJson1CampaignEmailMessage(input.EmailMessage, context),\n      }),\n    ...(input.GCMMessage !== undefined &&\n      input.GCMMessage !== null && { GCMMessage: serializeAws_restJson1Message(input.GCMMessage, context) }),\n    ...(input.SMSMessage !== undefined &&\n      input.SMSMessage !== null && { SMSMessage: serializeAws_restJson1CampaignSmsMessage(input.SMSMessage, context) }),\n  };\n};\n\nconst serializeAws_restJson1MessageRequest = (input: MessageRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.Addresses !== undefined &&\n      input.Addresses !== null && {\n        Addresses: serializeAws_restJson1MapOfAddressConfiguration(input.Addresses, context),\n      }),\n    ...(input.Context !== undefined &&\n      input.Context !== null && { Context: serializeAws_restJson1MapOf__string(input.Context, context) }),\n    ...(input.Endpoints !== undefined &&\n      input.Endpoints !== null && {\n        Endpoints: serializeAws_restJson1MapOfEndpointSendConfiguration(input.Endpoints, context),\n      }),\n    ...(input.MessageConfiguration !== undefined &&\n      input.MessageConfiguration !== null && {\n        MessageConfiguration: serializeAws_restJson1DirectMessageConfiguration(input.MessageConfiguration, context),\n      }),\n    ...(input.TemplateConfiguration !== undefined &&\n      input.TemplateConfiguration !== null && {\n        TemplateConfiguration: serializeAws_restJson1TemplateConfiguration(input.TemplateConfiguration, context),\n      }),\n    ...(input.TraceId !== undefined && input.TraceId !== null && { TraceId: input.TraceId }),\n  };\n};\n\nconst serializeAws_restJson1MetricDimension = (input: MetricDimension, context: __SerdeContext): any => {\n  return {\n    ...(input.ComparisonOperator !== undefined &&\n      input.ComparisonOperator !== null && { ComparisonOperator: input.ComparisonOperator }),\n    ...(input.Value !== undefined && input.Value !== null && { Value: input.Value }),\n  };\n};\n\nconst serializeAws_restJson1MultiConditionalBranch = (input: MultiConditionalBranch, context: __SerdeContext): any => {\n  return {\n    ...(input.Condition !== undefined &&\n      input.Condition !== null && { Condition: serializeAws_restJson1SimpleCondition(input.Condition, context) }),\n    ...(input.NextActivity !== undefined && input.NextActivity !== null && { NextActivity: input.NextActivity }),\n  };\n};\n\nconst serializeAws_restJson1MultiConditionalSplitActivity = (\n  input: MultiConditionalSplitActivity,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.Branches !== undefined &&\n      input.Branches !== null && {\n        Branches: serializeAws_restJson1ListOfMultiConditionalBranch(input.Branches, context),\n      }),\n    ...(input.DefaultActivity !== undefined &&\n      input.DefaultActivity !== null && { DefaultActivity: input.DefaultActivity }),\n    ...(input.EvaluationWaitTime !== undefined &&\n      input.EvaluationWaitTime !== null && {\n        EvaluationWaitTime: serializeAws_restJson1WaitTime(input.EvaluationWaitTime, context),\n      }),\n  };\n};\n\nconst serializeAws_restJson1NumberValidateRequest = (input: NumberValidateRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.IsoCountryCode !== undefined &&\n      input.IsoCountryCode !== null && { IsoCountryCode: input.IsoCountryCode }),\n    ...(input.PhoneNumber !== undefined && input.PhoneNumber !== null && { PhoneNumber: input.PhoneNumber }),\n  };\n};\n\nconst serializeAws_restJson1PublicEndpoint = (input: PublicEndpoint, context: __SerdeContext): any => {\n  return {\n    ...(input.Address !== undefined && input.Address !== null && { Address: input.Address }),\n    ...(input.Attributes !== undefined &&\n      input.Attributes !== null && {\n        Attributes: serializeAws_restJson1MapOfListOf__string(input.Attributes, context),\n      }),\n    ...(input.ChannelType !== undefined && input.ChannelType !== null && { ChannelType: input.ChannelType }),\n    ...(input.Demographic !== undefined &&\n      input.Demographic !== null && {\n        Demographic: serializeAws_restJson1EndpointDemographic(input.Demographic, context),\n      }),\n    ...(input.EffectiveDate !== undefined && input.EffectiveDate !== null && { EffectiveDate: input.EffectiveDate }),\n    ...(input.EndpointStatus !== undefined &&\n      input.EndpointStatus !== null && { EndpointStatus: input.EndpointStatus }),\n    ...(input.Location !== undefined &&\n      input.Location !== null && { Location: serializeAws_restJson1EndpointLocation(input.Location, context) }),\n    ...(input.Metrics !== undefined &&\n      input.Metrics !== null && { Metrics: serializeAws_restJson1MapOf__double(input.Metrics, context) }),\n    ...(input.OptOut !== undefined && input.OptOut !== null && { OptOut: input.OptOut }),\n    ...(input.RequestId !== undefined && input.RequestId !== null && { RequestId: input.RequestId }),\n    ...(input.User !== undefined &&\n      input.User !== null && { User: serializeAws_restJson1EndpointUser(input.User, context) }),\n  };\n};\n\nconst serializeAws_restJson1PushMessageActivity = (input: PushMessageActivity, context: __SerdeContext): any => {\n  return {\n    ...(input.MessageConfig !== undefined &&\n      input.MessageConfig !== null && {\n        MessageConfig: serializeAws_restJson1JourneyPushMessage(input.MessageConfig, context),\n      }),\n    ...(input.NextActivity !== undefined && input.NextActivity !== null && { NextActivity: input.NextActivity }),\n    ...(input.TemplateName !== undefined && input.TemplateName !== null && { TemplateName: input.TemplateName }),\n    ...(input.TemplateVersion !== undefined &&\n      input.TemplateVersion !== null && { TemplateVersion: input.TemplateVersion }),\n  };\n};\n\nconst serializeAws_restJson1PushNotificationTemplateRequest = (\n  input: PushNotificationTemplateRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.ADM !== undefined &&\n      input.ADM !== null && { ADM: serializeAws_restJson1AndroidPushNotificationTemplate(input.ADM, context) }),\n    ...(input.APNS !== undefined &&\n      input.APNS !== null && { APNS: serializeAws_restJson1APNSPushNotificationTemplate(input.APNS, context) }),\n    ...(input.Baidu !== undefined &&\n      input.Baidu !== null && { Baidu: serializeAws_restJson1AndroidPushNotificationTemplate(input.Baidu, context) }),\n    ...(input.Default !== undefined &&\n      input.Default !== null && {\n        Default: serializeAws_restJson1DefaultPushNotificationTemplate(input.Default, context),\n      }),\n    ...(input.DefaultSubstitutions !== undefined &&\n      input.DefaultSubstitutions !== null && { DefaultSubstitutions: input.DefaultSubstitutions }),\n    ...(input.GCM !== undefined &&\n      input.GCM !== null && { GCM: serializeAws_restJson1AndroidPushNotificationTemplate(input.GCM, context) }),\n    ...(input.RecommenderId !== undefined && input.RecommenderId !== null && { RecommenderId: input.RecommenderId }),\n    ...(input.TemplateDescription !== undefined &&\n      input.TemplateDescription !== null && { TemplateDescription: input.TemplateDescription }),\n    ...(input.tags !== undefined &&\n      input.tags !== null && { tags: serializeAws_restJson1MapOf__string(input.tags, context) }),\n  };\n};\n\nconst serializeAws_restJson1QuietTime = (input: QuietTime, context: __SerdeContext): any => {\n  return {\n    ...(input.End !== undefined && input.End !== null && { End: input.End }),\n    ...(input.Start !== undefined && input.Start !== null && { Start: input.Start }),\n  };\n};\n\nconst serializeAws_restJson1RandomSplitActivity = (input: RandomSplitActivity, context: __SerdeContext): any => {\n  return {\n    ...(input.Branches !== undefined &&\n      input.Branches !== null && { Branches: serializeAws_restJson1ListOfRandomSplitEntry(input.Branches, context) }),\n  };\n};\n\nconst serializeAws_restJson1RandomSplitEntry = (input: RandomSplitEntry, context: __SerdeContext): any => {\n  return {\n    ...(input.NextActivity !== undefined && input.NextActivity !== null && { NextActivity: input.NextActivity }),\n    ...(input.Percentage !== undefined && input.Percentage !== null && { Percentage: input.Percentage }),\n  };\n};\n\nconst serializeAws_restJson1RawEmail = (input: RawEmail, context: __SerdeContext): any => {\n  return {\n    ...(input.Data !== undefined && input.Data !== null && { Data: context.base64Encoder(input.Data) }),\n  };\n};\n\nconst serializeAws_restJson1RecencyDimension = (input: RecencyDimension, context: __SerdeContext): any => {\n  return {\n    ...(input.Duration !== undefined && input.Duration !== null && { Duration: input.Duration }),\n    ...(input.RecencyType !== undefined && input.RecencyType !== null && { RecencyType: input.RecencyType }),\n  };\n};\n\nconst serializeAws_restJson1Schedule = (input: Schedule, context: __SerdeContext): any => {\n  return {\n    ...(input.EndTime !== undefined && input.EndTime !== null && { EndTime: input.EndTime }),\n    ...(input.EventFilter !== undefined &&\n      input.EventFilter !== null && {\n        EventFilter: serializeAws_restJson1CampaignEventFilter(input.EventFilter, context),\n      }),\n    ...(input.Frequency !== undefined && input.Frequency !== null && { Frequency: input.Frequency }),\n    ...(input.IsLocalTime !== undefined && input.IsLocalTime !== null && { IsLocalTime: input.IsLocalTime }),\n    ...(input.QuietTime !== undefined &&\n      input.QuietTime !== null && { QuietTime: serializeAws_restJson1QuietTime(input.QuietTime, context) }),\n    ...(input.StartTime !== undefined && input.StartTime !== null && { StartTime: input.StartTime }),\n    ...(input.Timezone !== undefined && input.Timezone !== null && { Timezone: input.Timezone }),\n  };\n};\n\nconst serializeAws_restJson1SegmentBehaviors = (input: SegmentBehaviors, context: __SerdeContext): any => {\n  return {\n    ...(input.Recency !== undefined &&\n      input.Recency !== null && { Recency: serializeAws_restJson1RecencyDimension(input.Recency, context) }),\n  };\n};\n\nconst serializeAws_restJson1SegmentCondition = (input: SegmentCondition, context: __SerdeContext): any => {\n  return {\n    ...(input.SegmentId !== undefined && input.SegmentId !== null && { SegmentId: input.SegmentId }),\n  };\n};\n\nconst serializeAws_restJson1SegmentDemographics = (input: SegmentDemographics, context: __SerdeContext): any => {\n  return {\n    ...(input.AppVersion !== undefined &&\n      input.AppVersion !== null && { AppVersion: serializeAws_restJson1SetDimension(input.AppVersion, context) }),\n    ...(input.Channel !== undefined &&\n      input.Channel !== null && { Channel: serializeAws_restJson1SetDimension(input.Channel, context) }),\n    ...(input.DeviceType !== undefined &&\n      input.DeviceType !== null && { DeviceType: serializeAws_restJson1SetDimension(input.DeviceType, context) }),\n    ...(input.Make !== undefined &&\n      input.Make !== null && { Make: serializeAws_restJson1SetDimension(input.Make, context) }),\n    ...(input.Model !== undefined &&\n      input.Model !== null && { Model: serializeAws_restJson1SetDimension(input.Model, context) }),\n    ...(input.Platform !== undefined &&\n      input.Platform !== null && { Platform: serializeAws_restJson1SetDimension(input.Platform, context) }),\n  };\n};\n\nconst serializeAws_restJson1SegmentDimensions = (input: SegmentDimensions, context: __SerdeContext): any => {\n  return {\n    ...(input.Attributes !== undefined &&\n      input.Attributes !== null && {\n        Attributes: serializeAws_restJson1MapOfAttributeDimension(input.Attributes, context),\n      }),\n    ...(input.Behavior !== undefined &&\n      input.Behavior !== null && { Behavior: serializeAws_restJson1SegmentBehaviors(input.Behavior, context) }),\n    ...(input.Demographic !== undefined &&\n      input.Demographic !== null && {\n        Demographic: serializeAws_restJson1SegmentDemographics(input.Demographic, context),\n      }),\n    ...(input.Location !== undefined &&\n      input.Location !== null && { Location: serializeAws_restJson1SegmentLocation(input.Location, context) }),\n    ...(input.Metrics !== undefined &&\n      input.Metrics !== null && { Metrics: serializeAws_restJson1MapOfMetricDimension(input.Metrics, context) }),\n    ...(input.UserAttributes !== undefined &&\n      input.UserAttributes !== null && {\n        UserAttributes: serializeAws_restJson1MapOfAttributeDimension(input.UserAttributes, context),\n      }),\n  };\n};\n\nconst serializeAws_restJson1SegmentGroup = (input: SegmentGroup, context: __SerdeContext): any => {\n  return {\n    ...(input.Dimensions !== undefined &&\n      input.Dimensions !== null && {\n        Dimensions: serializeAws_restJson1ListOfSegmentDimensions(input.Dimensions, context),\n      }),\n    ...(input.SourceSegments !== undefined &&\n      input.SourceSegments !== null && {\n        SourceSegments: serializeAws_restJson1ListOfSegmentReference(input.SourceSegments, context),\n      }),\n    ...(input.SourceType !== undefined && input.SourceType !== null && { SourceType: input.SourceType }),\n    ...(input.Type !== undefined && input.Type !== null && { Type: input.Type }),\n  };\n};\n\nconst serializeAws_restJson1SegmentGroupList = (input: SegmentGroupList, context: __SerdeContext): any => {\n  return {\n    ...(input.Groups !== undefined &&\n      input.Groups !== null && { Groups: serializeAws_restJson1ListOfSegmentGroup(input.Groups, context) }),\n    ...(input.Include !== undefined && input.Include !== null && { Include: input.Include }),\n  };\n};\n\nconst serializeAws_restJson1SegmentLocation = (input: SegmentLocation, context: __SerdeContext): any => {\n  return {\n    ...(input.Country !== undefined &&\n      input.Country !== null && { Country: serializeAws_restJson1SetDimension(input.Country, context) }),\n    ...(input.GPSPoint !== undefined &&\n      input.GPSPoint !== null && { GPSPoint: serializeAws_restJson1GPSPointDimension(input.GPSPoint, context) }),\n  };\n};\n\nconst serializeAws_restJson1SegmentReference = (input: SegmentReference, context: __SerdeContext): any => {\n  return {\n    ...(input.Id !== undefined && input.Id !== null && { Id: input.Id }),\n    ...(input.Version !== undefined && input.Version !== null && { Version: input.Version }),\n  };\n};\n\nconst serializeAws_restJson1SendUsersMessageRequest = (\n  input: SendUsersMessageRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.Context !== undefined &&\n      input.Context !== null && { Context: serializeAws_restJson1MapOf__string(input.Context, context) }),\n    ...(input.MessageConfiguration !== undefined &&\n      input.MessageConfiguration !== null && {\n        MessageConfiguration: serializeAws_restJson1DirectMessageConfiguration(input.MessageConfiguration, context),\n      }),\n    ...(input.TemplateConfiguration !== undefined &&\n      input.TemplateConfiguration !== null && {\n        TemplateConfiguration: serializeAws_restJson1TemplateConfiguration(input.TemplateConfiguration, context),\n      }),\n    ...(input.TraceId !== undefined && input.TraceId !== null && { TraceId: input.TraceId }),\n    ...(input.Users !== undefined &&\n      input.Users !== null && { Users: serializeAws_restJson1MapOfEndpointSendConfiguration(input.Users, context) }),\n  };\n};\n\nconst serializeAws_restJson1Session = (input: Session, context: __SerdeContext): any => {\n  return {\n    ...(input.Duration !== undefined && input.Duration !== null && { Duration: input.Duration }),\n    ...(input.Id !== undefined && input.Id !== null && { Id: input.Id }),\n    ...(input.StartTimestamp !== undefined &&\n      input.StartTimestamp !== null && { StartTimestamp: input.StartTimestamp }),\n    ...(input.StopTimestamp !== undefined && input.StopTimestamp !== null && { StopTimestamp: input.StopTimestamp }),\n  };\n};\n\nconst serializeAws_restJson1SetDimension = (input: SetDimension, context: __SerdeContext): any => {\n  return {\n    ...(input.DimensionType !== undefined && input.DimensionType !== null && { DimensionType: input.DimensionType }),\n    ...(input.Values !== undefined &&\n      input.Values !== null && { Values: serializeAws_restJson1ListOf__string(input.Values, context) }),\n  };\n};\n\nconst serializeAws_restJson1SimpleCondition = (input: SimpleCondition, context: __SerdeContext): any => {\n  return {\n    ...(input.EventCondition !== undefined &&\n      input.EventCondition !== null && {\n        EventCondition: serializeAws_restJson1EventCondition(input.EventCondition, context),\n      }),\n    ...(input.SegmentCondition !== undefined &&\n      input.SegmentCondition !== null && {\n        SegmentCondition: serializeAws_restJson1SegmentCondition(input.SegmentCondition, context),\n      }),\n    ...(input.SegmentDimensions !== undefined &&\n      input.SegmentDimensions !== null && {\n        segmentDimensions: serializeAws_restJson1SegmentDimensions(input.SegmentDimensions, context),\n      }),\n  };\n};\n\nconst serializeAws_restJson1SimpleEmail = (input: SimpleEmail, context: __SerdeContext): any => {\n  return {\n    ...(input.HtmlPart !== undefined &&\n      input.HtmlPart !== null && { HtmlPart: serializeAws_restJson1SimpleEmailPart(input.HtmlPart, context) }),\n    ...(input.Subject !== undefined &&\n      input.Subject !== null && { Subject: serializeAws_restJson1SimpleEmailPart(input.Subject, context) }),\n    ...(input.TextPart !== undefined &&\n      input.TextPart !== null && { TextPart: serializeAws_restJson1SimpleEmailPart(input.TextPart, context) }),\n  };\n};\n\nconst serializeAws_restJson1SimpleEmailPart = (input: SimpleEmailPart, context: __SerdeContext): any => {\n  return {\n    ...(input.Charset !== undefined && input.Charset !== null && { Charset: input.Charset }),\n    ...(input.Data !== undefined && input.Data !== null && { Data: input.Data }),\n  };\n};\n\nconst serializeAws_restJson1SMSChannelRequest = (input: SMSChannelRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.Enabled !== undefined && input.Enabled !== null && { Enabled: input.Enabled }),\n    ...(input.SenderId !== undefined && input.SenderId !== null && { SenderId: input.SenderId }),\n    ...(input.ShortCode !== undefined && input.ShortCode !== null && { ShortCode: input.ShortCode }),\n  };\n};\n\nconst serializeAws_restJson1SMSMessage = (input: SMSMessage, context: __SerdeContext): any => {\n  return {\n    ...(input.Body !== undefined && input.Body !== null && { Body: input.Body }),\n    ...(input.Keyword !== undefined && input.Keyword !== null && { Keyword: input.Keyword }),\n    ...(input.MediaUrl !== undefined && input.MediaUrl !== null && { MediaUrl: input.MediaUrl }),\n    ...(input.MessageType !== undefined && input.MessageType !== null && { MessageType: input.MessageType }),\n    ...(input.OriginationNumber !== undefined &&\n      input.OriginationNumber !== null && { OriginationNumber: input.OriginationNumber }),\n    ...(input.SenderId !== undefined && input.SenderId !== null && { SenderId: input.SenderId }),\n    ...(input.Substitutions !== undefined &&\n      input.Substitutions !== null && {\n        Substitutions: serializeAws_restJson1MapOfListOf__string(input.Substitutions, context),\n      }),\n  };\n};\n\nconst serializeAws_restJson1SMSMessageActivity = (input: SMSMessageActivity, context: __SerdeContext): any => {\n  return {\n    ...(input.MessageConfig !== undefined &&\n      input.MessageConfig !== null && {\n        MessageConfig: serializeAws_restJson1JourneySMSMessage(input.MessageConfig, context),\n      }),\n    ...(input.NextActivity !== undefined && input.NextActivity !== null && { NextActivity: input.NextActivity }),\n    ...(input.TemplateName !== undefined && input.TemplateName !== null && { TemplateName: input.TemplateName }),\n    ...(input.TemplateVersion !== undefined &&\n      input.TemplateVersion !== null && { TemplateVersion: input.TemplateVersion }),\n  };\n};\n\nconst serializeAws_restJson1SMSTemplateRequest = (input: SMSTemplateRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.Body !== undefined && input.Body !== null && { Body: input.Body }),\n    ...(input.DefaultSubstitutions !== undefined &&\n      input.DefaultSubstitutions !== null && { DefaultSubstitutions: input.DefaultSubstitutions }),\n    ...(input.RecommenderId !== undefined && input.RecommenderId !== null && { RecommenderId: input.RecommenderId }),\n    ...(input.TemplateDescription !== undefined &&\n      input.TemplateDescription !== null && { TemplateDescription: input.TemplateDescription }),\n    ...(input.tags !== undefined &&\n      input.tags !== null && { tags: serializeAws_restJson1MapOf__string(input.tags, context) }),\n  };\n};\n\nconst serializeAws_restJson1StartCondition = (input: StartCondition, context: __SerdeContext): any => {\n  return {\n    ...(input.Description !== undefined && input.Description !== null && { Description: input.Description }),\n    ...(input.EventStartCondition !== undefined &&\n      input.EventStartCondition !== null && {\n        EventStartCondition: serializeAws_restJson1EventStartCondition(input.EventStartCondition, context),\n      }),\n    ...(input.SegmentStartCondition !== undefined &&\n      input.SegmentStartCondition !== null && {\n        SegmentStartCondition: serializeAws_restJson1SegmentCondition(input.SegmentStartCondition, context),\n      }),\n  };\n};\n\nconst serializeAws_restJson1TagsModel = (input: TagsModel, context: __SerdeContext): any => {\n  return {\n    ...(input.tags !== undefined &&\n      input.tags !== null && { tags: serializeAws_restJson1MapOf__string(input.tags, context) }),\n  };\n};\n\nconst serializeAws_restJson1Template = (input: Template, context: __SerdeContext): any => {\n  return {\n    ...(input.Name !== undefined && input.Name !== null && { Name: input.Name }),\n    ...(input.Version !== undefined && input.Version !== null && { Version: input.Version }),\n  };\n};\n\nconst serializeAws_restJson1TemplateActiveVersionRequest = (\n  input: TemplateActiveVersionRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.Version !== undefined && input.Version !== null && { Version: input.Version }),\n  };\n};\n\nconst serializeAws_restJson1TemplateConfiguration = (input: TemplateConfiguration, context: __SerdeContext): any => {\n  return {\n    ...(input.EmailTemplate !== undefined &&\n      input.EmailTemplate !== null && { EmailTemplate: serializeAws_restJson1Template(input.EmailTemplate, context) }),\n    ...(input.PushTemplate !== undefined &&\n      input.PushTemplate !== null && { PushTemplate: serializeAws_restJson1Template(input.PushTemplate, context) }),\n    ...(input.SMSTemplate !== undefined &&\n      input.SMSTemplate !== null && { SMSTemplate: serializeAws_restJson1Template(input.SMSTemplate, context) }),\n    ...(input.VoiceTemplate !== undefined &&\n      input.VoiceTemplate !== null && { VoiceTemplate: serializeAws_restJson1Template(input.VoiceTemplate, context) }),\n  };\n};\n\nconst serializeAws_restJson1UpdateAttributesRequest = (\n  input: UpdateAttributesRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.Blacklist !== undefined &&\n      input.Blacklist !== null && { Blacklist: serializeAws_restJson1ListOf__string(input.Blacklist, context) }),\n  };\n};\n\nconst serializeAws_restJson1UpdateRecommenderConfigurationShape = (\n  input: UpdateRecommenderConfigurationShape,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.Attributes !== undefined &&\n      input.Attributes !== null && { Attributes: serializeAws_restJson1MapOf__string(input.Attributes, context) }),\n    ...(input.Description !== undefined && input.Description !== null && { Description: input.Description }),\n    ...(input.Name !== undefined && input.Name !== null && { Name: input.Name }),\n    ...(input.RecommendationProviderIdType !== undefined &&\n      input.RecommendationProviderIdType !== null && {\n        RecommendationProviderIdType: input.RecommendationProviderIdType,\n      }),\n    ...(input.RecommendationProviderRoleArn !== undefined &&\n      input.RecommendationProviderRoleArn !== null && {\n        RecommendationProviderRoleArn: input.RecommendationProviderRoleArn,\n      }),\n    ...(input.RecommendationProviderUri !== undefined &&\n      input.RecommendationProviderUri !== null && { RecommendationProviderUri: input.RecommendationProviderUri }),\n    ...(input.RecommendationTransformerUri !== undefined &&\n      input.RecommendationTransformerUri !== null && {\n        RecommendationTransformerUri: input.RecommendationTransformerUri,\n      }),\n    ...(input.RecommendationsDisplayName !== undefined &&\n      input.RecommendationsDisplayName !== null && { RecommendationsDisplayName: input.RecommendationsDisplayName }),\n    ...(input.RecommendationsPerMessage !== undefined &&\n      input.RecommendationsPerMessage !== null && { RecommendationsPerMessage: input.RecommendationsPerMessage }),\n  };\n};\n\nconst serializeAws_restJson1VoiceChannelRequest = (input: VoiceChannelRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.Enabled !== undefined && input.Enabled !== null && { Enabled: input.Enabled }),\n  };\n};\n\nconst serializeAws_restJson1VoiceMessage = (input: VoiceMessage, context: __SerdeContext): any => {\n  return {\n    ...(input.Body !== undefined && input.Body !== null && { Body: input.Body }),\n    ...(input.LanguageCode !== undefined && input.LanguageCode !== null && { LanguageCode: input.LanguageCode }),\n    ...(input.OriginationNumber !== undefined &&\n      input.OriginationNumber !== null && { OriginationNumber: input.OriginationNumber }),\n    ...(input.Substitutions !== undefined &&\n      input.Substitutions !== null && {\n        Substitutions: serializeAws_restJson1MapOfListOf__string(input.Substitutions, context),\n      }),\n    ...(input.VoiceId !== undefined && input.VoiceId !== null && { VoiceId: input.VoiceId }),\n  };\n};\n\nconst serializeAws_restJson1VoiceTemplateRequest = (input: VoiceTemplateRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.Body !== undefined && input.Body !== null && { Body: input.Body }),\n    ...(input.DefaultSubstitutions !== undefined &&\n      input.DefaultSubstitutions !== null && { DefaultSubstitutions: input.DefaultSubstitutions }),\n    ...(input.LanguageCode !== undefined && input.LanguageCode !== null && { LanguageCode: input.LanguageCode }),\n    ...(input.TemplateDescription !== undefined &&\n      input.TemplateDescription !== null && { TemplateDescription: input.TemplateDescription }),\n    ...(input.VoiceId !== undefined && input.VoiceId !== null && { VoiceId: input.VoiceId }),\n    ...(input.tags !== undefined &&\n      input.tags !== null && { tags: serializeAws_restJson1MapOf__string(input.tags, context) }),\n  };\n};\n\nconst serializeAws_restJson1WaitActivity = (input: WaitActivity, context: __SerdeContext): any => {\n  return {\n    ...(input.NextActivity !== undefined && input.NextActivity !== null && { NextActivity: input.NextActivity }),\n    ...(input.WaitTime !== undefined &&\n      input.WaitTime !== null && { WaitTime: serializeAws_restJson1WaitTime(input.WaitTime, context) }),\n  };\n};\n\nconst serializeAws_restJson1WaitTime = (input: WaitTime, context: __SerdeContext): any => {\n  return {\n    ...(input.WaitFor !== undefined && input.WaitFor !== null && { WaitFor: input.WaitFor }),\n    ...(input.WaitUntil !== undefined && input.WaitUntil !== null && { WaitUntil: input.WaitUntil }),\n  };\n};\n\nconst serializeAws_restJson1WriteApplicationSettingsRequest = (\n  input: WriteApplicationSettingsRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.CampaignHook !== undefined &&\n      input.CampaignHook !== null && { CampaignHook: serializeAws_restJson1CampaignHook(input.CampaignHook, context) }),\n    ...(input.CloudWatchMetricsEnabled !== undefined &&\n      input.CloudWatchMetricsEnabled !== null && { CloudWatchMetricsEnabled: input.CloudWatchMetricsEnabled }),\n    ...(input.EventTaggingEnabled !== undefined &&\n      input.EventTaggingEnabled !== null && { EventTaggingEnabled: input.EventTaggingEnabled }),\n    ...(input.Limits !== undefined &&\n      input.Limits !== null && { Limits: serializeAws_restJson1CampaignLimits(input.Limits, context) }),\n    ...(input.QuietTime !== undefined &&\n      input.QuietTime !== null && { QuietTime: serializeAws_restJson1QuietTime(input.QuietTime, context) }),\n  };\n};\n\nconst serializeAws_restJson1WriteCampaignRequest = (input: WriteCampaignRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.AdditionalTreatments !== undefined &&\n      input.AdditionalTreatments !== null && {\n        AdditionalTreatments: serializeAws_restJson1ListOfWriteTreatmentResource(input.AdditionalTreatments, context),\n      }),\n    ...(input.CustomDeliveryConfiguration !== undefined &&\n      input.CustomDeliveryConfiguration !== null && {\n        CustomDeliveryConfiguration: serializeAws_restJson1CustomDeliveryConfiguration(\n          input.CustomDeliveryConfiguration,\n          context\n        ),\n      }),\n    ...(input.Description !== undefined && input.Description !== null && { Description: input.Description }),\n    ...(input.HoldoutPercent !== undefined &&\n      input.HoldoutPercent !== null && { HoldoutPercent: input.HoldoutPercent }),\n    ...(input.Hook !== undefined &&\n      input.Hook !== null && { Hook: serializeAws_restJson1CampaignHook(input.Hook, context) }),\n    ...(input.IsPaused !== undefined && input.IsPaused !== null && { IsPaused: input.IsPaused }),\n    ...(input.Limits !== undefined &&\n      input.Limits !== null && { Limits: serializeAws_restJson1CampaignLimits(input.Limits, context) }),\n    ...(input.MessageConfiguration !== undefined &&\n      input.MessageConfiguration !== null && {\n        MessageConfiguration: serializeAws_restJson1MessageConfiguration(input.MessageConfiguration, context),\n      }),\n    ...(input.Name !== undefined && input.Name !== null && { Name: input.Name }),\n    ...(input.Schedule !== undefined &&\n      input.Schedule !== null && { Schedule: serializeAws_restJson1Schedule(input.Schedule, context) }),\n    ...(input.SegmentId !== undefined && input.SegmentId !== null && { SegmentId: input.SegmentId }),\n    ...(input.SegmentVersion !== undefined &&\n      input.SegmentVersion !== null && { SegmentVersion: input.SegmentVersion }),\n    ...(input.TemplateConfiguration !== undefined &&\n      input.TemplateConfiguration !== null && {\n        TemplateConfiguration: serializeAws_restJson1TemplateConfiguration(input.TemplateConfiguration, context),\n      }),\n    ...(input.TreatmentDescription !== undefined &&\n      input.TreatmentDescription !== null && { TreatmentDescription: input.TreatmentDescription }),\n    ...(input.TreatmentName !== undefined && input.TreatmentName !== null && { TreatmentName: input.TreatmentName }),\n    ...(input.tags !== undefined &&\n      input.tags !== null && { tags: serializeAws_restJson1MapOf__string(input.tags, context) }),\n  };\n};\n\nconst serializeAws_restJson1WriteEventStream = (input: WriteEventStream, context: __SerdeContext): any => {\n  return {\n    ...(input.DestinationStreamArn !== undefined &&\n      input.DestinationStreamArn !== null && { DestinationStreamArn: input.DestinationStreamArn }),\n    ...(input.RoleArn !== undefined && input.RoleArn !== null && { RoleArn: input.RoleArn }),\n  };\n};\n\nconst serializeAws_restJson1WriteJourneyRequest = (input: WriteJourneyRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.Activities !== undefined &&\n      input.Activities !== null && { Activities: serializeAws_restJson1MapOfActivity(input.Activities, context) }),\n    ...(input.CreationDate !== undefined && input.CreationDate !== null && { CreationDate: input.CreationDate }),\n    ...(input.LastModifiedDate !== undefined &&\n      input.LastModifiedDate !== null && { LastModifiedDate: input.LastModifiedDate }),\n    ...(input.Limits !== undefined &&\n      input.Limits !== null && { Limits: serializeAws_restJson1JourneyLimits(input.Limits, context) }),\n    ...(input.LocalTime !== undefined && input.LocalTime !== null && { LocalTime: input.LocalTime }),\n    ...(input.Name !== undefined && input.Name !== null && { Name: input.Name }),\n    ...(input.QuietTime !== undefined &&\n      input.QuietTime !== null && { QuietTime: serializeAws_restJson1QuietTime(input.QuietTime, context) }),\n    ...(input.RefreshFrequency !== undefined &&\n      input.RefreshFrequency !== null && { RefreshFrequency: input.RefreshFrequency }),\n    ...(input.Schedule !== undefined &&\n      input.Schedule !== null && { Schedule: serializeAws_restJson1JourneySchedule(input.Schedule, context) }),\n    ...(input.StartActivity !== undefined && input.StartActivity !== null && { StartActivity: input.StartActivity }),\n    ...(input.StartCondition !== undefined &&\n      input.StartCondition !== null && {\n        StartCondition: serializeAws_restJson1StartCondition(input.StartCondition, context),\n      }),\n    ...(input.State !== undefined && input.State !== null && { State: input.State }),\n  };\n};\n\nconst serializeAws_restJson1WriteSegmentRequest = (input: WriteSegmentRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.Dimensions !== undefined &&\n      input.Dimensions !== null && { Dimensions: serializeAws_restJson1SegmentDimensions(input.Dimensions, context) }),\n    ...(input.Name !== undefined && input.Name !== null && { Name: input.Name }),\n    ...(input.SegmentGroups !== undefined &&\n      input.SegmentGroups !== null && {\n        SegmentGroups: serializeAws_restJson1SegmentGroupList(input.SegmentGroups, context),\n      }),\n    ...(input.tags !== undefined &&\n      input.tags !== null && { tags: serializeAws_restJson1MapOf__string(input.tags, context) }),\n  };\n};\n\nconst serializeAws_restJson1WriteTreatmentResource = (input: WriteTreatmentResource, context: __SerdeContext): any => {\n  return {\n    ...(input.CustomDeliveryConfiguration !== undefined &&\n      input.CustomDeliveryConfiguration !== null && {\n        CustomDeliveryConfiguration: serializeAws_restJson1CustomDeliveryConfiguration(\n          input.CustomDeliveryConfiguration,\n          context\n        ),\n      }),\n    ...(input.MessageConfiguration !== undefined &&\n      input.MessageConfiguration !== null && {\n        MessageConfiguration: serializeAws_restJson1MessageConfiguration(input.MessageConfiguration, context),\n      }),\n    ...(input.Schedule !== undefined &&\n      input.Schedule !== null && { Schedule: serializeAws_restJson1Schedule(input.Schedule, context) }),\n    ...(input.SizePercent !== undefined && input.SizePercent !== null && { SizePercent: input.SizePercent }),\n    ...(input.TemplateConfiguration !== undefined &&\n      input.TemplateConfiguration !== null && {\n        TemplateConfiguration: serializeAws_restJson1TemplateConfiguration(input.TemplateConfiguration, context),\n      }),\n    ...(input.TreatmentDescription !== undefined &&\n      input.TreatmentDescription !== null && { TreatmentDescription: input.TreatmentDescription }),\n    ...(input.TreatmentName !== undefined && input.TreatmentName !== null && { TreatmentName: input.TreatmentName }),\n  };\n};\n\nconst deserializeAws_restJson1ActivitiesResponse = (output: any, context: __SerdeContext): ActivitiesResponse => {\n  return {\n    Item:\n      output.Item !== undefined && output.Item !== null\n        ? deserializeAws_restJson1ListOfActivityResponse(output.Item, context)\n        : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1Activity = (output: any, context: __SerdeContext): Activity => {\n  return {\n    CUSTOM:\n      output.CUSTOM !== undefined && output.CUSTOM !== null\n        ? deserializeAws_restJson1CustomMessageActivity(output.CUSTOM, context)\n        : undefined,\n    ConditionalSplit:\n      output.ConditionalSplit !== undefined && output.ConditionalSplit !== null\n        ? deserializeAws_restJson1ConditionalSplitActivity(output.ConditionalSplit, context)\n        : undefined,\n    Description: output.Description !== undefined && output.Description !== null ? output.Description : undefined,\n    EMAIL:\n      output.EMAIL !== undefined && output.EMAIL !== null\n        ? deserializeAws_restJson1EmailMessageActivity(output.EMAIL, context)\n        : undefined,\n    Holdout:\n      output.Holdout !== undefined && output.Holdout !== null\n        ? deserializeAws_restJson1HoldoutActivity(output.Holdout, context)\n        : undefined,\n    MultiCondition:\n      output.MultiCondition !== undefined && output.MultiCondition !== null\n        ? deserializeAws_restJson1MultiConditionalSplitActivity(output.MultiCondition, context)\n        : undefined,\n    PUSH:\n      output.PUSH !== undefined && output.PUSH !== null\n        ? deserializeAws_restJson1PushMessageActivity(output.PUSH, context)\n        : undefined,\n    RandomSplit:\n      output.RandomSplit !== undefined && output.RandomSplit !== null\n        ? deserializeAws_restJson1RandomSplitActivity(output.RandomSplit, context)\n        : undefined,\n    SMS:\n      output.SMS !== undefined && output.SMS !== null\n        ? deserializeAws_restJson1SMSMessageActivity(output.SMS, context)\n        : undefined,\n    Wait:\n      output.Wait !== undefined && output.Wait !== null\n        ? deserializeAws_restJson1WaitActivity(output.Wait, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1ActivityResponse = (output: any, context: __SerdeContext): ActivityResponse => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CampaignId: output.CampaignId !== undefined && output.CampaignId !== null ? output.CampaignId : undefined,\n    End: output.End !== undefined && output.End !== null ? output.End : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    Result: output.Result !== undefined && output.Result !== null ? output.Result : undefined,\n    ScheduledStart:\n      output.ScheduledStart !== undefined && output.ScheduledStart !== null ? output.ScheduledStart : undefined,\n    Start: output.Start !== undefined && output.Start !== null ? output.Start : undefined,\n    State: output.State !== undefined && output.State !== null ? output.State : undefined,\n    SuccessfulEndpointCount:\n      output.SuccessfulEndpointCount !== undefined && output.SuccessfulEndpointCount !== null\n        ? output.SuccessfulEndpointCount\n        : undefined,\n    TimezonesCompletedCount:\n      output.TimezonesCompletedCount !== undefined && output.TimezonesCompletedCount !== null\n        ? output.TimezonesCompletedCount\n        : undefined,\n    TimezonesTotalCount:\n      output.TimezonesTotalCount !== undefined && output.TimezonesTotalCount !== null\n        ? output.TimezonesTotalCount\n        : undefined,\n    TotalEndpointCount:\n      output.TotalEndpointCount !== undefined && output.TotalEndpointCount !== null\n        ? output.TotalEndpointCount\n        : undefined,\n    TreatmentId: output.TreatmentId !== undefined && output.TreatmentId !== null ? output.TreatmentId : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1ADMChannelResponse = (output: any, context: __SerdeContext): ADMChannelResponse => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Enabled: output.Enabled !== undefined && output.Enabled !== null ? output.Enabled : undefined,\n    HasCredential:\n      output.HasCredential !== undefined && output.HasCredential !== null ? output.HasCredential : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    IsArchived: output.IsArchived !== undefined && output.IsArchived !== null ? output.IsArchived : undefined,\n    LastModifiedBy:\n      output.LastModifiedBy !== undefined && output.LastModifiedBy !== null ? output.LastModifiedBy : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? output.Platform : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1AndroidPushNotificationTemplate = (\n  output: any,\n  context: __SerdeContext\n): AndroidPushNotificationTemplate => {\n  return {\n    Action: output.Action !== undefined && output.Action !== null ? output.Action : undefined,\n    Body: output.Body !== undefined && output.Body !== null ? output.Body : undefined,\n    ImageIconUrl: output.ImageIconUrl !== undefined && output.ImageIconUrl !== null ? output.ImageIconUrl : undefined,\n    ImageUrl: output.ImageUrl !== undefined && output.ImageUrl !== null ? output.ImageUrl : undefined,\n    RawContent: output.RawContent !== undefined && output.RawContent !== null ? output.RawContent : undefined,\n    SmallImageIconUrl:\n      output.SmallImageIconUrl !== undefined && output.SmallImageIconUrl !== null\n        ? output.SmallImageIconUrl\n        : undefined,\n    Sound: output.Sound !== undefined && output.Sound !== null ? output.Sound : undefined,\n    Title: output.Title !== undefined && output.Title !== null ? output.Title : undefined,\n    Url: output.Url !== undefined && output.Url !== null ? output.Url : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1APNSChannelResponse = (output: any, context: __SerdeContext): APNSChannelResponse => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    DefaultAuthenticationMethod:\n      output.DefaultAuthenticationMethod !== undefined && output.DefaultAuthenticationMethod !== null\n        ? output.DefaultAuthenticationMethod\n        : undefined,\n    Enabled: output.Enabled !== undefined && output.Enabled !== null ? output.Enabled : undefined,\n    HasCredential:\n      output.HasCredential !== undefined && output.HasCredential !== null ? output.HasCredential : undefined,\n    HasTokenKey: output.HasTokenKey !== undefined && output.HasTokenKey !== null ? output.HasTokenKey : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    IsArchived: output.IsArchived !== undefined && output.IsArchived !== null ? output.IsArchived : undefined,\n    LastModifiedBy:\n      output.LastModifiedBy !== undefined && output.LastModifiedBy !== null ? output.LastModifiedBy : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? output.Platform : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1APNSPushNotificationTemplate = (\n  output: any,\n  context: __SerdeContext\n): APNSPushNotificationTemplate => {\n  return {\n    Action: output.Action !== undefined && output.Action !== null ? output.Action : undefined,\n    Body: output.Body !== undefined && output.Body !== null ? output.Body : undefined,\n    MediaUrl: output.MediaUrl !== undefined && output.MediaUrl !== null ? output.MediaUrl : undefined,\n    RawContent: output.RawContent !== undefined && output.RawContent !== null ? output.RawContent : undefined,\n    Sound: output.Sound !== undefined && output.Sound !== null ? output.Sound : undefined,\n    Title: output.Title !== undefined && output.Title !== null ? output.Title : undefined,\n    Url: output.Url !== undefined && output.Url !== null ? output.Url : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1APNSSandboxChannelResponse = (\n  output: any,\n  context: __SerdeContext\n): APNSSandboxChannelResponse => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    DefaultAuthenticationMethod:\n      output.DefaultAuthenticationMethod !== undefined && output.DefaultAuthenticationMethod !== null\n        ? output.DefaultAuthenticationMethod\n        : undefined,\n    Enabled: output.Enabled !== undefined && output.Enabled !== null ? output.Enabled : undefined,\n    HasCredential:\n      output.HasCredential !== undefined && output.HasCredential !== null ? output.HasCredential : undefined,\n    HasTokenKey: output.HasTokenKey !== undefined && output.HasTokenKey !== null ? output.HasTokenKey : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    IsArchived: output.IsArchived !== undefined && output.IsArchived !== null ? output.IsArchived : undefined,\n    LastModifiedBy:\n      output.LastModifiedBy !== undefined && output.LastModifiedBy !== null ? output.LastModifiedBy : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? output.Platform : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1APNSVoipChannelResponse = (\n  output: any,\n  context: __SerdeContext\n): APNSVoipChannelResponse => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    DefaultAuthenticationMethod:\n      output.DefaultAuthenticationMethod !== undefined && output.DefaultAuthenticationMethod !== null\n        ? output.DefaultAuthenticationMethod\n        : undefined,\n    Enabled: output.Enabled !== undefined && output.Enabled !== null ? output.Enabled : undefined,\n    HasCredential:\n      output.HasCredential !== undefined && output.HasCredential !== null ? output.HasCredential : undefined,\n    HasTokenKey: output.HasTokenKey !== undefined && output.HasTokenKey !== null ? output.HasTokenKey : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    IsArchived: output.IsArchived !== undefined && output.IsArchived !== null ? output.IsArchived : undefined,\n    LastModifiedBy:\n      output.LastModifiedBy !== undefined && output.LastModifiedBy !== null ? output.LastModifiedBy : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? output.Platform : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1APNSVoipSandboxChannelResponse = (\n  output: any,\n  context: __SerdeContext\n): APNSVoipSandboxChannelResponse => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    DefaultAuthenticationMethod:\n      output.DefaultAuthenticationMethod !== undefined && output.DefaultAuthenticationMethod !== null\n        ? output.DefaultAuthenticationMethod\n        : undefined,\n    Enabled: output.Enabled !== undefined && output.Enabled !== null ? output.Enabled : undefined,\n    HasCredential:\n      output.HasCredential !== undefined && output.HasCredential !== null ? output.HasCredential : undefined,\n    HasTokenKey: output.HasTokenKey !== undefined && output.HasTokenKey !== null ? output.HasTokenKey : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    IsArchived: output.IsArchived !== undefined && output.IsArchived !== null ? output.IsArchived : undefined,\n    LastModifiedBy:\n      output.LastModifiedBy !== undefined && output.LastModifiedBy !== null ? output.LastModifiedBy : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? output.Platform : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1ApplicationDateRangeKpiResponse = (\n  output: any,\n  context: __SerdeContext\n): ApplicationDateRangeKpiResponse => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    EndTime: output.EndTime !== undefined && output.EndTime !== null ? new Date(output.EndTime) : undefined,\n    KpiName: output.KpiName !== undefined && output.KpiName !== null ? output.KpiName : undefined,\n    KpiResult:\n      output.KpiResult !== undefined && output.KpiResult !== null\n        ? deserializeAws_restJson1BaseKpiResult(output.KpiResult, context)\n        : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n    StartTime: output.StartTime !== undefined && output.StartTime !== null ? new Date(output.StartTime) : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1ApplicationResponse = (output: any, context: __SerdeContext): ApplicationResponse => {\n  return {\n    Arn: output.Arn !== undefined && output.Arn !== null ? output.Arn : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    tags:\n      output.tags !== undefined && output.tags !== null\n        ? deserializeAws_restJson1MapOf__string(output.tags, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1ApplicationSettingsResource = (\n  output: any,\n  context: __SerdeContext\n): ApplicationSettingsResource => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CampaignHook:\n      output.CampaignHook !== undefined && output.CampaignHook !== null\n        ? deserializeAws_restJson1CampaignHook(output.CampaignHook, context)\n        : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Limits:\n      output.Limits !== undefined && output.Limits !== null\n        ? deserializeAws_restJson1CampaignLimits(output.Limits, context)\n        : undefined,\n    QuietTime:\n      output.QuietTime !== undefined && output.QuietTime !== null\n        ? deserializeAws_restJson1QuietTime(output.QuietTime, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1ApplicationsResponse = (output: any, context: __SerdeContext): ApplicationsResponse => {\n  return {\n    Item:\n      output.Item !== undefined && output.Item !== null\n        ? deserializeAws_restJson1ListOfApplicationResponse(output.Item, context)\n        : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1AttributeDimension = (output: any, context: __SerdeContext): AttributeDimension => {\n  return {\n    AttributeType:\n      output.AttributeType !== undefined && output.AttributeType !== null ? output.AttributeType : undefined,\n    Values:\n      output.Values !== undefined && output.Values !== null\n        ? deserializeAws_restJson1ListOf__string(output.Values, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1AttributesResource = (output: any, context: __SerdeContext): AttributesResource => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    AttributeType:\n      output.AttributeType !== undefined && output.AttributeType !== null ? output.AttributeType : undefined,\n    Attributes:\n      output.Attributes !== undefined && output.Attributes !== null\n        ? deserializeAws_restJson1ListOf__string(output.Attributes, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1BaiduChannelResponse = (output: any, context: __SerdeContext): BaiduChannelResponse => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Credential: output.Credential !== undefined && output.Credential !== null ? output.Credential : undefined,\n    Enabled: output.Enabled !== undefined && output.Enabled !== null ? output.Enabled : undefined,\n    HasCredential:\n      output.HasCredential !== undefined && output.HasCredential !== null ? output.HasCredential : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    IsArchived: output.IsArchived !== undefined && output.IsArchived !== null ? output.IsArchived : undefined,\n    LastModifiedBy:\n      output.LastModifiedBy !== undefined && output.LastModifiedBy !== null ? output.LastModifiedBy : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? output.Platform : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1BaseKpiResult = (output: any, context: __SerdeContext): BaseKpiResult => {\n  return {\n    Rows:\n      output.Rows !== undefined && output.Rows !== null\n        ? deserializeAws_restJson1ListOfResultRow(output.Rows, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1CampaignCustomMessage = (output: any, context: __SerdeContext): CampaignCustomMessage => {\n  return {\n    Data: output.Data !== undefined && output.Data !== null ? output.Data : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1CampaignDateRangeKpiResponse = (\n  output: any,\n  context: __SerdeContext\n): CampaignDateRangeKpiResponse => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CampaignId: output.CampaignId !== undefined && output.CampaignId !== null ? output.CampaignId : undefined,\n    EndTime: output.EndTime !== undefined && output.EndTime !== null ? new Date(output.EndTime) : undefined,\n    KpiName: output.KpiName !== undefined && output.KpiName !== null ? output.KpiName : undefined,\n    KpiResult:\n      output.KpiResult !== undefined && output.KpiResult !== null\n        ? deserializeAws_restJson1BaseKpiResult(output.KpiResult, context)\n        : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n    StartTime: output.StartTime !== undefined && output.StartTime !== null ? new Date(output.StartTime) : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1CampaignEmailMessage = (output: any, context: __SerdeContext): CampaignEmailMessage => {\n  return {\n    Body: output.Body !== undefined && output.Body !== null ? output.Body : undefined,\n    FromAddress: output.FromAddress !== undefined && output.FromAddress !== null ? output.FromAddress : undefined,\n    HtmlBody: output.HtmlBody !== undefined && output.HtmlBody !== null ? output.HtmlBody : undefined,\n    Title: output.Title !== undefined && output.Title !== null ? output.Title : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1CampaignEventFilter = (output: any, context: __SerdeContext): CampaignEventFilter => {\n  return {\n    Dimensions:\n      output.Dimensions !== undefined && output.Dimensions !== null\n        ? deserializeAws_restJson1EventDimensions(output.Dimensions, context)\n        : undefined,\n    FilterType: output.FilterType !== undefined && output.FilterType !== null ? output.FilterType : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1CampaignHook = (output: any, context: __SerdeContext): CampaignHook => {\n  return {\n    LambdaFunctionName:\n      output.LambdaFunctionName !== undefined && output.LambdaFunctionName !== null\n        ? output.LambdaFunctionName\n        : undefined,\n    Mode: output.Mode !== undefined && output.Mode !== null ? output.Mode : undefined,\n    WebUrl: output.WebUrl !== undefined && output.WebUrl !== null ? output.WebUrl : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1CampaignLimits = (output: any, context: __SerdeContext): CampaignLimits => {\n  return {\n    Daily: output.Daily !== undefined && output.Daily !== null ? output.Daily : undefined,\n    MaximumDuration:\n      output.MaximumDuration !== undefined && output.MaximumDuration !== null ? output.MaximumDuration : undefined,\n    MessagesPerSecond:\n      output.MessagesPerSecond !== undefined && output.MessagesPerSecond !== null\n        ? output.MessagesPerSecond\n        : undefined,\n    Total: output.Total !== undefined && output.Total !== null ? output.Total : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1CampaignResponse = (output: any, context: __SerdeContext): CampaignResponse => {\n  return {\n    AdditionalTreatments:\n      output.AdditionalTreatments !== undefined && output.AdditionalTreatments !== null\n        ? deserializeAws_restJson1ListOfTreatmentResource(output.AdditionalTreatments, context)\n        : undefined,\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    Arn: output.Arn !== undefined && output.Arn !== null ? output.Arn : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    CustomDeliveryConfiguration:\n      output.CustomDeliveryConfiguration !== undefined && output.CustomDeliveryConfiguration !== null\n        ? deserializeAws_restJson1CustomDeliveryConfiguration(output.CustomDeliveryConfiguration, context)\n        : undefined,\n    DefaultState:\n      output.DefaultState !== undefined && output.DefaultState !== null\n        ? deserializeAws_restJson1CampaignState(output.DefaultState, context)\n        : undefined,\n    Description: output.Description !== undefined && output.Description !== null ? output.Description : undefined,\n    HoldoutPercent:\n      output.HoldoutPercent !== undefined && output.HoldoutPercent !== null ? output.HoldoutPercent : undefined,\n    Hook:\n      output.Hook !== undefined && output.Hook !== null\n        ? deserializeAws_restJson1CampaignHook(output.Hook, context)\n        : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    IsPaused: output.IsPaused !== undefined && output.IsPaused !== null ? output.IsPaused : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Limits:\n      output.Limits !== undefined && output.Limits !== null\n        ? deserializeAws_restJson1CampaignLimits(output.Limits, context)\n        : undefined,\n    MessageConfiguration:\n      output.MessageConfiguration !== undefined && output.MessageConfiguration !== null\n        ? deserializeAws_restJson1MessageConfiguration(output.MessageConfiguration, context)\n        : undefined,\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    Schedule:\n      output.Schedule !== undefined && output.Schedule !== null\n        ? deserializeAws_restJson1Schedule(output.Schedule, context)\n        : undefined,\n    SegmentId: output.SegmentId !== undefined && output.SegmentId !== null ? output.SegmentId : undefined,\n    SegmentVersion:\n      output.SegmentVersion !== undefined && output.SegmentVersion !== null ? output.SegmentVersion : undefined,\n    State:\n      output.State !== undefined && output.State !== null\n        ? deserializeAws_restJson1CampaignState(output.State, context)\n        : undefined,\n    TemplateConfiguration:\n      output.TemplateConfiguration !== undefined && output.TemplateConfiguration !== null\n        ? deserializeAws_restJson1TemplateConfiguration(output.TemplateConfiguration, context)\n        : undefined,\n    TreatmentDescription:\n      output.TreatmentDescription !== undefined && output.TreatmentDescription !== null\n        ? output.TreatmentDescription\n        : undefined,\n    TreatmentName:\n      output.TreatmentName !== undefined && output.TreatmentName !== null ? output.TreatmentName : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n    tags:\n      output.tags !== undefined && output.tags !== null\n        ? deserializeAws_restJson1MapOf__string(output.tags, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1CampaignSmsMessage = (output: any, context: __SerdeContext): CampaignSmsMessage => {\n  return {\n    Body: output.Body !== undefined && output.Body !== null ? output.Body : undefined,\n    MessageType: output.MessageType !== undefined && output.MessageType !== null ? output.MessageType : undefined,\n    SenderId: output.SenderId !== undefined && output.SenderId !== null ? output.SenderId : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1CampaignsResponse = (output: any, context: __SerdeContext): CampaignsResponse => {\n  return {\n    Item:\n      output.Item !== undefined && output.Item !== null\n        ? deserializeAws_restJson1ListOfCampaignResponse(output.Item, context)\n        : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1CampaignState = (output: any, context: __SerdeContext): CampaignState => {\n  return {\n    CampaignStatus:\n      output.CampaignStatus !== undefined && output.CampaignStatus !== null ? output.CampaignStatus : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1ChannelResponse = (output: any, context: __SerdeContext): ChannelResponse => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Enabled: output.Enabled !== undefined && output.Enabled !== null ? output.Enabled : undefined,\n    HasCredential:\n      output.HasCredential !== undefined && output.HasCredential !== null ? output.HasCredential : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    IsArchived: output.IsArchived !== undefined && output.IsArchived !== null ? output.IsArchived : undefined,\n    LastModifiedBy:\n      output.LastModifiedBy !== undefined && output.LastModifiedBy !== null ? output.LastModifiedBy : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1ChannelsResponse = (output: any, context: __SerdeContext): ChannelsResponse => {\n  return {\n    Channels:\n      output.Channels !== undefined && output.Channels !== null\n        ? deserializeAws_restJson1MapOfChannelResponse(output.Channels, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1Condition = (output: any, context: __SerdeContext): Condition => {\n  return {\n    Conditions:\n      output.Conditions !== undefined && output.Conditions !== null\n        ? deserializeAws_restJson1ListOfSimpleCondition(output.Conditions, context)\n        : undefined,\n    Operator: output.Operator !== undefined && output.Operator !== null ? output.Operator : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1ConditionalSplitActivity = (\n  output: any,\n  context: __SerdeContext\n): ConditionalSplitActivity => {\n  return {\n    Condition:\n      output.Condition !== undefined && output.Condition !== null\n        ? deserializeAws_restJson1Condition(output.Condition, context)\n        : undefined,\n    EvaluationWaitTime:\n      output.EvaluationWaitTime !== undefined && output.EvaluationWaitTime !== null\n        ? deserializeAws_restJson1WaitTime(output.EvaluationWaitTime, context)\n        : undefined,\n    FalseActivity:\n      output.FalseActivity !== undefined && output.FalseActivity !== null ? output.FalseActivity : undefined,\n    TrueActivity: output.TrueActivity !== undefined && output.TrueActivity !== null ? output.TrueActivity : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1CreateTemplateMessageBody = (\n  output: any,\n  context: __SerdeContext\n): CreateTemplateMessageBody => {\n  return {\n    Arn: output.Arn !== undefined && output.Arn !== null ? output.Arn : undefined,\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n    RequestID: output.RequestID !== undefined && output.RequestID !== null ? output.RequestID : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1CustomDeliveryConfiguration = (\n  output: any,\n  context: __SerdeContext\n): CustomDeliveryConfiguration => {\n  return {\n    DeliveryUri: output.DeliveryUri !== undefined && output.DeliveryUri !== null ? output.DeliveryUri : undefined,\n    EndpointTypes:\n      output.EndpointTypes !== undefined && output.EndpointTypes !== null\n        ? deserializeAws_restJson1ListOf__EndpointTypesElement(output.EndpointTypes, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1CustomMessageActivity = (output: any, context: __SerdeContext): CustomMessageActivity => {\n  return {\n    DeliveryUri: output.DeliveryUri !== undefined && output.DeliveryUri !== null ? output.DeliveryUri : undefined,\n    EndpointTypes:\n      output.EndpointTypes !== undefined && output.EndpointTypes !== null\n        ? deserializeAws_restJson1ListOf__EndpointTypesElement(output.EndpointTypes, context)\n        : undefined,\n    MessageConfig:\n      output.MessageConfig !== undefined && output.MessageConfig !== null\n        ? deserializeAws_restJson1JourneyCustomMessage(output.MessageConfig, context)\n        : undefined,\n    NextActivity: output.NextActivity !== undefined && output.NextActivity !== null ? output.NextActivity : undefined,\n    TemplateName: output.TemplateName !== undefined && output.TemplateName !== null ? output.TemplateName : undefined,\n    TemplateVersion:\n      output.TemplateVersion !== undefined && output.TemplateVersion !== null ? output.TemplateVersion : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1DefaultPushNotificationTemplate = (\n  output: any,\n  context: __SerdeContext\n): DefaultPushNotificationTemplate => {\n  return {\n    Action: output.Action !== undefined && output.Action !== null ? output.Action : undefined,\n    Body: output.Body !== undefined && output.Body !== null ? output.Body : undefined,\n    Sound: output.Sound !== undefined && output.Sound !== null ? output.Sound : undefined,\n    Title: output.Title !== undefined && output.Title !== null ? output.Title : undefined,\n    Url: output.Url !== undefined && output.Url !== null ? output.Url : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1EmailChannelResponse = (output: any, context: __SerdeContext): EmailChannelResponse => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    ConfigurationSet:\n      output.ConfigurationSet !== undefined && output.ConfigurationSet !== null ? output.ConfigurationSet : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Enabled: output.Enabled !== undefined && output.Enabled !== null ? output.Enabled : undefined,\n    FromAddress: output.FromAddress !== undefined && output.FromAddress !== null ? output.FromAddress : undefined,\n    HasCredential:\n      output.HasCredential !== undefined && output.HasCredential !== null ? output.HasCredential : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    Identity: output.Identity !== undefined && output.Identity !== null ? output.Identity : undefined,\n    IsArchived: output.IsArchived !== undefined && output.IsArchived !== null ? output.IsArchived : undefined,\n    LastModifiedBy:\n      output.LastModifiedBy !== undefined && output.LastModifiedBy !== null ? output.LastModifiedBy : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    MessagesPerSecond:\n      output.MessagesPerSecond !== undefined && output.MessagesPerSecond !== null\n        ? output.MessagesPerSecond\n        : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? output.Platform : undefined,\n    RoleArn: output.RoleArn !== undefined && output.RoleArn !== null ? output.RoleArn : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1EmailMessageActivity = (output: any, context: __SerdeContext): EmailMessageActivity => {\n  return {\n    MessageConfig:\n      output.MessageConfig !== undefined && output.MessageConfig !== null\n        ? deserializeAws_restJson1JourneyEmailMessage(output.MessageConfig, context)\n        : undefined,\n    NextActivity: output.NextActivity !== undefined && output.NextActivity !== null ? output.NextActivity : undefined,\n    TemplateName: output.TemplateName !== undefined && output.TemplateName !== null ? output.TemplateName : undefined,\n    TemplateVersion:\n      output.TemplateVersion !== undefined && output.TemplateVersion !== null ? output.TemplateVersion : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1EmailTemplateResponse = (output: any, context: __SerdeContext): EmailTemplateResponse => {\n  return {\n    Arn: output.Arn !== undefined && output.Arn !== null ? output.Arn : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    DefaultSubstitutions:\n      output.DefaultSubstitutions !== undefined && output.DefaultSubstitutions !== null\n        ? output.DefaultSubstitutions\n        : undefined,\n    HtmlPart: output.HtmlPart !== undefined && output.HtmlPart !== null ? output.HtmlPart : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    RecommenderId:\n      output.RecommenderId !== undefined && output.RecommenderId !== null ? output.RecommenderId : undefined,\n    Subject: output.Subject !== undefined && output.Subject !== null ? output.Subject : undefined,\n    TemplateDescription:\n      output.TemplateDescription !== undefined && output.TemplateDescription !== null\n        ? output.TemplateDescription\n        : undefined,\n    TemplateName: output.TemplateName !== undefined && output.TemplateName !== null ? output.TemplateName : undefined,\n    TemplateType: output.TemplateType !== undefined && output.TemplateType !== null ? output.TemplateType : undefined,\n    TextPart: output.TextPart !== undefined && output.TextPart !== null ? output.TextPart : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n    tags:\n      output.tags !== undefined && output.tags !== null\n        ? deserializeAws_restJson1MapOf__string(output.tags, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1EndpointDemographic = (output: any, context: __SerdeContext): EndpointDemographic => {\n  return {\n    AppVersion: output.AppVersion !== undefined && output.AppVersion !== null ? output.AppVersion : undefined,\n    Locale: output.Locale !== undefined && output.Locale !== null ? output.Locale : undefined,\n    Make: output.Make !== undefined && output.Make !== null ? output.Make : undefined,\n    Model: output.Model !== undefined && output.Model !== null ? output.Model : undefined,\n    ModelVersion: output.ModelVersion !== undefined && output.ModelVersion !== null ? output.ModelVersion : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? output.Platform : undefined,\n    PlatformVersion:\n      output.PlatformVersion !== undefined && output.PlatformVersion !== null ? output.PlatformVersion : undefined,\n    Timezone: output.Timezone !== undefined && output.Timezone !== null ? output.Timezone : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1EndpointItemResponse = (output: any, context: __SerdeContext): EndpointItemResponse => {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n    StatusCode: output.StatusCode !== undefined && output.StatusCode !== null ? output.StatusCode : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1EndpointLocation = (output: any, context: __SerdeContext): EndpointLocation => {\n  return {\n    City: output.City !== undefined && output.City !== null ? output.City : undefined,\n    Country: output.Country !== undefined && output.Country !== null ? output.Country : undefined,\n    Latitude: output.Latitude !== undefined && output.Latitude !== null ? output.Latitude : undefined,\n    Longitude: output.Longitude !== undefined && output.Longitude !== null ? output.Longitude : undefined,\n    PostalCode: output.PostalCode !== undefined && output.PostalCode !== null ? output.PostalCode : undefined,\n    Region: output.Region !== undefined && output.Region !== null ? output.Region : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1EndpointMessageResult = (output: any, context: __SerdeContext): EndpointMessageResult => {\n  return {\n    Address: output.Address !== undefined && output.Address !== null ? output.Address : undefined,\n    DeliveryStatus:\n      output.DeliveryStatus !== undefined && output.DeliveryStatus !== null ? output.DeliveryStatus : undefined,\n    MessageId: output.MessageId !== undefined && output.MessageId !== null ? output.MessageId : undefined,\n    StatusCode: output.StatusCode !== undefined && output.StatusCode !== null ? output.StatusCode : undefined,\n    StatusMessage:\n      output.StatusMessage !== undefined && output.StatusMessage !== null ? output.StatusMessage : undefined,\n    UpdatedToken: output.UpdatedToken !== undefined && output.UpdatedToken !== null ? output.UpdatedToken : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1EndpointResponse = (output: any, context: __SerdeContext): EndpointResponse => {\n  return {\n    Address: output.Address !== undefined && output.Address !== null ? output.Address : undefined,\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    Attributes:\n      output.Attributes !== undefined && output.Attributes !== null\n        ? deserializeAws_restJson1MapOfListOf__string(output.Attributes, context)\n        : undefined,\n    ChannelType: output.ChannelType !== undefined && output.ChannelType !== null ? output.ChannelType : undefined,\n    CohortId: output.CohortId !== undefined && output.CohortId !== null ? output.CohortId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Demographic:\n      output.Demographic !== undefined && output.Demographic !== null\n        ? deserializeAws_restJson1EndpointDemographic(output.Demographic, context)\n        : undefined,\n    EffectiveDate:\n      output.EffectiveDate !== undefined && output.EffectiveDate !== null ? output.EffectiveDate : undefined,\n    EndpointStatus:\n      output.EndpointStatus !== undefined && output.EndpointStatus !== null ? output.EndpointStatus : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    Location:\n      output.Location !== undefined && output.Location !== null\n        ? deserializeAws_restJson1EndpointLocation(output.Location, context)\n        : undefined,\n    Metrics:\n      output.Metrics !== undefined && output.Metrics !== null\n        ? deserializeAws_restJson1MapOf__double(output.Metrics, context)\n        : undefined,\n    OptOut: output.OptOut !== undefined && output.OptOut !== null ? output.OptOut : undefined,\n    RequestId: output.RequestId !== undefined && output.RequestId !== null ? output.RequestId : undefined,\n    User:\n      output.User !== undefined && output.User !== null\n        ? deserializeAws_restJson1EndpointUser(output.User, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1EndpointsResponse = (output: any, context: __SerdeContext): EndpointsResponse => {\n  return {\n    Item:\n      output.Item !== undefined && output.Item !== null\n        ? deserializeAws_restJson1ListOfEndpointResponse(output.Item, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1EndpointUser = (output: any, context: __SerdeContext): EndpointUser => {\n  return {\n    UserAttributes:\n      output.UserAttributes !== undefined && output.UserAttributes !== null\n        ? deserializeAws_restJson1MapOfListOf__string(output.UserAttributes, context)\n        : undefined,\n    UserId: output.UserId !== undefined && output.UserId !== null ? output.UserId : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1EventCondition = (output: any, context: __SerdeContext): EventCondition => {\n  return {\n    Dimensions:\n      output.Dimensions !== undefined && output.Dimensions !== null\n        ? deserializeAws_restJson1EventDimensions(output.Dimensions, context)\n        : undefined,\n    MessageActivity:\n      output.MessageActivity !== undefined && output.MessageActivity !== null ? output.MessageActivity : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1EventDimensions = (output: any, context: __SerdeContext): EventDimensions => {\n  return {\n    Attributes:\n      output.Attributes !== undefined && output.Attributes !== null\n        ? deserializeAws_restJson1MapOfAttributeDimension(output.Attributes, context)\n        : undefined,\n    EventType:\n      output.EventType !== undefined && output.EventType !== null\n        ? deserializeAws_restJson1SetDimension(output.EventType, context)\n        : undefined,\n    Metrics:\n      output.Metrics !== undefined && output.Metrics !== null\n        ? deserializeAws_restJson1MapOfMetricDimension(output.Metrics, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1EventFilter = (output: any, context: __SerdeContext): EventFilter => {\n  return {\n    Dimensions:\n      output.Dimensions !== undefined && output.Dimensions !== null\n        ? deserializeAws_restJson1EventDimensions(output.Dimensions, context)\n        : undefined,\n    FilterType: output.FilterType !== undefined && output.FilterType !== null ? output.FilterType : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1EventItemResponse = (output: any, context: __SerdeContext): EventItemResponse => {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n    StatusCode: output.StatusCode !== undefined && output.StatusCode !== null ? output.StatusCode : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1EventsResponse = (output: any, context: __SerdeContext): EventsResponse => {\n  return {\n    Results:\n      output.Results !== undefined && output.Results !== null\n        ? deserializeAws_restJson1MapOfItemResponse(output.Results, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1EventStartCondition = (output: any, context: __SerdeContext): EventStartCondition => {\n  return {\n    EventFilter:\n      output.EventFilter !== undefined && output.EventFilter !== null\n        ? deserializeAws_restJson1EventFilter(output.EventFilter, context)\n        : undefined,\n    SegmentId: output.SegmentId !== undefined && output.SegmentId !== null ? output.SegmentId : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1EventStream = (output: any, context: __SerdeContext): EventStream => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    DestinationStreamArn:\n      output.DestinationStreamArn !== undefined && output.DestinationStreamArn !== null\n        ? output.DestinationStreamArn\n        : undefined,\n    ExternalId: output.ExternalId !== undefined && output.ExternalId !== null ? output.ExternalId : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    LastUpdatedBy:\n      output.LastUpdatedBy !== undefined && output.LastUpdatedBy !== null ? output.LastUpdatedBy : undefined,\n    RoleArn: output.RoleArn !== undefined && output.RoleArn !== null ? output.RoleArn : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1ExportJobResource = (output: any, context: __SerdeContext): ExportJobResource => {\n  return {\n    RoleArn: output.RoleArn !== undefined && output.RoleArn !== null ? output.RoleArn : undefined,\n    S3UrlPrefix: output.S3UrlPrefix !== undefined && output.S3UrlPrefix !== null ? output.S3UrlPrefix : undefined,\n    SegmentId: output.SegmentId !== undefined && output.SegmentId !== null ? output.SegmentId : undefined,\n    SegmentVersion:\n      output.SegmentVersion !== undefined && output.SegmentVersion !== null ? output.SegmentVersion : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1ExportJobResponse = (output: any, context: __SerdeContext): ExportJobResponse => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CompletedPieces:\n      output.CompletedPieces !== undefined && output.CompletedPieces !== null ? output.CompletedPieces : undefined,\n    CompletionDate:\n      output.CompletionDate !== undefined && output.CompletionDate !== null ? output.CompletionDate : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Definition:\n      output.Definition !== undefined && output.Definition !== null\n        ? deserializeAws_restJson1ExportJobResource(output.Definition, context)\n        : undefined,\n    FailedPieces: output.FailedPieces !== undefined && output.FailedPieces !== null ? output.FailedPieces : undefined,\n    Failures:\n      output.Failures !== undefined && output.Failures !== null\n        ? deserializeAws_restJson1ListOf__string(output.Failures, context)\n        : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    JobStatus: output.JobStatus !== undefined && output.JobStatus !== null ? output.JobStatus : undefined,\n    TotalFailures:\n      output.TotalFailures !== undefined && output.TotalFailures !== null ? output.TotalFailures : undefined,\n    TotalPieces: output.TotalPieces !== undefined && output.TotalPieces !== null ? output.TotalPieces : undefined,\n    TotalProcessed:\n      output.TotalProcessed !== undefined && output.TotalProcessed !== null ? output.TotalProcessed : undefined,\n    Type: output.Type !== undefined && output.Type !== null ? output.Type : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1ExportJobsResponse = (output: any, context: __SerdeContext): ExportJobsResponse => {\n  return {\n    Item:\n      output.Item !== undefined && output.Item !== null\n        ? deserializeAws_restJson1ListOfExportJobResponse(output.Item, context)\n        : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1GCMChannelResponse = (output: any, context: __SerdeContext): GCMChannelResponse => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Credential: output.Credential !== undefined && output.Credential !== null ? output.Credential : undefined,\n    Enabled: output.Enabled !== undefined && output.Enabled !== null ? output.Enabled : undefined,\n    HasCredential:\n      output.HasCredential !== undefined && output.HasCredential !== null ? output.HasCredential : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    IsArchived: output.IsArchived !== undefined && output.IsArchived !== null ? output.IsArchived : undefined,\n    LastModifiedBy:\n      output.LastModifiedBy !== undefined && output.LastModifiedBy !== null ? output.LastModifiedBy : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? output.Platform : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1GPSCoordinates = (output: any, context: __SerdeContext): GPSCoordinates => {\n  return {\n    Latitude: output.Latitude !== undefined && output.Latitude !== null ? output.Latitude : undefined,\n    Longitude: output.Longitude !== undefined && output.Longitude !== null ? output.Longitude : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1GPSPointDimension = (output: any, context: __SerdeContext): GPSPointDimension => {\n  return {\n    Coordinates:\n      output.Coordinates !== undefined && output.Coordinates !== null\n        ? deserializeAws_restJson1GPSCoordinates(output.Coordinates, context)\n        : undefined,\n    RangeInKilometers:\n      output.RangeInKilometers !== undefined && output.RangeInKilometers !== null\n        ? output.RangeInKilometers\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1HoldoutActivity = (output: any, context: __SerdeContext): HoldoutActivity => {\n  return {\n    NextActivity: output.NextActivity !== undefined && output.NextActivity !== null ? output.NextActivity : undefined,\n    Percentage: output.Percentage !== undefined && output.Percentage !== null ? output.Percentage : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1ImportJobResource = (output: any, context: __SerdeContext): ImportJobResource => {\n  return {\n    DefineSegment:\n      output.DefineSegment !== undefined && output.DefineSegment !== null ? output.DefineSegment : undefined,\n    ExternalId: output.ExternalId !== undefined && output.ExternalId !== null ? output.ExternalId : undefined,\n    Format: output.Format !== undefined && output.Format !== null ? output.Format : undefined,\n    RegisterEndpoints:\n      output.RegisterEndpoints !== undefined && output.RegisterEndpoints !== null\n        ? output.RegisterEndpoints\n        : undefined,\n    RoleArn: output.RoleArn !== undefined && output.RoleArn !== null ? output.RoleArn : undefined,\n    S3Url: output.S3Url !== undefined && output.S3Url !== null ? output.S3Url : undefined,\n    SegmentId: output.SegmentId !== undefined && output.SegmentId !== null ? output.SegmentId : undefined,\n    SegmentName: output.SegmentName !== undefined && output.SegmentName !== null ? output.SegmentName : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1ImportJobResponse = (output: any, context: __SerdeContext): ImportJobResponse => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CompletedPieces:\n      output.CompletedPieces !== undefined && output.CompletedPieces !== null ? output.CompletedPieces : undefined,\n    CompletionDate:\n      output.CompletionDate !== undefined && output.CompletionDate !== null ? output.CompletionDate : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Definition:\n      output.Definition !== undefined && output.Definition !== null\n        ? deserializeAws_restJson1ImportJobResource(output.Definition, context)\n        : undefined,\n    FailedPieces: output.FailedPieces !== undefined && output.FailedPieces !== null ? output.FailedPieces : undefined,\n    Failures:\n      output.Failures !== undefined && output.Failures !== null\n        ? deserializeAws_restJson1ListOf__string(output.Failures, context)\n        : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    JobStatus: output.JobStatus !== undefined && output.JobStatus !== null ? output.JobStatus : undefined,\n    TotalFailures:\n      output.TotalFailures !== undefined && output.TotalFailures !== null ? output.TotalFailures : undefined,\n    TotalPieces: output.TotalPieces !== undefined && output.TotalPieces !== null ? output.TotalPieces : undefined,\n    TotalProcessed:\n      output.TotalProcessed !== undefined && output.TotalProcessed !== null ? output.TotalProcessed : undefined,\n    Type: output.Type !== undefined && output.Type !== null ? output.Type : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1ImportJobsResponse = (output: any, context: __SerdeContext): ImportJobsResponse => {\n  return {\n    Item:\n      output.Item !== undefined && output.Item !== null\n        ? deserializeAws_restJson1ListOfImportJobResponse(output.Item, context)\n        : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1ItemResponse = (output: any, context: __SerdeContext): ItemResponse => {\n  return {\n    EndpointItemResponse:\n      output.EndpointItemResponse !== undefined && output.EndpointItemResponse !== null\n        ? deserializeAws_restJson1EndpointItemResponse(output.EndpointItemResponse, context)\n        : undefined,\n    EventsItemResponse:\n      output.EventsItemResponse !== undefined && output.EventsItemResponse !== null\n        ? deserializeAws_restJson1MapOfEventItemResponse(output.EventsItemResponse, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1JourneyCustomMessage = (output: any, context: __SerdeContext): JourneyCustomMessage => {\n  return {\n    Data: output.Data !== undefined && output.Data !== null ? output.Data : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1JourneyDateRangeKpiResponse = (\n  output: any,\n  context: __SerdeContext\n): JourneyDateRangeKpiResponse => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    EndTime: output.EndTime !== undefined && output.EndTime !== null ? new Date(output.EndTime) : undefined,\n    JourneyId: output.JourneyId !== undefined && output.JourneyId !== null ? output.JourneyId : undefined,\n    KpiName: output.KpiName !== undefined && output.KpiName !== null ? output.KpiName : undefined,\n    KpiResult:\n      output.KpiResult !== undefined && output.KpiResult !== null\n        ? deserializeAws_restJson1BaseKpiResult(output.KpiResult, context)\n        : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n    StartTime: output.StartTime !== undefined && output.StartTime !== null ? new Date(output.StartTime) : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1JourneyEmailMessage = (output: any, context: __SerdeContext): JourneyEmailMessage => {\n  return {\n    FromAddress: output.FromAddress !== undefined && output.FromAddress !== null ? output.FromAddress : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1JourneyExecutionActivityMetricsResponse = (\n  output: any,\n  context: __SerdeContext\n): JourneyExecutionActivityMetricsResponse => {\n  return {\n    ActivityType: output.ActivityType !== undefined && output.ActivityType !== null ? output.ActivityType : undefined,\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    JourneyActivityId:\n      output.JourneyActivityId !== undefined && output.JourneyActivityId !== null\n        ? output.JourneyActivityId\n        : undefined,\n    JourneyId: output.JourneyId !== undefined && output.JourneyId !== null ? output.JourneyId : undefined,\n    LastEvaluatedTime:\n      output.LastEvaluatedTime !== undefined && output.LastEvaluatedTime !== null\n        ? output.LastEvaluatedTime\n        : undefined,\n    Metrics:\n      output.Metrics !== undefined && output.Metrics !== null\n        ? deserializeAws_restJson1MapOf__string(output.Metrics, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1JourneyExecutionMetricsResponse = (\n  output: any,\n  context: __SerdeContext\n): JourneyExecutionMetricsResponse => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    JourneyId: output.JourneyId !== undefined && output.JourneyId !== null ? output.JourneyId : undefined,\n    LastEvaluatedTime:\n      output.LastEvaluatedTime !== undefined && output.LastEvaluatedTime !== null\n        ? output.LastEvaluatedTime\n        : undefined,\n    Metrics:\n      output.Metrics !== undefined && output.Metrics !== null\n        ? deserializeAws_restJson1MapOf__string(output.Metrics, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1JourneyLimits = (output: any, context: __SerdeContext): JourneyLimits => {\n  return {\n    DailyCap: output.DailyCap !== undefined && output.DailyCap !== null ? output.DailyCap : undefined,\n    EndpointReentryCap:\n      output.EndpointReentryCap !== undefined && output.EndpointReentryCap !== null\n        ? output.EndpointReentryCap\n        : undefined,\n    MessagesPerSecond:\n      output.MessagesPerSecond !== undefined && output.MessagesPerSecond !== null\n        ? output.MessagesPerSecond\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1JourneyPushMessage = (output: any, context: __SerdeContext): JourneyPushMessage => {\n  return {\n    TimeToLive: output.TimeToLive !== undefined && output.TimeToLive !== null ? output.TimeToLive : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1JourneyResponse = (output: any, context: __SerdeContext): JourneyResponse => {\n  return {\n    Activities:\n      output.Activities !== undefined && output.Activities !== null\n        ? deserializeAws_restJson1MapOfActivity(output.Activities, context)\n        : undefined,\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Limits:\n      output.Limits !== undefined && output.Limits !== null\n        ? deserializeAws_restJson1JourneyLimits(output.Limits, context)\n        : undefined,\n    LocalTime: output.LocalTime !== undefined && output.LocalTime !== null ? output.LocalTime : undefined,\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    QuietTime:\n      output.QuietTime !== undefined && output.QuietTime !== null\n        ? deserializeAws_restJson1QuietTime(output.QuietTime, context)\n        : undefined,\n    RefreshFrequency:\n      output.RefreshFrequency !== undefined && output.RefreshFrequency !== null ? output.RefreshFrequency : undefined,\n    Schedule:\n      output.Schedule !== undefined && output.Schedule !== null\n        ? deserializeAws_restJson1JourneySchedule(output.Schedule, context)\n        : undefined,\n    StartActivity:\n      output.StartActivity !== undefined && output.StartActivity !== null ? output.StartActivity : undefined,\n    StartCondition:\n      output.StartCondition !== undefined && output.StartCondition !== null\n        ? deserializeAws_restJson1StartCondition(output.StartCondition, context)\n        : undefined,\n    State: output.State !== undefined && output.State !== null ? output.State : undefined,\n    tags:\n      output.tags !== undefined && output.tags !== null\n        ? deserializeAws_restJson1MapOf__string(output.tags, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1JourneySchedule = (output: any, context: __SerdeContext): JourneySchedule => {\n  return {\n    EndTime: output.EndTime !== undefined && output.EndTime !== null ? new Date(output.EndTime) : undefined,\n    StartTime: output.StartTime !== undefined && output.StartTime !== null ? new Date(output.StartTime) : undefined,\n    Timezone: output.Timezone !== undefined && output.Timezone !== null ? output.Timezone : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1JourneySMSMessage = (output: any, context: __SerdeContext): JourneySMSMessage => {\n  return {\n    MessageType: output.MessageType !== undefined && output.MessageType !== null ? output.MessageType : undefined,\n    SenderId: output.SenderId !== undefined && output.SenderId !== null ? output.SenderId : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1JourneysResponse = (output: any, context: __SerdeContext): JourneysResponse => {\n  return {\n    Item:\n      output.Item !== undefined && output.Item !== null\n        ? deserializeAws_restJson1ListOfJourneyResponse(output.Item, context)\n        : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1ListOf__EndpointTypesElement = (\n  output: any,\n  context: __SerdeContext\n): (__EndpointTypesElement | string)[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst deserializeAws_restJson1ListOf__string = (output: any, context: __SerdeContext): string[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst deserializeAws_restJson1ListOfActivityResponse = (output: any, context: __SerdeContext): ActivityResponse[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1ActivityResponse(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1ListOfApplicationResponse = (\n  output: any,\n  context: __SerdeContext\n): ApplicationResponse[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1ApplicationResponse(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1ListOfCampaignResponse = (output: any, context: __SerdeContext): CampaignResponse[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1CampaignResponse(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1ListOfEndpointResponse = (output: any, context: __SerdeContext): EndpointResponse[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1EndpointResponse(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1ListOfExportJobResponse = (output: any, context: __SerdeContext): ExportJobResponse[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1ExportJobResponse(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1ListOfImportJobResponse = (output: any, context: __SerdeContext): ImportJobResponse[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1ImportJobResponse(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1ListOfJourneyResponse = (output: any, context: __SerdeContext): JourneyResponse[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1JourneyResponse(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1ListOfMultiConditionalBranch = (\n  output: any,\n  context: __SerdeContext\n): MultiConditionalBranch[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1MultiConditionalBranch(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1ListOfRandomSplitEntry = (output: any, context: __SerdeContext): RandomSplitEntry[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1RandomSplitEntry(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1ListOfRecommenderConfigurationResponse = (\n  output: any,\n  context: __SerdeContext\n): RecommenderConfigurationResponse[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1RecommenderConfigurationResponse(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1ListOfResultRow = (output: any, context: __SerdeContext): ResultRow[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1ResultRow(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1ListOfResultRowValue = (output: any, context: __SerdeContext): ResultRowValue[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1ResultRowValue(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1ListOfSegmentDimensions = (output: any, context: __SerdeContext): SegmentDimensions[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1SegmentDimensions(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1ListOfSegmentGroup = (output: any, context: __SerdeContext): SegmentGroup[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1SegmentGroup(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1ListOfSegmentReference = (output: any, context: __SerdeContext): SegmentReference[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1SegmentReference(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1ListOfSegmentResponse = (output: any, context: __SerdeContext): SegmentResponse[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1SegmentResponse(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1ListOfSimpleCondition = (output: any, context: __SerdeContext): SimpleCondition[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1SimpleCondition(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1ListOfTemplateResponse = (output: any, context: __SerdeContext): TemplateResponse[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1TemplateResponse(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1ListOfTemplateVersionResponse = (\n  output: any,\n  context: __SerdeContext\n): TemplateVersionResponse[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1TemplateVersionResponse(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1ListOfTreatmentResource = (output: any, context: __SerdeContext): TreatmentResource[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1TreatmentResource(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1ListRecommenderConfigurationsResponse = (\n  output: any,\n  context: __SerdeContext\n): ListRecommenderConfigurationsResponse => {\n  return {\n    Item:\n      output.Item !== undefined && output.Item !== null\n        ? deserializeAws_restJson1ListOfRecommenderConfigurationResponse(output.Item, context)\n        : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1MapOf__double = (output: any, context: __SerdeContext): { [key: string]: number } => {\n  return Object.entries(output).reduce((acc: { [key: string]: number }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: value,\n    };\n  }, {});\n};\n\nconst deserializeAws_restJson1MapOf__integer = (output: any, context: __SerdeContext): { [key: string]: number } => {\n  return Object.entries(output).reduce((acc: { [key: string]: number }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: value,\n    };\n  }, {});\n};\n\nconst deserializeAws_restJson1MapOf__string = (output: any, context: __SerdeContext): { [key: string]: string } => {\n  return Object.entries(output).reduce((acc: { [key: string]: string }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: value,\n    };\n  }, {});\n};\n\nconst deserializeAws_restJson1MapOfActivity = (output: any, context: __SerdeContext): { [key: string]: Activity } => {\n  return Object.entries(output).reduce((acc: { [key: string]: Activity }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: deserializeAws_restJson1Activity(value, context),\n    };\n  }, {});\n};\n\nconst deserializeAws_restJson1MapOfAttributeDimension = (\n  output: any,\n  context: __SerdeContext\n): { [key: string]: AttributeDimension } => {\n  return Object.entries(output).reduce((acc: { [key: string]: AttributeDimension }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: deserializeAws_restJson1AttributeDimension(value, context),\n    };\n  }, {});\n};\n\nconst deserializeAws_restJson1MapOfChannelResponse = (\n  output: any,\n  context: __SerdeContext\n): { [key: string]: ChannelResponse } => {\n  return Object.entries(output).reduce((acc: { [key: string]: ChannelResponse }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: deserializeAws_restJson1ChannelResponse(value, context),\n    };\n  }, {});\n};\n\nconst deserializeAws_restJson1MapOfEndpointMessageResult = (\n  output: any,\n  context: __SerdeContext\n): { [key: string]: EndpointMessageResult } => {\n  return Object.entries(output).reduce((acc: { [key: string]: EndpointMessageResult }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: deserializeAws_restJson1EndpointMessageResult(value, context),\n    };\n  }, {});\n};\n\nconst deserializeAws_restJson1MapOfEventItemResponse = (\n  output: any,\n  context: __SerdeContext\n): { [key: string]: EventItemResponse } => {\n  return Object.entries(output).reduce((acc: { [key: string]: EventItemResponse }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: deserializeAws_restJson1EventItemResponse(value, context),\n    };\n  }, {});\n};\n\nconst deserializeAws_restJson1MapOfItemResponse = (\n  output: any,\n  context: __SerdeContext\n): { [key: string]: ItemResponse } => {\n  return Object.entries(output).reduce((acc: { [key: string]: ItemResponse }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: deserializeAws_restJson1ItemResponse(value, context),\n    };\n  }, {});\n};\n\nconst deserializeAws_restJson1MapOfListOf__string = (\n  output: any,\n  context: __SerdeContext\n): { [key: string]: string[] } => {\n  return Object.entries(output).reduce((acc: { [key: string]: string[] }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: deserializeAws_restJson1ListOf__string(value, context),\n    };\n  }, {});\n};\n\nconst deserializeAws_restJson1MapOfMapOfEndpointMessageResult = (\n  output: any,\n  context: __SerdeContext\n): { [key: string]: { [key: string]: EndpointMessageResult } } => {\n  return Object.entries(output).reduce(\n    (acc: { [key: string]: { [key: string]: EndpointMessageResult } }, [key, value]: [string, any]) => {\n      if (value === null) {\n        return acc;\n      }\n      return {\n        ...acc,\n        [key]: deserializeAws_restJson1MapOfEndpointMessageResult(value, context),\n      };\n    },\n    {}\n  );\n};\n\nconst deserializeAws_restJson1MapOfMessageResult = (\n  output: any,\n  context: __SerdeContext\n): { [key: string]: MessageResult } => {\n  return Object.entries(output).reduce((acc: { [key: string]: MessageResult }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: deserializeAws_restJson1MessageResult(value, context),\n    };\n  }, {});\n};\n\nconst deserializeAws_restJson1MapOfMetricDimension = (\n  output: any,\n  context: __SerdeContext\n): { [key: string]: MetricDimension } => {\n  return Object.entries(output).reduce((acc: { [key: string]: MetricDimension }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: deserializeAws_restJson1MetricDimension(value, context),\n    };\n  }, {});\n};\n\nconst deserializeAws_restJson1Message = (output: any, context: __SerdeContext): Message => {\n  return {\n    Action: output.Action !== undefined && output.Action !== null ? output.Action : undefined,\n    Body: output.Body !== undefined && output.Body !== null ? output.Body : undefined,\n    ImageIconUrl: output.ImageIconUrl !== undefined && output.ImageIconUrl !== null ? output.ImageIconUrl : undefined,\n    ImageSmallIconUrl:\n      output.ImageSmallIconUrl !== undefined && output.ImageSmallIconUrl !== null\n        ? output.ImageSmallIconUrl\n        : undefined,\n    ImageUrl: output.ImageUrl !== undefined && output.ImageUrl !== null ? output.ImageUrl : undefined,\n    JsonBody: output.JsonBody !== undefined && output.JsonBody !== null ? output.JsonBody : undefined,\n    MediaUrl: output.MediaUrl !== undefined && output.MediaUrl !== null ? output.MediaUrl : undefined,\n    RawContent: output.RawContent !== undefined && output.RawContent !== null ? output.RawContent : undefined,\n    SilentPush: output.SilentPush !== undefined && output.SilentPush !== null ? output.SilentPush : undefined,\n    TimeToLive: output.TimeToLive !== undefined && output.TimeToLive !== null ? output.TimeToLive : undefined,\n    Title: output.Title !== undefined && output.Title !== null ? output.Title : undefined,\n    Url: output.Url !== undefined && output.Url !== null ? output.Url : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1MessageBody = (output: any, context: __SerdeContext): MessageBody => {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n    RequestID: output.RequestID !== undefined && output.RequestID !== null ? output.RequestID : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1MessageConfiguration = (output: any, context: __SerdeContext): MessageConfiguration => {\n  return {\n    ADMMessage:\n      output.ADMMessage !== undefined && output.ADMMessage !== null\n        ? deserializeAws_restJson1Message(output.ADMMessage, context)\n        : undefined,\n    APNSMessage:\n      output.APNSMessage !== undefined && output.APNSMessage !== null\n        ? deserializeAws_restJson1Message(output.APNSMessage, context)\n        : undefined,\n    BaiduMessage:\n      output.BaiduMessage !== undefined && output.BaiduMessage !== null\n        ? deserializeAws_restJson1Message(output.BaiduMessage, context)\n        : undefined,\n    CustomMessage:\n      output.CustomMessage !== undefined && output.CustomMessage !== null\n        ? deserializeAws_restJson1CampaignCustomMessage(output.CustomMessage, context)\n        : undefined,\n    DefaultMessage:\n      output.DefaultMessage !== undefined && output.DefaultMessage !== null\n        ? deserializeAws_restJson1Message(output.DefaultMessage, context)\n        : undefined,\n    EmailMessage:\n      output.EmailMessage !== undefined && output.EmailMessage !== null\n        ? deserializeAws_restJson1CampaignEmailMessage(output.EmailMessage, context)\n        : undefined,\n    GCMMessage:\n      output.GCMMessage !== undefined && output.GCMMessage !== null\n        ? deserializeAws_restJson1Message(output.GCMMessage, context)\n        : undefined,\n    SMSMessage:\n      output.SMSMessage !== undefined && output.SMSMessage !== null\n        ? deserializeAws_restJson1CampaignSmsMessage(output.SMSMessage, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1MessageResponse = (output: any, context: __SerdeContext): MessageResponse => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    EndpointResult:\n      output.EndpointResult !== undefined && output.EndpointResult !== null\n        ? deserializeAws_restJson1MapOfEndpointMessageResult(output.EndpointResult, context)\n        : undefined,\n    RequestId: output.RequestId !== undefined && output.RequestId !== null ? output.RequestId : undefined,\n    Result:\n      output.Result !== undefined && output.Result !== null\n        ? deserializeAws_restJson1MapOfMessageResult(output.Result, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1MessageResult = (output: any, context: __SerdeContext): MessageResult => {\n  return {\n    DeliveryStatus:\n      output.DeliveryStatus !== undefined && output.DeliveryStatus !== null ? output.DeliveryStatus : undefined,\n    MessageId: output.MessageId !== undefined && output.MessageId !== null ? output.MessageId : undefined,\n    StatusCode: output.StatusCode !== undefined && output.StatusCode !== null ? output.StatusCode : undefined,\n    StatusMessage:\n      output.StatusMessage !== undefined && output.StatusMessage !== null ? output.StatusMessage : undefined,\n    UpdatedToken: output.UpdatedToken !== undefined && output.UpdatedToken !== null ? output.UpdatedToken : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1MetricDimension = (output: any, context: __SerdeContext): MetricDimension => {\n  return {\n    ComparisonOperator:\n      output.ComparisonOperator !== undefined && output.ComparisonOperator !== null\n        ? output.ComparisonOperator\n        : undefined,\n    Value: output.Value !== undefined && output.Value !== null ? output.Value : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1MultiConditionalBranch = (\n  output: any,\n  context: __SerdeContext\n): MultiConditionalBranch => {\n  return {\n    Condition:\n      output.Condition !== undefined && output.Condition !== null\n        ? deserializeAws_restJson1SimpleCondition(output.Condition, context)\n        : undefined,\n    NextActivity: output.NextActivity !== undefined && output.NextActivity !== null ? output.NextActivity : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1MultiConditionalSplitActivity = (\n  output: any,\n  context: __SerdeContext\n): MultiConditionalSplitActivity => {\n  return {\n    Branches:\n      output.Branches !== undefined && output.Branches !== null\n        ? deserializeAws_restJson1ListOfMultiConditionalBranch(output.Branches, context)\n        : undefined,\n    DefaultActivity:\n      output.DefaultActivity !== undefined && output.DefaultActivity !== null ? output.DefaultActivity : undefined,\n    EvaluationWaitTime:\n      output.EvaluationWaitTime !== undefined && output.EvaluationWaitTime !== null\n        ? deserializeAws_restJson1WaitTime(output.EvaluationWaitTime, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1NumberValidateResponse = (\n  output: any,\n  context: __SerdeContext\n): NumberValidateResponse => {\n  return {\n    Carrier: output.Carrier !== undefined && output.Carrier !== null ? output.Carrier : undefined,\n    City: output.City !== undefined && output.City !== null ? output.City : undefined,\n    CleansedPhoneNumberE164:\n      output.CleansedPhoneNumberE164 !== undefined && output.CleansedPhoneNumberE164 !== null\n        ? output.CleansedPhoneNumberE164\n        : undefined,\n    CleansedPhoneNumberNational:\n      output.CleansedPhoneNumberNational !== undefined && output.CleansedPhoneNumberNational !== null\n        ? output.CleansedPhoneNumberNational\n        : undefined,\n    Country: output.Country !== undefined && output.Country !== null ? output.Country : undefined,\n    CountryCodeIso2:\n      output.CountryCodeIso2 !== undefined && output.CountryCodeIso2 !== null ? output.CountryCodeIso2 : undefined,\n    CountryCodeNumeric:\n      output.CountryCodeNumeric !== undefined && output.CountryCodeNumeric !== null\n        ? output.CountryCodeNumeric\n        : undefined,\n    County: output.County !== undefined && output.County !== null ? output.County : undefined,\n    OriginalCountryCodeIso2:\n      output.OriginalCountryCodeIso2 !== undefined && output.OriginalCountryCodeIso2 !== null\n        ? output.OriginalCountryCodeIso2\n        : undefined,\n    OriginalPhoneNumber:\n      output.OriginalPhoneNumber !== undefined && output.OriginalPhoneNumber !== null\n        ? output.OriginalPhoneNumber\n        : undefined,\n    PhoneType: output.PhoneType !== undefined && output.PhoneType !== null ? output.PhoneType : undefined,\n    PhoneTypeCode:\n      output.PhoneTypeCode !== undefined && output.PhoneTypeCode !== null ? output.PhoneTypeCode : undefined,\n    Timezone: output.Timezone !== undefined && output.Timezone !== null ? output.Timezone : undefined,\n    ZipCode: output.ZipCode !== undefined && output.ZipCode !== null ? output.ZipCode : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1PushMessageActivity = (output: any, context: __SerdeContext): PushMessageActivity => {\n  return {\n    MessageConfig:\n      output.MessageConfig !== undefined && output.MessageConfig !== null\n        ? deserializeAws_restJson1JourneyPushMessage(output.MessageConfig, context)\n        : undefined,\n    NextActivity: output.NextActivity !== undefined && output.NextActivity !== null ? output.NextActivity : undefined,\n    TemplateName: output.TemplateName !== undefined && output.TemplateName !== null ? output.TemplateName : undefined,\n    TemplateVersion:\n      output.TemplateVersion !== undefined && output.TemplateVersion !== null ? output.TemplateVersion : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1PushNotificationTemplateResponse = (\n  output: any,\n  context: __SerdeContext\n): PushNotificationTemplateResponse => {\n  return {\n    ADM:\n      output.ADM !== undefined && output.ADM !== null\n        ? deserializeAws_restJson1AndroidPushNotificationTemplate(output.ADM, context)\n        : undefined,\n    APNS:\n      output.APNS !== undefined && output.APNS !== null\n        ? deserializeAws_restJson1APNSPushNotificationTemplate(output.APNS, context)\n        : undefined,\n    Arn: output.Arn !== undefined && output.Arn !== null ? output.Arn : undefined,\n    Baidu:\n      output.Baidu !== undefined && output.Baidu !== null\n        ? deserializeAws_restJson1AndroidPushNotificationTemplate(output.Baidu, context)\n        : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Default:\n      output.Default !== undefined && output.Default !== null\n        ? deserializeAws_restJson1DefaultPushNotificationTemplate(output.Default, context)\n        : undefined,\n    DefaultSubstitutions:\n      output.DefaultSubstitutions !== undefined && output.DefaultSubstitutions !== null\n        ? output.DefaultSubstitutions\n        : undefined,\n    GCM:\n      output.GCM !== undefined && output.GCM !== null\n        ? deserializeAws_restJson1AndroidPushNotificationTemplate(output.GCM, context)\n        : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    RecommenderId:\n      output.RecommenderId !== undefined && output.RecommenderId !== null ? output.RecommenderId : undefined,\n    TemplateDescription:\n      output.TemplateDescription !== undefined && output.TemplateDescription !== null\n        ? output.TemplateDescription\n        : undefined,\n    TemplateName: output.TemplateName !== undefined && output.TemplateName !== null ? output.TemplateName : undefined,\n    TemplateType: output.TemplateType !== undefined && output.TemplateType !== null ? output.TemplateType : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n    tags:\n      output.tags !== undefined && output.tags !== null\n        ? deserializeAws_restJson1MapOf__string(output.tags, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1QuietTime = (output: any, context: __SerdeContext): QuietTime => {\n  return {\n    End: output.End !== undefined && output.End !== null ? output.End : undefined,\n    Start: output.Start !== undefined && output.Start !== null ? output.Start : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1RandomSplitActivity = (output: any, context: __SerdeContext): RandomSplitActivity => {\n  return {\n    Branches:\n      output.Branches !== undefined && output.Branches !== null\n        ? deserializeAws_restJson1ListOfRandomSplitEntry(output.Branches, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1RandomSplitEntry = (output: any, context: __SerdeContext): RandomSplitEntry => {\n  return {\n    NextActivity: output.NextActivity !== undefined && output.NextActivity !== null ? output.NextActivity : undefined,\n    Percentage: output.Percentage !== undefined && output.Percentage !== null ? output.Percentage : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1RecencyDimension = (output: any, context: __SerdeContext): RecencyDimension => {\n  return {\n    Duration: output.Duration !== undefined && output.Duration !== null ? output.Duration : undefined,\n    RecencyType: output.RecencyType !== undefined && output.RecencyType !== null ? output.RecencyType : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1RecommenderConfigurationResponse = (\n  output: any,\n  context: __SerdeContext\n): RecommenderConfigurationResponse => {\n  return {\n    Attributes:\n      output.Attributes !== undefined && output.Attributes !== null\n        ? deserializeAws_restJson1MapOf__string(output.Attributes, context)\n        : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Description: output.Description !== undefined && output.Description !== null ? output.Description : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    RecommendationProviderIdType:\n      output.RecommendationProviderIdType !== undefined && output.RecommendationProviderIdType !== null\n        ? output.RecommendationProviderIdType\n        : undefined,\n    RecommendationProviderRoleArn:\n      output.RecommendationProviderRoleArn !== undefined && output.RecommendationProviderRoleArn !== null\n        ? output.RecommendationProviderRoleArn\n        : undefined,\n    RecommendationProviderUri:\n      output.RecommendationProviderUri !== undefined && output.RecommendationProviderUri !== null\n        ? output.RecommendationProviderUri\n        : undefined,\n    RecommendationTransformerUri:\n      output.RecommendationTransformerUri !== undefined && output.RecommendationTransformerUri !== null\n        ? output.RecommendationTransformerUri\n        : undefined,\n    RecommendationsDisplayName:\n      output.RecommendationsDisplayName !== undefined && output.RecommendationsDisplayName !== null\n        ? output.RecommendationsDisplayName\n        : undefined,\n    RecommendationsPerMessage:\n      output.RecommendationsPerMessage !== undefined && output.RecommendationsPerMessage !== null\n        ? output.RecommendationsPerMessage\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1ResultRow = (output: any, context: __SerdeContext): ResultRow => {\n  return {\n    GroupedBys:\n      output.GroupedBys !== undefined && output.GroupedBys !== null\n        ? deserializeAws_restJson1ListOfResultRowValue(output.GroupedBys, context)\n        : undefined,\n    Values:\n      output.Values !== undefined && output.Values !== null\n        ? deserializeAws_restJson1ListOfResultRowValue(output.Values, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1ResultRowValue = (output: any, context: __SerdeContext): ResultRowValue => {\n  return {\n    Key: output.Key !== undefined && output.Key !== null ? output.Key : undefined,\n    Type: output.Type !== undefined && output.Type !== null ? output.Type : undefined,\n    Value: output.Value !== undefined && output.Value !== null ? output.Value : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1Schedule = (output: any, context: __SerdeContext): Schedule => {\n  return {\n    EndTime: output.EndTime !== undefined && output.EndTime !== null ? output.EndTime : undefined,\n    EventFilter:\n      output.EventFilter !== undefined && output.EventFilter !== null\n        ? deserializeAws_restJson1CampaignEventFilter(output.EventFilter, context)\n        : undefined,\n    Frequency: output.Frequency !== undefined && output.Frequency !== null ? output.Frequency : undefined,\n    IsLocalTime: output.IsLocalTime !== undefined && output.IsLocalTime !== null ? output.IsLocalTime : undefined,\n    QuietTime:\n      output.QuietTime !== undefined && output.QuietTime !== null\n        ? deserializeAws_restJson1QuietTime(output.QuietTime, context)\n        : undefined,\n    StartTime: output.StartTime !== undefined && output.StartTime !== null ? output.StartTime : undefined,\n    Timezone: output.Timezone !== undefined && output.Timezone !== null ? output.Timezone : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1SegmentBehaviors = (output: any, context: __SerdeContext): SegmentBehaviors => {\n  return {\n    Recency:\n      output.Recency !== undefined && output.Recency !== null\n        ? deserializeAws_restJson1RecencyDimension(output.Recency, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1SegmentCondition = (output: any, context: __SerdeContext): SegmentCondition => {\n  return {\n    SegmentId: output.SegmentId !== undefined && output.SegmentId !== null ? output.SegmentId : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1SegmentDemographics = (output: any, context: __SerdeContext): SegmentDemographics => {\n  return {\n    AppVersion:\n      output.AppVersion !== undefined && output.AppVersion !== null\n        ? deserializeAws_restJson1SetDimension(output.AppVersion, context)\n        : undefined,\n    Channel:\n      output.Channel !== undefined && output.Channel !== null\n        ? deserializeAws_restJson1SetDimension(output.Channel, context)\n        : undefined,\n    DeviceType:\n      output.DeviceType !== undefined && output.DeviceType !== null\n        ? deserializeAws_restJson1SetDimension(output.DeviceType, context)\n        : undefined,\n    Make:\n      output.Make !== undefined && output.Make !== null\n        ? deserializeAws_restJson1SetDimension(output.Make, context)\n        : undefined,\n    Model:\n      output.Model !== undefined && output.Model !== null\n        ? deserializeAws_restJson1SetDimension(output.Model, context)\n        : undefined,\n    Platform:\n      output.Platform !== undefined && output.Platform !== null\n        ? deserializeAws_restJson1SetDimension(output.Platform, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1SegmentDimensions = (output: any, context: __SerdeContext): SegmentDimensions => {\n  return {\n    Attributes:\n      output.Attributes !== undefined && output.Attributes !== null\n        ? deserializeAws_restJson1MapOfAttributeDimension(output.Attributes, context)\n        : undefined,\n    Behavior:\n      output.Behavior !== undefined && output.Behavior !== null\n        ? deserializeAws_restJson1SegmentBehaviors(output.Behavior, context)\n        : undefined,\n    Demographic:\n      output.Demographic !== undefined && output.Demographic !== null\n        ? deserializeAws_restJson1SegmentDemographics(output.Demographic, context)\n        : undefined,\n    Location:\n      output.Location !== undefined && output.Location !== null\n        ? deserializeAws_restJson1SegmentLocation(output.Location, context)\n        : undefined,\n    Metrics:\n      output.Metrics !== undefined && output.Metrics !== null\n        ? deserializeAws_restJson1MapOfMetricDimension(output.Metrics, context)\n        : undefined,\n    UserAttributes:\n      output.UserAttributes !== undefined && output.UserAttributes !== null\n        ? deserializeAws_restJson1MapOfAttributeDimension(output.UserAttributes, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1SegmentGroup = (output: any, context: __SerdeContext): SegmentGroup => {\n  return {\n    Dimensions:\n      output.Dimensions !== undefined && output.Dimensions !== null\n        ? deserializeAws_restJson1ListOfSegmentDimensions(output.Dimensions, context)\n        : undefined,\n    SourceSegments:\n      output.SourceSegments !== undefined && output.SourceSegments !== null\n        ? deserializeAws_restJson1ListOfSegmentReference(output.SourceSegments, context)\n        : undefined,\n    SourceType: output.SourceType !== undefined && output.SourceType !== null ? output.SourceType : undefined,\n    Type: output.Type !== undefined && output.Type !== null ? output.Type : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1SegmentGroupList = (output: any, context: __SerdeContext): SegmentGroupList => {\n  return {\n    Groups:\n      output.Groups !== undefined && output.Groups !== null\n        ? deserializeAws_restJson1ListOfSegmentGroup(output.Groups, context)\n        : undefined,\n    Include: output.Include !== undefined && output.Include !== null ? output.Include : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1SegmentImportResource = (output: any, context: __SerdeContext): SegmentImportResource => {\n  return {\n    ChannelCounts:\n      output.ChannelCounts !== undefined && output.ChannelCounts !== null\n        ? deserializeAws_restJson1MapOf__integer(output.ChannelCounts, context)\n        : undefined,\n    ExternalId: output.ExternalId !== undefined && output.ExternalId !== null ? output.ExternalId : undefined,\n    Format: output.Format !== undefined && output.Format !== null ? output.Format : undefined,\n    RoleArn: output.RoleArn !== undefined && output.RoleArn !== null ? output.RoleArn : undefined,\n    S3Url: output.S3Url !== undefined && output.S3Url !== null ? output.S3Url : undefined,\n    Size: output.Size !== undefined && output.Size !== null ? output.Size : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1SegmentLocation = (output: any, context: __SerdeContext): SegmentLocation => {\n  return {\n    Country:\n      output.Country !== undefined && output.Country !== null\n        ? deserializeAws_restJson1SetDimension(output.Country, context)\n        : undefined,\n    GPSPoint:\n      output.GPSPoint !== undefined && output.GPSPoint !== null\n        ? deserializeAws_restJson1GPSPointDimension(output.GPSPoint, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1SegmentReference = (output: any, context: __SerdeContext): SegmentReference => {\n  return {\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1SegmentResponse = (output: any, context: __SerdeContext): SegmentResponse => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    Arn: output.Arn !== undefined && output.Arn !== null ? output.Arn : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Dimensions:\n      output.Dimensions !== undefined && output.Dimensions !== null\n        ? deserializeAws_restJson1SegmentDimensions(output.Dimensions, context)\n        : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    ImportDefinition:\n      output.ImportDefinition !== undefined && output.ImportDefinition !== null\n        ? deserializeAws_restJson1SegmentImportResource(output.ImportDefinition, context)\n        : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    SegmentGroups:\n      output.SegmentGroups !== undefined && output.SegmentGroups !== null\n        ? deserializeAws_restJson1SegmentGroupList(output.SegmentGroups, context)\n        : undefined,\n    SegmentType: output.SegmentType !== undefined && output.SegmentType !== null ? output.SegmentType : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n    tags:\n      output.tags !== undefined && output.tags !== null\n        ? deserializeAws_restJson1MapOf__string(output.tags, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1SegmentsResponse = (output: any, context: __SerdeContext): SegmentsResponse => {\n  return {\n    Item:\n      output.Item !== undefined && output.Item !== null\n        ? deserializeAws_restJson1ListOfSegmentResponse(output.Item, context)\n        : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1SendUsersMessageResponse = (\n  output: any,\n  context: __SerdeContext\n): SendUsersMessageResponse => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    RequestId: output.RequestId !== undefined && output.RequestId !== null ? output.RequestId : undefined,\n    Result:\n      output.Result !== undefined && output.Result !== null\n        ? deserializeAws_restJson1MapOfMapOfEndpointMessageResult(output.Result, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1SetDimension = (output: any, context: __SerdeContext): SetDimension => {\n  return {\n    DimensionType:\n      output.DimensionType !== undefined && output.DimensionType !== null ? output.DimensionType : undefined,\n    Values:\n      output.Values !== undefined && output.Values !== null\n        ? deserializeAws_restJson1ListOf__string(output.Values, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1SimpleCondition = (output: any, context: __SerdeContext): SimpleCondition => {\n  return {\n    EventCondition:\n      output.EventCondition !== undefined && output.EventCondition !== null\n        ? deserializeAws_restJson1EventCondition(output.EventCondition, context)\n        : undefined,\n    SegmentCondition:\n      output.SegmentCondition !== undefined && output.SegmentCondition !== null\n        ? deserializeAws_restJson1SegmentCondition(output.SegmentCondition, context)\n        : undefined,\n    SegmentDimensions:\n      output.segmentDimensions !== undefined && output.segmentDimensions !== null\n        ? deserializeAws_restJson1SegmentDimensions(output.segmentDimensions, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1SMSChannelResponse = (output: any, context: __SerdeContext): SMSChannelResponse => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Enabled: output.Enabled !== undefined && output.Enabled !== null ? output.Enabled : undefined,\n    HasCredential:\n      output.HasCredential !== undefined && output.HasCredential !== null ? output.HasCredential : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    IsArchived: output.IsArchived !== undefined && output.IsArchived !== null ? output.IsArchived : undefined,\n    LastModifiedBy:\n      output.LastModifiedBy !== undefined && output.LastModifiedBy !== null ? output.LastModifiedBy : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? output.Platform : undefined,\n    PromotionalMessagesPerSecond:\n      output.PromotionalMessagesPerSecond !== undefined && output.PromotionalMessagesPerSecond !== null\n        ? output.PromotionalMessagesPerSecond\n        : undefined,\n    SenderId: output.SenderId !== undefined && output.SenderId !== null ? output.SenderId : undefined,\n    ShortCode: output.ShortCode !== undefined && output.ShortCode !== null ? output.ShortCode : undefined,\n    TransactionalMessagesPerSecond:\n      output.TransactionalMessagesPerSecond !== undefined && output.TransactionalMessagesPerSecond !== null\n        ? output.TransactionalMessagesPerSecond\n        : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1SMSMessageActivity = (output: any, context: __SerdeContext): SMSMessageActivity => {\n  return {\n    MessageConfig:\n      output.MessageConfig !== undefined && output.MessageConfig !== null\n        ? deserializeAws_restJson1JourneySMSMessage(output.MessageConfig, context)\n        : undefined,\n    NextActivity: output.NextActivity !== undefined && output.NextActivity !== null ? output.NextActivity : undefined,\n    TemplateName: output.TemplateName !== undefined && output.TemplateName !== null ? output.TemplateName : undefined,\n    TemplateVersion:\n      output.TemplateVersion !== undefined && output.TemplateVersion !== null ? output.TemplateVersion : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1SMSTemplateResponse = (output: any, context: __SerdeContext): SMSTemplateResponse => {\n  return {\n    Arn: output.Arn !== undefined && output.Arn !== null ? output.Arn : undefined,\n    Body: output.Body !== undefined && output.Body !== null ? output.Body : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    DefaultSubstitutions:\n      output.DefaultSubstitutions !== undefined && output.DefaultSubstitutions !== null\n        ? output.DefaultSubstitutions\n        : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    RecommenderId:\n      output.RecommenderId !== undefined && output.RecommenderId !== null ? output.RecommenderId : undefined,\n    TemplateDescription:\n      output.TemplateDescription !== undefined && output.TemplateDescription !== null\n        ? output.TemplateDescription\n        : undefined,\n    TemplateName: output.TemplateName !== undefined && output.TemplateName !== null ? output.TemplateName : undefined,\n    TemplateType: output.TemplateType !== undefined && output.TemplateType !== null ? output.TemplateType : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n    tags:\n      output.tags !== undefined && output.tags !== null\n        ? deserializeAws_restJson1MapOf__string(output.tags, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1StartCondition = (output: any, context: __SerdeContext): StartCondition => {\n  return {\n    Description: output.Description !== undefined && output.Description !== null ? output.Description : undefined,\n    EventStartCondition:\n      output.EventStartCondition !== undefined && output.EventStartCondition !== null\n        ? deserializeAws_restJson1EventStartCondition(output.EventStartCondition, context)\n        : undefined,\n    SegmentStartCondition:\n      output.SegmentStartCondition !== undefined && output.SegmentStartCondition !== null\n        ? deserializeAws_restJson1SegmentCondition(output.SegmentStartCondition, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1TagsModel = (output: any, context: __SerdeContext): TagsModel => {\n  return {\n    tags:\n      output.tags !== undefined && output.tags !== null\n        ? deserializeAws_restJson1MapOf__string(output.tags, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1Template = (output: any, context: __SerdeContext): Template => {\n  return {\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1TemplateConfiguration = (output: any, context: __SerdeContext): TemplateConfiguration => {\n  return {\n    EmailTemplate:\n      output.EmailTemplate !== undefined && output.EmailTemplate !== null\n        ? deserializeAws_restJson1Template(output.EmailTemplate, context)\n        : undefined,\n    PushTemplate:\n      output.PushTemplate !== undefined && output.PushTemplate !== null\n        ? deserializeAws_restJson1Template(output.PushTemplate, context)\n        : undefined,\n    SMSTemplate:\n      output.SMSTemplate !== undefined && output.SMSTemplate !== null\n        ? deserializeAws_restJson1Template(output.SMSTemplate, context)\n        : undefined,\n    VoiceTemplate:\n      output.VoiceTemplate !== undefined && output.VoiceTemplate !== null\n        ? deserializeAws_restJson1Template(output.VoiceTemplate, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1TemplateResponse = (output: any, context: __SerdeContext): TemplateResponse => {\n  return {\n    Arn: output.Arn !== undefined && output.Arn !== null ? output.Arn : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    DefaultSubstitutions:\n      output.DefaultSubstitutions !== undefined && output.DefaultSubstitutions !== null\n        ? output.DefaultSubstitutions\n        : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    TemplateDescription:\n      output.TemplateDescription !== undefined && output.TemplateDescription !== null\n        ? output.TemplateDescription\n        : undefined,\n    TemplateName: output.TemplateName !== undefined && output.TemplateName !== null ? output.TemplateName : undefined,\n    TemplateType: output.TemplateType !== undefined && output.TemplateType !== null ? output.TemplateType : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n    tags:\n      output.tags !== undefined && output.tags !== null\n        ? deserializeAws_restJson1MapOf__string(output.tags, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1TemplatesResponse = (output: any, context: __SerdeContext): TemplatesResponse => {\n  return {\n    Item:\n      output.Item !== undefined && output.Item !== null\n        ? deserializeAws_restJson1ListOfTemplateResponse(output.Item, context)\n        : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1TemplateVersionResponse = (\n  output: any,\n  context: __SerdeContext\n): TemplateVersionResponse => {\n  return {\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    DefaultSubstitutions:\n      output.DefaultSubstitutions !== undefined && output.DefaultSubstitutions !== null\n        ? output.DefaultSubstitutions\n        : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    TemplateDescription:\n      output.TemplateDescription !== undefined && output.TemplateDescription !== null\n        ? output.TemplateDescription\n        : undefined,\n    TemplateName: output.TemplateName !== undefined && output.TemplateName !== null ? output.TemplateName : undefined,\n    TemplateType: output.TemplateType !== undefined && output.TemplateType !== null ? output.TemplateType : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1TemplateVersionsResponse = (\n  output: any,\n  context: __SerdeContext\n): TemplateVersionsResponse => {\n  return {\n    Item:\n      output.Item !== undefined && output.Item !== null\n        ? deserializeAws_restJson1ListOfTemplateVersionResponse(output.Item, context)\n        : undefined,\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n    RequestID: output.RequestID !== undefined && output.RequestID !== null ? output.RequestID : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1TreatmentResource = (output: any, context: __SerdeContext): TreatmentResource => {\n  return {\n    CustomDeliveryConfiguration:\n      output.CustomDeliveryConfiguration !== undefined && output.CustomDeliveryConfiguration !== null\n        ? deserializeAws_restJson1CustomDeliveryConfiguration(output.CustomDeliveryConfiguration, context)\n        : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    MessageConfiguration:\n      output.MessageConfiguration !== undefined && output.MessageConfiguration !== null\n        ? deserializeAws_restJson1MessageConfiguration(output.MessageConfiguration, context)\n        : undefined,\n    Schedule:\n      output.Schedule !== undefined && output.Schedule !== null\n        ? deserializeAws_restJson1Schedule(output.Schedule, context)\n        : undefined,\n    SizePercent: output.SizePercent !== undefined && output.SizePercent !== null ? output.SizePercent : undefined,\n    State:\n      output.State !== undefined && output.State !== null\n        ? deserializeAws_restJson1CampaignState(output.State, context)\n        : undefined,\n    TemplateConfiguration:\n      output.TemplateConfiguration !== undefined && output.TemplateConfiguration !== null\n        ? deserializeAws_restJson1TemplateConfiguration(output.TemplateConfiguration, context)\n        : undefined,\n    TreatmentDescription:\n      output.TreatmentDescription !== undefined && output.TreatmentDescription !== null\n        ? output.TreatmentDescription\n        : undefined,\n    TreatmentName:\n      output.TreatmentName !== undefined && output.TreatmentName !== null ? output.TreatmentName : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1VoiceChannelResponse = (output: any, context: __SerdeContext): VoiceChannelResponse => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Enabled: output.Enabled !== undefined && output.Enabled !== null ? output.Enabled : undefined,\n    HasCredential:\n      output.HasCredential !== undefined && output.HasCredential !== null ? output.HasCredential : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    IsArchived: output.IsArchived !== undefined && output.IsArchived !== null ? output.IsArchived : undefined,\n    LastModifiedBy:\n      output.LastModifiedBy !== undefined && output.LastModifiedBy !== null ? output.LastModifiedBy : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? output.Platform : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1VoiceTemplateResponse = (output: any, context: __SerdeContext): VoiceTemplateResponse => {\n  return {\n    Arn: output.Arn !== undefined && output.Arn !== null ? output.Arn : undefined,\n    Body: output.Body !== undefined && output.Body !== null ? output.Body : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    DefaultSubstitutions:\n      output.DefaultSubstitutions !== undefined && output.DefaultSubstitutions !== null\n        ? output.DefaultSubstitutions\n        : undefined,\n    LanguageCode: output.LanguageCode !== undefined && output.LanguageCode !== null ? output.LanguageCode : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    TemplateDescription:\n      output.TemplateDescription !== undefined && output.TemplateDescription !== null\n        ? output.TemplateDescription\n        : undefined,\n    TemplateName: output.TemplateName !== undefined && output.TemplateName !== null ? output.TemplateName : undefined,\n    TemplateType: output.TemplateType !== undefined && output.TemplateType !== null ? output.TemplateType : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n    VoiceId: output.VoiceId !== undefined && output.VoiceId !== null ? output.VoiceId : undefined,\n    tags:\n      output.tags !== undefined && output.tags !== null\n        ? deserializeAws_restJson1MapOf__string(output.tags, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1WaitActivity = (output: any, context: __SerdeContext): WaitActivity => {\n  return {\n    NextActivity: output.NextActivity !== undefined && output.NextActivity !== null ? output.NextActivity : undefined,\n    WaitTime:\n      output.WaitTime !== undefined && output.WaitTime !== null\n        ? deserializeAws_restJson1WaitTime(output.WaitTime, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1WaitTime = (output: any, context: __SerdeContext): WaitTime => {\n  return {\n    WaitFor: output.WaitFor !== undefined && output.WaitFor !== null ? output.WaitFor : undefined,\n    WaitUntil: output.WaitUntil !== undefined && output.WaitUntil !== null ? output.WaitUntil : undefined,\n  } as any;\n};\n\nconst deserializeMetadata = (output: __HttpResponse): __ResponseMetadata => ({\n  httpStatusCode: output.statusCode,\n  requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"],\n  extendedRequestId: output.headers[\"x-amz-id-2\"],\n  cfId: output.headers[\"x-amz-cf-id\"],\n});\n\n// Collect low-level response body stream to Uint8Array.\nconst collectBody = (streamBody: any = new Uint8Array(), context: __SerdeContext): Promise<Uint8Array> => {\n  if (streamBody instanceof Uint8Array) {\n    return Promise.resolve(streamBody);\n  }\n  return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\n\n// Encode Uint8Array data into string with utf-8.\nconst collectBodyString = (streamBody: any, context: __SerdeContext): Promise<string> =>\n  collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\n\nconst isSerializableHeaderValue = (value: any): boolean =>\n  value !== undefined &&\n  value !== null &&\n  value !== \"\" &&\n  (!Object.getOwnPropertyNames(value).includes(\"length\") || value.length != 0) &&\n  (!Object.getOwnPropertyNames(value).includes(\"size\") || value.size != 0);\n\nconst parseBody = (streamBody: any, context: __SerdeContext): any =>\n  collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n      return JSON.parse(encoded);\n    }\n    return {};\n  });\n\n/**\n * Load an error code for the aws.rest-json-1.1 protocol.\n */\nconst loadRestJsonErrorCode = (output: __HttpResponse, data: any): string => {\n  const findKey = (object: any, key: string) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase());\n\n  const sanitizeErrorCode = (rawValue: string): string => {\n    let cleanValue = rawValue;\n    if (cleanValue.indexOf(\":\") >= 0) {\n      cleanValue = cleanValue.split(\":\")[0];\n    }\n    if (cleanValue.indexOf(\"#\") >= 0) {\n      cleanValue = cleanValue.split(\"#\")[1];\n    }\n    return cleanValue;\n  };\n\n  const headerKey = findKey(output.headers, \"x-amzn-errortype\");\n  if (headerKey !== undefined) {\n    return sanitizeErrorCode(output.headers[headerKey]);\n  }\n\n  if (data.code !== undefined) {\n    return sanitizeErrorCode(data.code);\n  }\n\n  if (data[\"__type\"] !== undefined) {\n    return sanitizeErrorCode(data[\"__type\"]);\n  }\n\n  return \"\";\n};\n","import { PinpointClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../PinpointClient\";\nimport { PutEventsRequest, PutEventsResponse } from \"../models/models_1\";\nimport {\n  deserializeAws_restJson1PutEventsCommand,\n  serializeAws_restJson1PutEventsCommand,\n} from \"../protocols/Aws_restJson1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type PutEventsCommandInput = PutEventsRequest;\nexport type PutEventsCommandOutput = PutEventsResponse & __MetadataBearer;\n\n/**\n * <p>Creates a new event to record for endpoints, or creates or updates endpoint data that existing events are associated with.</p>\n */\nexport class PutEventsCommand extends $Command<\n  PutEventsCommandInput,\n  PutEventsCommandOutput,\n  PinpointClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: PutEventsCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: PinpointClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<PutEventsCommandInput, PutEventsCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"PinpointClient\";\n    const commandName = \"PutEventsCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: PutEventsRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: PutEventsResponse.filterSensitiveLog,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: PutEventsCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_restJson1PutEventsCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<PutEventsCommandOutput> {\n    return deserializeAws_restJson1PutEventsCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n","import { PinpointClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../PinpointClient\";\nimport { UpdateEndpointRequest, UpdateEndpointResponse } from \"../models/models_1\";\nimport {\n  deserializeAws_restJson1UpdateEndpointCommand,\n  serializeAws_restJson1UpdateEndpointCommand,\n} from \"../protocols/Aws_restJson1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type UpdateEndpointCommandInput = UpdateEndpointRequest;\nexport type UpdateEndpointCommandOutput = UpdateEndpointResponse & __MetadataBearer;\n\n/**\n * <p>Creates a new endpoint for an application or updates the settings and attributes of an existing endpoint for an application. You can also use this operation to define custom attributes for an endpoint. If an update includes one or more values for a custom attribute, Amazon Pinpoint replaces (overwrites) any existing values with the new values.</p>\n */\nexport class UpdateEndpointCommand extends $Command<\n  UpdateEndpointCommandInput,\n  UpdateEndpointCommandOutput,\n  PinpointClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: UpdateEndpointCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: PinpointClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<UpdateEndpointCommandInput, UpdateEndpointCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"PinpointClient\";\n    const commandName = \"UpdateEndpointCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: UpdateEndpointRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: UpdateEndpointResponse.filterSensitiveLog,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: UpdateEndpointCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_restJson1UpdateEndpointCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<UpdateEndpointCommandOutput> {\n    return deserializeAws_restJson1UpdateEndpointCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n","import { RegionInfo, RegionInfoProvider } from \"@aws-sdk/types\";\n\n// Partition default templates\nconst AWS_TEMPLATE = \"pinpoint.{region}.amazonaws.com\";\nconst AWS_CN_TEMPLATE = \"pinpoint.{region}.amazonaws.com.cn\";\nconst AWS_ISO_TEMPLATE = \"pinpoint.{region}.c2s.ic.gov\";\nconst AWS_ISO_B_TEMPLATE = \"pinpoint.{region}.sc2s.sgov.gov\";\nconst AWS_US_GOV_TEMPLATE = \"pinpoint.{region}.amazonaws.com\";\n\n// Partition regions\nconst AWS_REGIONS = new Set([\n  \"af-south-1\",\n  \"ap-east-1\",\n  \"ap-northeast-1\",\n  \"ap-northeast-2\",\n  \"ap-south-1\",\n  \"ap-southeast-1\",\n  \"ap-southeast-2\",\n  \"ca-central-1\",\n  \"eu-central-1\",\n  \"eu-north-1\",\n  \"eu-south-1\",\n  \"eu-west-1\",\n  \"eu-west-2\",\n  \"eu-west-3\",\n  \"me-south-1\",\n  \"sa-east-1\",\n  \"us-east-1\",\n  \"us-east-2\",\n  \"us-west-1\",\n  \"us-west-2\",\n]);\nconst AWS_CN_REGIONS = new Set([\"cn-north-1\", \"cn-northwest-1\"]);\nconst AWS_ISO_REGIONS = new Set([\"us-iso-east-1\"]);\nconst AWS_ISO_B_REGIONS = new Set([\"us-isob-east-1\"]);\nconst AWS_US_GOV_REGIONS = new Set([\"us-gov-east-1\", \"us-gov-west-1\"]);\n\nexport const defaultRegionInfoProvider: RegionInfoProvider = (region: string, options?: any) => {\n  let regionInfo: RegionInfo | undefined = undefined;\n  switch (region) {\n    // First, try to match exact region names.\n    case \"ap-northeast-1\":\n      regionInfo = {\n        hostname: \"pinpoint.ap-northeast-1.amazonaws.com\",\n        partition: \"aws\",\n        signingService: \"mobiletargeting\",\n      };\n      break;\n    case \"ap-northeast-2\":\n      regionInfo = {\n        hostname: \"pinpoint.ap-northeast-2.amazonaws.com\",\n        partition: \"aws\",\n        signingService: \"mobiletargeting\",\n      };\n      break;\n    case \"ap-south-1\":\n      regionInfo = {\n        hostname: \"pinpoint.ap-south-1.amazonaws.com\",\n        partition: \"aws\",\n        signingService: \"mobiletargeting\",\n      };\n      break;\n    case \"ap-southeast-1\":\n      regionInfo = {\n        hostname: \"pinpoint.ap-southeast-1.amazonaws.com\",\n        partition: \"aws\",\n        signingService: \"mobiletargeting\",\n      };\n      break;\n    case \"ap-southeast-2\":\n      regionInfo = {\n        hostname: \"pinpoint.ap-southeast-2.amazonaws.com\",\n        partition: \"aws\",\n        signingService: \"mobiletargeting\",\n      };\n      break;\n    case \"ca-central-1\":\n      regionInfo = {\n        hostname: \"pinpoint.ca-central-1.amazonaws.com\",\n        partition: \"aws\",\n        signingService: \"mobiletargeting\",\n      };\n      break;\n    case \"eu-central-1\":\n      regionInfo = {\n        hostname: \"pinpoint.eu-central-1.amazonaws.com\",\n        partition: \"aws\",\n        signingService: \"mobiletargeting\",\n      };\n      break;\n    case \"eu-west-1\":\n      regionInfo = {\n        hostname: \"pinpoint.eu-west-1.amazonaws.com\",\n        partition: \"aws\",\n        signingService: \"mobiletargeting\",\n      };\n      break;\n    case \"eu-west-2\":\n      regionInfo = {\n        hostname: \"pinpoint.eu-west-2.amazonaws.com\",\n        partition: \"aws\",\n        signingService: \"mobiletargeting\",\n      };\n      break;\n    case \"fips-us-east-1\":\n      regionInfo = {\n        hostname: \"pinpoint-fips.us-east-1.amazonaws.com\",\n        partition: \"aws\",\n        signingRegion: \"us-east-1\",\n      };\n      break;\n    case \"fips-us-gov-west-1\":\n      regionInfo = {\n        hostname: \"pinpoint-fips.us-gov-west-1.amazonaws.com\",\n        partition: \"aws-us-gov\",\n        signingRegion: \"us-gov-west-1\",\n      };\n      break;\n    case \"fips-us-west-2\":\n      regionInfo = {\n        hostname: \"pinpoint-fips.us-west-2.amazonaws.com\",\n        partition: \"aws\",\n        signingRegion: \"us-west-2\",\n      };\n      break;\n    case \"us-east-1\":\n      regionInfo = {\n        hostname: \"pinpoint.us-east-1.amazonaws.com\",\n        partition: \"aws\",\n        signingRegion: \"us-east-1\",\n      };\n      break;\n    case \"us-gov-west-1\":\n      regionInfo = {\n        hostname: \"pinpoint.us-gov-west-1.amazonaws.com\",\n        partition: \"aws-us-gov\",\n        signingRegion: \"us-gov-west-1\",\n      };\n      break;\n    case \"us-west-2\":\n      regionInfo = {\n        hostname: \"pinpoint.us-west-2.amazonaws.com\",\n        partition: \"aws\",\n        signingRegion: \"us-west-2\",\n      };\n      break;\n    // Next, try to match partition endpoints.\n    default:\n      if (AWS_REGIONS.has(region)) {\n        regionInfo = {\n          hostname: AWS_TEMPLATE.replace(\"{region}\", region),\n          partition: \"aws\",\n          signingService: \"mobiletargeting\",\n        };\n      }\n      if (AWS_CN_REGIONS.has(region)) {\n        regionInfo = {\n          hostname: AWS_CN_TEMPLATE.replace(\"{region}\", region),\n          partition: \"aws-cn\",\n        };\n      }\n      if (AWS_ISO_REGIONS.has(region)) {\n        regionInfo = {\n          hostname: AWS_ISO_TEMPLATE.replace(\"{region}\", region),\n          partition: \"aws-iso\",\n        };\n      }\n      if (AWS_ISO_B_REGIONS.has(region)) {\n        regionInfo = {\n          hostname: AWS_ISO_B_TEMPLATE.replace(\"{region}\", region),\n          partition: \"aws-iso-b\",\n        };\n      }\n      if (AWS_US_GOV_REGIONS.has(region)) {\n        regionInfo = {\n          hostname: AWS_US_GOV_TEMPLATE.replace(\"{region}\", region),\n          partition: \"aws-us-gov\",\n          signingService: \"mobiletargeting\",\n        };\n      }\n      // Finally, assume it's an AWS partition endpoint.\n      if (regionInfo === undefined) {\n        regionInfo = {\n          hostname: AWS_TEMPLATE.replace(\"{region}\", region),\n          partition: \"aws\",\n          signingService: \"mobiletargeting\",\n        };\n      }\n  }\n  return Promise.resolve({ signingService: \"mobiletargeting\", ...regionInfo });\n};\n","import { defaultRegionInfoProvider } from \"./endpoints\";\nimport { Logger as __Logger } from \"@aws-sdk/types\";\nimport { parseUrl } from \"@aws-sdk/url-parser\";\n\n/**\n * @internal\n */\nexport const ClientSharedValues = {\n  apiVersion: \"2016-12-01\",\n  disableHostPrefix: false,\n  logger: {} as __Logger,\n  regionInfoProvider: defaultRegionInfoProvider,\n  serviceId: \"Pinpoint\",\n  urlParser: parseUrl,\n};\n","import packageInfo from \"./package.json\";\n\nimport { Sha256 } from \"@aws-crypto/sha256-browser\";\nimport { FetchHttpHandler, streamCollector } from \"@aws-sdk/fetch-http-handler\";\nimport { invalidProvider } from \"@aws-sdk/invalid-dependency\";\nimport { DEFAULT_MAX_ATTEMPTS } from \"@aws-sdk/middleware-retry\";\nimport { fromBase64, toBase64 } from \"@aws-sdk/util-base64-browser\";\nimport { calculateBodyLength } from \"@aws-sdk/util-body-length-browser\";\nimport { defaultUserAgent } from \"@aws-sdk/util-user-agent-browser\";\nimport { fromUtf8, toUtf8 } from \"@aws-sdk/util-utf8-browser\";\nimport { ClientDefaults } from \"./PinpointClient\";\nimport { ClientSharedValues } from \"./runtimeConfig.shared\";\n\n/**\n * @internal\n */\nexport const ClientDefaultValues: Required<ClientDefaults> = {\n  ...ClientSharedValues,\n  runtime: \"browser\",\n  base64Decoder: fromBase64,\n  base64Encoder: toBase64,\n  bodyLengthChecker: calculateBodyLength,\n  credentialDefaultProvider: (_: unknown) => () => Promise.reject(new Error(\"Credential is missing\")),\n  defaultUserAgentProvider: defaultUserAgent({\n    serviceId: ClientSharedValues.serviceId,\n    clientVersion: packageInfo.version,\n  }),\n  maxAttempts: DEFAULT_MAX_ATTEMPTS,\n  region: invalidProvider(\"Region is missing\"),\n  requestHandler: new FetchHttpHandler(),\n  sha256: Sha256,\n  streamCollector,\n  utf8Decoder: fromUtf8,\n  utf8Encoder: toUtf8,\n};\n","import { CreateAppCommandInput, CreateAppCommandOutput } from \"./commands/CreateAppCommand\";\nimport { CreateCampaignCommandInput, CreateCampaignCommandOutput } from \"./commands/CreateCampaignCommand\";\nimport {\n  CreateEmailTemplateCommandInput,\n  CreateEmailTemplateCommandOutput,\n} from \"./commands/CreateEmailTemplateCommand\";\nimport { CreateExportJobCommandInput, CreateExportJobCommandOutput } from \"./commands/CreateExportJobCommand\";\nimport { CreateImportJobCommandInput, CreateImportJobCommandOutput } from \"./commands/CreateImportJobCommand\";\nimport { CreateJourneyCommandInput, CreateJourneyCommandOutput } from \"./commands/CreateJourneyCommand\";\nimport { CreatePushTemplateCommandInput, CreatePushTemplateCommandOutput } from \"./commands/CreatePushTemplateCommand\";\nimport {\n  CreateRecommenderConfigurationCommandInput,\n  CreateRecommenderConfigurationCommandOutput,\n} from \"./commands/CreateRecommenderConfigurationCommand\";\nimport { CreateSegmentCommandInput, CreateSegmentCommandOutput } from \"./commands/CreateSegmentCommand\";\nimport { CreateSmsTemplateCommandInput, CreateSmsTemplateCommandOutput } from \"./commands/CreateSmsTemplateCommand\";\nimport {\n  CreateVoiceTemplateCommandInput,\n  CreateVoiceTemplateCommandOutput,\n} from \"./commands/CreateVoiceTemplateCommand\";\nimport { DeleteAdmChannelCommandInput, DeleteAdmChannelCommandOutput } from \"./commands/DeleteAdmChannelCommand\";\nimport { DeleteApnsChannelCommandInput, DeleteApnsChannelCommandOutput } from \"./commands/DeleteApnsChannelCommand\";\nimport {\n  DeleteApnsSandboxChannelCommandInput,\n  DeleteApnsSandboxChannelCommandOutput,\n} from \"./commands/DeleteApnsSandboxChannelCommand\";\nimport {\n  DeleteApnsVoipChannelCommandInput,\n  DeleteApnsVoipChannelCommandOutput,\n} from \"./commands/DeleteApnsVoipChannelCommand\";\nimport {\n  DeleteApnsVoipSandboxChannelCommandInput,\n  DeleteApnsVoipSandboxChannelCommandOutput,\n} from \"./commands/DeleteApnsVoipSandboxChannelCommand\";\nimport { DeleteAppCommandInput, DeleteAppCommandOutput } from \"./commands/DeleteAppCommand\";\nimport { DeleteBaiduChannelCommandInput, DeleteBaiduChannelCommandOutput } from \"./commands/DeleteBaiduChannelCommand\";\nimport { DeleteCampaignCommandInput, DeleteCampaignCommandOutput } from \"./commands/DeleteCampaignCommand\";\nimport { DeleteEmailChannelCommandInput, DeleteEmailChannelCommandOutput } from \"./commands/DeleteEmailChannelCommand\";\nimport {\n  DeleteEmailTemplateCommandInput,\n  DeleteEmailTemplateCommandOutput,\n} from \"./commands/DeleteEmailTemplateCommand\";\nimport { DeleteEndpointCommandInput, DeleteEndpointCommandOutput } from \"./commands/DeleteEndpointCommand\";\nimport { DeleteEventStreamCommandInput, DeleteEventStreamCommandOutput } from \"./commands/DeleteEventStreamCommand\";\nimport { DeleteGcmChannelCommandInput, DeleteGcmChannelCommandOutput } from \"./commands/DeleteGcmChannelCommand\";\nimport { DeleteJourneyCommandInput, DeleteJourneyCommandOutput } from \"./commands/DeleteJourneyCommand\";\nimport { DeletePushTemplateCommandInput, DeletePushTemplateCommandOutput } from \"./commands/DeletePushTemplateCommand\";\nimport {\n  DeleteRecommenderConfigurationCommandInput,\n  DeleteRecommenderConfigurationCommandOutput,\n} from \"./commands/DeleteRecommenderConfigurationCommand\";\nimport { DeleteSegmentCommandInput, DeleteSegmentCommandOutput } from \"./commands/DeleteSegmentCommand\";\nimport { DeleteSmsChannelCommandInput, DeleteSmsChannelCommandOutput } from \"./commands/DeleteSmsChannelCommand\";\nimport { DeleteSmsTemplateCommandInput, DeleteSmsTemplateCommandOutput } from \"./commands/DeleteSmsTemplateCommand\";\nimport {\n  DeleteUserEndpointsCommandInput,\n  DeleteUserEndpointsCommandOutput,\n} from \"./commands/DeleteUserEndpointsCommand\";\nimport { DeleteVoiceChannelCommandInput, DeleteVoiceChannelCommandOutput } from \"./commands/DeleteVoiceChannelCommand\";\nimport {\n  DeleteVoiceTemplateCommandInput,\n  DeleteVoiceTemplateCommandOutput,\n} from \"./commands/DeleteVoiceTemplateCommand\";\nimport { GetAdmChannelCommandInput, GetAdmChannelCommandOutput } from \"./commands/GetAdmChannelCommand\";\nimport { GetApnsChannelCommandInput, GetApnsChannelCommandOutput } from \"./commands/GetApnsChannelCommand\";\nimport {\n  GetApnsSandboxChannelCommandInput,\n  GetApnsSandboxChannelCommandOutput,\n} from \"./commands/GetApnsSandboxChannelCommand\";\nimport { GetApnsVoipChannelCommandInput, GetApnsVoipChannelCommandOutput } from \"./commands/GetApnsVoipChannelCommand\";\nimport {\n  GetApnsVoipSandboxChannelCommandInput,\n  GetApnsVoipSandboxChannelCommandOutput,\n} from \"./commands/GetApnsVoipSandboxChannelCommand\";\nimport { GetAppCommandInput, GetAppCommandOutput } from \"./commands/GetAppCommand\";\nimport {\n  GetApplicationDateRangeKpiCommandInput,\n  GetApplicationDateRangeKpiCommandOutput,\n} from \"./commands/GetApplicationDateRangeKpiCommand\";\nimport {\n  GetApplicationSettingsCommandInput,\n  GetApplicationSettingsCommandOutput,\n} from \"./commands/GetApplicationSettingsCommand\";\nimport { GetAppsCommandInput, GetAppsCommandOutput } from \"./commands/GetAppsCommand\";\nimport { GetBaiduChannelCommandInput, GetBaiduChannelCommandOutput } from \"./commands/GetBaiduChannelCommand\";\nimport {\n  GetCampaignActivitiesCommandInput,\n  GetCampaignActivitiesCommandOutput,\n} from \"./commands/GetCampaignActivitiesCommand\";\nimport { GetCampaignCommandInput, GetCampaignCommandOutput } from \"./commands/GetCampaignCommand\";\nimport {\n  GetCampaignDateRangeKpiCommandInput,\n  GetCampaignDateRangeKpiCommandOutput,\n} from \"./commands/GetCampaignDateRangeKpiCommand\";\nimport { GetCampaignVersionCommandInput, GetCampaignVersionCommandOutput } from \"./commands/GetCampaignVersionCommand\";\nimport {\n  GetCampaignVersionsCommandInput,\n  GetCampaignVersionsCommandOutput,\n} from \"./commands/GetCampaignVersionsCommand\";\nimport { GetCampaignsCommandInput, GetCampaignsCommandOutput } from \"./commands/GetCampaignsCommand\";\nimport { GetChannelsCommandInput, GetChannelsCommandOutput } from \"./commands/GetChannelsCommand\";\nimport { GetEmailChannelCommandInput, GetEmailChannelCommandOutput } from \"./commands/GetEmailChannelCommand\";\nimport { GetEmailTemplateCommandInput, GetEmailTemplateCommandOutput } from \"./commands/GetEmailTemplateCommand\";\nimport { GetEndpointCommandInput, GetEndpointCommandOutput } from \"./commands/GetEndpointCommand\";\nimport { GetEventStreamCommandInput, GetEventStreamCommandOutput } from \"./commands/GetEventStreamCommand\";\nimport { GetExportJobCommandInput, GetExportJobCommandOutput } from \"./commands/GetExportJobCommand\";\nimport { GetExportJobsCommandInput, GetExportJobsCommandOutput } from \"./commands/GetExportJobsCommand\";\nimport { GetGcmChannelCommandInput, GetGcmChannelCommandOutput } from \"./commands/GetGcmChannelCommand\";\nimport { GetImportJobCommandInput, GetImportJobCommandOutput } from \"./commands/GetImportJobCommand\";\nimport { GetImportJobsCommandInput, GetImportJobsCommandOutput } from \"./commands/GetImportJobsCommand\";\nimport { GetJourneyCommandInput, GetJourneyCommandOutput } from \"./commands/GetJourneyCommand\";\nimport {\n  GetJourneyDateRangeKpiCommandInput,\n  GetJourneyDateRangeKpiCommandOutput,\n} from \"./commands/GetJourneyDateRangeKpiCommand\";\nimport {\n  GetJourneyExecutionActivityMetricsCommandInput,\n  GetJourneyExecutionActivityMetricsCommandOutput,\n} from \"./commands/GetJourneyExecutionActivityMetricsCommand\";\nimport {\n  GetJourneyExecutionMetricsCommandInput,\n  GetJourneyExecutionMetricsCommandOutput,\n} from \"./commands/GetJourneyExecutionMetricsCommand\";\nimport { GetPushTemplateCommandInput, GetPushTemplateCommandOutput } from \"./commands/GetPushTemplateCommand\";\nimport {\n  GetRecommenderConfigurationCommandInput,\n  GetRecommenderConfigurationCommandOutput,\n} from \"./commands/GetRecommenderConfigurationCommand\";\nimport {\n  GetRecommenderConfigurationsCommandInput,\n  GetRecommenderConfigurationsCommandOutput,\n} from \"./commands/GetRecommenderConfigurationsCommand\";\nimport { GetSegmentCommandInput, GetSegmentCommandOutput } from \"./commands/GetSegmentCommand\";\nimport {\n  GetSegmentExportJobsCommandInput,\n  GetSegmentExportJobsCommandOutput,\n} from \"./commands/GetSegmentExportJobsCommand\";\nimport {\n  GetSegmentImportJobsCommandInput,\n  GetSegmentImportJobsCommandOutput,\n} from \"./commands/GetSegmentImportJobsCommand\";\nimport { GetSegmentVersionCommandInput, GetSegmentVersionCommandOutput } from \"./commands/GetSegmentVersionCommand\";\nimport { GetSegmentVersionsCommandInput, GetSegmentVersionsCommandOutput } from \"./commands/GetSegmentVersionsCommand\";\nimport { GetSegmentsCommandInput, GetSegmentsCommandOutput } from \"./commands/GetSegmentsCommand\";\nimport { GetSmsChannelCommandInput, GetSmsChannelCommandOutput } from \"./commands/GetSmsChannelCommand\";\nimport { GetSmsTemplateCommandInput, GetSmsTemplateCommandOutput } from \"./commands/GetSmsTemplateCommand\";\nimport { GetUserEndpointsCommandInput, GetUserEndpointsCommandOutput } from \"./commands/GetUserEndpointsCommand\";\nimport { GetVoiceChannelCommandInput, GetVoiceChannelCommandOutput } from \"./commands/GetVoiceChannelCommand\";\nimport { GetVoiceTemplateCommandInput, GetVoiceTemplateCommandOutput } from \"./commands/GetVoiceTemplateCommand\";\nimport { ListJourneysCommandInput, ListJourneysCommandOutput } from \"./commands/ListJourneysCommand\";\nimport {\n  ListTagsForResourceCommandInput,\n  ListTagsForResourceCommandOutput,\n} from \"./commands/ListTagsForResourceCommand\";\nimport {\n  ListTemplateVersionsCommandInput,\n  ListTemplateVersionsCommandOutput,\n} from \"./commands/ListTemplateVersionsCommand\";\nimport { ListTemplatesCommandInput, ListTemplatesCommandOutput } from \"./commands/ListTemplatesCommand\";\nimport {\n  PhoneNumberValidateCommandInput,\n  PhoneNumberValidateCommandOutput,\n} from \"./commands/PhoneNumberValidateCommand\";\nimport { PutEventStreamCommandInput, PutEventStreamCommandOutput } from \"./commands/PutEventStreamCommand\";\nimport { PutEventsCommandInput, PutEventsCommandOutput } from \"./commands/PutEventsCommand\";\nimport { RemoveAttributesCommandInput, RemoveAttributesCommandOutput } from \"./commands/RemoveAttributesCommand\";\nimport { SendMessagesCommandInput, SendMessagesCommandOutput } from \"./commands/SendMessagesCommand\";\nimport { SendUsersMessagesCommandInput, SendUsersMessagesCommandOutput } from \"./commands/SendUsersMessagesCommand\";\nimport { TagResourceCommandInput, TagResourceCommandOutput } from \"./commands/TagResourceCommand\";\nimport { UntagResourceCommandInput, UntagResourceCommandOutput } from \"./commands/UntagResourceCommand\";\nimport { UpdateAdmChannelCommandInput, UpdateAdmChannelCommandOutput } from \"./commands/UpdateAdmChannelCommand\";\nimport { UpdateApnsChannelCommandInput, UpdateApnsChannelCommandOutput } from \"./commands/UpdateApnsChannelCommand\";\nimport {\n  UpdateApnsSandboxChannelCommandInput,\n  UpdateApnsSandboxChannelCommandOutput,\n} from \"./commands/UpdateApnsSandboxChannelCommand\";\nimport {\n  UpdateApnsVoipChannelCommandInput,\n  UpdateApnsVoipChannelCommandOutput,\n} from \"./commands/UpdateApnsVoipChannelCommand\";\nimport {\n  UpdateApnsVoipSandboxChannelCommandInput,\n  UpdateApnsVoipSandboxChannelCommandOutput,\n} from \"./commands/UpdateApnsVoipSandboxChannelCommand\";\nimport {\n  UpdateApplicationSettingsCommandInput,\n  UpdateApplicationSettingsCommandOutput,\n} from \"./commands/UpdateApplicationSettingsCommand\";\nimport { UpdateBaiduChannelCommandInput, UpdateBaiduChannelCommandOutput } from \"./commands/UpdateBaiduChannelCommand\";\nimport { UpdateCampaignCommandInput, UpdateCampaignCommandOutput } from \"./commands/UpdateCampaignCommand\";\nimport { UpdateEmailChannelCommandInput, UpdateEmailChannelCommandOutput } from \"./commands/UpdateEmailChannelCommand\";\nimport {\n  UpdateEmailTemplateCommandInput,\n  UpdateEmailTemplateCommandOutput,\n} from \"./commands/UpdateEmailTemplateCommand\";\nimport { UpdateEndpointCommandInput, UpdateEndpointCommandOutput } from \"./commands/UpdateEndpointCommand\";\nimport {\n  UpdateEndpointsBatchCommandInput,\n  UpdateEndpointsBatchCommandOutput,\n} from \"./commands/UpdateEndpointsBatchCommand\";\nimport { UpdateGcmChannelCommandInput, UpdateGcmChannelCommandOutput } from \"./commands/UpdateGcmChannelCommand\";\nimport { UpdateJourneyCommandInput, UpdateJourneyCommandOutput } from \"./commands/UpdateJourneyCommand\";\nimport { UpdateJourneyStateCommandInput, UpdateJourneyStateCommandOutput } from \"./commands/UpdateJourneyStateCommand\";\nimport { UpdatePushTemplateCommandInput, UpdatePushTemplateCommandOutput } from \"./commands/UpdatePushTemplateCommand\";\nimport {\n  UpdateRecommenderConfigurationCommandInput,\n  UpdateRecommenderConfigurationCommandOutput,\n} from \"./commands/UpdateRecommenderConfigurationCommand\";\nimport { UpdateSegmentCommandInput, UpdateSegmentCommandOutput } from \"./commands/UpdateSegmentCommand\";\nimport { UpdateSmsChannelCommandInput, UpdateSmsChannelCommandOutput } from \"./commands/UpdateSmsChannelCommand\";\nimport { UpdateSmsTemplateCommandInput, UpdateSmsTemplateCommandOutput } from \"./commands/UpdateSmsTemplateCommand\";\nimport {\n  UpdateTemplateActiveVersionCommandInput,\n  UpdateTemplateActiveVersionCommandOutput,\n} from \"./commands/UpdateTemplateActiveVersionCommand\";\nimport { UpdateVoiceChannelCommandInput, UpdateVoiceChannelCommandOutput } from \"./commands/UpdateVoiceChannelCommand\";\nimport {\n  UpdateVoiceTemplateCommandInput,\n  UpdateVoiceTemplateCommandOutput,\n} from \"./commands/UpdateVoiceTemplateCommand\";\nimport { ClientDefaultValues as __ClientDefaultValues } from \"./runtimeConfig\";\nimport {\n  EndpointsInputConfig,\n  EndpointsResolvedConfig,\n  RegionInputConfig,\n  RegionResolvedConfig,\n  resolveEndpointsConfig,\n  resolveRegionConfig,\n} from \"@aws-sdk/config-resolver\";\nimport { getContentLengthPlugin } from \"@aws-sdk/middleware-content-length\";\nimport {\n  HostHeaderInputConfig,\n  HostHeaderResolvedConfig,\n  getHostHeaderPlugin,\n  resolveHostHeaderConfig,\n} from \"@aws-sdk/middleware-host-header\";\nimport { getLoggerPlugin } from \"@aws-sdk/middleware-logger\";\nimport { RetryInputConfig, RetryResolvedConfig, getRetryPlugin, resolveRetryConfig } from \"@aws-sdk/middleware-retry\";\nimport {\n  AwsAuthInputConfig,\n  AwsAuthResolvedConfig,\n  getAwsAuthPlugin,\n  resolveAwsAuthConfig,\n} from \"@aws-sdk/middleware-signing\";\nimport {\n  UserAgentInputConfig,\n  UserAgentResolvedConfig,\n  getUserAgentPlugin,\n  resolveUserAgentConfig,\n} from \"@aws-sdk/middleware-user-agent\";\nimport { HttpHandler as __HttpHandler } from \"@aws-sdk/protocol-http\";\nimport {\n  Client as __Client,\n  SmithyConfiguration as __SmithyConfiguration,\n  SmithyResolvedConfiguration as __SmithyResolvedConfiguration,\n} from \"@aws-sdk/smithy-client\";\nimport {\n  Provider,\n  RegionInfoProvider,\n  Credentials as __Credentials,\n  Decoder as __Decoder,\n  Encoder as __Encoder,\n  HashConstructor as __HashConstructor,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  Logger as __Logger,\n  Provider as __Provider,\n  StreamCollector as __StreamCollector,\n  UrlParser as __UrlParser,\n  UserAgent as __UserAgent,\n} from \"@aws-sdk/types\";\n\nexport type ServiceInputTypes =\n  | CreateAppCommandInput\n  | CreateCampaignCommandInput\n  | CreateEmailTemplateCommandInput\n  | CreateExportJobCommandInput\n  | CreateImportJobCommandInput\n  | CreateJourneyCommandInput\n  | CreatePushTemplateCommandInput\n  | CreateRecommenderConfigurationCommandInput\n  | CreateSegmentCommandInput\n  | CreateSmsTemplateCommandInput\n  | CreateVoiceTemplateCommandInput\n  | DeleteAdmChannelCommandInput\n  | DeleteApnsChannelCommandInput\n  | DeleteApnsSandboxChannelCommandInput\n  | DeleteApnsVoipChannelCommandInput\n  | DeleteApnsVoipSandboxChannelCommandInput\n  | DeleteAppCommandInput\n  | DeleteBaiduChannelCommandInput\n  | DeleteCampaignCommandInput\n  | DeleteEmailChannelCommandInput\n  | DeleteEmailTemplateCommandInput\n  | DeleteEndpointCommandInput\n  | DeleteEventStreamCommandInput\n  | DeleteGcmChannelCommandInput\n  | DeleteJourneyCommandInput\n  | DeletePushTemplateCommandInput\n  | DeleteRecommenderConfigurationCommandInput\n  | DeleteSegmentCommandInput\n  | DeleteSmsChannelCommandInput\n  | DeleteSmsTemplateCommandInput\n  | DeleteUserEndpointsCommandInput\n  | DeleteVoiceChannelCommandInput\n  | DeleteVoiceTemplateCommandInput\n  | GetAdmChannelCommandInput\n  | GetApnsChannelCommandInput\n  | GetApnsSandboxChannelCommandInput\n  | GetApnsVoipChannelCommandInput\n  | GetApnsVoipSandboxChannelCommandInput\n  | GetAppCommandInput\n  | GetApplicationDateRangeKpiCommandInput\n  | GetApplicationSettingsCommandInput\n  | GetAppsCommandInput\n  | GetBaiduChannelCommandInput\n  | GetCampaignActivitiesCommandInput\n  | GetCampaignCommandInput\n  | GetCampaignDateRangeKpiCommandInput\n  | GetCampaignVersionCommandInput\n  | GetCampaignVersionsCommandInput\n  | GetCampaignsCommandInput\n  | GetChannelsCommandInput\n  | GetEmailChannelCommandInput\n  | GetEmailTemplateCommandInput\n  | GetEndpointCommandInput\n  | GetEventStreamCommandInput\n  | GetExportJobCommandInput\n  | GetExportJobsCommandInput\n  | GetGcmChannelCommandInput\n  | GetImportJobCommandInput\n  | GetImportJobsCommandInput\n  | GetJourneyCommandInput\n  | GetJourneyDateRangeKpiCommandInput\n  | GetJourneyExecutionActivityMetricsCommandInput\n  | GetJourneyExecutionMetricsCommandInput\n  | GetPushTemplateCommandInput\n  | GetRecommenderConfigurationCommandInput\n  | GetRecommenderConfigurationsCommandInput\n  | GetSegmentCommandInput\n  | GetSegmentExportJobsCommandInput\n  | GetSegmentImportJobsCommandInput\n  | GetSegmentVersionCommandInput\n  | GetSegmentVersionsCommandInput\n  | GetSegmentsCommandInput\n  | GetSmsChannelCommandInput\n  | GetSmsTemplateCommandInput\n  | GetUserEndpointsCommandInput\n  | GetVoiceChannelCommandInput\n  | GetVoiceTemplateCommandInput\n  | ListJourneysCommandInput\n  | ListTagsForResourceCommandInput\n  | ListTemplateVersionsCommandInput\n  | ListTemplatesCommandInput\n  | PhoneNumberValidateCommandInput\n  | PutEventStreamCommandInput\n  | PutEventsCommandInput\n  | RemoveAttributesCommandInput\n  | SendMessagesCommandInput\n  | SendUsersMessagesCommandInput\n  | TagResourceCommandInput\n  | UntagResourceCommandInput\n  | UpdateAdmChannelCommandInput\n  | UpdateApnsChannelCommandInput\n  | UpdateApnsSandboxChannelCommandInput\n  | UpdateApnsVoipChannelCommandInput\n  | UpdateApnsVoipSandboxChannelCommandInput\n  | UpdateApplicationSettingsCommandInput\n  | UpdateBaiduChannelCommandInput\n  | UpdateCampaignCommandInput\n  | UpdateEmailChannelCommandInput\n  | UpdateEmailTemplateCommandInput\n  | UpdateEndpointCommandInput\n  | UpdateEndpointsBatchCommandInput\n  | UpdateGcmChannelCommandInput\n  | UpdateJourneyCommandInput\n  | UpdateJourneyStateCommandInput\n  | UpdatePushTemplateCommandInput\n  | UpdateRecommenderConfigurationCommandInput\n  | UpdateSegmentCommandInput\n  | UpdateSmsChannelCommandInput\n  | UpdateSmsTemplateCommandInput\n  | UpdateTemplateActiveVersionCommandInput\n  | UpdateVoiceChannelCommandInput\n  | UpdateVoiceTemplateCommandInput;\n\nexport type ServiceOutputTypes =\n  | CreateAppCommandOutput\n  | CreateCampaignCommandOutput\n  | CreateEmailTemplateCommandOutput\n  | CreateExportJobCommandOutput\n  | CreateImportJobCommandOutput\n  | CreateJourneyCommandOutput\n  | CreatePushTemplateCommandOutput\n  | CreateRecommenderConfigurationCommandOutput\n  | CreateSegmentCommandOutput\n  | CreateSmsTemplateCommandOutput\n  | CreateVoiceTemplateCommandOutput\n  | DeleteAdmChannelCommandOutput\n  | DeleteApnsChannelCommandOutput\n  | DeleteApnsSandboxChannelCommandOutput\n  | DeleteApnsVoipChannelCommandOutput\n  | DeleteApnsVoipSandboxChannelCommandOutput\n  | DeleteAppCommandOutput\n  | DeleteBaiduChannelCommandOutput\n  | DeleteCampaignCommandOutput\n  | DeleteEmailChannelCommandOutput\n  | DeleteEmailTemplateCommandOutput\n  | DeleteEndpointCommandOutput\n  | DeleteEventStreamCommandOutput\n  | DeleteGcmChannelCommandOutput\n  | DeleteJourneyCommandOutput\n  | DeletePushTemplateCommandOutput\n  | DeleteRecommenderConfigurationCommandOutput\n  | DeleteSegmentCommandOutput\n  | DeleteSmsChannelCommandOutput\n  | DeleteSmsTemplateCommandOutput\n  | DeleteUserEndpointsCommandOutput\n  | DeleteVoiceChannelCommandOutput\n  | DeleteVoiceTemplateCommandOutput\n  | GetAdmChannelCommandOutput\n  | GetApnsChannelCommandOutput\n  | GetApnsSandboxChannelCommandOutput\n  | GetApnsVoipChannelCommandOutput\n  | GetApnsVoipSandboxChannelCommandOutput\n  | GetAppCommandOutput\n  | GetApplicationDateRangeKpiCommandOutput\n  | GetApplicationSettingsCommandOutput\n  | GetAppsCommandOutput\n  | GetBaiduChannelCommandOutput\n  | GetCampaignActivitiesCommandOutput\n  | GetCampaignCommandOutput\n  | GetCampaignDateRangeKpiCommandOutput\n  | GetCampaignVersionCommandOutput\n  | GetCampaignVersionsCommandOutput\n  | GetCampaignsCommandOutput\n  | GetChannelsCommandOutput\n  | GetEmailChannelCommandOutput\n  | GetEmailTemplateCommandOutput\n  | GetEndpointCommandOutput\n  | GetEventStreamCommandOutput\n  | GetExportJobCommandOutput\n  | GetExportJobsCommandOutput\n  | GetGcmChannelCommandOutput\n  | GetImportJobCommandOutput\n  | GetImportJobsCommandOutput\n  | GetJourneyCommandOutput\n  | GetJourneyDateRangeKpiCommandOutput\n  | GetJourneyExecutionActivityMetricsCommandOutput\n  | GetJourneyExecutionMetricsCommandOutput\n  | GetPushTemplateCommandOutput\n  | GetRecommenderConfigurationCommandOutput\n  | GetRecommenderConfigurationsCommandOutput\n  | GetSegmentCommandOutput\n  | GetSegmentExportJobsCommandOutput\n  | GetSegmentImportJobsCommandOutput\n  | GetSegmentVersionCommandOutput\n  | GetSegmentVersionsCommandOutput\n  | GetSegmentsCommandOutput\n  | GetSmsChannelCommandOutput\n  | GetSmsTemplateCommandOutput\n  | GetUserEndpointsCommandOutput\n  | GetVoiceChannelCommandOutput\n  | GetVoiceTemplateCommandOutput\n  | ListJourneysCommandOutput\n  | ListTagsForResourceCommandOutput\n  | ListTemplateVersionsCommandOutput\n  | ListTemplatesCommandOutput\n  | PhoneNumberValidateCommandOutput\n  | PutEventStreamCommandOutput\n  | PutEventsCommandOutput\n  | RemoveAttributesCommandOutput\n  | SendMessagesCommandOutput\n  | SendUsersMessagesCommandOutput\n  | TagResourceCommandOutput\n  | UntagResourceCommandOutput\n  | UpdateAdmChannelCommandOutput\n  | UpdateApnsChannelCommandOutput\n  | UpdateApnsSandboxChannelCommandOutput\n  | UpdateApnsVoipChannelCommandOutput\n  | UpdateApnsVoipSandboxChannelCommandOutput\n  | UpdateApplicationSettingsCommandOutput\n  | UpdateBaiduChannelCommandOutput\n  | UpdateCampaignCommandOutput\n  | UpdateEmailChannelCommandOutput\n  | UpdateEmailTemplateCommandOutput\n  | UpdateEndpointCommandOutput\n  | UpdateEndpointsBatchCommandOutput\n  | UpdateGcmChannelCommandOutput\n  | UpdateJourneyCommandOutput\n  | UpdateJourneyStateCommandOutput\n  | UpdatePushTemplateCommandOutput\n  | UpdateRecommenderConfigurationCommandOutput\n  | UpdateSegmentCommandOutput\n  | UpdateSmsChannelCommandOutput\n  | UpdateSmsTemplateCommandOutput\n  | UpdateTemplateActiveVersionCommandOutput\n  | UpdateVoiceChannelCommandOutput\n  | UpdateVoiceTemplateCommandOutput;\n\nexport interface ClientDefaults extends Partial<__SmithyResolvedConfiguration<__HttpHandlerOptions>> {\n  /**\n   * The HTTP handler to use. Fetch in browser and Https in Nodejs.\n   */\n  requestHandler?: __HttpHandler;\n\n  /**\n   * A constructor for a class implementing the @aws-sdk/types.Hash interface\n   * that computes the SHA-256 HMAC or checksum of a string or binary buffer.\n   */\n  sha256?: __HashConstructor;\n\n  /**\n   * The function that will be used to convert strings into HTTP endpoints.\n   */\n  urlParser?: __UrlParser;\n\n  /**\n   * A function that can calculate the length of a request body.\n   */\n  bodyLengthChecker?: (body: any) => number | undefined;\n\n  /**\n   * A function that converts a stream into an array of bytes.\n   */\n  streamCollector?: __StreamCollector;\n\n  /**\n   * The function that will be used to convert a base64-encoded string to a byte array\n   */\n  base64Decoder?: __Decoder;\n\n  /**\n   * The function that will be used to convert binary data to a base64-encoded string\n   */\n  base64Encoder?: __Encoder;\n\n  /**\n   * The function that will be used to convert a UTF8-encoded string to a byte array\n   */\n  utf8Decoder?: __Decoder;\n\n  /**\n   * The function that will be used to convert binary data to a UTF-8 encoded string\n   */\n  utf8Encoder?: __Encoder;\n\n  /**\n   * The runtime environment\n   */\n  runtime?: string;\n\n  /**\n   * Disable dyanamically changing the endpoint of the client based on the hostPrefix\n   * trait of an operation.\n   */\n  disableHostPrefix?: boolean;\n\n  /**\n   * Unique service identifier.\n   * @internal\n   */\n  serviceId?: string;\n\n  /**\n   * Default credentials provider; Not available in browser runtime\n   */\n  credentialDefaultProvider?: (input: any) => __Provider<__Credentials>;\n\n  /**\n   * The AWS region to which this client will send requests\n   */\n  region?: string | __Provider<string>;\n\n  /**\n   * Value for how many times a request will be made at most in case of retry.\n   */\n  maxAttempts?: number | __Provider<number>;\n\n  /**\n   * Optional logger for logging debug/info/warn/error.\n   */\n  logger?: __Logger;\n\n  /**\n   * Fetch related hostname, signing name or signing region with given region.\n   */\n  regionInfoProvider?: RegionInfoProvider;\n\n  /**\n   * The provider populating default tracking information to be sent with `user-agent`, `x-amz-user-agent` header\n   * @internal\n   */\n  defaultUserAgentProvider?: Provider<__UserAgent>;\n}\n\nexport type PinpointClientConfig = Partial<__SmithyConfiguration<__HttpHandlerOptions>> &\n  ClientDefaults &\n  RegionInputConfig &\n  EndpointsInputConfig &\n  AwsAuthInputConfig &\n  RetryInputConfig &\n  HostHeaderInputConfig &\n  UserAgentInputConfig;\n\nexport type PinpointClientResolvedConfig = __SmithyResolvedConfiguration<__HttpHandlerOptions> &\n  Required<ClientDefaults> &\n  RegionResolvedConfig &\n  EndpointsResolvedConfig &\n  AwsAuthResolvedConfig &\n  RetryResolvedConfig &\n  HostHeaderResolvedConfig &\n  UserAgentResolvedConfig;\n\n/**\n * <p>Doc Engage API - Amazon Pinpoint API</p>\n */\nexport class PinpointClient extends __Client<\n  __HttpHandlerOptions,\n  ServiceInputTypes,\n  ServiceOutputTypes,\n  PinpointClientResolvedConfig\n> {\n  readonly config: PinpointClientResolvedConfig;\n\n  constructor(configuration: PinpointClientConfig) {\n    let _config_0 = {\n      ...__ClientDefaultValues,\n      ...configuration,\n    };\n    let _config_1 = resolveRegionConfig(_config_0);\n    let _config_2 = resolveEndpointsConfig(_config_1);\n    let _config_3 = resolveAwsAuthConfig(_config_2);\n    let _config_4 = resolveRetryConfig(_config_3);\n    let _config_5 = resolveHostHeaderConfig(_config_4);\n    let _config_6 = resolveUserAgentConfig(_config_5);\n    super(_config_6);\n    this.config = _config_6;\n    this.middlewareStack.use(getAwsAuthPlugin(this.config));\n    this.middlewareStack.use(getRetryPlugin(this.config));\n    this.middlewareStack.use(getContentLengthPlugin(this.config));\n    this.middlewareStack.use(getHostHeaderPlugin(this.config));\n    this.middlewareStack.use(getLoggerPlugin(this.config));\n    this.middlewareStack.use(getUserAgentPlugin(this.config));\n  }\n\n  destroy(): void {\n    super.destroy();\n  }\n}\n","import { ConsoleLogger as Logger } from '@aws-amplify/core';\n\nimport {\n\tPutEventsResponse,\n\tEventBuffer,\n\tEventObject,\n\tEventMap,\n} from '../types';\nimport {\n\tPutEventsCommand,\n\tPutEventsCommandOutput,\n} from '@aws-sdk/client-pinpoint';\nimport { isAppInForeground } from '../utils/AppUtils';\n\nconst logger = new Logger('EventsBuffer');\nconst RETRYABLE_CODES = [429, 500];\nconst ACCEPTED_CODES = [202];\n\ntype EventsBufferConfig = {\n\tbufferSize: number;\n\tflushSize: number;\n\tflushInterval: number;\n\tresendLimit: number;\n};\n\nexport default class EventsBuffer {\n\tprivate _config;\n\tprivate _client;\n\tprivate _interval;\n\tprivate _buffer: EventBuffer;\n\tprivate _pause = false;\n\tprivate _flush = false;\n\n\tconstructor(client, config: EventsBufferConfig) {\n\t\tlogger.debug('Instantiating buffer with config:', config);\n\t\tthis._buffer = [];\n\t\tthis._client = client;\n\t\tthis._config = config;\n\n\t\tthis._sendBatch = this._sendBatch.bind(this);\n\n\t\tthis._startLoop();\n\t}\n\n\tpublic push(event: EventObject) {\n\t\tif (this._buffer > this._config.bufferSize) {\n\t\t\tlogger.debug('Exceeded analytics events buffer size');\n\t\t\treturn event.handlers.reject(\n\t\t\t\tnew Error('Exceeded the size of analytics events buffer')\n\t\t\t);\n\t\t}\n\n\t\tconst { eventId } = event.params.event;\n\t\tconst bufferElement = { [eventId]: event };\n\t\tthis._buffer.push(bufferElement);\n\t}\n\n\tpublic pause() {\n\t\tthis._pause = true;\n\t}\n\n\tpublic resume() {\n\t\tthis._pause = false;\n\t}\n\n\tpublic updateClient(client) {\n\t\tthis._client = client;\n\t}\n\n\tpublic flush() {\n\t\tthis._flush = true;\n\t}\n\n\tprivate _startLoop() {\n\t\tif (this._interval) {\n\t\t\tclearInterval(this._interval);\n\t\t}\n\n\t\tconst { flushInterval } = this._config;\n\n\t\tthis._interval = setInterval(this._sendBatch, flushInterval);\n\t}\n\n\tprivate _sendBatch() {\n\t\tconst bufferLength = this._buffer.length;\n\n\t\tif (this._flush && !bufferLength) {\n\t\t\tclearInterval(this._interval);\n\t\t}\n\n\t\t// Do not send the batch of events if\n\t\t// the Buffer is paused or is empty or the App is not in the foreground\n\t\t// Apps should be in the foreground since\n\t\t// the OS may restrict access to the network in the background\n\t\tif (this._pause || !bufferLength || !isAppInForeground()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { flushSize } = this._config;\n\n\t\tconst batchSize = Math.min(flushSize, bufferLength);\n\t\tconst bufferSubset = this._buffer.splice(0, batchSize);\n\n\t\tthis._putEvents(bufferSubset);\n\t}\n\n\tprivate async _putEvents(buffer: EventBuffer) {\n\t\tconst eventMap: EventMap = this._bufferToMap(buffer);\n\t\tconst batchEventParams = this._generateBatchEventParams(eventMap);\n\n\t\ttry {\n\t\t\tconst command: PutEventsCommand = new PutEventsCommand(batchEventParams);\n\t\t\tconst data: PutEventsCommandOutput = await this._client.send(command);\n\t\t\tthis._processPutEventsSuccessResponse(data, eventMap);\n\t\t} catch (err) {\n\t\t\treturn this._handlePutEventsFailure(err, eventMap);\n\t\t}\n\t}\n\n\tprivate _generateBatchEventParams(eventMap: EventMap) {\n\t\tconst batchEventParams = {\n\t\t\tApplicationId: '',\n\t\t\tEventsRequest: {\n\t\t\t\tBatchItem: {},\n\t\t\t},\n\t\t};\n\n\t\tObject.values(eventMap).forEach(item => {\n\t\t\tconst { params } = item;\n\t\t\tconst { event, timestamp, config } = params;\n\t\t\tconst { name, attributes, metrics, eventId, session } = event;\n\t\t\tconst { appId, endpointId } = config;\n\n\t\t\tconst batchItem = batchEventParams.EventsRequest.BatchItem;\n\n\t\t\tbatchEventParams.ApplicationId = batchEventParams.ApplicationId || appId;\n\n\t\t\tif (!batchItem[endpointId]) {\n\t\t\t\tbatchItem[endpointId] = {\n\t\t\t\t\tEndpoint: {},\n\t\t\t\t\tEvents: {},\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tbatchItem[endpointId].Events[eventId] = {\n\t\t\t\tEventType: name,\n\t\t\t\tTimestamp: new Date(timestamp).toISOString(),\n\t\t\t\tAttributes: attributes,\n\t\t\t\tMetrics: metrics,\n\t\t\t\tSession: session,\n\t\t\t};\n\t\t});\n\n\t\treturn batchEventParams;\n\t}\n\n\tprivate _handlePutEventsFailure(err, eventMap: EventMap) {\n\t\tlogger.debug('_putEvents Failed: ', err);\n\t\tconst statusCode = err.$metadata && err.$metadata.httpStatusCode;\n\n\t\tif (RETRYABLE_CODES.includes(statusCode)) {\n\t\t\tconst retryableEvents = Object.values(eventMap);\n\t\t\tthis._retry(retryableEvents);\n\t\t\treturn;\n\t\t}\n\t}\n\n\tprivate _processPutEventsSuccessResponse(\n\t\tdata: PutEventsResponse,\n\t\teventMap: EventMap\n\t) {\n\t\tconst { Results } = data.EventsResponse;\n\t\tconst retryableEvents: EventObject[] = [];\n\n\t\tObject.entries(Results).forEach(([endpointId, endpointValues]) => {\n\t\t\tconst responses = endpointValues.EventsItemResponse;\n\n\t\t\tObject.entries(responses).forEach(\n\t\t\t\t([eventId, { StatusCode, Message }]) => {\n\t\t\t\t\tconst eventObject = eventMap[eventId];\n\n\t\t\t\t\t// manually crafting handlers response to keep API consistant\n\t\t\t\t\tconst response = {\n\t\t\t\t\t\tEventsResponse: {\n\t\t\t\t\t\t\tResults: {\n\t\t\t\t\t\t\t\t[endpointId]: {\n\t\t\t\t\t\t\t\t\tEventsItemResponse: {\n\t\t\t\t\t\t\t\t\t\t[eventId]: { StatusCode, Message },\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\n\t\t\t\t\tif (ACCEPTED_CODES.includes(StatusCode)) {\n\t\t\t\t\t\teventObject.handlers.resolve(response);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (RETRYABLE_CODES.includes(StatusCode)) {\n\t\t\t\t\t\tretryableEvents.push(eventObject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst { name } = eventObject.params.event;\n\n\t\t\t\t\tlogger.error(\n\t\t\t\t\t\t`event ${eventId} : ${name} failed with error: ${Message}`\n\t\t\t\t\t);\n\t\t\t\t\treturn eventObject.handlers.reject(response);\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\n\t\tif (retryableEvents.length) {\n\t\t\tthis._retry(retryableEvents);\n\t\t}\n\t}\n\n\tprivate _retry(retryableEvents: EventObject[]) {\n\t\t// retryable events that haven't reached the resendLimit\n\t\tconst eligibleEvents: EventBuffer = [];\n\n\t\tretryableEvents.forEach((event: EventObject) => {\n\t\t\tconst { params } = event;\n\t\t\tconst { eventId, name } = params.event;\n\n\t\t\tif (params.resendLimit-- > 0) {\n\t\t\t\tlogger.debug(\n\t\t\t\t\t`resending event ${eventId} : ${name} with ${params.resendLimit} retry attempts remaining`\n\t\t\t\t);\n\t\t\t\teligibleEvents.push({ [eventId]: event });\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlogger.debug(\n\t\t\t\t`no retry attempts remaining for event ${eventId} : ${name}`\n\t\t\t);\n\t\t});\n\n\t\t// add the events to the front of the buffer\n\t\tthis._buffer.unshift(...eligibleEvents);\n\t}\n\n\t// convert buffer to map, i.e. { eventId1: { params, handler }, eventId2: { params, handlers } }\n\t// this allows us to easily access the handlers after receiving a batch response\n\tprivate _bufferToMap(buffer: EventBuffer) {\n\t\treturn buffer.reduce((acc, curVal) => {\n\t\t\tconst [[key, value]] = Object.entries(curVal);\n\t\t\tacc[key] = value;\n\t\t\treturn acc;\n\t\t}, {});\n\t}\n}\n","/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nimport {\n\tConsoleLogger as Logger,\n\tClientDevice,\n\tCredentials,\n\tSigner,\n\tJS,\n\tHub,\n\tgetAmplifyUserAgent,\n} from '@aws-amplify/core';\nimport {\n\tEventsBatch,\n\tPinpointClient,\n\tPutEventsCommand,\n\tPutEventsCommandInput,\n\tUpdateEndpointCommand,\n} from '@aws-sdk/client-pinpoint';\nimport Cache from '@aws-amplify/cache';\n\nimport {\n\tAnalyticsProvider,\n\tPromiseHandlers,\n\tEndpointBuffer,\n\tEventParams,\n\tEventObject,\n\tEndpointFailureData,\n} from '../types';\nimport { v1 as uuid } from 'uuid';\nimport EventsBuffer from './EventBuffer';\n\nconst AMPLIFY_SYMBOL = (typeof Symbol !== 'undefined' &&\ntypeof Symbol.for === 'function'\n\t? Symbol.for('amplify_default')\n\t: '@@amplify_default') as Symbol;\n\nconst dispatchAnalyticsEvent = (event, data) => {\n\tHub.dispatch('analytics', { event, data }, 'Analytics', AMPLIFY_SYMBOL);\n};\n\nconst logger = new Logger('AWSPinpointProvider');\nconst RETRYABLE_CODES = [429, 500];\nconst ACCEPTED_CODES = [202];\nconst FORBIDDEN_CODE = 403;\nconst MOBILE_SERVICE_NAME = 'mobiletargeting';\nconst EXPIRED_TOKEN_CODE = 'ExpiredTokenException';\nconst UPDATE_ENDPOINT = '_update_endpoint';\nconst SESSION_START = '_session.start';\nconst SESSION_STOP = '_session.stop';\n\nconst BEACON_SUPPORTED =\n\ttypeof navigator !== 'undefined' &&\n\tnavigator &&\n\ttypeof navigator.sendBeacon === 'function';\n\n// events buffer\nconst BUFFER_SIZE = 1000;\nconst FLUSH_SIZE = 100;\nconst FLUSH_INTERVAL = 5 * 1000; // 5s\nconst RESEND_LIMIT = 5;\n\n// params: { event: {name: , .... }, timeStamp, config, resendLimits }\nexport class AWSPinpointProvider implements AnalyticsProvider {\n\tstatic category = 'Analytics';\n\tstatic providerName = 'AWSPinpoint';\n\n\tprivate _config;\n\tprivate pinpointClient;\n\tprivate _sessionId;\n\tprivate _sessionStartTimestamp;\n\tprivate _buffer: EventsBuffer;\n\tprivate _endpointBuffer: EndpointBuffer;\n\tprivate _clientInfo;\n\tprivate _endpointGenerating = true;\n\tprivate _endpointUpdateInProgress = false;\n\n\tconstructor(config?) {\n\t\tthis._buffer = null;\n\t\tthis._endpointBuffer = [];\n\t\tthis._config = config ? config : {};\n\t\tthis._config.bufferSize = this._config.bufferSize || BUFFER_SIZE;\n\t\tthis._config.flushSize = this._config.flushSize || FLUSH_SIZE;\n\t\tthis._config.flushInterval = this._config.flushInterval || FLUSH_INTERVAL;\n\t\tthis._config.resendLimit = this._config.resendLimit || RESEND_LIMIT;\n\t\tthis._clientInfo = ClientDevice.clientInfo();\n\t}\n\n\t/**\n\t * get the category of the plugin\n\t */\n\tgetCategory(): string {\n\t\treturn AWSPinpointProvider.category;\n\t}\n\n\t/**\n\t * get provider name of the plugin\n\t */\n\tgetProviderName(): string {\n\t\treturn AWSPinpointProvider.providerName;\n\t}\n\n\t/**\n\t * configure the plugin\n\t * @param {Object} config - configuration\n\t */\n\tpublic configure(config): object {\n\t\tlogger.debug('configure Analytics', config);\n\t\tconst conf = config || {};\n\t\tthis._config = Object.assign({}, this._config, conf);\n\n\t\t// If autoSessionRecord is enabled, we need to wait for the endpoint to be\n\t\t// updated before sending any events. See `sendEvents` in `Analytics.ts`\n\t\tthis._endpointGenerating = !!config['autoSessionRecord'];\n\n\t\tif (this._config.appId && !this._config.disabled) {\n\t\t\tif (!this._config.endpointId) {\n\t\t\t\tconst cacheKey = this.getProviderName() + '_' + this._config.appId;\n\t\t\t\tthis._getEndpointId(cacheKey)\n\t\t\t\t\t.then(endpointId => {\n\t\t\t\t\t\tlogger.debug('setting endpoint id from the cache', endpointId);\n\t\t\t\t\t\tthis._config.endpointId = endpointId;\n\t\t\t\t\t\tdispatchAnalyticsEvent('pinpointProvider_configured', null);\n\t\t\t\t\t})\n\t\t\t\t\t.catch(err => {\n\t\t\t\t\t\tlogger.debug('Failed to generate endpointId', err);\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tdispatchAnalyticsEvent('pinpointProvider_configured', null);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._flushBuffer();\n\t\t}\n\t\treturn this._config;\n\t}\n\n\t/**\n\t * record an event\n\t * @param {Object} params - the params of an event\n\t */\n\tpublic async record(params: EventParams, handlers: PromiseHandlers) {\n\t\tlogger.debug('_public record', params);\n\t\tconst credentials = await this._getCredentials();\n\t\tif (!credentials || !this._config.appId || !this._config.region) {\n\t\t\tlogger.debug(\n\t\t\t\t'cannot send events without credentials, applicationId or region'\n\t\t\t);\n\t\t\treturn handlers.reject(\n\t\t\t\tnew Error('No credentials, applicationId or region')\n\t\t\t);\n\t\t}\n\n\t\tthis._initClients(credentials);\n\n\t\tconst timestamp = new Date().getTime();\n\t\t// attach the session and eventId\n\t\tthis._generateSession(params);\n\t\tparams.event.eventId = uuid();\n\n\t\tObject.assign(params, { timestamp, config: this._config });\n\n\t\tif (params.event.immediate) {\n\t\t\treturn this._send(params, handlers);\n\t\t} else {\n\t\t\tthis._putToBuffer(params, handlers);\n\t\t}\n\t}\n\n\tprivate async _sendEndpointUpdate(endpointObject: EventObject) {\n\t\tif (this._endpointUpdateInProgress) {\n\t\t\tthis._endpointBuffer.push(endpointObject);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._endpointUpdateInProgress = true;\n\t\tawait this._updateEndpoint(endpointObject);\n\n\t\tconst next = this._endpointBuffer.shift();\n\t\tthis._endpointUpdateInProgress = false;\n\n\t\tnext && this._sendEndpointUpdate(next);\n\t}\n\n\t/**\n\t * @private\n\t * @param params - params for event recording\n\t * Put events into buffer\n\t */\n\tprivate _putToBuffer(params, handlers) {\n\t\tif (params.event.name === UPDATE_ENDPOINT) {\n\t\t\tthis._sendEndpointUpdate({ params, handlers });\n\t\t\treturn;\n\t\t}\n\n\t\tthis._buffer && this._buffer.push({ params, handlers });\n\t}\n\n\tprivate _generateSession(params) {\n\t\tthis._sessionId = this._sessionId || uuid();\n\t\tconst { event } = params;\n\n\t\tswitch (event.name) {\n\t\t\tcase SESSION_START:\n\t\t\t\t// refresh the session id and session start time\n\t\t\t\tthis._sessionStartTimestamp = new Date().getTime();\n\t\t\t\tthis._sessionId = uuid();\n\t\t\t\tevent.session = {\n\t\t\t\t\tId: this._sessionId,\n\t\t\t\t\tStartTimestamp: new Date(this._sessionStartTimestamp).toISOString(),\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\tcase SESSION_STOP:\n\t\t\t\tconst stopTimestamp = new Date().getTime();\n\t\t\t\tthis._sessionStartTimestamp =\n\t\t\t\t\tthis._sessionStartTimestamp || new Date().getTime();\n\t\t\t\tthis._sessionId = this._sessionId || uuid();\n\t\t\t\tevent.session = {\n\t\t\t\t\tId: this._sessionId,\n\t\t\t\t\tDuration: stopTimestamp - this._sessionStartTimestamp,\n\t\t\t\t\tStartTimestamp: new Date(this._sessionStartTimestamp).toISOString(),\n\t\t\t\t\tStopTimestamp: new Date(stopTimestamp).toISOString(),\n\t\t\t\t};\n\t\t\t\tthis._sessionId = undefined;\n\t\t\t\tthis._sessionStartTimestamp = undefined;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthis._sessionStartTimestamp =\n\t\t\t\t\tthis._sessionStartTimestamp || new Date().getTime();\n\t\t\t\tthis._sessionId = this._sessionId || uuid();\n\t\t\t\tevent.session = {\n\t\t\t\t\tId: this._sessionId,\n\t\t\t\t\tStartTimestamp: new Date(this._sessionStartTimestamp).toISOString(),\n\t\t\t\t};\n\t\t}\n\t}\n\n\tprivate async _send(params, handlers) {\n\t\tconst { event } = params;\n\n\t\tswitch (event.name) {\n\t\t\tcase UPDATE_ENDPOINT:\n\t\t\t\treturn this._updateEndpoint({ params, handlers });\n\t\t\tcase SESSION_STOP:\n\t\t\t\treturn this._pinpointSendStopSession(params, handlers);\n\t\t\tdefault:\n\t\t\t\treturn this._pinpointPutEvents(params, handlers);\n\t\t}\n\t}\n\n\tprivate _generateBatchItemContext(params) {\n\t\tconst { event, timestamp, config } = params;\n\t\tconst { name, attributes, metrics, eventId, session } = event;\n\t\tconst { appId, endpointId } = config;\n\n\t\tconst endpointContext = {};\n\n\t\tconst eventParams: PutEventsCommandInput = {\n\t\t\tApplicationId: appId,\n\t\t\tEventsRequest: {\n\t\t\t\tBatchItem: {},\n\t\t\t},\n\t\t};\n\n\t\tconst endpointObj: EventsBatch = {} as EventsBatch;\n\t\tendpointObj.Endpoint = endpointContext;\n\t\tendpointObj.Events = {\n\t\t\t[eventId]: {\n\t\t\t\tEventType: name,\n\t\t\t\tTimestamp: new Date(timestamp).toISOString(),\n\t\t\t\tAttributes: attributes,\n\t\t\t\tMetrics: metrics,\n\t\t\t\tSession: session,\n\t\t\t},\n\t\t};\n\t\teventParams.EventsRequest.BatchItem[endpointId] = endpointObj;\n\n\t\treturn eventParams;\n\t}\n\n\tprivate async _pinpointPutEvents(params, handlers) {\n\t\tconst {\n\t\t\tevent: { eventId },\n\t\t\tconfig: { endpointId },\n\t\t} = params;\n\t\tconst eventParams = this._generateBatchItemContext(params);\n\t\tconst command: PutEventsCommand = new PutEventsCommand(eventParams);\n\n\t\ttry {\n\t\t\tconst data = await this.pinpointClient.send(command);\n\t\t\tconst {\n\t\t\t\tEventsResponse: {\n\t\t\t\t\tResults: {\n\t\t\t\t\t\t[endpointId]: {\n\t\t\t\t\t\t\tEventsItemResponse: {\n\t\t\t\t\t\t\t\t[eventId]: { StatusCode, Message },\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t} = data;\n\t\t\tif (ACCEPTED_CODES.includes(StatusCode)) {\n\t\t\t\tlogger.debug('record event success. ', data);\n\t\t\t\treturn handlers.resolve(data);\n\t\t\t} else {\n\t\t\t\tif (RETRYABLE_CODES.includes(StatusCode)) {\n\t\t\t\t\tthis._retry(params, handlers);\n\t\t\t\t} else {\n\t\t\t\t\tlogger.error(\n\t\t\t\t\t\t`Event ${eventId} is not accepted, the error is ${Message}`\n\t\t\t\t\t);\n\t\t\t\t\treturn handlers.reject(data);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tthis._eventError(err);\n\t\t\treturn handlers.reject(err);\n\t\t}\n\t}\n\n\tprivate _pinpointSendStopSession(params, handlers): Promise<string> {\n\t\tif (!BEACON_SUPPORTED) {\n\t\t\tthis._pinpointPutEvents(params, handlers);\n\t\t\treturn;\n\t\t}\n\n\t\tconst eventParams = this._generateBatchItemContext(params);\n\n\t\tconst { region } = this._config;\n\t\tconst { ApplicationId, EventsRequest } = eventParams;\n\n\t\tconst accessInfo = {\n\t\t\tsecret_key: this._config.credentials.secretAccessKey,\n\t\t\taccess_key: this._config.credentials.accessKeyId,\n\t\t\tsession_token: this._config.credentials.sessionToken,\n\t\t};\n\n\t\tconst url = `https://pinpoint.${region}.amazonaws.com/v1/apps/${ApplicationId}/events/legacy`;\n\t\tconst body = JSON.stringify(EventsRequest);\n\t\tconst method = 'POST';\n\n\t\tconst request = {\n\t\t\turl,\n\t\t\tbody,\n\t\t\tmethod,\n\t\t};\n\n\t\tconst serviceInfo = { region, service: MOBILE_SERVICE_NAME };\n\n\t\tconst requestUrl: string = Signer.signUrl(\n\t\t\trequest,\n\t\t\taccessInfo,\n\t\t\tserviceInfo,\n\t\t\tnull\n\t\t);\n\n\t\tconst success: boolean = navigator.sendBeacon(requestUrl, body);\n\n\t\tif (success) {\n\t\t\treturn handlers.resolve('sendBeacon success');\n\t\t}\n\t\treturn handlers.reject('sendBeacon failure');\n\t}\n\n\tprivate _retry(params, handlers) {\n\t\tconst {\n\t\t\tconfig: { resendLimit },\n\t\t} = params;\n\t\t// For backward compatibility\n\t\tparams.resendLimit =\n\t\t\ttypeof params.resendLimit === 'number' ? params.resendLimit : resendLimit;\n\t\tif (params.resendLimit-- > 0) {\n\t\t\tlogger.debug(\n\t\t\t\t`resending event ${params.eventName} with ${params.resendLimit} retry times left`\n\t\t\t);\n\t\t\tthis._pinpointPutEvents(params, handlers);\n\t\t} else {\n\t\t\tlogger.debug(`retry times used up for event ${params.eventName}`);\n\t\t}\n\t}\n\n\tprivate async _updateEndpoint(endpointObject: EventObject) {\n\t\tconst { params, handlers } = endpointObject;\n\t\tconst { config, event } = params;\n\t\tconst { appId, endpointId } = config;\n\n\t\tconst request = this._endpointRequest(\n\t\t\tconfig,\n\t\t\tJS.transferKeyToLowerCase(\n\t\t\t\tevent,\n\t\t\t\t[],\n\t\t\t\t['attributes', 'userAttributes', 'Attributes', 'UserAttributes']\n\t\t\t)\n\t\t);\n\t\tconst update_params = {\n\t\t\tApplicationId: appId,\n\t\t\tEndpointId: endpointId,\n\t\t\tEndpointRequest: request,\n\t\t};\n\n\t\ttry {\n\t\t\tconst command: UpdateEndpointCommand = new UpdateEndpointCommand(\n\t\t\t\tupdate_params\n\t\t\t);\n\t\t\tconst data = await this.pinpointClient.send(command);\n\n\t\t\tlogger.debug('updateEndpoint success', data);\n\t\t\tthis._endpointGenerating = false;\n\t\t\tthis._resumeBuffer();\n\n\t\t\thandlers.resolve(data);\n\t\t\treturn;\n\t\t} catch (err) {\n\t\t\tconst failureData: EndpointFailureData = {\n\t\t\t\terr,\n\t\t\t\tupdate_params,\n\t\t\t\tendpointObject,\n\t\t\t};\n\n\t\t\treturn this._handleEndpointUpdateFailure(failureData);\n\t\t}\n\t}\n\n\tprivate async _handleEndpointUpdateFailure(failureData: EndpointFailureData) {\n\t\tconst { err, endpointObject } = failureData;\n\t\tconst statusCode = err.$metadata && err.$metadata.httpStatusCode;\n\n\t\tlogger.debug('updateEndpoint error', err);\n\n\t\tswitch (statusCode) {\n\t\t\tcase FORBIDDEN_CODE:\n\t\t\t\treturn this._handleEndpointUpdateForbidden(failureData);\n\t\t\tdefault:\n\t\t\t\tif (RETRYABLE_CODES.includes(statusCode)) {\n\t\t\t\t\t// Server error. Attempt exponential retry\n\t\t\t\t\tconst exponential = true;\n\t\t\t\t\treturn this._retryEndpointUpdate(endpointObject, exponential);\n\t\t\t\t}\n\t\t\t\tlogger.error('updateEndpoint failed', err);\n\t\t\t\tendpointObject.handlers.reject(err);\n\t\t}\n\t}\n\n\tprivate _handleEndpointUpdateForbidden(failureData: EndpointFailureData) {\n\t\tconst { err, endpointObject } = failureData;\n\n\t\tconst { code, retryable } = err;\n\n\t\tif (code !== EXPIRED_TOKEN_CODE && !retryable) {\n\t\t\treturn endpointObject.handlers.reject(err);\n\t\t}\n\n\t\tthis._retryEndpointUpdate(endpointObject);\n\t}\n\n\tprivate _retryEndpointUpdate(\n\t\tendpointObject: EventObject,\n\t\texponential: boolean = false\n\t) {\n\t\tlogger.debug('_retryEndpointUpdate', endpointObject);\n\t\tconst { params } = endpointObject;\n\n\t\t// TODO: implement retry with exp back off once exp function is available\n\t\tconst {\n\t\t\tconfig: { resendLimit },\n\t\t} = params;\n\n\t\tparams.resendLimit =\n\t\t\ttypeof params.resendLimit === 'number' ? params.resendLimit : resendLimit;\n\n\t\tif (params.resendLimit-- > 0) {\n\t\t\tlogger.debug(\n\t\t\t\t`resending endpoint update ${params.event.eventId} with ${params.resendLimit} retry attempts remaining`\n\t\t\t);\n\t\t\t// insert at the front of endpointBuffer\n\t\t\tthis._endpointBuffer.length\n\t\t\t\t? this._endpointBuffer.unshift(endpointObject)\n\t\t\t\t: this._updateEndpoint(endpointObject);\n\t\t\treturn;\n\t\t}\n\n\t\tlogger.warn(\n\t\t\t`resending endpoint update ${params.event.eventId} failed after ${params.config.resendLimit} attempts`\n\t\t);\n\n\t\tif (this._endpointGenerating) {\n\t\t\tlogger.error('Initial endpoint update failed. ');\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t * @param config\n\t * Init the clients\n\t */\n\tprivate async _initClients(credentials) {\n\t\tlogger.debug('init clients');\n\n\t\tif (\n\t\t\tthis.pinpointClient &&\n\t\t\tthis._config.credentials &&\n\t\t\tthis._config.credentials.sessionToken === credentials.sessionToken &&\n\t\t\tthis._config.credentials.identityId === credentials.identityId\n\t\t) {\n\t\t\tlogger.debug('no change for aws credentials, directly return from init');\n\t\t\treturn;\n\t\t}\n\n\t\tconst identityId = this._config.credentials\n\t\t\t? this._config.credentials.identityId\n\t\t\t: null;\n\n\t\tthis._config.credentials = credentials;\n\t\tconst { region } = this._config;\n\t\tlogger.debug('init clients with credentials', credentials);\n\t\tthis.pinpointClient = new PinpointClient({\n\t\t\tregion,\n\t\t\tcredentials,\n\t\t\tcustomUserAgent: getAmplifyUserAgent(),\n\t\t});\n\n\t\t// TODO: remove this middleware once a long term fix is implemented by aws-sdk-js team.\n\t\tthis.pinpointClient.middlewareStack.addRelativeTo(\n\t\t\tnext => args => {\n\t\t\t\tdelete args.request.headers['amz-sdk-invocation-id'];\n\t\t\t\tdelete args.request.headers['amz-sdk-request'];\n\t\t\t\treturn next(args);\n\t\t\t},\n\t\t\t{\n\t\t\t\tstep: 'finalizeRequest',\n\t\t\t\trelation: 'after',\n\t\t\t\ttoMiddleware: 'retryMiddleware',\n\t\t\t}\n\t\t);\n\n\t\tif (this._bufferExists() && identityId === credentials.identityId) {\n\t\t\t// if the identity has remained the same, pass the updated client to the buffer\n\t\t\tthis._updateBufferClient();\n\t\t} else {\n\t\t\t// otherwise flush the buffer and instantiate a new one\n\t\t\t// this will cause the old buffer to send any remaining events\n\t\t\t// with the old credentials and then stop looping and shortly thereafter get picked up by GC\n\t\t\tthis._initBuffer();\n\t\t}\n\n\t\tthis._customizePinpointClientReq();\n\t}\n\n\tprivate _bufferExists() {\n\t\treturn this._buffer && this._buffer instanceof EventsBuffer;\n\t}\n\n\tprivate _initBuffer() {\n\t\tif (this._bufferExists()) {\n\t\t\tthis._flushBuffer();\n\t\t}\n\n\t\tthis._buffer = new EventsBuffer(this.pinpointClient, this._config);\n\n\t\t// if the first endpoint update hasn't yet resolved pause the buffer to\n\t\t// prevent race conditions. It will be resumed as soon as that request succeeds\n\t\tif (this._endpointGenerating) {\n\t\t\tthis._buffer.pause();\n\t\t}\n\t}\n\n\tprivate _updateBufferClient() {\n\t\tif (this._bufferExists()) {\n\t\t\tthis._buffer.updateClient(this.pinpointClient);\n\t\t}\n\t}\n\n\tprivate _flushBuffer() {\n\t\tif (this._bufferExists()) {\n\t\t\tthis._buffer.flush();\n\t\t\tthis._buffer = null;\n\t\t}\n\t}\n\n\tprivate _resumeBuffer() {\n\t\tif (this._bufferExists()) {\n\t\t\tthis._buffer.resume();\n\t\t}\n\t}\n\n\tprivate _customizePinpointClientReq() {\n\t\t// TODO FIXME: Find a middleware to do this with AWS V3 SDK\n\t\t// if (Platform.isReactNative) {\n\t\t// \tthis.pinpointClient.customizeRequests(request => {\n\t\t// \t\trequest.on('build', req => {\n\t\t// \t\t\treq.httpRequest.headers['user-agent'] = Platform.userAgent;\n\t\t// \t\t});\n\t\t// \t});\n\t\t// }\n\t}\n\n\tprivate async _getEndpointId(cacheKey) {\n\t\t// try to get from cache\n\t\tlet endpointId = await Cache.getItem(cacheKey);\n\t\tlogger.debug(\n\t\t\t'endpointId from cache',\n\t\t\tendpointId,\n\t\t\t'type',\n\t\t\ttypeof endpointId\n\t\t);\n\t\tif (!endpointId) {\n\t\t\tendpointId = uuid();\n\t\t\t// set a longer TTL to avoid endpoint id being deleted after the default TTL (3 days)\n\t\t\t// also set its priority to the highest to reduce its chance of being deleted when cache is full\n\t\t\tconst ttl = 1000 * 60 * 60 * 24 * 365 * 100; // 100 years\n\t\t\tconst expiration = new Date().getTime() + ttl;\n\t\t\tCache.setItem(cacheKey, endpointId, {\n\t\t\t\texpires: expiration,\n\t\t\t\tpriority: 1,\n\t\t\t});\n\t\t}\n\t\treturn endpointId;\n\t}\n\n\t/**\n\t * EndPoint request\n\t * @return {Object} - The request of updating endpoint\n\t */\n\tprivate _endpointRequest(config, event) {\n\t\tconst { credentials } = config;\n\t\tconst clientInfo = this._clientInfo || {};\n\t\tconst clientContext = config.clientContext || {};\n\t\t// for now we have three different ways for default endpoint configurations\n\t\t// clientInfo\n\t\t// clientContext (deprecated)\n\t\t// config.endpoint\n\t\tconst defaultEndpointConfig = config.endpoint || {};\n\t\tconst demographicByClientInfo = {\n\t\t\tappVersion: clientInfo.appVersion,\n\t\t\tmake: clientInfo.make,\n\t\t\tmodel: clientInfo.model,\n\t\t\tmodelVersion: clientInfo.version,\n\t\t\tplatform: clientInfo.platform,\n\t\t};\n\t\t// for backward compatibility\n\t\tconst {\n\t\t\tclientId,\n\t\t\tappTitle,\n\t\t\tappVersionName,\n\t\t\tappVersionCode,\n\t\t\tappPackageName,\n\t\t\t...demographicByClientContext\n\t\t} = clientContext;\n\t\tconst channelType = event.address\n\t\t\t? clientInfo.platform === 'android'\n\t\t\t\t? 'GCM'\n\t\t\t\t: 'APNS'\n\t\t\t: undefined;\n\t\tconst tmp = {\n\t\t\tchannelType,\n\t\t\trequestId: uuid(),\n\t\t\teffectiveDate: new Date().toISOString(),\n\t\t\t...defaultEndpointConfig,\n\t\t\t...event,\n\t\t\tattributes: {\n\t\t\t\t...defaultEndpointConfig.attributes,\n\t\t\t\t...event.attributes,\n\t\t\t},\n\t\t\tdemographic: {\n\t\t\t\t...demographicByClientInfo,\n\t\t\t\t...demographicByClientContext,\n\t\t\t\t...defaultEndpointConfig.demographic,\n\t\t\t\t...event.demographic,\n\t\t\t},\n\t\t\tlocation: {\n\t\t\t\t...defaultEndpointConfig.location,\n\t\t\t\t...event.location,\n\t\t\t},\n\t\t\tmetrics: {\n\t\t\t\t...defaultEndpointConfig.metrics,\n\t\t\t\t...event.metrics,\n\t\t\t},\n\t\t\tuser: {\n\t\t\t\tuserId:\n\t\t\t\t\tevent.userId ||\n\t\t\t\t\tdefaultEndpointConfig.userId ||\n\t\t\t\t\tcredentials.identityId,\n\t\t\t\tuserAttributes: {\n\t\t\t\t\t...defaultEndpointConfig.userAttributes,\n\t\t\t\t\t...event.userAttributes,\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\n\t\t// eliminate unnecessary params\n\t\tconst {\n\t\t\tuserId,\n\t\t\tuserAttributes,\n\t\t\tname,\n\t\t\tsession,\n\t\t\teventId,\n\t\t\timmediate,\n\t\t\t...ret\n\t\t} = tmp;\n\t\treturn JS.transferKeyToUpperCase(\n\t\t\tret,\n\t\t\t[],\n\t\t\t['metrics', 'userAttributes', 'attributes']\n\t\t);\n\t}\n\n\tprivate _eventError(err: any) {\n\t\tlogger.error('record event failed.', err);\n\t\tlogger.warn(\n\t\t\t`Please ensure you have updated your Pinpoint IAM Policy ` +\n\t\t\t\t`with the Action: \"mobiletargeting:PutEvents\" ` +\n\t\t\t\t`in order to record events`\n\t\t);\n\t}\n\n\tprivate async _getCredentials() {\n\t\ttry {\n\t\t\tconst credentials = await Credentials.get();\n\t\t\tif (!credentials) return null;\n\n\t\t\tlogger.debug('set credentials for analytics', credentials);\n\t\t\treturn Credentials.shear(credentials);\n\t\t} catch (err) {\n\t\t\tlogger.debug('ensure credentials error', err);\n\t\t\treturn null;\n\t\t}\n\t}\n}\n\n/**\n * @deprecated use named import\n */\nexport default AWSPinpointProvider;\n","/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nconst lists: MethodEmbed[] = [];\n\nexport class MethodEmbed {\n\tpublic context;\n\tpublic methodName;\n\tprivate _originalMethod;\n\tprivate _bindedMethod;\n\n\tstatic add(context, methodName, methodOverride) {\n\t\tgetInstance(context, methodName).set(methodOverride);\n\t}\n\n\tstatic remove(context, methodName) {\n\t\tgetInstance(context, methodName).remove();\n\t}\n\n\tconstructor(context, methodName) {\n\t\tthis.context = context;\n\t\tthis.methodName = methodName;\n\n\t\tthis._originalMethod = context[methodName].bind(context);\n\t}\n\n\tpublic set(methodOverride) {\n\t\tthis.context[this.methodName] = (...args) => {\n\t\t\treturn methodOverride(this._originalMethod(...args));\n\t\t};\n\t}\n\n\tpublic remove() {\n\t\tthis.context[this.methodName] = this._originalMethod;\n\t}\n}\n\nfunction getInstance(context, methodName): MethodEmbed {\n\tlet instance = lists.filter(\n\t\th => h.context === context && h.methodName === methodName\n\t)[0];\n\n\tif (!instance) {\n\t\tinstance = new MethodEmbed(context, methodName);\n\t\tlists.push(instance);\n\t}\n\n\treturn instance;\n}\n\n/**\n * @deprecated use named import\n */\nexport default MethodEmbed;\n","/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nimport { pageViewTrackOpts } from '../types';\nimport { MethodEmbed } from '../utils/MethodEmbed';\nimport { ConsoleLogger as Logger, JS } from '@aws-amplify/core';\n\nconst logger = new Logger('PageViewTracker');\nconst PREV_URL_KEY = 'aws-amplify-analytics-prevUrl';\n\nconst getUrl = () => {\n\tif (!JS.browserOrNode().isBrowser) return '';\n\telse return window.location.origin + window.location.pathname;\n};\n\nconst defaultOpts: pageViewTrackOpts = {\n\tenable: false,\n\tprovider: 'AWSPinpoint',\n\tgetUrl,\n};\n\nexport class PageViewTracker {\n\tprivate _config: pageViewTrackOpts;\n\tprivate _tracker;\n\tprivate _hasEnabled;\n\n\tconstructor(tracker, opts) {\n\t\tlogger.debug('initialize pageview tracker with opts', opts);\n\t\tthis._config = Object.assign({}, defaultOpts, opts);\n\t\tthis._tracker = tracker;\n\t\tthis._hasEnabled = false;\n\t\tthis._trackFunc = this._trackFunc.bind(this);\n\n\t\tif (this._config.type === 'SPA') {\n\t\t\tthis._pageViewTrackSPA();\n\t\t} else {\n\t\t\tthis._pageViewTrackDefault();\n\t\t}\n\t}\n\n\tpublic configure(opts?: pageViewTrackOpts) {\n\t\tObject.assign(this._config, opts);\n\n\t\t// if spa, need to remove those listeners if disabled\n\t\tif (this._config.type === 'SPA') {\n\t\t\tthis._pageViewTrackSPA();\n\t\t}\n\n\t\treturn this._config;\n\t}\n\n\tprivate _isSameUrl() {\n\t\tconst prevUrl = sessionStorage.getItem(PREV_URL_KEY);\n\t\tconst curUrl = this._config.getUrl();\n\n\t\tif (prevUrl === curUrl) {\n\t\t\tlogger.debug('the url is same');\n\t\t\treturn true;\n\t\t} else return false;\n\t}\n\n\tprivate async _pageViewTrackDefault() {\n\t\tif (\n\t\t\t!JS.browserOrNode().isBrowser ||\n\t\t\t!window.addEventListener ||\n\t\t\t!window.sessionStorage\n\t\t) {\n\t\t\tlogger.debug('not in the supported web enviroment');\n\t\t\treturn;\n\t\t}\n\t\tconst url = this._config.getUrl();\n\t\tconst customAttrs =\n\t\t\ttypeof this._config.attributes === 'function'\n\t\t\t\t? await this._config.attributes()\n\t\t\t\t: this._config.attributes;\n\t\tconst attributes = Object.assign(\n\t\t\t{\n\t\t\t\turl,\n\t\t\t},\n\t\t\tcustomAttrs\n\t\t);\n\n\t\tif (this._config.enable && !this._isSameUrl()) {\n\t\t\tthis._tracker(\n\t\t\t\t{\n\t\t\t\t\tname: this._config.eventName || 'pageView',\n\t\t\t\t\tattributes,\n\t\t\t\t},\n\t\t\t\tthis._config.provider\n\t\t\t).catch(e => {\n\t\t\t\tlogger.debug('Failed to record the page view event', e);\n\t\t\t});\n\t\t\tsessionStorage.setItem(PREV_URL_KEY, url);\n\t\t}\n\t}\n\n\tprivate async _trackFunc() {\n\t\tif (\n\t\t\t!JS.browserOrNode().isBrowser ||\n\t\t\t!window.addEventListener ||\n\t\t\t!history.pushState ||\n\t\t\t!window.sessionStorage\n\t\t) {\n\t\t\tlogger.debug('not in the supported web enviroment');\n\t\t\treturn;\n\t\t}\n\n\t\tconst url = this._config.getUrl();\n\t\tconst customAttrs =\n\t\t\ttypeof this._config.attributes === 'function'\n\t\t\t\t? await this._config.attributes()\n\t\t\t\t: this._config.attributes;\n\t\tconst attributes = Object.assign(\n\t\t\t{\n\t\t\t\turl,\n\t\t\t},\n\t\t\tcustomAttrs\n\t\t);\n\n\t\tif (!this._isSameUrl()) {\n\t\t\tthis._tracker(\n\t\t\t\t{\n\t\t\t\t\tname: this._config.eventName || 'pageView',\n\t\t\t\t\tattributes,\n\t\t\t\t},\n\t\t\t\tthis._config.provider\n\t\t\t).catch(e => {\n\t\t\t\tlogger.debug('Failed to record the page view event', e);\n\t\t\t});\n\t\t\tsessionStorage.setItem(PREV_URL_KEY, url);\n\t\t}\n\t}\n\n\tprivate _pageViewTrackSPA() {\n\t\tif (\n\t\t\t!JS.browserOrNode().isBrowser ||\n\t\t\t!window.addEventListener ||\n\t\t\t!history.pushState\n\t\t) {\n\t\t\tlogger.debug('not in the supported web enviroment');\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._config.enable && !this._hasEnabled) {\n\t\t\tMethodEmbed.add(history, 'pushState', this._trackFunc);\n\t\t\tMethodEmbed.add(history, 'replaceState', this._trackFunc);\n\t\t\twindow.addEventListener('popstate', this._trackFunc);\n\t\t\tthis._trackFunc();\n\t\t\tthis._hasEnabled = true;\n\t\t} else {\n\t\t\tMethodEmbed.remove(history, 'pushState');\n\t\t\tMethodEmbed.remove(history, 'replaceState');\n\t\t\twindow.removeEventListener('popstate', this._trackFunc);\n\t\t\tthis._hasEnabled = false;\n\t\t}\n\t}\n}\n\n/**\n * @deprecated use named import\n */\nexport default PageViewTracker;\n","/**\n * Copyright (c) 2017, Philip Walton <philip@philipwalton.com>\n */\n\nimport { JS } from '@aws-amplify/core';\n\nconst proto =\n\tJS.browserOrNode().isBrowser && window['Element']\n\t\t? window['Element'].prototype\n\t\t: null;\n\nconst nativeMatches = proto\n\t? proto.matches ||\n\t  // @ts-ignore\n\t  proto.matchesSelector ||\n\t  // @ts-ignore\n\t  proto.webkitMatchesSelector ||\n\t  // @ts-ignore\n\t  proto.mozMatchesSelector ||\n\t  // @ts-ignore\n\t  proto.msMatchesSelector ||\n\t  // @ts-ignore\n\t  proto.oMatchesSelector\n\t: null;\n\n/**\n * Tests if a DOM elements matches any of the test DOM elements or selectors.\n * @param {Element} element The DOM element to test.\n * @param {Element|string|Array<Element|string>} test A DOM element, a CSS\n *     selector, or an array of DOM elements or CSS selectors to match against.\n * @return {boolean} True of any part of the test matches.\n */\nexport function matches(element, test) {\n\t// Validate input.\n\tif (element && element.nodeType === 1 && test) {\n\t\t// if test is a string or DOM element test it.\n\t\tif (typeof test === 'string' || test.nodeType === 1) {\n\t\t\treturn (\n\t\t\t\telement === test || matchesSelector(element, /** @type {string} */ test)\n\t\t\t);\n\t\t} else if ('length' in test) {\n\t\t\t// if it has a length property iterate over the items\n\t\t\t// and return true if any match.\n\t\t\tfor (let i = 0, item; (item = test[i]); i++) {\n\t\t\t\tif (element === item || matchesSelector(element, item)) return true;\n\t\t\t}\n\t\t}\n\t}\n\t// Still here? Return false\n\treturn false;\n}\n\n/**\n * Tests whether a DOM element matches a selector. This polyfills the native\n * Element.prototype.matches method across browsers.\n * @param {!Element} element The DOM element to test.\n * @param {string} selector The CSS selector to test element against.\n * @return {boolean} True if the selector matches.\n */\nfunction matchesSelector(element, selector) {\n\tif (typeof selector !== 'string') return false;\n\tif (nativeMatches) return nativeMatches.call(element, selector);\n\tconst nodes = element.parentNode.querySelectorAll(selector);\n\tfor (let i = 0, node; (node = nodes[i]); i++) {\n\t\tif (node === element) return true;\n\t}\n\treturn false;\n}\n","/**\n * Copyright (c) 2017, Philip Walton <philip@philipwalton.com>\n */\n\nimport { closest } from './closest';\nimport { matches } from './matches';\n\n/**\n * Delegates the handling of events for an element matching a selector to an\n * ancestor of the matching element.\n * @param {!Node} ancestor The ancestor element to add the listener to.\n * @param {string} eventType The event type to listen to.\n * @param {string} selector A CSS selector to match against child elements.\n * @param {!Function} callback A function to run any time the event happens.\n * @param {Object=} opts A configuration options object. The available options:\n *     - useCapture<boolean>: If true, bind to the event capture phase.\n *     - deep<boolean>: If true, delegate into shadow trees.\n * @return {Object} The delegate object. It contains a destroy method.\n */\nexport function delegate(ancestor, eventType, selector, callback, opts = {}) {\n\t// Defines the event listener.\n\tconst listener = function(event) {\n\t\tlet delegateTarget;\n\n\t\t// If opts.composed is true and the event originated from inside a Shadow\n\t\t// tree, check the composed path nodes.\n\t\tif (opts['composed'] && typeof event['composedPath'] === 'function') {\n\t\t\tconst composedPath = event.composedPath();\n\t\t\tfor (let i = 0, node; (node = composedPath[i]); i++) {\n\t\t\t\tif (node.nodeType === 1 && matches(node, selector)) {\n\t\t\t\t\tdelegateTarget = node;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// Otherwise check the parents.\n\t\t\tdelegateTarget = closest(event.target, selector, true);\n\t\t}\n\n\t\tif (delegateTarget) {\n\t\t\tcallback.call(delegateTarget, event, delegateTarget);\n\t\t}\n\t};\n\n\tancestor.addEventListener(eventType, listener, opts['useCapture']);\n\n\treturn {\n\t\tdestroy: () => {\n\t\t\tancestor.removeEventListener(eventType, listener, opts['useCapture']);\n\t\t},\n\t};\n}\n","/**\n * Copyright (c) 2017, Philip Walton <philip@philipwalton.com>\n */\n\nimport { matches } from './matches';\nimport { parents } from './parents';\n\n/**\n * Gets the closest parent element that matches the passed selector.\n * @param {Element} element The element whose parents to check.\n * @param {string} selector The CSS selector to match against.\n * @param {boolean=} shouldCheckSelf True if the selector should test against\n *     the passed element itself.\n * @return {Element|undefined} The matching element or undefined.\n */\nexport function closest(element, selector, shouldCheckSelf = false) {\n\tif (!(element && element.nodeType === 1 && selector)) return;\n\tconst parentElements = (shouldCheckSelf ? [element] : []).concat(\n\t\tparents(element)\n\t);\n\n\tfor (let i = 0, parent; (parent = parentElements[i]); i++) {\n\t\tif (matches(parent, selector)) return parent;\n\t}\n}\n","/**\n * Copyright (c) 2017, Philip Walton <philip@philipwalton.com>\n */\n\n/**\n * Returns an array of a DOM element's parent elements.\n * @param {!Element} element The DOM element whose parents to get.\n * @return {!Array} An array of all parent elemets, or an empty array if no\n *     parent elements are found.\n */\nexport function parents(ele) {\n\tconst list = [];\n\tlet element = ele;\n\twhile (element && element.parentNode && element.parentNode.nodeType === 1) {\n\t\telement = /** @type {!Element} */ element.parentNode;\n\t\tlist.push(element);\n\t}\n\treturn list;\n}\n","/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nimport { delegate } from '../vendor/dom-utils';\nimport { EventTrackOpts } from '../types';\nimport { ConsoleLogger as Logger, JS } from '@aws-amplify/core';\n\nconst logger = new Logger('EventTracker');\n\nconst defaultOpts: EventTrackOpts = {\n\tenable: false,\n\tevents: ['click'],\n\tselectorPrefix: 'data-amplify-analytics-',\n\tprovider: 'AWSPinpoint',\n};\n\nexport class EventTracker {\n\tprivate _tracker;\n\tprivate _config: EventTrackOpts;\n\tprivate _delegates;\n\n\tconstructor(tracker, opts) {\n\t\tif (!JS.browserOrNode().isBrowser || !window.addEventListener) {\n\t\t\tlogger.debug('not in the supported web environment');\n\t\t\treturn;\n\t\t}\n\n\t\tthis._config = Object.assign({}, defaultOpts, opts);\n\t\tthis._tracker = tracker;\n\t\tthis._delegates = {};\n\t\tthis._trackFunc = this._trackFunc.bind(this);\n\n\t\tlogger.debug('initialize pageview tracker with opts', this._config);\n\n\t\tthis.configure(this._config);\n\t}\n\n\tconfigure(opts?: EventTrackOpts) {\n\t\tObject.assign(this._config, opts);\n\n\t\tif (!this._config.enable) {\n\t\t\tObject.keys(this._delegates).forEach(key => {\n\t\t\t\tif (typeof this._delegates[key].destroy === 'function')\n\t\t\t\t\tthis._delegates[key].destroy();\n\t\t\t});\n\t\t\tthis._delegates = {};\n\t\t} else if (\n\t\t\tthis._config.enable &&\n\t\t\tObject.keys(this._delegates).length === 0\n\t\t) {\n\t\t\tconst selector = '[' + this._config.selectorPrefix + 'on]';\n\t\t\tthis._config.events.forEach(evt => {\n\t\t\t\tthis._delegates[evt] = delegate(\n\t\t\t\t\tdocument,\n\t\t\t\t\tevt,\n\t\t\t\t\tselector,\n\t\t\t\t\tthis._trackFunc,\n\t\t\t\t\t{ composed: true, useCapture: true }\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\n\t\treturn this._config;\n\t}\n\n\tprivate async _trackFunc(event, element) {\n\t\t// the events specifed in 'amplify-analytics-on' selector\n\t\tconst customAttrs = {};\n\t\tconst events = element\n\t\t\t.getAttribute(this._config.selectorPrefix + 'on')\n\t\t\t.split(/\\s*,\\s*/);\n\t\tconst eventName = element.getAttribute(\n\t\t\tthis._config.selectorPrefix + 'name'\n\t\t);\n\n\t\tconst attrs = element.getAttribute(this._config.selectorPrefix + 'attrs');\n\t\tif (attrs) {\n\t\t\tattrs.split(/\\s*,\\s*/).forEach(attr => {\n\t\t\t\tconst tmp = attr.trim().split(/\\s*:\\s*/);\n\t\t\t\tcustomAttrs[tmp[0]] = tmp[1];\n\t\t\t});\n\t\t}\n\n\t\tconst defaultAttrs =\n\t\t\ttypeof this._config.attributes === 'function'\n\t\t\t\t? await this._config.attributes()\n\t\t\t\t: this._config.attributes;\n\n\t\tconst attributes = Object.assign(\n\t\t\t{\n\t\t\t\ttype: event.type,\n\t\t\t\ttarget: `${event.target.localName} with id ${event.target.id}`,\n\t\t\t},\n\t\t\tdefaultAttrs,\n\t\t\tcustomAttrs\n\t\t);\n\n\t\tlogger.debug('events needed to be recorded', events);\n\t\tlogger.debug('attributes needed to be attached', customAttrs);\n\t\tif (events.indexOf(event.type) < 0) {\n\t\t\tlogger.debug(`event ${event.type} is not selected to be recorded`);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._tracker(\n\t\t\t{\n\t\t\t\tname: eventName || 'event',\n\t\t\t\tattributes,\n\t\t\t},\n\t\t\tthis._config.provider\n\t\t).catch(e => {\n\t\t\tlogger.debug(`Failed to record the ${event.type} event', ${e}`);\n\t\t});\n\t}\n}\n\n/**\n * @deprecated use named import\n */\nexport default EventTracker;\n","/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\n// the session tracker for web\n\nimport { ConsoleLogger as Logger, Hub, JS, Constants } from '@aws-amplify/core';\nimport { SessionTrackOpts } from '../types';\n\nconst logger = new Logger('SessionTracker');\n\nconst defaultOpts: SessionTrackOpts = {\n\tenable: false,\n\tprovider: 'AWSPinpoint',\n};\n\nlet initialEventSent = false;\n\nexport class SessionTracker {\n\tprivate _tracker;\n\tprivate _hasEnabled;\n\tprivate _config: SessionTrackOpts;\n\n\tprivate _hidden;\n\tprivate _visibilityChange;\n\n\tconstructor(tracker, opts) {\n\t\tthis._config = Object.assign({}, defaultOpts, opts);\n\t\tthis._tracker = tracker;\n\n\t\tthis._hasEnabled = false;\n\t\tthis._trackFunc = this._trackFunc.bind(this);\n\t\tthis._trackBeforeUnload = this._trackBeforeUnload.bind(this);\n\n\t\tthis.configure(this._config);\n\t}\n\n\tprivate _envCheck() {\n\t\tif (!JS.browserOrNode().isBrowser) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!document || !document.addEventListener) {\n\t\t\tlogger.debug('not in the supported web environment');\n\t\t\treturn false;\n\t\t}\n\n\t\tif (typeof document.hidden !== 'undefined') {\n\t\t\tthis._hidden = 'hidden';\n\t\t\tthis._visibilityChange = 'visibilitychange';\n\t\t} else if (typeof document['msHidden'] !== 'undefined') {\n\t\t\tthis._hidden = 'msHidden';\n\t\t\tthis._visibilityChange = 'msvisibilitychange';\n\t\t} else if (typeof document['webkitHidden'] !== 'undefined') {\n\t\t\tthis._hidden = 'webkitHidden';\n\t\t\tthis._visibilityChange = 'webkitvisibilitychange';\n\t\t} else {\n\t\t\tlogger.debug('not in the supported web environment');\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate async _trackFunc() {\n\t\tconst customAttrs =\n\t\t\ttypeof this._config.attributes === 'function'\n\t\t\t\t? await this._config.attributes()\n\t\t\t\t: this._config.attributes;\n\n\t\tconst attributes = Object.assign({}, customAttrs);\n\n\t\tif (document.visibilityState === this._hidden) {\n\t\t\tthis._tracker(\n\t\t\t\t{\n\t\t\t\t\tname: '_session.stop',\n\t\t\t\t\tattributes,\n\t\t\t\t},\n\t\t\t\tthis._config.provider\n\t\t\t).catch(e => {\n\t\t\t\tlogger.debug('record session stop event failed.', e);\n\t\t\t});\n\t\t} else {\n\t\t\tthis._tracker(\n\t\t\t\t{\n\t\t\t\t\tname: '_session.start',\n\t\t\t\t\tattributes,\n\t\t\t\t},\n\t\t\t\tthis._config.provider\n\t\t\t).catch(e => {\n\t\t\t\tlogger.debug('record session start event failed.', e);\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate _trackBeforeUnload(event) {\n\t\t// before unload callback cannot be async => https://github.com/aws-amplify/amplify-js/issues/2088\n\n\t\tconst customAttrs =\n\t\t\ttypeof this._config.attributes === 'function'\n\t\t\t\t? Promise.resolve(this._config.attributes())\n\t\t\t\t: Promise.resolve(this._config.attributes);\n\n\t\tcustomAttrs.then(custom => {\n\t\t\tconst attributes = Object.assign({}, custom);\n\n\t\t\tthis._tracker(\n\t\t\t\t{\n\t\t\t\t\tname: '_session.stop',\n\t\t\t\t\tattributes,\n\t\t\t\t\timmediate: true,\n\t\t\t\t},\n\t\t\t\tthis._config.provider\n\t\t\t).catch(e => {\n\t\t\t\tlogger.debug('record session stop event failed.', e);\n\t\t\t});\n\t\t});\n\t}\n\n\t// to keep configure a synchronized function\n\tprivate async _sendInitialEvent() {\n\t\tif (initialEventSent) {\n\t\t\tlogger.debug('the start session has been sent when the page is loaded');\n\t\t\treturn;\n\t\t} else {\n\t\t\tinitialEventSent = true;\n\t\t}\n\n\t\tconst customAttrs =\n\t\t\ttypeof this._config.attributes === 'function'\n\t\t\t\t? await this._config.attributes()\n\t\t\t\t: this._config.attributes;\n\n\t\tconst attributes = Object.assign({}, customAttrs);\n\n\t\tthis._tracker(\n\t\t\t{\n\t\t\t\tname: '_session.start',\n\t\t\t\tattributes,\n\t\t\t},\n\t\t\tthis._config.provider\n\t\t).catch(e => {\n\t\t\tlogger.debug('record session start event failed.', e);\n\t\t});\n\t}\n\n\tconfigure(opts?: SessionTrackOpts) {\n\t\tif (!this._envCheck()) {\n\t\t\treturn this._config;\n\t\t}\n\n\t\tObject.assign(this._config, opts);\n\t\tif (this._config.enable && !this._hasEnabled) {\n\t\t\t// send a start session as soon as it's enabled\n\t\t\tthis._sendInitialEvent();\n\t\t\t// listen on events\n\t\t\tdocument.addEventListener(this._visibilityChange, this._trackFunc, false);\n\t\t\twindow.addEventListener('beforeunload', this._trackBeforeUnload, false);\n\t\t\tthis._hasEnabled = true;\n\t\t} else if (!this._config.enable && this._hasEnabled) {\n\t\t\tdocument.removeEventListener(\n\t\t\t\tthis._visibilityChange,\n\t\t\t\tthis._trackFunc,\n\t\t\t\tfalse\n\t\t\t);\n\t\t\twindow.removeEventListener(\n\t\t\t\t'beforeunload',\n\t\t\t\tthis._trackBeforeUnload,\n\t\t\t\tfalse\n\t\t\t);\n\t\t\tthis._hasEnabled = false;\n\t\t}\n\n\t\treturn this._config;\n\t}\n}\n\n/**\n * @deprecated use named import\n */\nexport default SessionTracker;\n","/*\n * Copyright 2017-2022 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nimport {\n\tAmplify,\n\tConsoleLogger as Logger,\n\tHub,\n\tParser,\n} from '@aws-amplify/core';\nimport { AWSPinpointProvider } from './Providers/AWSPinpointProvider';\n\nimport { AnalyticsProvider, EventMetrics } from './types';\nimport { PageViewTracker, EventTracker, SessionTracker } from './trackers';\n\nconst logger = new Logger('AnalyticsClass');\n\nconst AMPLIFY_SYMBOL = (\n\ttypeof Symbol !== 'undefined' && typeof Symbol.for === 'function'\n\t\t? Symbol.for('amplify_default')\n\t\t: '@@amplify_default'\n) as Symbol;\n\nconst dispatchAnalyticsEvent = (event: string, data: any, message: string) => {\n\tHub.dispatch(\n\t\t'analytics',\n\t\t{ event, data, message },\n\t\t'Analytics',\n\t\tAMPLIFY_SYMBOL\n\t);\n};\n\nconst trackers = {\n\tpageView: PageViewTracker,\n\tevent: EventTracker,\n\tsession: SessionTracker,\n};\n\nlet _instance = null;\n\n/**\n * Provide mobile analytics client functions\n */\nexport class AnalyticsClass {\n\tprivate _config;\n\tprivate _pluggables: AnalyticsProvider[];\n\tprivate _disabled;\n\tprivate _trackers;\n\n\t/**\n\t * Initialize Analtyics\n\t * @param config - Configuration of the Analytics\n\t */\n\tconstructor() {\n\t\tthis._config = {};\n\t\tthis._pluggables = [];\n\t\tthis._disabled = false;\n\t\tthis._trackers = {};\n\t\t_instance = this;\n\n\t\tthis.record = this.record.bind(this);\n\t\tHub.listen('auth', listener);\n\t\tHub.listen('storage', listener);\n\t\tHub.listen('analytics', listener);\n\t}\n\n\tpublic getModuleName() {\n\t\treturn 'Analytics';\n\t}\n\t/**\n\t * configure Analytics\n\t * @param {Object} config - Configuration of the Analytics\n\t */\n\tpublic configure(config?) {\n\t\tif (!config) return this._config;\n\t\tlogger.debug('configure Analytics', config);\n\t\tconst amplifyConfig = Parser.parseMobilehubConfig(config);\n\t\tthis._config = Object.assign(\n\t\t\t{},\n\t\t\tthis._config,\n\t\t\tamplifyConfig.Analytics,\n\t\t\tconfig\n\t\t);\n\n\t\tif (this._config['disabled']) {\n\t\t\tthis._disabled = true;\n\t\t}\n\n\t\t// turn on the autoSessionRecord if not specified\n\t\tif (this._config['autoSessionRecord'] === undefined) {\n\t\t\tthis._config['autoSessionRecord'] = true;\n\t\t}\n\n\t\tthis._pluggables.forEach((pluggable) => {\n\t\t\t// for backward compatibility\n\t\t\tconst providerConfig =\n\t\t\t\tpluggable.getProviderName() === 'AWSPinpoint' &&\n\t\t\t\t!this._config['AWSPinpoint']\n\t\t\t\t\t? this._config\n\t\t\t\t\t: this._config[pluggable.getProviderName()];\n\n\t\t\tpluggable.configure({\n\t\t\t\tdisabled: this._config['disabled'],\n\t\t\t\tautoSessionRecord: this._config['autoSessionRecord'],\n\t\t\t\t...providerConfig,\n\t\t\t});\n\t\t});\n\n\t\tif (this._pluggables.length === 0) {\n\t\t\tthis.addPluggable(new AWSPinpointProvider());\n\t\t}\n\n\t\tdispatchAnalyticsEvent(\n\t\t\t'configured',\n\t\t\tnull,\n\t\t\t`The Analytics category has been configured successfully`\n\t\t);\n\t\tlogger.debug('current configuration', this._config);\n\t\treturn this._config;\n\t}\n\n\t/**\n\t * add plugin into Analytics category\n\t * @param {Object} pluggable - an instance of the plugin\n\t */\n\tpublic addPluggable(pluggable: AnalyticsProvider) {\n\t\tif (pluggable && pluggable.getCategory() === 'Analytics') {\n\t\t\tthis._pluggables.push(pluggable);\n\t\t\t// for backward compatibility\n\t\t\tconst providerConfig =\n\t\t\t\tpluggable.getProviderName() === 'AWSPinpoint' &&\n\t\t\t\t!this._config['AWSPinpoint']\n\t\t\t\t\t? this._config\n\t\t\t\t\t: this._config[pluggable.getProviderName()];\n\t\t\tconst config = { disabled: this._config['disabled'], ...providerConfig };\n\t\t\tpluggable.configure(config);\n\t\t\treturn config;\n\t\t}\n\t}\n\n\t/**\n\t * Get the plugin object\n\t * @param providerName - the name of the plugin\n\t */\n\tpublic getPluggable(providerName) {\n\t\tfor (let i = 0; i < this._pluggables.length; i += 1) {\n\t\t\tconst pluggable = this._pluggables[i];\n\t\t\tif (pluggable.getProviderName() === providerName) {\n\t\t\t\treturn pluggable;\n\t\t\t}\n\t\t}\n\n\t\tlogger.debug('No plugin found with providerName', providerName);\n\t\treturn null;\n\t}\n\n\t/**\n\t * Remove the plugin object\n\t * @param providerName - the name of the plugin\n\t */\n\tpublic removePluggable(providerName) {\n\t\tlet idx = 0;\n\t\twhile (idx < this._pluggables.length) {\n\t\t\tif (this._pluggables[idx].getProviderName() === providerName) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tidx += 1;\n\t\t}\n\n\t\tif (idx === this._pluggables.length) {\n\t\t\tlogger.debug('No plugin found with providerName', providerName);\n\t\t\treturn;\n\t\t} else {\n\t\t\tthis._pluggables.splice(idx, idx + 1);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t/**\n\t * stop sending events\n\t */\n\tpublic disable() {\n\t\tthis._disabled = true;\n\t}\n\n\t/**\n\t * start sending events\n\t */\n\tpublic enable() {\n\t\tthis._disabled = false;\n\t}\n\n\t/**\n\t * Record Session start\n\t * @return - A promise which resolves if buffer doesn't overflow\n\t */\n\tpublic async startSession(provider?: string) {\n\t\tconst params = { event: { name: '_session.start' }, provider };\n\t\treturn this._sendEvent(params);\n\t}\n\n\t/**\n\t * Record Session stop\n\t * @return - A promise which resolves if buffer doesn't overflow\n\t */\n\tpublic async stopSession(provider?: string) {\n\t\tconst params = { event: { name: '_session.stop' }, provider };\n\t\treturn this._sendEvent(params);\n\t}\n\n\t/**\n\t * Record one analytic event and send it to Pinpoint\n\t * @param {String} name - The name of the event\n\t * @param {Object} [attributes] - Attributes of the event\n\t * @param {Object} [metrics] - Event metrics\n\t * @return - A promise which resolves if buffer doesn't overflow\n\t */\n\tpublic async record(\n\t\tevent: string | object,\n\t\tprovider?,\n\t\tmetrics?: EventMetrics\n\t) {\n\t\tlet params = null;\n\t\t// this is just for compatibility, going to be deprecated\n\t\tif (typeof event === 'string') {\n\t\t\tparams = {\n\t\t\t\tevent: {\n\t\t\t\t\tname: event,\n\t\t\t\t\tattributes: provider,\n\t\t\t\t\tmetrics,\n\t\t\t\t},\n\t\t\t\tprovider: 'AWSPinpoint',\n\t\t\t};\n\t\t} else {\n\t\t\tparams = { event, provider };\n\t\t}\n\t\treturn this._sendEvent(params);\n\t}\n\n\tpublic async updateEndpoint(attrs, provider?) {\n\t\tconst event = { ...attrs, name: '_update_endpoint' };\n\n\t\treturn this.record(event, provider);\n\t}\n\n\tprivate _sendEvent(params) {\n\t\tif (this._disabled) {\n\t\t\tlogger.debug('Analytics has been disabled');\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tconst provider = params.provider ? params.provider : 'AWSPinpoint';\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis._pluggables.forEach((pluggable) => {\n\t\t\t\tif (pluggable.getProviderName() === provider) {\n\t\t\t\t\tpluggable.record(params, { resolve, reject });\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic autoTrack(trackerType, opts) {\n\t\tif (!trackers[trackerType]) {\n\t\t\tlogger.debug('invalid tracker type');\n\t\t\treturn;\n\t\t}\n\n\t\t// to sync up two different configuration ways of auto session tracking\n\t\tif (trackerType === 'session') {\n\t\t\tthis._config['autoSessionRecord'] = opts['enable'];\n\t\t}\n\n\t\tconst tracker = this._trackers[trackerType];\n\t\tif (!tracker) {\n\t\t\tthis._trackers[trackerType] = new trackers[trackerType](\n\t\t\t\tthis.record,\n\t\t\t\topts\n\t\t\t);\n\t\t} else {\n\t\t\ttracker.configure(opts);\n\t\t}\n\t}\n}\n\nlet endpointUpdated = false;\nlet authConfigured = false;\nlet analyticsConfigured = false;\nconst listener = (capsule) => {\n\tconst { channel, payload } = capsule;\n\tlogger.debug('on hub capsule ' + channel, payload);\n\n\tswitch (channel) {\n\t\tcase 'auth':\n\t\t\tauthEvent(payload);\n\t\t\tbreak;\n\t\tcase 'storage':\n\t\t\tstorageEvent(payload);\n\t\t\tbreak;\n\t\tcase 'analytics':\n\t\t\tanalyticsEvent(payload);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t}\n};\n\nconst storageEvent = (payload) => {\n\tconst {\n\t\tdata: { attrs, metrics },\n\t} = payload;\n\tif (!attrs) return;\n\n\tif (analyticsConfigured) {\n\t\t_instance\n\t\t\t.record({\n\t\t\t\tname: 'Storage',\n\t\t\t\tattributes: attrs,\n\t\t\t\tmetrics,\n\t\t\t})\n\t\t\t.catch((e) => {\n\t\t\t\tlogger.debug('Failed to send the storage event automatically', e);\n\t\t\t});\n\t}\n};\n\nconst authEvent = (payload) => {\n\tconst { event } = payload;\n\tif (!event) {\n\t\treturn;\n\t}\n\n\tconst recordAuthEvent = async (eventName) => {\n\t\tif (authConfigured && analyticsConfigured) {\n\t\t\ttry {\n\t\t\t\treturn await _instance.record({ name: `_userauth.${eventName}` });\n\t\t\t} catch (err) {\n\t\t\t\tlogger.debug(\n\t\t\t\t\t`Failed to send the ${eventName} event automatically`,\n\t\t\t\t\terr\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t};\n\n\tswitch (event) {\n\t\tcase 'signIn':\n\t\t\treturn recordAuthEvent('sign_in');\n\t\tcase 'signUp':\n\t\t\treturn recordAuthEvent('sign_up');\n\t\tcase 'signOut':\n\t\t\treturn recordAuthEvent('sign_out');\n\t\tcase 'signIn_failure':\n\t\t\treturn recordAuthEvent('auth_fail');\n\t\tcase 'configured':\n\t\t\tauthConfigured = true;\n\t\t\tif (authConfigured && analyticsConfigured) {\n\t\t\t\tsendEvents();\n\t\t\t}\n\t\t\tbreak;\n\t}\n};\n\nconst analyticsEvent = (payload) => {\n\tconst { event } = payload;\n\tif (!event) return;\n\n\tswitch (event) {\n\t\tcase 'pinpointProvider_configured':\n\t\t\tanalyticsConfigured = true;\n\t\t\tif (authConfigured && analyticsConfigured) {\n\t\t\t\tsendEvents();\n\t\t\t}\n\t\t\tbreak;\n\t}\n};\n\nconst sendEvents = () => {\n\tconst config = _instance.configure();\n\tif (!endpointUpdated && config['autoSessionRecord']) {\n\t\t_instance.updateEndpoint({ immediate: true }).catch((e) => {\n\t\t\tlogger.debug('Failed to update the endpoint', e);\n\t\t});\n\t\tendpointUpdated = true;\n\t}\n\t_instance.autoTrack('session', {\n\t\tenable: config['autoSessionRecord'],\n\t});\n};\n\nexport const Analytics = new AnalyticsClass();\nAmplify.register(Analytics);\n","import BrowserHelper from '../shared/BrowserHelper';\r\nimport OpenAccountPage from '../shared/OpenAccountPage';\r\n\r\n// const amplitudeConfig = {\r\n//     API_KEY: 'd5c6f3364b31def7539c087eaf935e1c',\r\n//     enabled: () => BrowserHelper.isMobileSafari(navigator.userAgent) && !OpenAccountPage.isDev(),\r\n// }\r\n\r\nconst amplitudeConfig = {\r\n    API_KEY: '',\r\n    enabled: () => false,\r\n}\r\n\r\nexport default amplitudeConfig;\r\n","export class AsyncLock {\n    constructor() {\n        this.queues = new Map();\n    }\n\n    async acquire(key, fn) {\n        if (!this.queues.has(key)) {\n            this.queues.set(key, []);\n        }\n\n        const queue = this.queues.get(key);\n\n        return new Promise(async (resolve, reject) => {\n            const taskFn = async () => {\n                try {\n                    const result = await fn();\n                    resolve(result);\n                } catch (error) {\n                    reject(error);\n                } finally {\n                    queue.shift();\n                    if (queue.length > 0) {\n                        const nextTask = queue[0];\n                        nextTask();\n                    } else {\n                        this.queues.delete(key);\n                    }\n                }\n            };\n\n            queue.push(taskFn);\n\n            if (queue.length === 1) {\n                queue[0]();\n            }\n        });\n    }\n}\n","import { AsyncLock } from './AsyncLock';\r\n\r\nexport const storageLock = new AsyncLock();\r\n","import { Analytics } from 'aws-amplify';\r\n// import { track as amplitudeTrack } from '@amplitude/analytics-browser';\r\nimport awsconfig from '../../Config/aws-exports';\r\nimport BrowserStorage from '../BackgroundTools/BrowserStorage';\r\nimport { StorageKeys } from '../BackgroundTools/StorageKeys';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport amplitudeConfig from '../../Config/amplitude-config';\r\nimport { storageLock } from '../../Tools/StorageLock';\r\n\r\nconst amplitudeTrack = () => {}\r\n\r\nconst provider = \"AWSKinesisFirehose\";\r\n\r\nconst events = {\r\n    EXECUTION: \"execution\",\r\n    INSTALL: \"install\",\r\n    UPDATE: \"update\",\r\n    SUBSCRIPTION_TAB_SHOWN: \"shownSubscriptionTab\",\r\n    NATIVE_APP_OPEN: \"nativeAppOpen\",\r\n    POPUP_OPEN: \"popupOpen\",\r\n    SAVE_USER_PREFERENCES: \"saveUserPreferences\",\r\n    PAGE_OPEN: \"pageOpen\",\r\n}\r\n\r\nexport class SAAnalytics {\r\n    static async getUserID() {\r\n        const empty = () => {\r\n            return \"00000000-0000-0000-0000-000000000000\";\r\n        }\r\n\r\n        const generateUuid = async () => {\r\n            try {\r\n                const userId = uuidv4();\r\n                await BrowserStorage.setKey(StorageKeys.UserID, userId);\r\n                return userId;\r\n            } catch(e) {\r\n                return empty();\r\n            }\r\n        }\r\n\r\n        return storageLock.acquire(StorageKeys.UserID, async () => {\r\n            try {\r\n                const userId = await BrowserStorage.getKey(StorageKeys.UserID, false);\r\n                if (userId == null || userId === empty()) {\r\n                    return generateUuid();\r\n                }\r\n                return userId;\r\n            } catch(e) {\r\n                return generateUuid();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    static async recordEvent(eventName, immediate, eventData = {}) {\r\n        const userId = await this.getUserID();\r\n        const version = chrome.runtime.getManifest().version;\r\n        Analytics.record({\r\n            data: {\r\n                userId: userId,\r\n                name: eventName,\r\n                version: version\r\n            },\r\n            immediate: immediate,\r\n            streamName: awsconfig.kinesis_stream_name\r\n        }, provider);\r\n\r\n        if (amplitudeConfig.enabled()) {\r\n            amplitudeTrack(eventName, eventData)\r\n        }\r\n    }\r\n\r\n    static recordInstall() {\r\n        this.recordEvent(events.INSTALL, false);\r\n    }\r\n\r\n    static recordUpdate() {\r\n        this.recordEvent(events.UPDATE, false);\r\n    }\r\n\r\n    static async recordExecution() {\r\n        this.recordEvent(events.EXECUTION, false);\r\n    }\r\n\r\n    static async recordSubscriptionTabShown() {\r\n        this.recordEvent(events.SUBSCRIPTION_TAB_SHOWN, true);\r\n    }\r\n\r\n    static async recordNativeAppOpen() {\r\n        this.recordEvent(events.NATIVE_APP_OPEN, true);\r\n    }\r\n\r\n    static async recordPopupOpen() {\r\n        this.recordEvent(events.POPUP_OPEN, true);\r\n    }\r\n\r\n    static async recordSaveUserPreferences(userPreferences) {\r\n        this.recordEvent(events.SAVE_USER_PREFERENCES, true, userPreferences)\r\n    }\r\n\r\n    static async recordPageOpened(pageName) {\r\n        this.recordEvent(events.PAGE_OPEN, true, { page: pageName });\r\n    }\r\n}\r\n","import { API, graphqlOperation } from 'aws-amplify';\n\nimport BrowserStorage from '../BackgroundTools/BrowserStorage';\nimport { StorageKeys } from '../BackgroundTools/StorageKeys';\n\nimport * as queries from '../graphql/queries';\nimport * as mutations from '../graphql/mutations';\n\nimport { Tools } from '../../Tools/Tools';\nimport NativeMessaging from \"../../shared/NativeMessaging\";\n\nimport './UPMessage';\nimport { SAAnalytics } from '../Analytics/SAAnalytics';\n\nconst defaultUserPreferences = {\n    advertising: false,\n    performance: true,\n    functional: true,\n    other: false,\n    background: true,\n    enableFilters: true,\n    analyticsOptIn: false,\n    showUpdateNotifications: true\n};\n\nexport class UserPreferences {\n\n    static getUserPreferences(isLoggedIn) {\n        return new Promise(async (resolve, _) => {\n            BrowserStorage.getKey(StorageKeys.UserPreferences.Preferences, isLoggedIn)\n                .then((results) => {\n                    resolve(results.userPreferences);\n                })\n                .catch(async () => {\n                    let res;\n\n                    if (isLoggedIn) {\n                        try {\n                            res = await API.graphql(graphqlOperation(queries.getUserPreferences));\n\n                            if (res.data.getUserPreferences.analyticsOptIn == null) {\n                                res.data.getUserPreferences.analyticsOptIn = false;\n                            }\n\n                            res = res.data.getUserPreferences;\n\n                            // Future proofing\n                            for (const key in res) {\n                                if (res[key] == null) {\n                                    res[key] = defaultUserPreferences[key];\n                                }\n                            }\n                        } catch (e) {\n                            res = defaultUserPreferences;\n                        }\n                    } else {\n                        // No user logged in and nothing in cache\n                        res = defaultUserPreferences;\n                    }\n\n                    const data = {\n                        userPreferences: res\n                    }\n\n                    await BrowserStorage.setKey(StorageKeys.UserPreferences.Preferences, data);\n                    resolve(res);\n                });\n        });\n    }\n\n    static async refreshUserPreferences() {\n        let res;\n\n        try {\n            res = await API.graphql(graphqlOperation(queries.getUserPreferences));\n\n            if (res.data.getUserPreferences.enableFilters == null) {\n                res.data.getUserPreferences.enableFilters = true;\n            }\n\n            res = res.data.getUserPreferences;\n\n            const data = {\n                userPreferences: res\n            }\n\n            await BrowserStorage.setKey(StorageKeys.UserPreferences.Preferences, data);\n        } catch (e) {\n            // Do nothing\n        }\n    }\n\n    static async refreshUserPreferencesNotLoggedIn(isMobileSafari) {\n\n        if (isMobileSafari) {\n\n            try {\n                let appPreferences = await NativeMessaging.sendNativeMessageIfPossibleWithResponse(\"CookiePreferences\");\n                if (appPreferences.didSetCookiePreferences === false) {\n\n                    Tools.debugLog(\"didThrowError when getting CookiePreferences. DidSetCookiePreferences = false\");\n                    throw new Error(\"No app cookie preferences\");\n\n                }\n\n                const data = {\n                    userPreferences: appPreferences\n                }\n\n                await BrowserStorage.setKey(StorageKeys.UserPreferences.Preferences, data);\n\n            } catch (e) {\n                Tools.debugLog(\"Error getting cookie preferences from app: \" + e);\n            }\n\n        }\n\n    }\n\n    static setUserPreferences(userPreferences, isLoggedIn) {\n        return new Promise(async (resolve, _) => {\n            if (isLoggedIn) {\n                await API.graphql(graphqlOperation(mutations.updateUserPreferences, {\n                    input: userPreferences\n                }));\n            }\n\n            const data = {\n                userPreferences: userPreferences\n            }\n\n            await SAAnalytics.recordSaveUserPreferences(userPreferences);\n\n            await BrowserStorage.setKey(StorageKeys.UserPreferences.Preferences, data);\n            resolve();\n        });\n    }\n}\n","/* eslint-disable */\n// this is an auto generated file. This will be overwritten\n\nexport const updateUserPreferences = /* GraphQL */ `\n  mutation updateUserPreferences\n  (\n      $input: UpdateUserPreferencesInput!\n  ) {\n    updateUserPreferences(input: $input) {\n      advertising\n      functional\n      performance\n      other\n      notifications\n      background\n      enableFilters\n      analyticsOptIn\n      showUpdateNotifications\n  }\n}\n`;","import { Theme } from './Theme';\r\nimport BrowserHelper from '../../shared/BrowserHelper';\r\nimport { UserPreferences } from '../UserPreferences/UserPreferences';\r\n\r\nimport { Tools } from '../../Tools/Tools';\r\nimport BrowserStorage from './BrowserStorage';\r\nimport { StorageKeys } from './StorageKeys';\r\nimport { SAAnalytics } from '../Analytics/SAAnalytics';\r\nimport { Whitelist } from '../Whitelist/Whitelist';\r\nimport { isExpired as isExpiredSubscriptionVerificationPopup } from '../../views/Shared/Functions/isEligible';\r\nimport { storageLock } from '../../Tools/StorageLock';\r\nimport { Messages, Request } from '../../shared';\r\n\r\n\r\n// window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', function (e) {\r\n//     BackgroundTools.setIcon();\r\n// })\r\n\r\nexport class BackgroundTools {\r\n    static async setIfDisabledIcon(tab) {\r\n        try {\r\n            if (!tab) {\r\n                return false;\r\n            }\r\n\r\n            const hostname = Tools.rootDomainForURL(tab.url);\r\n\r\n            if (hostname === undefined) {\r\n                return false;\r\n            }\r\n\r\n            const isBlocked = await Whitelist.hostnameIsBlocked(hostname);\r\n            if (!isBlocked) {\r\n                return false\r\n            }\r\n\r\n            await this.setDisabledIcon(tab.id);\r\n\r\n            return true;\r\n        } catch (err) {\r\n            Tools.debugLog('[ERROR] setIfDisabledIcon')\r\n            Tools.debugLog(err)\r\n            return false\r\n        }\r\n    }\r\n\r\n    static async setDisabledIcon(tabId) {\r\n        try {\r\n            const theme = new Theme();\r\n            const isDark = await theme.isDarkTheme();\r\n\r\n            await chrome.browserAction.setIcon({\r\n                path: isDark ? \"/images/disabled-dark-small.png\" : \"/images/disabled-light-small.png\",\r\n                tabId: tabId,\r\n            });\r\n        }\r\n        catch (err) {\r\n            Tools.debugLog('[ERROR] setDisabledIcon')\r\n            Tools.debugLog(err)\r\n        }\r\n    }\r\n\r\n    static async setIcon(tab) {\r\n        try {\r\n            const isDisabled = await this.setIfDisabledIcon(tab);\r\n            if (isDisabled) {\r\n                return;\r\n            }\r\n\r\n            const theme = new Theme();\r\n            const isDark = await theme.isDarkTheme();\r\n\r\n            await chrome.browserAction.setIcon({\r\n                path: isDark ? \"/images/default-dark-small.png\" : \"/images/default-light-small.png\"\r\n            });\r\n        }\r\n        catch (err) {\r\n            Tools.debugLog('[ERROR] setIcon')\r\n            Tools.debugLog(err)\r\n        }\r\n    }\r\n\r\n      static async changeBadgeColor (tabId, error) {\r\n        try {\r\n            const tab = await new Promise((resolve) => chrome.tabs.get(tabId, (tab) => resolve(tab)));\r\n            const isDisabled = await this.setIfDisabledIcon(tab);\r\n            if (isDisabled) {\r\n                return;\r\n            }\r\n\r\n            const iconPath = await this.getIconPath(error);\r\n            // This icon needs to have 38px to be handled by Chrome\r\n            chrome.browserAction.setIcon({\r\n                path: iconPath,\r\n                tabId: tabId\r\n            });\r\n        } catch (err) {\r\n            Tools.debugLog('[ERROR] changeBadgeColor')\r\n            Tools.debugLog(err)\r\n        }\r\n      }\r\n      \r\n      static async getIconPath(error){\r\n        const theme = new Theme();\r\n        const isDark = await theme.isDarkTheme();\r\n\r\n        const themeName = isDark ? 'dark' : 'light';\r\n        const prefix = error ? \"default\" : \"success\";\r\n\r\n        return `/images/${prefix}-${themeName}-small.png`;\r\n      }\r\n\r\n      static async showOnboard() {\r\n        const isMobileSafari = BrowserHelper.isMobileSafari(navigator.userAgent);\r\n      \r\n        if (isMobileSafari === true) {\r\n          return;\r\n        }\r\n      \r\n        const url = chrome.runtime.getURL(\"onboard.html\");\r\n        await chrome.tabs.create({ url });\r\n      }\r\n      \r\n      static async showUpdate() {\r\n        const isMobileSafari = BrowserHelper.isMobileSafari(navigator.userAgent);\r\n        const userPreferences = await UserPreferences.getUserPreferences();\r\n        const version = chrome.runtime.getManifest().version;  \r\n\r\n        if (!userPreferences.showUpdateNotifications) {\r\n          Tools.debugLog(\"Not showing update notification - UserPreferences.showUpdateNotifications is false\");\r\n          return;\r\n        }\r\n\r\n        if (version === \"3.1.3\" /*&& !isMobileSafari*/) {\r\n          const url = chrome.runtime.getURL(\"update.html\");\r\n          await chrome.tabs.create({ url });\r\n        }\r\n\r\n      }\r\n\r\n      static async showSubscribe() {\r\n        let showNotification = false;\r\n\r\n        try {\r\n          const result = await BrowserStorage.getKey(StorageKeys.Entitlement.LastReminder);\r\n          const lastOpened = result.when;\r\n\r\n          const timeDiffInMs = new Date() - new Date(lastOpened);\r\n          const fortnightInMs = 14 * 24 * 3600 * 1000;\r\n          \r\n          // Debug: 1 minute\r\n          // const fortnightInMs = 60 * 1000; \r\n          \r\n          Tools.debugLog(\"Time elapsed since last subscription reminder (in hours): \" + timeDiffInMs/1000/3600);\r\n          showNotification = timeDiffInMs >= fortnightInMs;\r\n        } catch(e) {\r\n          // No key to read, never shown\r\n          showNotification = true;\r\n        }\r\n        \r\n        // Force show notification in case it has never been shown\r\n        try {\r\n          const result = await BrowserStorage.getKey(StorageKeys.Entitlement.HaveEverReminded, false);\r\n          const haveShownInThisVersion = result.value;\r\n          if (!haveShownInThisVersion) {\r\n            showNotification = true;\r\n          }\r\n        } catch(e) {\r\n          Tools.debugLog(\"Error getting haveremindedinthisversion key.\");\r\n          showNotification = true;\r\n        }\r\n\r\n        if (showNotification) {\r\n          try {\r\n            const url = chrome.runtime.getURL(\"subscribe.html\");\r\n            await chrome.tabs.create({ url });            \r\n            await SAAnalytics.recordSubscriptionTabShown();\r\n            await BrowserStorage.setKey(StorageKeys.Entitlement.HaveEverReminded, {\r\n              value: true\r\n            });\r\n\r\n            const now = new Date();\r\n            await BrowserStorage.setKey(StorageKeys.Entitlement.LastReminder, {\r\n              when: now\r\n            });\r\n\r\n          } catch(e) {\r\n            Tools.debugLog(\"Error opening subscribe tab: \");\r\n            Tools.debugLog(e, true);\r\n          }\r\n        }\r\n      }\r\n\r\n      static async showSubscriptionVerificationNotification() {\r\n        try {\r\n          return storageLock.acquire(StorageKeys.Entitlement.PopupShownAt, async () => {\r\n            const result = await new Request(Messages.Entitlement.SubscriptionVerificationNotification.GetPopupShownAt, {}).sendRequest();\r\n            const popupShownAt = result.message.payload.popupShownAt;\r\n            if (!popupShownAt || isExpiredSubscriptionVerificationPopup(popupShownAt)) {\r\n              await new Request(Messages.Entitlement.SubscriptionVerificationNotification.ShowPopup, {}).sendRequest();\r\n            }\r\n          })\r\n        } catch (e) {\r\n            Tools.debugLog(\"Error opening subscription verification tab: \");\r\n            Tools.debugLog(e, true)\r\n        }\r\n      }\r\n      \r\n}\r\n","import { Messages, Response, ResponseValues } from '../../shared';\r\n\r\nexport const initDomListener = () => {\r\n    chrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\r\n        processMessage(request, sendResponse);\r\n        return true;\r\n    });\r\n};\r\n\r\nfunction processMessage(request, sendResponse) {\r\n    const messages = {\r\n        [Messages.Content.Dom.GetDocument]: getDocument,\r\n    }\r\n\r\n    async function getDocument() {\r\n        try {\r\n            return new Response(ResponseValues.Success, {\r\n                documentHtml: document.documentElement.outerHTML\r\n            });\r\n        } catch(e) {\r\n            return new Response(ResponseValues.Error, { error: e });\r\n        }\r\n    }\r\n\r\n\r\n    if (messages[request.action]) {\r\n        messages[request.action](request)\r\n            .then((result) => {\r\n                sendResponse(result);\r\n            })\r\n            .catch((error) => {\r\n                sendResponse(error);\r\n            });\r\n    }\r\n}\r\n","// Owned\r\nimport { Messages, Request } from '../shared';\r\nimport { URLHelper } from './URLHelper';\r\nimport { AuthHelper } from './AuthHelper';\r\nimport { Run } from './Run';\r\nimport { Notifications } from './Notifications';\r\n\r\n// Tools imports\r\nimport { Tools } from '../Tools/Tools';\r\n\r\nimport awsconfig from '../Config/aws-exports';\r\nimport { OUTCOMES, RunStatus } from './RunStatus';\r\nimport { isEligible } from '../views/Shared/Functions/isEligible';\r\nimport { BackgroundTools } from '../Background/BackgroundTools/BackgroundTools';\r\nimport { initDomListener } from './Dom/DomMessage'\r\n\r\nconst env = awsconfig.aws_user_pools_id === 'eu-west-1_iv6CkI7wU' ? 'dev' : 'prod';\r\n\r\nconst getTabId = async (url) => {\r\n    const results = await new Request(Messages.Tab.GetCurrentTab, { url }).sendRequest();\r\n    const tab = results.message.payload.tab;\r\n\r\n    if (tab) {\r\n        return tab.id;\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n\r\nconst init = async () => {\r\n    Tools.debugLog(\"init\");\r\n    URLHelper.setup();\r\n\r\n    Tools.debugLog(\"URLHelper setup done\");\r\n\r\n    if (window === window.top) {\r\n        initDomListener()\r\n        Tools.debugLog(\"Going to notify\");\r\n        try {\r\n            await Notifications.notifyContentScriptStarted();\r\n        } catch(e) {\r\n            Tools.debugLog(\"Error notifying\");\r\n        }\r\n        Tools.debugLog(\"Notified content script started\");\r\n\r\n        let currentURL = window.location.href;\r\n        let hostname = window.location.hostname;\r\n    \r\n        const tabId = await getTabId(currentURL);\r\n        \r\n        Tools.debugLog(\"Tabid: \" + tabId);\r\n\r\n        try {\r\n            const results = \r\n                await new Request(Messages.Tab.GetExecutionResults, { tabId }).sendRequest();\r\n\r\n            const currentExecutionResults = results.message.payload.executionResults;\r\n\r\n            if (Tools.checkAutoRefresh(currentExecutionResults, 5, hostname)) {\r\n                await Notifications.notifyTabFinished(tabId, hostname);\r\n                return false;\r\n            }\r\n        } catch(e) {\r\n            Tools.debugLog(\"Error getting results\");\r\n        }\r\n\r\n        Tools.debugLog(\"Continuing\");\r\n\r\n        await new Request(Messages.Tab.ClearExecutionResults, { tabId }).sendRequest();\r\n        await new Request(Messages.Generic.ExtensionIsWorking).sendRequest();\r\n\r\n        if (hostname === 'account.super-agent.com'\r\n            || hostname === 'dev.super-agent.com'\r\n            || (window.location.hostname === 'localhost' && env === 'dev')) {\r\n            AuthHelper.injectAuthScript();\r\n        }\r\n\r\n        Tools.debugLog(\"Returning true in init\");\r\n        return true;\r\n    }\r\n\r\n    Tools.debugLog(\"Returning true in init\");\r\n    return true;\r\n}\r\n\r\n\r\n    // getEligibility needs to:\r\n    // 1 - Find if the user has an entitlement\r\n    // 2 - If not, find how many times SA has worked today\r\n    // 3 - Return true/false to determine whether we proceed\r\n    // We should only display something to the user if we found a provider and are not running rules due to eligibility\r\nconst getEligibility = async () => {    \r\n    const entitlementResult =\r\n        await new Request(Messages.Entitlement.GetUserEntitlement, { }).sendRequest();\r\n    \r\n    const isEntitled = entitlementResult.message.payload.hasEntitlement;\r\n    const isRCIdSynced = entitlementResult.message.payload.isRCIdSynced;\r\n    const installedAt = entitlementResult.message.payload.installedAt;\r\n\r\n    const isVerifiedSubscriber = isEligible(isEntitled, isRCIdSynced, installedAt)\r\n    if (isEntitled && !isVerifiedSubscriber) {\r\n        BackgroundTools.showSubscriptionVerificationNotification()\r\n    }\r\n\r\n    return isVerifiedSubscriber;\r\n}\r\n\r\nconst startProcess = async () => {\r\n    Tools.debugLog(\"Inside startProcess\");\r\n\r\n    let currentURL = await URLHelper.getCurrentUrl();\r\n\r\n    if (currentURL == null) {\r\n        Tools.debugLog(\"Returning due to currentURL null\");\r\n        return;\r\n    }\r\n\r\n    let hostname = Tools.hostnameForURL(currentURL);\r\n    let rootDomain = Tools.rootDomainForURL(currentURL);\r\n    let isBlockedResults = \r\n        await new Request(Messages.Whitelist.HostnameIsBlocked, { hostname: rootDomain }).sendRequest();\r\n    let isBlocked = isBlockedResults.message.payload.isBlocked;\r\n\r\n    Tools.debugLog(\"Before is blocked.\");\r\n    Tools.debugLog(\"Hostname: \" + hostname);\r\n\r\n    if (isBlocked) {\r\n        Tools.debugLog(\"Returning as website is blocked.\");\r\n        await new Request(Messages.Tab.NotifyActiveTabIsBlocked).sendRequest();\r\n        return;\r\n    }\r\n\r\n    let detectTimeout = 5000;\r\n    const tabId = await getTabId(currentURL);\r\n\r\n    Tools.debugLog(\"Tabid: \" + tabId);\r\n    let runStatus = new RunStatus(OUTCOMES.nothingFound);\r\n\r\n    try {\r\n        const isEligible = await getEligibility();\r\n        if (window === window.top) {\r\n            // Only run for providers if there are no URL rules\r\n            runStatus = await Run.runForURL(rootDomain, hostname, tabId, isEligible);\r\n\r\n            if (runStatus.outcome === OUTCOMES.nothingFound) {\r\n                runStatus = await Run.runForProviders(hostname, tabId, detectTimeout, isEligible);\r\n                if (runStatus.outcome === OUTCOMES.foundSomething) {\r\n                    Tools.debugLog(\"Executed provider rules.\");\r\n                }\r\n            } else {\r\n                Tools.debugLog(\"Executed something in URL rules.\");\r\n            }\r\n        } else {\r\n            runStatus = await Run.runForProviders(hostname, tabId, detectTimeout, isEligible);\r\n        }\r\n\r\n        // on't show a tab per iFrameD\r\n        if (runStatus.outcome === OUTCOMES.noEntitlement && window === window.top) {\r\n            await Notifications.notifyNoEntitlement(tabId, hostname);\r\n            return;\r\n        }\r\n\r\n        if (runStatus.outcome === OUTCOMES.foundSomething) {     \r\n            Tools.debugLog(\"[CONTENT_SCRIPT_FINISHED]. Notifying at \" + Date());   \r\n            await Notifications.notifyTabFinished(tabId, hostname);\r\n        }\r\n    } catch (e) {        \r\n        Tools.debugLog(\"Error in content script: \", e);\r\n    }\r\n};\r\n\r\nTools.debugLog(\"Content script started.\");\r\n\r\nasync function startContentScript() {\r\n    const shouldRun = await init();\r\n    if (shouldRun) {\r\n        await startProcess();\r\n    }\r\n}\r\n\r\nstartContentScript();\r\n","var v1 = require('./v1');\nvar v4 = require('./v4');\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]]\n  ]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/uuidjs/uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory();\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\troot.CryptoJS = factory();\n\t}\n}(this, function () {\n\n\t/*globals window, global, require*/\n\n\t/**\n\t * CryptoJS core components.\n\t */\n\tvar CryptoJS = CryptoJS || (function (Math, undefined) {\n\n\t    var crypto;\n\n\t    // Native crypto from window (Browser)\n\t    if (typeof window !== 'undefined' && window.crypto) {\n\t        crypto = window.crypto;\n\t    }\n\n\t    // Native crypto in web worker (Browser)\n\t    if (typeof self !== 'undefined' && self.crypto) {\n\t        crypto = self.crypto;\n\t    }\n\n\t    // Native crypto from worker\n\t    if (typeof globalThis !== 'undefined' && globalThis.crypto) {\n\t        crypto = globalThis.crypto;\n\t    }\n\n\t    // Native (experimental IE 11) crypto from window (Browser)\n\t    if (!crypto && typeof window !== 'undefined' && window.msCrypto) {\n\t        crypto = window.msCrypto;\n\t    }\n\n\t    // Native crypto from global (NodeJS)\n\t    if (!crypto && typeof global !== 'undefined' && global.crypto) {\n\t        crypto = global.crypto;\n\t    }\n\n\t    // Native crypto import via require (NodeJS)\n\t    if (!crypto && typeof require === 'function') {\n\t        try {\n\t            crypto = require('crypto');\n\t        } catch (err) {}\n\t    }\n\n\t    /*\n\t     * Cryptographically secure pseudorandom number generator\n\t     *\n\t     * As Math.random() is cryptographically not safe to use\n\t     */\n\t    var cryptoSecureRandomInt = function () {\n\t        if (crypto) {\n\t            // Use getRandomValues method (Browser)\n\t            if (typeof crypto.getRandomValues === 'function') {\n\t                try {\n\t                    return crypto.getRandomValues(new Uint32Array(1))[0];\n\t                } catch (err) {}\n\t            }\n\n\t            // Use randomBytes method (NodeJS)\n\t            if (typeof crypto.randomBytes === 'function') {\n\t                try {\n\t                    return crypto.randomBytes(4).readInt32LE();\n\t                } catch (err) {}\n\t            }\n\t        }\n\n\t        throw new Error('Native crypto module could not be used to get secure random number.');\n\t    };\n\n\t    /*\n\t     * Local polyfill of Object.create\n\n\t     */\n\t    var create = Object.create || (function () {\n\t        function F() {}\n\n\t        return function (obj) {\n\t            var subtype;\n\n\t            F.prototype = obj;\n\n\t            subtype = new F();\n\n\t            F.prototype = null;\n\n\t            return subtype;\n\t        };\n\t    }());\n\n\t    /**\n\t     * CryptoJS namespace.\n\t     */\n\t    var C = {};\n\n\t    /**\n\t     * Library namespace.\n\t     */\n\t    var C_lib = C.lib = {};\n\n\t    /**\n\t     * Base object for prototypal inheritance.\n\t     */\n\t    var Base = C_lib.Base = (function () {\n\n\n\t        return {\n\t            /**\n\t             * Creates a new object that inherits from this object.\n\t             *\n\t             * @param {Object} overrides Properties to copy into the new object.\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         field: 'value',\n\t             *\n\t             *         method: function () {\n\t             *         }\n\t             *     });\n\t             */\n\t            extend: function (overrides) {\n\t                // Spawn\n\t                var subtype = create(this);\n\n\t                // Augment\n\t                if (overrides) {\n\t                    subtype.mixIn(overrides);\n\t                }\n\n\t                // Create default initializer\n\t                if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {\n\t                    subtype.init = function () {\n\t                        subtype.$super.init.apply(this, arguments);\n\t                    };\n\t                }\n\n\t                // Initializer's prototype is the subtype object\n\t                subtype.init.prototype = subtype;\n\n\t                // Reference supertype\n\t                subtype.$super = this;\n\n\t                return subtype;\n\t            },\n\n\t            /**\n\t             * Extends this object and runs the init method.\n\t             * Arguments to create() will be passed to init().\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var instance = MyType.create();\n\t             */\n\t            create: function () {\n\t                var instance = this.extend();\n\t                instance.init.apply(instance, arguments);\n\n\t                return instance;\n\t            },\n\n\t            /**\n\t             * Initializes a newly created object.\n\t             * Override this method to add some logic when your objects are created.\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         init: function () {\n\t             *             // ...\n\t             *         }\n\t             *     });\n\t             */\n\t            init: function () {\n\t            },\n\n\t            /**\n\t             * Copies properties into this object.\n\t             *\n\t             * @param {Object} properties The properties to mix in.\n\t             *\n\t             * @example\n\t             *\n\t             *     MyType.mixIn({\n\t             *         field: 'value'\n\t             *     });\n\t             */\n\t            mixIn: function (properties) {\n\t                for (var propertyName in properties) {\n\t                    if (properties.hasOwnProperty(propertyName)) {\n\t                        this[propertyName] = properties[propertyName];\n\t                    }\n\t                }\n\n\t                // IE won't copy toString using the loop above\n\t                if (properties.hasOwnProperty('toString')) {\n\t                    this.toString = properties.toString;\n\t                }\n\t            },\n\n\t            /**\n\t             * Creates a copy of this object.\n\t             *\n\t             * @return {Object} The clone.\n\t             *\n\t             * @example\n\t             *\n\t             *     var clone = instance.clone();\n\t             */\n\t            clone: function () {\n\t                return this.init.prototype.extend(this);\n\t            }\n\t        };\n\t    }());\n\n\t    /**\n\t     * An array of 32-bit words.\n\t     *\n\t     * @property {Array} words The array of 32-bit words.\n\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t     */\n\t    var WordArray = C_lib.WordArray = Base.extend({\n\t        /**\n\t         * Initializes a newly created word array.\n\t         *\n\t         * @param {Array} words (Optional) An array of 32-bit words.\n\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.create();\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n\t         */\n\t        init: function (words, sigBytes) {\n\t            words = this.words = words || [];\n\n\t            if (sigBytes != undefined) {\n\t                this.sigBytes = sigBytes;\n\t            } else {\n\t                this.sigBytes = words.length * 4;\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts this word array to a string.\n\t         *\n\t         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n\t         *\n\t         * @return {string} The stringified word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = wordArray + '';\n\t         *     var string = wordArray.toString();\n\t         *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n\t         */\n\t        toString: function (encoder) {\n\t            return (encoder || Hex).stringify(this);\n\t        },\n\n\t        /**\n\t         * Concatenates a word array to this word array.\n\t         *\n\t         * @param {WordArray} wordArray The word array to append.\n\t         *\n\t         * @return {WordArray} This word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray1.concat(wordArray2);\n\t         */\n\t        concat: function (wordArray) {\n\t            // Shortcuts\n\t            var thisWords = this.words;\n\t            var thatWords = wordArray.words;\n\t            var thisSigBytes = this.sigBytes;\n\t            var thatSigBytes = wordArray.sigBytes;\n\n\t            // Clamp excess bits\n\t            this.clamp();\n\n\t            // Concat\n\t            if (thisSigBytes % 4) {\n\t                // Copy one byte at a time\n\t                for (var i = 0; i < thatSigBytes; i++) {\n\t                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n\t                }\n\t            } else {\n\t                // Copy one word at a time\n\t                for (var j = 0; j < thatSigBytes; j += 4) {\n\t                    thisWords[(thisSigBytes + j) >>> 2] = thatWords[j >>> 2];\n\t                }\n\t            }\n\t            this.sigBytes += thatSigBytes;\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Removes insignificant bits.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray.clamp();\n\t         */\n\t        clamp: function () {\n\t            // Shortcuts\n\t            var words = this.words;\n\t            var sigBytes = this.sigBytes;\n\n\t            // Clamp\n\t            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n\t            words.length = Math.ceil(sigBytes / 4);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this word array.\n\t         *\n\t         * @return {WordArray} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = wordArray.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone.words = this.words.slice(0);\n\n\t            return clone;\n\t        },\n\n\t        /**\n\t         * Creates a word array filled with random bytes.\n\t         *\n\t         * @param {number} nBytes The number of random bytes to generate.\n\t         *\n\t         * @return {WordArray} The random word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.random(16);\n\t         */\n\t        random: function (nBytes) {\n\t            var words = [];\n\n\t            for (var i = 0; i < nBytes; i += 4) {\n\t                words.push(cryptoSecureRandomInt());\n\t            }\n\n\t            return new WordArray.init(words, nBytes);\n\t        }\n\t    });\n\n\t    /**\n\t     * Encoder namespace.\n\t     */\n\t    var C_enc = C.enc = {};\n\n\t    /**\n\t     * Hex encoding strategy.\n\t     */\n\t    var Hex = C_enc.Hex = {\n\t        /**\n\t         * Converts a word array to a hex string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The hex string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var hexChars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                hexChars.push((bite >>> 4).toString(16));\n\t                hexChars.push((bite & 0x0f).toString(16));\n\t            }\n\n\t            return hexChars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a hex string to a word array.\n\t         *\n\t         * @param {string} hexStr The hex string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n\t         */\n\t        parse: function (hexStr) {\n\t            // Shortcut\n\t            var hexStrLength = hexStr.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < hexStrLength; i += 2) {\n\t                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n\t            }\n\n\t            return new WordArray.init(words, hexStrLength / 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * Latin1 encoding strategy.\n\t     */\n\t    var Latin1 = C_enc.Latin1 = {\n\t        /**\n\t         * Converts a word array to a Latin1 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Latin1 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var latin1Chars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                latin1Chars.push(String.fromCharCode(bite));\n\t            }\n\n\t            return latin1Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Latin1 string to a word array.\n\t         *\n\t         * @param {string} latin1Str The Latin1 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n\t         */\n\t        parse: function (latin1Str) {\n\t            // Shortcut\n\t            var latin1StrLength = latin1Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < latin1StrLength; i++) {\n\t                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n\t            }\n\n\t            return new WordArray.init(words, latin1StrLength);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-8 encoding strategy.\n\t     */\n\t    var Utf8 = C_enc.Utf8 = {\n\t        /**\n\t         * Converts a word array to a UTF-8 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-8 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            try {\n\t                return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n\t            } catch (e) {\n\t                throw new Error('Malformed UTF-8 data');\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts a UTF-8 string to a word array.\n\t         *\n\t         * @param {string} utf8Str The UTF-8 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n\t         */\n\t        parse: function (utf8Str) {\n\t            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract buffered block algorithm template.\n\t     *\n\t     * The property blockSize must be implemented in a concrete subtype.\n\t     *\n\t     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\n\t     */\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\n\t        /**\n\t         * Resets this block algorithm's data buffer to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm.reset();\n\t         */\n\t        reset: function () {\n\t            // Initial values\n\t            this._data = new WordArray.init();\n\t            this._nDataBytes = 0;\n\t        },\n\n\t        /**\n\t         * Adds new data to this block algorithm's buffer.\n\t         *\n\t         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm._append('data');\n\t         *     bufferedBlockAlgorithm._append(wordArray);\n\t         */\n\t        _append: function (data) {\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof data == 'string') {\n\t                data = Utf8.parse(data);\n\t            }\n\n\t            // Append\n\t            this._data.concat(data);\n\t            this._nDataBytes += data.sigBytes;\n\t        },\n\n\t        /**\n\t         * Processes available data blocks.\n\t         *\n\t         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n\t         *\n\t         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n\t         *\n\t         * @return {WordArray} The processed data.\n\t         *\n\t         * @example\n\t         *\n\t         *     var processedData = bufferedBlockAlgorithm._process();\n\t         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n\t         */\n\t        _process: function (doFlush) {\n\t            var processedWords;\n\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\t            var dataSigBytes = data.sigBytes;\n\t            var blockSize = this.blockSize;\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count blocks ready\n\t            var nBlocksReady = dataSigBytes / blockSizeBytes;\n\t            if (doFlush) {\n\t                // Round up to include partial blocks\n\t                nBlocksReady = Math.ceil(nBlocksReady);\n\t            } else {\n\t                // Round down to include only full blocks,\n\t                // less the number of blocks that must remain in the buffer\n\t                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n\t            }\n\n\t            // Count words ready\n\t            var nWordsReady = nBlocksReady * blockSize;\n\n\t            // Count bytes ready\n\t            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\n\t            // Process blocks\n\t            if (nWordsReady) {\n\t                for (var offset = 0; offset < nWordsReady; offset += blockSize) {\n\t                    // Perform concrete-algorithm logic\n\t                    this._doProcessBlock(dataWords, offset);\n\t                }\n\n\t                // Remove processed words\n\t                processedWords = dataWords.splice(0, nWordsReady);\n\t                data.sigBytes -= nBytesReady;\n\t            }\n\n\t            // Return processed words\n\t            return new WordArray.init(processedWords, nBytesReady);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this object.\n\t         *\n\t         * @return {Object} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = bufferedBlockAlgorithm.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone._data = this._data.clone();\n\n\t            return clone;\n\t        },\n\n\t        _minBufferSize: 0\n\t    });\n\n\t    /**\n\t     * Abstract hasher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n\t     */\n\t    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Initializes a newly created hasher.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hasher = CryptoJS.algo.SHA256.create();\n\t         */\n\t        init: function (cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this hasher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-hasher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Updates this hasher with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {Hasher} This hasher.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.update('message');\n\t         *     hasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            // Append\n\t            this._append(messageUpdate);\n\n\t            // Update the hash\n\t            this._process();\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the hash computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The hash.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hash = hasher.finalize();\n\t         *     var hash = hasher.finalize('message');\n\t         *     var hash = hasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Final message update\n\t            if (messageUpdate) {\n\t                this._append(messageUpdate);\n\t            }\n\n\t            // Perform concrete-hasher logic\n\t            var hash = this._doFinalize();\n\n\t            return hash;\n\t        },\n\n\t        blockSize: 512/32,\n\n\t        /**\n\t         * Creates a shortcut function to a hasher's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to create a helper for.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHelper: function (hasher) {\n\t            return function (message, cfg) {\n\t                return new hasher.init(cfg).finalize(message);\n\t            };\n\t        },\n\n\t        /**\n\t         * Creates a shortcut function to the HMAC's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to use in this HMAC helper.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHmacHelper: function (hasher) {\n\t            return function (message, key) {\n\t                return new C_algo.HMAC.init(hasher, key).finalize(message);\n\t            };\n\t        }\n\t    });\n\n\t    /**\n\t     * Algorithm namespace.\n\t     */\n\t    var C_algo = C.algo = {};\n\n\t    return C;\n\t}(Math));\n\n\n\treturn CryptoJS;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_enc = C.enc;\n\n\t    /**\n\t     * Base64 encoding strategy.\n\t     */\n\t    var Base64 = C_enc.Base64 = {\n\t        /**\n\t         * Converts a word array to a Base64 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Base64 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\t            var map = this._map;\n\n\t            // Clamp excess bits\n\t            wordArray.clamp();\n\n\t            // Convert\n\t            var base64Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 3) {\n\t                var byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;\n\t                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\n\t                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\n\n\t                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;\n\n\t                for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {\n\t                    base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\n\t                }\n\t            }\n\n\t            // Add padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                while (base64Chars.length % 4) {\n\t                    base64Chars.push(paddingChar);\n\t                }\n\t            }\n\n\t            return base64Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Base64 string to a word array.\n\t         *\n\t         * @param {string} base64Str The Base64 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Base64.parse(base64String);\n\t         */\n\t        parse: function (base64Str) {\n\t            // Shortcuts\n\t            var base64StrLength = base64Str.length;\n\t            var map = this._map;\n\t            var reverseMap = this._reverseMap;\n\n\t            if (!reverseMap) {\n\t                    reverseMap = this._reverseMap = [];\n\t                    for (var j = 0; j < map.length; j++) {\n\t                        reverseMap[map.charCodeAt(j)] = j;\n\t                    }\n\t            }\n\n\t            // Ignore padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                var paddingIndex = base64Str.indexOf(paddingChar);\n\t                if (paddingIndex !== -1) {\n\t                    base64StrLength = paddingIndex;\n\t                }\n\t            }\n\n\t            // Convert\n\t            return parseLoop(base64Str, base64StrLength, reverseMap);\n\n\t        },\n\n\t        _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\n\t    };\n\n\t    function parseLoop(base64Str, base64StrLength, reverseMap) {\n\t      var words = [];\n\t      var nBytes = 0;\n\t      for (var i = 0; i < base64StrLength; i++) {\n\t          if (i % 4) {\n\t              var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);\n\t              var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);\n\t              var bitsCombined = bits1 | bits2;\n\t              words[nBytes >>> 2] |= bitsCombined << (24 - (nBytes % 4) * 8);\n\t              nBytes++;\n\t          }\n\t      }\n\t      return WordArray.create(words, nBytes);\n\t    }\n\t}());\n\n\n\treturn CryptoJS.enc.Base64;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./sha256\"), require(\"./hmac\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./sha256\", \"./hmac\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\treturn CryptoJS.HmacSHA256;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var C_enc = C.enc;\n\t    var Utf8 = C_enc.Utf8;\n\t    var C_algo = C.algo;\n\n\t    /**\n\t     * HMAC algorithm.\n\t     */\n\t    var HMAC = C_algo.HMAC = Base.extend({\n\t        /**\n\t         * Initializes a newly created HMAC.\n\t         *\n\t         * @param {Hasher} hasher The hash algorithm to use.\n\t         * @param {WordArray|string} key The secret key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);\n\t         */\n\t        init: function (hasher, key) {\n\t            // Init hasher\n\t            hasher = this._hasher = new hasher.init();\n\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof key == 'string') {\n\t                key = Utf8.parse(key);\n\t            }\n\n\t            // Shortcuts\n\t            var hasherBlockSize = hasher.blockSize;\n\t            var hasherBlockSizeBytes = hasherBlockSize * 4;\n\n\t            // Allow arbitrary length keys\n\t            if (key.sigBytes > hasherBlockSizeBytes) {\n\t                key = hasher.finalize(key);\n\t            }\n\n\t            // Clamp excess bits\n\t            key.clamp();\n\n\t            // Clone key for inner and outer pads\n\t            var oKey = this._oKey = key.clone();\n\t            var iKey = this._iKey = key.clone();\n\n\t            // Shortcuts\n\t            var oKeyWords = oKey.words;\n\t            var iKeyWords = iKey.words;\n\n\t            // XOR keys with pad constants\n\t            for (var i = 0; i < hasherBlockSize; i++) {\n\t                oKeyWords[i] ^= 0x5c5c5c5c;\n\t                iKeyWords[i] ^= 0x36363636;\n\t            }\n\t            oKey.sigBytes = iKey.sigBytes = hasherBlockSizeBytes;\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this HMAC to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hmacHasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Shortcut\n\t            var hasher = this._hasher;\n\n\t            // Reset\n\t            hasher.reset();\n\t            hasher.update(this._iKey);\n\t        },\n\n\t        /**\n\t         * Updates this HMAC with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {HMAC} This HMAC instance.\n\t         *\n\t         * @example\n\t         *\n\t         *     hmacHasher.update('message');\n\t         *     hmacHasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            this._hasher.update(messageUpdate);\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the HMAC computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The HMAC.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hmac = hmacHasher.finalize();\n\t         *     var hmac = hmacHasher.finalize('message');\n\t         *     var hmac = hmacHasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Shortcut\n\t            var hasher = this._hasher;\n\n\t            // Compute HMAC\n\t            var innerHash = hasher.finalize(messageUpdate);\n\t            hasher.reset();\n\t            var hmac = hasher.finalize(this._oKey.clone().concat(innerHash));\n\n\t            return hmac;\n\t        }\n\t    });\n\t}());\n\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Check if typed arrays are supported\n\t    if (typeof ArrayBuffer != 'function') {\n\t        return;\n\t    }\n\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\n\t    // Reference original init\n\t    var superInit = WordArray.init;\n\n\t    // Augment WordArray.init to handle typed arrays\n\t    var subInit = WordArray.init = function (typedArray) {\n\t        // Convert buffers to uint8\n\t        if (typedArray instanceof ArrayBuffer) {\n\t            typedArray = new Uint8Array(typedArray);\n\t        }\n\n\t        // Convert other array views to uint8\n\t        if (\n\t            typedArray instanceof Int8Array ||\n\t            (typeof Uint8ClampedArray !== \"undefined\" && typedArray instanceof Uint8ClampedArray) ||\n\t            typedArray instanceof Int16Array ||\n\t            typedArray instanceof Uint16Array ||\n\t            typedArray instanceof Int32Array ||\n\t            typedArray instanceof Uint32Array ||\n\t            typedArray instanceof Float32Array ||\n\t            typedArray instanceof Float64Array\n\t        ) {\n\t            typedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);\n\t        }\n\n\t        // Handle Uint8Array\n\t        if (typedArray instanceof Uint8Array) {\n\t            // Shortcut\n\t            var typedArrayByteLength = typedArray.byteLength;\n\n\t            // Extract bytes\n\t            var words = [];\n\t            for (var i = 0; i < typedArrayByteLength; i++) {\n\t                words[i >>> 2] |= typedArray[i] << (24 - (i % 4) * 8);\n\t            }\n\n\t            // Initialize this word array\n\t            superInit.call(this, words, typedArrayByteLength);\n\t        } else {\n\t            // Else call normal init\n\t            superInit.apply(this, arguments);\n\t        }\n\t    };\n\n\t    subInit.prototype = WordArray;\n\t}());\n\n\n\treturn CryptoJS.lib.WordArray;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Initialization and round constants tables\n\t    var H = [];\n\t    var K = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        function isPrime(n) {\n\t            var sqrtN = Math.sqrt(n);\n\t            for (var factor = 2; factor <= sqrtN; factor++) {\n\t                if (!(n % factor)) {\n\t                    return false;\n\t                }\n\t            }\n\n\t            return true;\n\t        }\n\n\t        function getFractionalBits(n) {\n\t            return ((n - (n | 0)) * 0x100000000) | 0;\n\t        }\n\n\t        var n = 2;\n\t        var nPrime = 0;\n\t        while (nPrime < 64) {\n\t            if (isPrime(n)) {\n\t                if (nPrime < 8) {\n\t                    H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));\n\t                }\n\t                K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));\n\n\t                nPrime++;\n\t            }\n\n\t            n++;\n\t        }\n\t    }());\n\n\t    // Reusable object\n\t    var W = [];\n\n\t    /**\n\t     * SHA-256 hash algorithm.\n\t     */\n\t    var SHA256 = C_algo.SHA256 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init(H.slice(0));\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var H = this._hash.words;\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\t            var e = H[4];\n\t            var f = H[5];\n\t            var g = H[6];\n\t            var h = H[7];\n\n\t            // Computation\n\t            for (var i = 0; i < 64; i++) {\n\t                if (i < 16) {\n\t                    W[i] = M[offset + i] | 0;\n\t                } else {\n\t                    var gamma0x = W[i - 15];\n\t                    var gamma0  = ((gamma0x << 25) | (gamma0x >>> 7))  ^\n\t                                  ((gamma0x << 14) | (gamma0x >>> 18)) ^\n\t                                   (gamma0x >>> 3);\n\n\t                    var gamma1x = W[i - 2];\n\t                    var gamma1  = ((gamma1x << 15) | (gamma1x >>> 17)) ^\n\t                                  ((gamma1x << 13) | (gamma1x >>> 19)) ^\n\t                                   (gamma1x >>> 10);\n\n\t                    W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\n\t                }\n\n\t                var ch  = (e & f) ^ (~e & g);\n\t                var maj = (a & b) ^ (a & c) ^ (b & c);\n\n\t                var sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));\n\t                var sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7)  | (e >>> 25));\n\n\t                var t1 = h + sigma1 + ch + K[i] + W[i];\n\t                var t2 = sigma0 + maj;\n\n\t                h = g;\n\t                g = f;\n\t                f = e;\n\t                e = (d + t1) | 0;\n\t                d = c;\n\t                c = b;\n\t                b = a;\n\t                a = (t1 + t2) | 0;\n\t            }\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t            H[4] = (H[4] + e) | 0;\n\t            H[5] = (H[5] + f) | 0;\n\t            H[6] = (H[6] + g) | 0;\n\t            H[7] = (H[7] + h) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Return final computed hash\n\t            return this._hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA256('message');\n\t     *     var hash = CryptoJS.SHA256(wordArray);\n\t     */\n\t    C.SHA256 = Hasher._createHelper(SHA256);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA256(message, key);\n\t     */\n\t    C.HmacSHA256 = Hasher._createHmacHelper(SHA256);\n\t}(Math));\n\n\n\treturn CryptoJS.SHA256;\n\n}));","var v1 = require('./v1');\nvar v4 = require('./v4');\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]]\n  ]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/uuidjs/uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","import { MsSubtleCrypto } from \"./MsSubtleCrypto\";\n\ntype SubtleCryptoMethod =\n  | \"decrypt\"\n  | \"digest\"\n  | \"encrypt\"\n  | \"exportKey\"\n  | \"generateKey\"\n  | \"importKey\"\n  | \"sign\"\n  | \"verify\";\n\nconst msSubtleCryptoMethods: Array<SubtleCryptoMethod> = [\n  \"decrypt\",\n  \"digest\",\n  \"encrypt\",\n  \"exportKey\",\n  \"generateKey\",\n  \"importKey\",\n  \"sign\",\n  \"verify\"\n];\n\n/**\n * The value accessible as `window.msCrypto` in Internet Explorer 11.\n */\nexport interface MsCrypto {\n  getRandomValues: (toFill: Uint8Array) => void;\n  subtle: MsSubtleCrypto;\n}\n\n/**\n * The `window` object in Internet Explorer 11. This interface does not\n * exhaustively document the prefixed features of `window` in IE11.\n */\nexport interface MsWindow extends Window {\n  MSInputMethodContext: any;\n  msCrypto: MsCrypto;\n}\n\nfunction quacksLikeAnMsWindow(window: Window): window is MsWindow {\n  return \"MSInputMethodContext\" in window && \"msCrypto\" in window;\n}\n\n/**\n * Determines if the provided window is (or is like) the window object one would\n * expect to encounter in Internet Explorer 11.\n */\nexport function isMsWindow(window: Window): window is MsWindow {\n  if (quacksLikeAnMsWindow(window) && window.msCrypto.subtle !== undefined) {\n    const { getRandomValues, subtle } = window.msCrypto;\n    return msSubtleCryptoMethods\n      .map<Function>(methodName => subtle[methodName])\n      .concat(getRandomValues)\n      .every(method => typeof method === \"function\");\n  }\n\n  return false;\n}\n","export * from \"./CryptoOperation\";\nexport * from \"./Key\";\nexport * from \"./KeyOperation\";\nexport * from \"./MsSubtleCrypto\";\nexport * from \"./MsWindow\";\n","export const SHA_256_HASH: { name: \"SHA-256\" } = { name: \"SHA-256\" };\n\nexport const SHA_256_HMAC_ALGO: { name: \"HMAC\"; hash: { name: \"SHA-256\" } } = {\n  name: \"HMAC\",\n  hash: SHA_256_HASH\n};\n\nexport const EMPTY_DATA_SHA_256 = new Uint8Array([\n  227,\n  176,\n  196,\n  66,\n  152,\n  252,\n  28,\n  20,\n  154,\n  251,\n  244,\n  200,\n  153,\n  111,\n  185,\n  36,\n  39,\n  174,\n  65,\n  228,\n  100,\n  155,\n  147,\n  76,\n  164,\n  149,\n  153,\n  27,\n  120,\n  82,\n  184,\n  85\n]);\n","import { Sha256 as Ie11Sha256 } from \"./ie11Sha256\";\nimport { Sha256 as WebCryptoSha256 } from \"./webCryptoSha256\";\nimport { Sha256 as JsSha256 } from \"@aws-crypto/sha256-js\";\nimport { Hash, SourceData } from \"@aws-sdk/types\";\nimport { supportsWebCrypto } from \"@aws-crypto/supports-web-crypto\";\nimport { isMsWindow } from \"@aws-crypto/ie11-detection\";\nimport { locateWindow } from \"@aws-sdk/util-locate-window\";\n\nexport class Sha256 implements Hash {\n  private readonly hash: Hash;\n\n  constructor(secret?: SourceData) {\n    if (supportsWebCrypto(locateWindow())) {\n      this.hash = new WebCryptoSha256(secret);\n    } else if (isMsWindow(locateWindow())) {\n      this.hash = new Ie11Sha256(secret);\n    } else {\n      this.hash = new JsSha256(secret);\n    }\n  }\n\n  update(data: SourceData, encoding?: \"utf8\" | \"ascii\" | \"latin1\"): void {\n    this.hash.update(data, encoding);\n  }\n\n  digest(): Promise<Uint8Array> {\n    return this.hash.digest();\n  }\n}\n","import { isEmptyData } from \"./isEmptyData\";\nimport { SHA_256_HMAC_ALGO } from \"./constants\";\nimport { Hash, SourceData } from \"@aws-sdk/types\";\nimport { fromUtf8 } from \"@aws-sdk/util-utf8-browser\";\nimport { CryptoOperation, Key, MsWindow } from \"@aws-crypto/ie11-detection\";\nimport { locateWindow } from \"@aws-sdk/util-locate-window\";\n\nexport class Sha256 implements Hash {\n  private operation: Promise<CryptoOperation>;\n\n  constructor(secret?: SourceData) {\n    if (secret) {\n      this.operation = getKeyPromise(secret).then(keyData =>\n        (locateWindow() as MsWindow).msCrypto.subtle.sign(\n          SHA_256_HMAC_ALGO,\n          keyData\n        )\n      );\n      this.operation.catch(() => {});\n    } else {\n      this.operation = Promise.resolve(\n        (locateWindow() as MsWindow).msCrypto.subtle.digest(\"SHA-256\")\n      );\n    }\n  }\n\n  update(toHash: SourceData): void {\n    if (isEmptyData(toHash)) {\n      return;\n    }\n\n    this.operation = this.operation.then(operation => {\n      operation.onerror = () => {\n        this.operation = Promise.reject(\n          new Error(\"Error encountered updating hash\")\n        );\n      };\n      operation.process(toArrayBufferView(toHash));\n\n      return operation;\n    });\n    this.operation.catch(() => {});\n  }\n\n  digest(): Promise<Uint8Array> {\n    return this.operation.then<Uint8Array>(\n      operation =>\n        new Promise((resolve, reject) => {\n          operation.onerror = () => {\n            reject(new Error(\"Error encountered finalizing hash\"));\n          };\n          operation.oncomplete = () => {\n            if (operation.result) {\n              resolve(new Uint8Array(operation.result));\n            }\n            reject(new Error(\"Error encountered finalizing hash\"));\n          };\n\n          operation.finish();\n        })\n    );\n  }\n}\n\nfunction getKeyPromise(secret: SourceData): Promise<Key> {\n  return new Promise((resolve, reject) => {\n    const keyOperation = (locateWindow() as MsWindow).msCrypto.subtle.importKey(\n      \"raw\",\n      toArrayBufferView(secret),\n      SHA_256_HMAC_ALGO,\n      false,\n      [\"sign\"]\n    );\n\n    keyOperation.oncomplete = () => {\n      if (keyOperation.result) {\n        resolve(keyOperation.result);\n      }\n\n      reject(new Error(\"ImportKey completed without importing key.\"));\n    };\n    keyOperation.onerror = () => {\n      reject(new Error(\"ImportKey failed to import key.\"));\n    };\n  });\n}\n\nfunction toArrayBufferView(data: SourceData): Uint8Array {\n  if (typeof data === \"string\") {\n    return fromUtf8(data);\n  }\n\n  if (ArrayBuffer.isView(data)) {\n    return new Uint8Array(\n      data.buffer,\n      data.byteOffset,\n      data.byteLength / Uint8Array.BYTES_PER_ELEMENT\n    );\n  }\n\n  return new Uint8Array(data);\n}\n","export * from \"./crossPlatformSha256\";\nexport { Sha256 as Ie11Sha256 } from \"./ie11Sha256\";\nexport { Sha256 as WebCryptoSha256 } from \"./webCryptoSha256\";\n","import { SourceData } from \"@aws-sdk/types\";\n\nexport function isEmptyData(data: SourceData): boolean {\n  if (typeof data === \"string\") {\n    return data.length === 0;\n  }\n\n  return data.byteLength === 0;\n}\n","import { Hash, SourceData } from \"@aws-sdk/types\";\nimport { isEmptyData, convertToBuffer } from \"@aws-crypto/util\";\nimport {\n  EMPTY_DATA_SHA_256,\n  SHA_256_HASH,\n  SHA_256_HMAC_ALGO,\n} from \"./constants\";\nimport { locateWindow } from \"@aws-sdk/util-locate-window\";\n\nexport class Sha256 implements Hash {\n  private readonly key: Promise<CryptoKey> | undefined;\n  private toHash: Uint8Array = new Uint8Array(0);\n\n  constructor(secret?: SourceData) {\n    if (secret !== void 0) {\n      this.key = new Promise((resolve, reject) => {\n        locateWindow()\n          .crypto.subtle.importKey(\n            \"raw\",\n            convertToBuffer(secret),\n            SHA_256_HMAC_ALGO,\n            false,\n            [\"sign\"]\n          )\n          .then(resolve, reject);\n      });\n      this.key.catch(() => {});\n    }\n  }\n\n  update(data: SourceData): void {\n    if (isEmptyData(data)) {\n      return;\n    }\n\n    const update = convertToBuffer(data);\n    const typedArray = new Uint8Array(\n      this.toHash.byteLength + update.byteLength\n    );\n    typedArray.set(this.toHash, 0);\n    typedArray.set(update, this.toHash.byteLength);\n    this.toHash = typedArray;\n  }\n\n  digest(): Promise<Uint8Array> {\n    if (this.key) {\n      return this.key.then((key) =>\n        locateWindow()\n          .crypto.subtle.sign(SHA_256_HMAC_ALGO, key, this.toHash)\n          .then((data) => new Uint8Array(data))\n      );\n    }\n\n    if (isEmptyData(this.toHash)) {\n      return Promise.resolve(EMPTY_DATA_SHA_256);\n    }\n\n    return Promise.resolve()\n      .then(() =>\n        locateWindow().crypto.subtle.digest(SHA_256_HASH, this.toHash)\n      )\n      .then((data) => Promise.resolve(new Uint8Array(data)));\n  }\n}\n","import {\n  BLOCK_SIZE,\n  DIGEST_LENGTH,\n  INIT,\n  KEY,\n  MAX_HASHABLE_LENGTH\n} from \"./constants\";\n\n/**\n * @internal\n */\nexport class RawSha256 {\n  private state: Int32Array = Int32Array.from(INIT);\n  private temp: Int32Array = new Int32Array(64);\n  private buffer: Uint8Array = new Uint8Array(64);\n  private bufferLength: number = 0;\n  private bytesHashed: number = 0;\n\n  /**\n   * @internal\n   */\n  finished: boolean = false;\n\n  update(data: Uint8Array): void {\n    if (this.finished) {\n      throw new Error(\"Attempted to update an already finished hash.\");\n    }\n\n    let position = 0;\n    let { byteLength } = data;\n    this.bytesHashed += byteLength;\n\n    if (this.bytesHashed * 8 > MAX_HASHABLE_LENGTH) {\n      throw new Error(\"Cannot hash more than 2^53 - 1 bits\");\n    }\n\n    while (byteLength > 0) {\n      this.buffer[this.bufferLength++] = data[position++];\n      byteLength--;\n\n      if (this.bufferLength === BLOCK_SIZE) {\n        this.hashBuffer();\n        this.bufferLength = 0;\n      }\n    }\n  }\n\n  digest(): Uint8Array {\n    if (!this.finished) {\n      const bitsHashed = this.bytesHashed * 8;\n      const bufferView = new DataView(\n        this.buffer.buffer,\n        this.buffer.byteOffset,\n        this.buffer.byteLength\n      );\n\n      const undecoratedLength = this.bufferLength;\n      bufferView.setUint8(this.bufferLength++, 0x80);\n\n      // Ensure the final block has enough room for the hashed length\n      if (undecoratedLength % BLOCK_SIZE >= BLOCK_SIZE - 8) {\n        for (let i = this.bufferLength; i < BLOCK_SIZE; i++) {\n          bufferView.setUint8(i, 0);\n        }\n        this.hashBuffer();\n        this.bufferLength = 0;\n      }\n\n      for (let i = this.bufferLength; i < BLOCK_SIZE - 8; i++) {\n        bufferView.setUint8(i, 0);\n      }\n      bufferView.setUint32(\n        BLOCK_SIZE - 8,\n        Math.floor(bitsHashed / 0x100000000),\n        true\n      );\n      bufferView.setUint32(BLOCK_SIZE - 4, bitsHashed);\n\n      this.hashBuffer();\n\n      this.finished = true;\n    }\n\n    // The value in state is little-endian rather than big-endian, so flip\n    // each word into a new Uint8Array\n    const out = new Uint8Array(DIGEST_LENGTH);\n    for (let i = 0; i < 8; i++) {\n      out[i * 4] = (this.state[i] >>> 24) & 0xff;\n      out[i * 4 + 1] = (this.state[i] >>> 16) & 0xff;\n      out[i * 4 + 2] = (this.state[i] >>> 8) & 0xff;\n      out[i * 4 + 3] = (this.state[i] >>> 0) & 0xff;\n    }\n\n    return out;\n  }\n\n  private hashBuffer(): void {\n    const { buffer, state } = this;\n\n    let state0 = state[0],\n      state1 = state[1],\n      state2 = state[2],\n      state3 = state[3],\n      state4 = state[4],\n      state5 = state[5],\n      state6 = state[6],\n      state7 = state[7];\n\n    for (let i = 0; i < BLOCK_SIZE; i++) {\n      if (i < 16) {\n        this.temp[i] =\n          ((buffer[i * 4] & 0xff) << 24) |\n          ((buffer[i * 4 + 1] & 0xff) << 16) |\n          ((buffer[i * 4 + 2] & 0xff) << 8) |\n          (buffer[i * 4 + 3] & 0xff);\n      } else {\n        let u = this.temp[i - 2];\n        const t1 =\n          ((u >>> 17) | (u << 15)) ^ ((u >>> 19) | (u << 13)) ^ (u >>> 10);\n\n        u = this.temp[i - 15];\n        const t2 =\n          ((u >>> 7) | (u << 25)) ^ ((u >>> 18) | (u << 14)) ^ (u >>> 3);\n\n        this.temp[i] =\n          ((t1 + this.temp[i - 7]) | 0) + ((t2 + this.temp[i - 16]) | 0);\n      }\n\n      const t1 =\n        ((((((state4 >>> 6) | (state4 << 26)) ^\n          ((state4 >>> 11) | (state4 << 21)) ^\n          ((state4 >>> 25) | (state4 << 7))) +\n          ((state4 & state5) ^ (~state4 & state6))) |\n          0) +\n          ((state7 + ((KEY[i] + this.temp[i]) | 0)) | 0)) |\n        0;\n\n      const t2 =\n        ((((state0 >>> 2) | (state0 << 30)) ^\n          ((state0 >>> 13) | (state0 << 19)) ^\n          ((state0 >>> 22) | (state0 << 10))) +\n          ((state0 & state1) ^ (state0 & state2) ^ (state1 & state2))) |\n        0;\n\n      state7 = state6;\n      state6 = state5;\n      state5 = state4;\n      state4 = (state3 + t1) | 0;\n      state3 = state2;\n      state2 = state1;\n      state1 = state0;\n      state0 = (t1 + t2) | 0;\n    }\n\n    state[0] += state0;\n    state[1] += state1;\n    state[2] += state2;\n    state[3] += state3;\n    state[4] += state4;\n    state[5] += state5;\n    state[6] += state6;\n    state[7] += state7;\n  }\n}\n","/**\n * @internal\n */\nexport const BLOCK_SIZE: number = 64;\n\n/**\n * @internal\n */\nexport const DIGEST_LENGTH: number = 32;\n\n/**\n * @internal\n */\nexport const KEY = new Uint32Array([\n  0x428a2f98,\n  0x71374491,\n  0xb5c0fbcf,\n  0xe9b5dba5,\n  0x3956c25b,\n  0x59f111f1,\n  0x923f82a4,\n  0xab1c5ed5,\n  0xd807aa98,\n  0x12835b01,\n  0x243185be,\n  0x550c7dc3,\n  0x72be5d74,\n  0x80deb1fe,\n  0x9bdc06a7,\n  0xc19bf174,\n  0xe49b69c1,\n  0xefbe4786,\n  0x0fc19dc6,\n  0x240ca1cc,\n  0x2de92c6f,\n  0x4a7484aa,\n  0x5cb0a9dc,\n  0x76f988da,\n  0x983e5152,\n  0xa831c66d,\n  0xb00327c8,\n  0xbf597fc7,\n  0xc6e00bf3,\n  0xd5a79147,\n  0x06ca6351,\n  0x14292967,\n  0x27b70a85,\n  0x2e1b2138,\n  0x4d2c6dfc,\n  0x53380d13,\n  0x650a7354,\n  0x766a0abb,\n  0x81c2c92e,\n  0x92722c85,\n  0xa2bfe8a1,\n  0xa81a664b,\n  0xc24b8b70,\n  0xc76c51a3,\n  0xd192e819,\n  0xd6990624,\n  0xf40e3585,\n  0x106aa070,\n  0x19a4c116,\n  0x1e376c08,\n  0x2748774c,\n  0x34b0bcb5,\n  0x391c0cb3,\n  0x4ed8aa4a,\n  0x5b9cca4f,\n  0x682e6ff3,\n  0x748f82ee,\n  0x78a5636f,\n  0x84c87814,\n  0x8cc70208,\n  0x90befffa,\n  0xa4506ceb,\n  0xbef9a3f7,\n  0xc67178f2\n]);\n\n/**\n * @internal\n */\nexport const INIT = [\n  0x6a09e667,\n  0xbb67ae85,\n  0x3c6ef372,\n  0xa54ff53a,\n  0x510e527f,\n  0x9b05688c,\n  0x1f83d9ab,\n  0x5be0cd19\n];\n\n/**\n * @internal\n */\nexport const MAX_HASHABLE_LENGTH = 2 ** 53 - 1;\n","export * from \"./jsSha256\";\n","import { BLOCK_SIZE } from \"./constants\";\nimport { RawSha256 } from \"./RawSha256\";\nimport { Hash, SourceData } from \"@aws-sdk/types\";\nimport { isEmptyData, convertToBuffer } from \"@aws-crypto/util\";\n\nexport class Sha256 implements Hash {\n  private readonly hash = new RawSha256();\n  private readonly outer?: RawSha256;\n  private error: any;\n\n  constructor(secret?: SourceData) {\n    if (secret) {\n      this.outer = new RawSha256();\n      const inner = bufferFromSecret(secret);\n      const outer = new Uint8Array(BLOCK_SIZE);\n      outer.set(inner);\n\n      for (let i = 0; i < BLOCK_SIZE; i++) {\n        inner[i] ^= 0x36;\n        outer[i] ^= 0x5c;\n      }\n\n      this.hash.update(inner);\n      this.outer.update(outer);\n\n      // overwrite the copied key in memory\n      for (let i = 0; i < inner.byteLength; i++) {\n        inner[i] = 0;\n      }\n    }\n  }\n\n  update(toHash: SourceData): void {\n    if (isEmptyData(toHash) || this.error) {\n      return;\n    }\n\n    try {\n      this.hash.update(convertToBuffer(toHash));\n    } catch (e) {\n      this.error = e;\n    }\n  }\n\n  /* This synchronous method keeps compatibility\n   * with the v2 aws-sdk.\n   */\n  digestSync(): Uint8Array {\n    if (this.error) {\n      throw this.error;\n    }\n\n    if (this.outer) {\n      if (!this.outer.finished) {\n        this.outer.update(this.hash.digest());\n      }\n\n      return this.outer.digest();\n    }\n\n    return this.hash.digest();\n  }\n\n  /* The underlying digest method here is synchronous.\n   * To keep the same interface with the other hash functions\n   * the default is to expose this as an async method.\n   * However, it can sometimes be useful to have a sync method.\n   */\n  async digest(): Promise<Uint8Array> {\n    return this.digestSync();\n  }\n}\n\nfunction bufferFromSecret(secret: SourceData): Uint8Array {\n  let input = convertToBuffer(secret);\n\n  if (input.byteLength > BLOCK_SIZE) {\n    const bufferHash = new RawSha256();\n    bufferHash.update(input);\n    input = bufferHash.digest();\n  }\n\n  const buffer = new Uint8Array(BLOCK_SIZE);\n  buffer.set(input);\n  return buffer;\n}\n","import {\n  BLOCK_SIZE,\n  DIGEST_LENGTH,\n  INIT,\n  KEY,\n  MAX_HASHABLE_LENGTH\n} from \"./constants\";\n\n/**\n * @internal\n */\nexport class RawSha256 {\n  private state: Int32Array = Int32Array.from(INIT);\n  private temp: Int32Array = new Int32Array(64);\n  private buffer: Uint8Array = new Uint8Array(64);\n  private bufferLength: number = 0;\n  private bytesHashed: number = 0;\n\n  /**\n   * @internal\n   */\n  finished: boolean = false;\n\n  update(data: Uint8Array): void {\n    if (this.finished) {\n      throw new Error(\"Attempted to update an already finished hash.\");\n    }\n\n    let position = 0;\n    let { byteLength } = data;\n    this.bytesHashed += byteLength;\n\n    if (this.bytesHashed * 8 > MAX_HASHABLE_LENGTH) {\n      throw new Error(\"Cannot hash more than 2^53 - 1 bits\");\n    }\n\n    while (byteLength > 0) {\n      this.buffer[this.bufferLength++] = data[position++];\n      byteLength--;\n\n      if (this.bufferLength === BLOCK_SIZE) {\n        this.hashBuffer();\n        this.bufferLength = 0;\n      }\n    }\n  }\n\n  digest(): Uint8Array {\n    if (!this.finished) {\n      const bitsHashed = this.bytesHashed * 8;\n      const bufferView = new DataView(\n        this.buffer.buffer,\n        this.buffer.byteOffset,\n        this.buffer.byteLength\n      );\n\n      const undecoratedLength = this.bufferLength;\n      bufferView.setUint8(this.bufferLength++, 0x80);\n\n      // Ensure the final block has enough room for the hashed length\n      if (undecoratedLength % BLOCK_SIZE >= BLOCK_SIZE - 8) {\n        for (let i = this.bufferLength; i < BLOCK_SIZE; i++) {\n          bufferView.setUint8(i, 0);\n        }\n        this.hashBuffer();\n        this.bufferLength = 0;\n      }\n\n      for (let i = this.bufferLength; i < BLOCK_SIZE - 8; i++) {\n        bufferView.setUint8(i, 0);\n      }\n      bufferView.setUint32(\n        BLOCK_SIZE - 8,\n        Math.floor(bitsHashed / 0x100000000),\n        true\n      );\n      bufferView.setUint32(BLOCK_SIZE - 4, bitsHashed);\n\n      this.hashBuffer();\n\n      this.finished = true;\n    }\n\n    // The value in state is little-endian rather than big-endian, so flip\n    // each word into a new Uint8Array\n    const out = new Uint8Array(DIGEST_LENGTH);\n    for (let i = 0; i < 8; i++) {\n      out[i * 4] = (this.state[i] >>> 24) & 0xff;\n      out[i * 4 + 1] = (this.state[i] >>> 16) & 0xff;\n      out[i * 4 + 2] = (this.state[i] >>> 8) & 0xff;\n      out[i * 4 + 3] = (this.state[i] >>> 0) & 0xff;\n    }\n\n    return out;\n  }\n\n  private hashBuffer(): void {\n    const { buffer, state } = this;\n\n    let state0 = state[0],\n      state1 = state[1],\n      state2 = state[2],\n      state3 = state[3],\n      state4 = state[4],\n      state5 = state[5],\n      state6 = state[6],\n      state7 = state[7];\n\n    for (let i = 0; i < BLOCK_SIZE; i++) {\n      if (i < 16) {\n        this.temp[i] =\n          ((buffer[i * 4] & 0xff) << 24) |\n          ((buffer[i * 4 + 1] & 0xff) << 16) |\n          ((buffer[i * 4 + 2] & 0xff) << 8) |\n          (buffer[i * 4 + 3] & 0xff);\n      } else {\n        let u = this.temp[i - 2];\n        const t1 =\n          ((u >>> 17) | (u << 15)) ^ ((u >>> 19) | (u << 13)) ^ (u >>> 10);\n\n        u = this.temp[i - 15];\n        const t2 =\n          ((u >>> 7) | (u << 25)) ^ ((u >>> 18) | (u << 14)) ^ (u >>> 3);\n\n        this.temp[i] =\n          ((t1 + this.temp[i - 7]) | 0) + ((t2 + this.temp[i - 16]) | 0);\n      }\n\n      const t1 =\n        ((((((state4 >>> 6) | (state4 << 26)) ^\n          ((state4 >>> 11) | (state4 << 21)) ^\n          ((state4 >>> 25) | (state4 << 7))) +\n          ((state4 & state5) ^ (~state4 & state6))) |\n          0) +\n          ((state7 + ((KEY[i] + this.temp[i]) | 0)) | 0)) |\n        0;\n\n      const t2 =\n        ((((state0 >>> 2) | (state0 << 30)) ^\n          ((state0 >>> 13) | (state0 << 19)) ^\n          ((state0 >>> 22) | (state0 << 10))) +\n          ((state0 & state1) ^ (state0 & state2) ^ (state1 & state2))) |\n        0;\n\n      state7 = state6;\n      state6 = state5;\n      state5 = state4;\n      state4 = (state3 + t1) | 0;\n      state3 = state2;\n      state2 = state1;\n      state1 = state0;\n      state0 = (t1 + t2) | 0;\n    }\n\n    state[0] += state0;\n    state[1] += state1;\n    state[2] += state2;\n    state[3] += state3;\n    state[4] += state4;\n    state[5] += state5;\n    state[6] += state6;\n    state[7] += state7;\n  }\n}\n","/**\n * @internal\n */\nexport const BLOCK_SIZE: number = 64;\n\n/**\n * @internal\n */\nexport const DIGEST_LENGTH: number = 32;\n\n/**\n * @internal\n */\nexport const KEY = new Uint32Array([\n  0x428a2f98,\n  0x71374491,\n  0xb5c0fbcf,\n  0xe9b5dba5,\n  0x3956c25b,\n  0x59f111f1,\n  0x923f82a4,\n  0xab1c5ed5,\n  0xd807aa98,\n  0x12835b01,\n  0x243185be,\n  0x550c7dc3,\n  0x72be5d74,\n  0x80deb1fe,\n  0x9bdc06a7,\n  0xc19bf174,\n  0xe49b69c1,\n  0xefbe4786,\n  0x0fc19dc6,\n  0x240ca1cc,\n  0x2de92c6f,\n  0x4a7484aa,\n  0x5cb0a9dc,\n  0x76f988da,\n  0x983e5152,\n  0xa831c66d,\n  0xb00327c8,\n  0xbf597fc7,\n  0xc6e00bf3,\n  0xd5a79147,\n  0x06ca6351,\n  0x14292967,\n  0x27b70a85,\n  0x2e1b2138,\n  0x4d2c6dfc,\n  0x53380d13,\n  0x650a7354,\n  0x766a0abb,\n  0x81c2c92e,\n  0x92722c85,\n  0xa2bfe8a1,\n  0xa81a664b,\n  0xc24b8b70,\n  0xc76c51a3,\n  0xd192e819,\n  0xd6990624,\n  0xf40e3585,\n  0x106aa070,\n  0x19a4c116,\n  0x1e376c08,\n  0x2748774c,\n  0x34b0bcb5,\n  0x391c0cb3,\n  0x4ed8aa4a,\n  0x5b9cca4f,\n  0x682e6ff3,\n  0x748f82ee,\n  0x78a5636f,\n  0x84c87814,\n  0x8cc70208,\n  0x90befffa,\n  0xa4506ceb,\n  0xbef9a3f7,\n  0xc67178f2\n]);\n\n/**\n * @internal\n */\nexport const INIT = [\n  0x6a09e667,\n  0xbb67ae85,\n  0x3c6ef372,\n  0xa54ff53a,\n  0x510e527f,\n  0x9b05688c,\n  0x1f83d9ab,\n  0x5be0cd19\n];\n\n/**\n * @internal\n */\nexport const MAX_HASHABLE_LENGTH = 2 ** 53 - 1;\n","export * from \"./jsSha256\";\n","import { BLOCK_SIZE } from \"./constants\";\nimport { RawSha256 } from \"./RawSha256\";\nimport { Hash, SourceData } from \"@aws-sdk/types\";\nimport { fromUtf8 } from \"@aws-sdk/util-utf8-browser\";\n\nexport class Sha256 implements Hash {\n  private readonly hash = new RawSha256();\n  private readonly outer?: RawSha256;\n  private error: any;\n\n  constructor(secret?: SourceData) {\n    if (secret) {\n      this.outer = new RawSha256();\n      const inner = bufferFromSecret(secret);\n      const outer = new Uint8Array(BLOCK_SIZE);\n      outer.set(inner);\n\n      for (let i = 0; i < BLOCK_SIZE; i++) {\n        inner[i] ^= 0x36;\n        outer[i] ^= 0x5c;\n      }\n\n      this.hash.update(inner);\n      this.outer.update(outer);\n\n      // overwrite the copied key in memory\n      for (let i = 0; i < inner.byteLength; i++) {\n        inner[i] = 0;\n      }\n    }\n  }\n\n  update(toHash: SourceData): void {\n    if (isEmptyData(toHash) || this.error) {\n      return;\n    }\n\n    try {\n      this.hash.update(convertToBuffer(toHash));\n    } catch (e) {\n      this.error = e;\n    }\n  }\n\n  /* This synchronous method keeps compatibility\n   * with the v2 aws-sdk.\n   */\n  digestSync(): Uint8Array {\n    if (this.error) {\n      throw this.error;\n    }\n\n    if (this.outer) {\n      if (!this.outer.finished) {\n        this.outer.update(this.hash.digest());\n      }\n\n      return this.outer.digest();\n    }\n\n    return this.hash.digest();\n  }\n\n  /* The underlying digest method here is synchronous.\n   * To keep the same interface with the other hash functions\n   * the default is to expose this as an async method.\n   * However, it can sometimes be useful to have a sync method.\n   */\n  async digest(): Promise<Uint8Array> {\n    return this.digestSync();\n  }\n}\n\nfunction bufferFromSecret(secret: SourceData): Uint8Array {\n  let input = convertToBuffer(secret);\n\n  if (input.byteLength > BLOCK_SIZE) {\n    const bufferHash = new RawSha256();\n    bufferHash.update(input);\n    input = bufferHash.digest();\n  }\n\n  const buffer = new Uint8Array(BLOCK_SIZE);\n  buffer.set(input);\n  return buffer;\n}\n\nfunction isEmptyData(data: SourceData): boolean {\n  if (typeof data === \"string\") {\n    return data.length === 0;\n  }\n\n  return data.byteLength === 0;\n}\n\nfunction convertToBuffer(data: SourceData): Uint8Array {\n  if (typeof data === \"string\") {\n    return fromUtf8(data);\n  }\n\n  if (ArrayBuffer.isView(data)) {\n    return new Uint8Array(\n      data.buffer,\n      data.byteOffset,\n      data.byteLength / Uint8Array.BYTES_PER_ELEMENT\n    );\n  }\n\n  return new Uint8Array(data);\n}\n","import { fromUtf8 as jsFromUtf8, toUtf8 as jsToUtf8 } from \"./pureJs\";\nimport { fromUtf8 as textEncoderFromUtf8, toUtf8 as textEncoderToUtf8 } from \"./whatwgEncodingApi\";\n\ndeclare const TextDecoder: Function | undefined;\ndeclare const TextEncoder: Function | undefined;\n\nexport const fromUtf8 = (input: string): Uint8Array =>\n  typeof TextEncoder === \"function\" ? textEncoderFromUtf8(input) : jsFromUtf8(input);\n\nexport const toUtf8 = (input: Uint8Array): string =>\n  typeof TextDecoder === \"function\" ? textEncoderToUtf8(input) : jsToUtf8(input);\n","/**\n * A declaration of the global TextEncoder and TextDecoder constructors.\n *\n * @see https://encoding.spec.whatwg.org/\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nnamespace Encoding {\n  interface TextDecoderOptions {\n    fatal?: boolean;\n    ignoreBOM?: boolean;\n  }\n\n  interface TextDecodeOptions {\n    stream?: boolean;\n  }\n\n  interface TextDecoder {\n    readonly encoding: string;\n    readonly fatal: boolean;\n    readonly ignoreBOM: boolean;\n    decode(input?: ArrayBuffer | ArrayBufferView, options?: TextDecodeOptions): string;\n  }\n\n  export interface TextDecoderConstructor {\n    new (label?: string, options?: TextDecoderOptions): TextDecoder;\n  }\n\n  interface TextEncoder {\n    readonly encoding: \"utf-8\";\n    encode(input?: string): Uint8Array;\n  }\n\n  export interface TextEncoderConstructor {\n    new (): TextEncoder;\n  }\n}\n\ndeclare const TextDecoder: Encoding.TextDecoderConstructor;\n\ndeclare const TextEncoder: Encoding.TextEncoderConstructor;\n\nexport function fromUtf8(input: string): Uint8Array {\n  return new TextEncoder().encode(input);\n}\n\nexport function toUtf8(input: Uint8Array): string {\n  return new TextDecoder(\"utf-8\").decode(input);\n}\n","/**\n * Converts a JS string from its native UCS-2/UTF-16 representation into a\n * Uint8Array of the bytes used to represent the equivalent characters in UTF-8.\n *\n * Cribbed from the `goog.crypt.stringToUtf8ByteArray` function in the Google\n * Closure library, though updated to use typed arrays.\n */\nexport const fromUtf8 = (input: string): Uint8Array => {\n  const bytes: Array<number> = [];\n  for (let i = 0, len = input.length; i < len; i++) {\n    const value = input.charCodeAt(i);\n    if (value < 0x80) {\n      bytes.push(value);\n    } else if (value < 0x800) {\n      bytes.push((value >> 6) | 0b11000000, (value & 0b111111) | 0b10000000);\n    } else if (i + 1 < input.length && (value & 0xfc00) === 0xd800 && (input.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {\n      const surrogatePair = 0x10000 + ((value & 0b1111111111) << 10) + (input.charCodeAt(++i) & 0b1111111111);\n      bytes.push(\n        (surrogatePair >> 18) | 0b11110000,\n        ((surrogatePair >> 12) & 0b111111) | 0b10000000,\n        ((surrogatePair >> 6) & 0b111111) | 0b10000000,\n        (surrogatePair & 0b111111) | 0b10000000\n      );\n    } else {\n      bytes.push((value >> 12) | 0b11100000, ((value >> 6) & 0b111111) | 0b10000000, (value & 0b111111) | 0b10000000);\n    }\n  }\n\n  return Uint8Array.from(bytes);\n};\n\n/**\n * Converts a typed array of bytes containing UTF-8 data into a native JS\n * string.\n *\n * Partly cribbed from the `goog.crypt.utf8ByteArrayToString` function in the\n * Google Closure library, though updated to use typed arrays and to better\n * handle astral plane code points.\n */\nexport const toUtf8 = (input: Uint8Array): string => {\n  let decoded = \"\";\n  for (let i = 0, len = input.length; i < len; i++) {\n    const byte = input[i];\n    if (byte < 0x80) {\n      decoded += String.fromCharCode(byte);\n    } else if (0b11000000 <= byte && byte < 0b11100000) {\n      const nextByte = input[++i];\n      decoded += String.fromCharCode(((byte & 0b11111) << 6) | (nextByte & 0b111111));\n    } else if (0b11110000 <= byte && byte < 0b101101101) {\n      const surrogatePair = [byte, input[++i], input[++i], input[++i]];\n      const encoded = \"%\" + surrogatePair.map((byteValue) => byteValue.toString(16)).join(\"%\");\n      decoded += decodeURIComponent(encoded);\n    } else {\n      decoded += String.fromCharCode(\n        ((byte & 0b1111) << 12) | ((input[++i] & 0b111111) << 6) | (input[++i] & 0b111111)\n      );\n    }\n  }\n\n  return decoded;\n};\n","export * from \"./supportsWebCrypto\";\n","type SubtleCryptoMethod =\n  | \"decrypt\"\n  | \"digest\"\n  | \"encrypt\"\n  | \"exportKey\"\n  | \"generateKey\"\n  | \"importKey\"\n  | \"sign\"\n  | \"verify\";\n\nconst subtleCryptoMethods: Array<SubtleCryptoMethod> = [\n  \"decrypt\",\n  \"digest\",\n  \"encrypt\",\n  \"exportKey\",\n  \"generateKey\",\n  \"importKey\",\n  \"sign\",\n  \"verify\"\n];\n\nexport function supportsWebCrypto(window: Window): boolean {\n  if (\n    supportsSecureRandom(window) &&\n    typeof window.crypto.subtle === \"object\"\n  ) {\n    const { subtle } = window.crypto;\n\n    return supportsSubtleCrypto(subtle);\n  }\n\n  return false;\n}\n\nexport function supportsSecureRandom(window: Window): boolean {\n  if (typeof window === \"object\" && typeof window.crypto === \"object\") {\n    const { getRandomValues } = window.crypto;\n\n    return typeof getRandomValues === \"function\";\n  }\n\n  return false;\n}\n\nexport function supportsSubtleCrypto(subtle: SubtleCrypto) {\n  return (\n    subtle &&\n    subtleCryptoMethods.every(\n      methodName => typeof subtle[methodName] === \"function\"\n    )\n  );\n}\n\nexport async function supportsZeroByteGCM(subtle: SubtleCrypto) {\n  if (!supportsSubtleCrypto(subtle)) return false;\n  try {\n    const key = await subtle.generateKey(\n      { name: \"AES-GCM\", length: 128 },\n      false,\n      [\"encrypt\"]\n    );\n    const zeroByteAuthTag = await subtle.encrypt(\n      {\n        name: \"AES-GCM\",\n        iv: new Uint8Array(Array(12)),\n        additionalData: new Uint8Array(Array(16)),\n        tagLength: 128\n      },\n      key,\n      new Uint8Array(0)\n    );\n    return zeroByteAuthTag.byteLength === 16;\n  } catch {\n    return false;\n  }\n}\n","// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { SourceData } from \"@aws-sdk/types\";\nimport { fromUtf8 as fromUtf8Browser } from \"@aws-sdk/util-utf8-browser\";\n\n// Quick polyfill\nconst fromUtf8 =\n  typeof Buffer !== \"undefined\" && Buffer.from\n    ? (input: string) => Buffer.from(input, \"utf8\")\n    : fromUtf8Browser;\n\nexport function convertToBuffer(data: SourceData): Uint8Array {\n  // Already a Uint8, do nothing\n  if (data instanceof Uint8Array) return data;\n\n  if (typeof data === \"string\") {\n    return fromUtf8(data);\n  }\n\n  if (ArrayBuffer.isView(data)) {\n    return new Uint8Array(\n      data.buffer,\n      data.byteOffset,\n      data.byteLength / Uint8Array.BYTES_PER_ELEMENT\n    );\n  }\n\n  return new Uint8Array(data);\n}\n","// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nexport { convertToBuffer } from \"./convertToBuffer\";\nexport { isEmptyData } from \"./isEmptyData\";\nexport { numToUint8 } from \"./numToUint8\";\nexport {uint32ArrayFrom} from './uint32ArrayFrom';\n","// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { SourceData } from \"@aws-sdk/types\";\n\nexport function isEmptyData(data: SourceData): boolean {\n  if (typeof data === \"string\") {\n    return data.length === 0;\n  }\n\n  return data.byteLength === 0;\n}\n","// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nexport function numToUint8(num: number) {\n  return new Uint8Array([\n    (num & 0xff000000) >> 24,\n    (num & 0x00ff0000) >> 16,\n    (num & 0x0000ff00) >> 8,\n    num & 0x000000ff,\n  ]);\n}\n","// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\n// IE 11 does not support Array.from, so we do it manually\nexport function uint32ArrayFrom(a_lookUpTable: Array<number>): Uint32Array {\n  if (!Array.from) {\n    const return_array = new Uint32Array(a_lookUpTable.length)\n    let a_index = 0\n    while (a_index < a_lookUpTable.length) {\n      return_array[a_index] = a_lookUpTable[a_index]\n    }\n    return return_array\n  }\n  return Uint32Array.from(a_lookUpTable)\n}\n","var v1 = require('./v1');\nvar v4 = require('./v4');\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]]\n  ]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/uuidjs/uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","var fallbackWindow = {};\nexport function locateWindow() {\n    if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else if (typeof self !== \"undefined\") {\n        return self;\n    }\n    return fallbackWindow;\n}\n","import { fromUtf8 as jsFromUtf8, toUtf8 as jsToUtf8 } from \"./pureJs\";\nimport { fromUtf8 as textEncoderFromUtf8, toUtf8 as textEncoderToUtf8 } from \"./whatwgEncodingApi\";\n\ndeclare const TextDecoder: Function | undefined;\ndeclare const TextEncoder: Function | undefined;\n\nexport const fromUtf8 = (input: string): Uint8Array =>\n  typeof TextEncoder === \"function\" ? textEncoderFromUtf8(input) : jsFromUtf8(input);\n\nexport const toUtf8 = (input: Uint8Array): string =>\n  typeof TextDecoder === \"function\" ? textEncoderToUtf8(input) : jsToUtf8(input);\n","/**\n * A declaration of the global TextEncoder and TextDecoder constructors.\n *\n * @see https://encoding.spec.whatwg.org/\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nnamespace Encoding {\n  interface TextDecoderOptions {\n    fatal?: boolean;\n    ignoreBOM?: boolean;\n  }\n\n  interface TextDecodeOptions {\n    stream?: boolean;\n  }\n\n  interface TextDecoder {\n    readonly encoding: string;\n    readonly fatal: boolean;\n    readonly ignoreBOM: boolean;\n    decode(input?: ArrayBuffer | ArrayBufferView, options?: TextDecodeOptions): string;\n  }\n\n  export interface TextDecoderConstructor {\n    new (label?: string, options?: TextDecoderOptions): TextDecoder;\n  }\n\n  interface TextEncoder {\n    readonly encoding: \"utf-8\";\n    encode(input?: string): Uint8Array;\n  }\n\n  export interface TextEncoderConstructor {\n    new (): TextEncoder;\n  }\n}\n\ndeclare const TextDecoder: Encoding.TextDecoderConstructor;\n\ndeclare const TextEncoder: Encoding.TextEncoderConstructor;\n\nexport function fromUtf8(input: string): Uint8Array {\n  return new TextEncoder().encode(input);\n}\n\nexport function toUtf8(input: Uint8Array): string {\n  return new TextDecoder(\"utf-8\").decode(input);\n}\n","/**\n * Converts a JS string from its native UCS-2/UTF-16 representation into a\n * Uint8Array of the bytes used to represent the equivalent characters in UTF-8.\n *\n * Cribbed from the `goog.crypt.stringToUtf8ByteArray` function in the Google\n * Closure library, though updated to use typed arrays.\n */\nexport const fromUtf8 = (input: string): Uint8Array => {\n  const bytes: Array<number> = [];\n  for (let i = 0, len = input.length; i < len; i++) {\n    const value = input.charCodeAt(i);\n    if (value < 0x80) {\n      bytes.push(value);\n    } else if (value < 0x800) {\n      bytes.push((value >> 6) | 0b11000000, (value & 0b111111) | 0b10000000);\n    } else if (i + 1 < input.length && (value & 0xfc00) === 0xd800 && (input.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {\n      const surrogatePair = 0x10000 + ((value & 0b1111111111) << 10) + (input.charCodeAt(++i) & 0b1111111111);\n      bytes.push(\n        (surrogatePair >> 18) | 0b11110000,\n        ((surrogatePair >> 12) & 0b111111) | 0b10000000,\n        ((surrogatePair >> 6) & 0b111111) | 0b10000000,\n        (surrogatePair & 0b111111) | 0b10000000\n      );\n    } else {\n      bytes.push((value >> 12) | 0b11100000, ((value >> 6) & 0b111111) | 0b10000000, (value & 0b111111) | 0b10000000);\n    }\n  }\n\n  return Uint8Array.from(bytes);\n};\n\n/**\n * Converts a typed array of bytes containing UTF-8 data into a native JS\n * string.\n *\n * Partly cribbed from the `goog.crypt.utf8ByteArrayToString` function in the\n * Google Closure library, though updated to use typed arrays and to better\n * handle astral plane code points.\n */\nexport const toUtf8 = (input: Uint8Array): string => {\n  let decoded = \"\";\n  for (let i = 0, len = input.length; i < len; i++) {\n    const byte = input[i];\n    if (byte < 0x80) {\n      decoded += String.fromCharCode(byte);\n    } else if (0b11000000 <= byte && byte < 0b11100000) {\n      const nextByte = input[++i];\n      decoded += String.fromCharCode(((byte & 0b11111) << 6) | (nextByte & 0b111111));\n    } else if (0b11110000 <= byte && byte < 0b101101101) {\n      const surrogatePair = [byte, input[++i], input[++i], input[++i]];\n      const encoded = \"%\" + surrogatePair.map((byteValue) => byteValue.toString(16)).join(\"%\");\n      decoded += decodeURIComponent(encoded);\n    } else {\n      decoded += String.fromCharCode(\n        ((byte & 0b1111) << 12) | ((input[++i] & 0b111111) << 6) | (input[++i] & 0b111111)\n      );\n    }\n  }\n\n  return decoded;\n};\n","module.exports = require('./lib/axios');","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar cookies = require('./../helpers/cookies');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n    var responseType = config.responseType;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?\n        request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(\n        timeoutErrorMessage,\n        config,\n        config.transitional && config.transitional.clarifyTimeoutError ? 'ETIMEDOUT' : 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\n// Expose isAxiosError\naxios.isAxiosError = require('./helpers/isAxiosError');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\nvar validator = require('../helpers/validator');\n\nvar validators = validator.validators;\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  var transitional = config.transitional;\n\n  if (transitional !== undefined) {\n    validator.assertOptions(transitional, {\n      silentJSONParsing: validators.transitional(validators.boolean, '1.0.0'),\n      forcedJSONParsing: validators.transitional(validators.boolean, '1.0.0'),\n      clarifyTimeoutError: validators.transitional(validators.boolean, '1.0.0')\n    }, false);\n  }\n\n  // filter out skipped interceptors\n  var requestInterceptorChain = [];\n  var synchronousRequestInterceptors = true;\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n      return;\n    }\n\n    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var responseInterceptorChain = [];\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var promise;\n\n  if (!synchronousRequestInterceptors) {\n    var chain = [dispatchRequest, undefined];\n\n    Array.prototype.unshift.apply(chain, requestInterceptorChain);\n    chain = chain.concat(responseInterceptorChain);\n\n    promise = Promise.resolve(config);\n    while (chain.length) {\n      promise = promise.then(chain.shift(), chain.shift());\n    }\n\n    return promise;\n  }\n\n\n  var newConfig = config;\n  while (requestInterceptorChain.length) {\n    var onFulfilled = requestInterceptorChain.shift();\n    var onRejected = requestInterceptorChain.shift();\n    try {\n      newConfig = onFulfilled(newConfig);\n    } catch (error) {\n      onRejected(error);\n      break;\n    }\n  }\n\n  try {\n    promise = dispatchRequest(newConfig);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n\n  while (responseInterceptorChain.length) {\n    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected, options) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected,\n    synchronous: options ? options.synchronous : false,\n    runWhen: options ? options.runWhen : null\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code\n    };\n  };\n  return error;\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  var valueFromConfig2Keys = ['url', 'method', 'data'];\n  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy', 'params'];\n  var defaultToConfig2Keys = [\n    'baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer',\n    'timeout', 'timeoutMessage', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'decompress',\n    'maxContentLength', 'maxBodyLength', 'maxRedirects', 'transport', 'httpAgent',\n    'httpsAgent', 'cancelToken', 'socketPath', 'responseEncoding'\n  ];\n  var directMergeKeys = ['validateStatus'];\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(undefined, config2[prop]);\n    }\n  });\n\n  utils.forEach(mergeDeepPropertiesKeys, mergeDeepProperties);\n\n  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  });\n\n  utils.forEach(directMergeKeys, function merge(prop) {\n    if (prop in config2) {\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  });\n\n  var axiosKeys = valueFromConfig2Keys\n    .concat(mergeDeepPropertiesKeys)\n    .concat(defaultToConfig2Keys)\n    .concat(directMergeKeys);\n\n  var otherKeys = Object\n    .keys(config1)\n    .concat(Object.keys(config2))\n    .filter(function filterAxiosKeys(key) {\n      return axiosKeys.indexOf(key) === -1;\n    });\n\n  utils.forEach(otherKeys, mergeDeepProperties);\n\n  return config;\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar defaults = require('./../defaults');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  var context = this || defaults;\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(context, data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\nvar enhanceError = require('./core/enhanceError');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nvar defaults = {\n\n  transitional: {\n    silentJSONParsing: true,\n    forcedJSONParsing: true,\n    clarifyTimeoutError: false\n  },\n\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data) || (headers && headers['Content-Type'] === 'application/json')) {\n      setContentTypeIfUnset(headers, 'application/json');\n      return stringifySafely(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    var transitional = this.transitional;\n    var silentJSONParsing = transitional && transitional.silentJSONParsing;\n    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';\n\n    if (strictJSONParsing || (forcedJSONParsing && utils.isString(data) && data.length)) {\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw enhanceError(e, this, 'E_JSON_PARSE');\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nmodule.exports = function isAxiosError(payload) {\n  return (typeof payload === 'object') && (payload.isAxiosError === true);\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","'use strict';\n\nvar pkg = require('./../../package.json');\n\nvar validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nvar deprecatedWarnings = {};\nvar currentVerArr = pkg.version.split('.');\n\n/**\n * Compare package versions\n * @param {string} version\n * @param {string?} thanVersion\n * @returns {boolean}\n */\nfunction isOlderVersion(version, thanVersion) {\n  var pkgVersionArr = thanVersion ? thanVersion.split('.') : currentVerArr;\n  var destVer = version.split('.');\n  for (var i = 0; i < 3; i++) {\n    if (pkgVersionArr[i] > destVer[i]) {\n      return true;\n    } else if (pkgVersionArr[i] < destVer[i]) {\n      return false;\n    }\n  }\n  return false;\n}\n\n/**\n * Transitional option validator\n * @param {function|boolean?} validator\n * @param {string?} version\n * @param {string} message\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  var isDeprecated = version && isOlderVersion(version);\n\n  function formatMessage(opt, desc) {\n    return '[Axios v' + pkg.version + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return function(value, opt, opts) {\n    if (validator === false) {\n      throw new Error(formatMessage(opt, ' has been removed in ' + version));\n    }\n\n    if (isDeprecated && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new TypeError('options must be an object');\n  }\n  var keys = Object.keys(options);\n  var i = keys.length;\n  while (i-- > 0) {\n    var opt = keys[i];\n    var validator = schema[opt];\n    if (validator) {\n      var value = options[opt];\n      var result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new TypeError('option ' + opt + ' must be ' + result);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw Error('Unknown option ' + opt);\n    }\n  }\n}\n\nmodule.exports = {\n  isOlderVersion: isOlderVersion,\n  assertOptions: assertOptions,\n  validators: validators\n};\n","'use strict';\n\nvar bind = require('./helpers/bind');\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (toString.call(val) !== '[object Object]') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.trim ? str.trim() : str.replace(/^\\s+|\\s+$/g, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM\n};\n","/*\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n(function(){\n  \"use strict\";\n\n  var chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\n  // Use a lookup table to find the index.\n  var lookup = new Uint8Array(256);\n  for (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n  }\n\n  exports.encode = function(arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer),\n    i, len = bytes.length, base64 = \"\";\n\n    for (i = 0; i < len; i+=3) {\n      base64 += chars[bytes[i] >> 2];\n      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n      base64 += chars[bytes[i + 2] & 63];\n    }\n\n    if ((len % 3) === 2) {\n      base64 = base64.substring(0, base64.length - 1) + \"=\";\n    } else if (len % 3 === 1) {\n      base64 = base64.substring(0, base64.length - 2) + \"==\";\n    }\n\n    return base64;\n  };\n\n  exports.decode =  function(base64) {\n    var bufferLength = base64.length * 0.75,\n    len = base64.length, i, p = 0,\n    encoded1, encoded2, encoded3, encoded4;\n\n    if (base64[base64.length - 1] === \"=\") {\n      bufferLength--;\n      if (base64[base64.length - 2] === \"=\") {\n        bufferLength--;\n      }\n    }\n\n    var arraybuffer = new ArrayBuffer(bufferLength),\n    bytes = new Uint8Array(arraybuffer);\n\n    for (i = 0; i < len; i+=4) {\n      encoded1 = lookup[base64.charCodeAt(i)];\n      encoded2 = lookup[base64.charCodeAt(i+1)];\n      encoded3 = lookup[base64.charCodeAt(i+2)];\n      encoded4 = lookup[base64.charCodeAt(i+3)];\n\n      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n\n    return arraybuffer;\n  };\n})();\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof exports?exports.bowser=t():e.bowser=t()}(this,(function(){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var i in e)r.d(n,i,function(t){return e[t]}.bind(null,i));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,\"a\",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p=\"\",r(r.s=90)}({17:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var n=r(18),i=function(){function e(){}return e.getFirstMatch=function(e,t){var r=t.match(e);return r&&r.length>0&&r[1]||\"\"},e.getSecondMatch=function(e,t){var r=t.match(e);return r&&r.length>1&&r[2]||\"\"},e.matchAndReturnConst=function(e,t,r){if(e.test(t))return r},e.getWindowsVersionName=function(e){switch(e){case\"NT\":return\"NT\";case\"XP\":return\"XP\";case\"NT 5.0\":return\"2000\";case\"NT 5.1\":return\"XP\";case\"NT 5.2\":return\"2003\";case\"NT 6.0\":return\"Vista\";case\"NT 6.1\":return\"7\";case\"NT 6.2\":return\"8\";case\"NT 6.3\":return\"8.1\";case\"NT 10.0\":return\"10\";default:return}},e.getMacOSVersionName=function(e){var t=e.split(\".\").splice(0,2).map((function(e){return parseInt(e,10)||0}));if(t.push(0),10===t[0])switch(t[1]){case 5:return\"Leopard\";case 6:return\"Snow Leopard\";case 7:return\"Lion\";case 8:return\"Mountain Lion\";case 9:return\"Mavericks\";case 10:return\"Yosemite\";case 11:return\"El Capitan\";case 12:return\"Sierra\";case 13:return\"High Sierra\";case 14:return\"Mojave\";case 15:return\"Catalina\";default:return}},e.getAndroidVersionName=function(e){var t=e.split(\".\").splice(0,2).map((function(e){return parseInt(e,10)||0}));if(t.push(0),!(1===t[0]&&t[1]<5))return 1===t[0]&&t[1]<6?\"Cupcake\":1===t[0]&&t[1]>=6?\"Donut\":2===t[0]&&t[1]<2?\"Eclair\":2===t[0]&&2===t[1]?\"Froyo\":2===t[0]&&t[1]>2?\"Gingerbread\":3===t[0]?\"Honeycomb\":4===t[0]&&t[1]<1?\"Ice Cream Sandwich\":4===t[0]&&t[1]<4?\"Jelly Bean\":4===t[0]&&t[1]>=4?\"KitKat\":5===t[0]?\"Lollipop\":6===t[0]?\"Marshmallow\":7===t[0]?\"Nougat\":8===t[0]?\"Oreo\":9===t[0]?\"Pie\":void 0},e.getVersionPrecision=function(e){return e.split(\".\").length},e.compareVersions=function(t,r,n){void 0===n&&(n=!1);var i=e.getVersionPrecision(t),s=e.getVersionPrecision(r),a=Math.max(i,s),o=0,u=e.map([t,r],(function(t){var r=a-e.getVersionPrecision(t),n=t+new Array(r+1).join(\".0\");return e.map(n.split(\".\"),(function(e){return new Array(20-e.length).join(\"0\")+e})).reverse()}));for(n&&(o=a-Math.min(i,s)),a-=1;a>=o;){if(u[0][a]>u[1][a])return 1;if(u[0][a]===u[1][a]){if(a===o)return 0;a-=1}else if(u[0][a]<u[1][a])return-1}},e.map=function(e,t){var r,n=[];if(Array.prototype.map)return Array.prototype.map.call(e,t);for(r=0;r<e.length;r+=1)n.push(t(e[r]));return n},e.find=function(e,t){var r,n;if(Array.prototype.find)return Array.prototype.find.call(e,t);for(r=0,n=e.length;r<n;r+=1){var i=e[r];if(t(i,r))return i}},e.assign=function(e){for(var t,r,n=e,i=arguments.length,s=new Array(i>1?i-1:0),a=1;a<i;a++)s[a-1]=arguments[a];if(Object.assign)return Object.assign.apply(Object,[e].concat(s));var o=function(){var e=s[t];\"object\"==typeof e&&null!==e&&Object.keys(e).forEach((function(t){n[t]=e[t]}))};for(t=0,r=s.length;t<r;t+=1)o();return e},e.getBrowserAlias=function(e){return n.BROWSER_ALIASES_MAP[e]},e.getBrowserTypeByAlias=function(e){return n.BROWSER_MAP[e]||\"\"},e}();t.default=i,e.exports=t.default},18:function(e,t,r){\"use strict\";t.__esModule=!0,t.ENGINE_MAP=t.OS_MAP=t.PLATFORMS_MAP=t.BROWSER_MAP=t.BROWSER_ALIASES_MAP=void 0;t.BROWSER_ALIASES_MAP={\"Amazon Silk\":\"amazon_silk\",\"Android Browser\":\"android\",Bada:\"bada\",BlackBerry:\"blackberry\",Chrome:\"chrome\",Chromium:\"chromium\",Electron:\"electron\",Epiphany:\"epiphany\",Firefox:\"firefox\",Focus:\"focus\",Generic:\"generic\",\"Google Search\":\"google_search\",Googlebot:\"googlebot\",\"Internet Explorer\":\"ie\",\"K-Meleon\":\"k_meleon\",Maxthon:\"maxthon\",\"Microsoft Edge\":\"edge\",\"MZ Browser\":\"mz\",\"NAVER Whale Browser\":\"naver\",Opera:\"opera\",\"Opera Coast\":\"opera_coast\",PhantomJS:\"phantomjs\",Puffin:\"puffin\",QupZilla:\"qupzilla\",QQ:\"qq\",QQLite:\"qqlite\",Safari:\"safari\",Sailfish:\"sailfish\",\"Samsung Internet for Android\":\"samsung_internet\",SeaMonkey:\"seamonkey\",Sleipnir:\"sleipnir\",Swing:\"swing\",Tizen:\"tizen\",\"UC Browser\":\"uc\",Vivaldi:\"vivaldi\",\"WebOS Browser\":\"webos\",WeChat:\"wechat\",\"Yandex Browser\":\"yandex\",Roku:\"roku\"};t.BROWSER_MAP={amazon_silk:\"Amazon Silk\",android:\"Android Browser\",bada:\"Bada\",blackberry:\"BlackBerry\",chrome:\"Chrome\",chromium:\"Chromium\",electron:\"Electron\",epiphany:\"Epiphany\",firefox:\"Firefox\",focus:\"Focus\",generic:\"Generic\",googlebot:\"Googlebot\",google_search:\"Google Search\",ie:\"Internet Explorer\",k_meleon:\"K-Meleon\",maxthon:\"Maxthon\",edge:\"Microsoft Edge\",mz:\"MZ Browser\",naver:\"NAVER Whale Browser\",opera:\"Opera\",opera_coast:\"Opera Coast\",phantomjs:\"PhantomJS\",puffin:\"Puffin\",qupzilla:\"QupZilla\",qq:\"QQ Browser\",qqlite:\"QQ Browser Lite\",safari:\"Safari\",sailfish:\"Sailfish\",samsung_internet:\"Samsung Internet for Android\",seamonkey:\"SeaMonkey\",sleipnir:\"Sleipnir\",swing:\"Swing\",tizen:\"Tizen\",uc:\"UC Browser\",vivaldi:\"Vivaldi\",webos:\"WebOS Browser\",wechat:\"WeChat\",yandex:\"Yandex Browser\"};t.PLATFORMS_MAP={tablet:\"tablet\",mobile:\"mobile\",desktop:\"desktop\",tv:\"tv\"};t.OS_MAP={WindowsPhone:\"Windows Phone\",Windows:\"Windows\",MacOS:\"macOS\",iOS:\"iOS\",Android:\"Android\",WebOS:\"WebOS\",BlackBerry:\"BlackBerry\",Bada:\"Bada\",Tizen:\"Tizen\",Linux:\"Linux\",ChromeOS:\"Chrome OS\",PlayStation4:\"PlayStation 4\",Roku:\"Roku\"};t.ENGINE_MAP={EdgeHTML:\"EdgeHTML\",Blink:\"Blink\",Trident:\"Trident\",Presto:\"Presto\",Gecko:\"Gecko\",WebKit:\"WebKit\"}},90:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var n,i=(n=r(91))&&n.__esModule?n:{default:n},s=r(18);function a(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var o=function(){function e(){}var t,r,n;return e.getParser=function(e,t){if(void 0===t&&(t=!1),\"string\"!=typeof e)throw new Error(\"UserAgent should be a string\");return new i.default(e,t)},e.parse=function(e){return new i.default(e).getResult()},t=e,n=[{key:\"BROWSER_MAP\",get:function(){return s.BROWSER_MAP}},{key:\"ENGINE_MAP\",get:function(){return s.ENGINE_MAP}},{key:\"OS_MAP\",get:function(){return s.OS_MAP}},{key:\"PLATFORMS_MAP\",get:function(){return s.PLATFORMS_MAP}}],(r=null)&&a(t.prototype,r),n&&a(t,n),e}();t.default=o,e.exports=t.default},91:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var n=u(r(92)),i=u(r(93)),s=u(r(94)),a=u(r(95)),o=u(r(17));function u(e){return e&&e.__esModule?e:{default:e}}var d=function(){function e(e,t){if(void 0===t&&(t=!1),null==e||\"\"===e)throw new Error(\"UserAgent parameter can't be empty\");this._ua=e,this.parsedResult={},!0!==t&&this.parse()}var t=e.prototype;return t.getUA=function(){return this._ua},t.test=function(e){return e.test(this._ua)},t.parseBrowser=function(){var e=this;this.parsedResult.browser={};var t=o.default.find(n.default,(function(t){if(\"function\"==typeof t.test)return t.test(e);if(t.test instanceof Array)return t.test.some((function(t){return e.test(t)}));throw new Error(\"Browser's test function is not valid\")}));return t&&(this.parsedResult.browser=t.describe(this.getUA())),this.parsedResult.browser},t.getBrowser=function(){return this.parsedResult.browser?this.parsedResult.browser:this.parseBrowser()},t.getBrowserName=function(e){return e?String(this.getBrowser().name).toLowerCase()||\"\":this.getBrowser().name||\"\"},t.getBrowserVersion=function(){return this.getBrowser().version},t.getOS=function(){return this.parsedResult.os?this.parsedResult.os:this.parseOS()},t.parseOS=function(){var e=this;this.parsedResult.os={};var t=o.default.find(i.default,(function(t){if(\"function\"==typeof t.test)return t.test(e);if(t.test instanceof Array)return t.test.some((function(t){return e.test(t)}));throw new Error(\"Browser's test function is not valid\")}));return t&&(this.parsedResult.os=t.describe(this.getUA())),this.parsedResult.os},t.getOSName=function(e){var t=this.getOS().name;return e?String(t).toLowerCase()||\"\":t||\"\"},t.getOSVersion=function(){return this.getOS().version},t.getPlatform=function(){return this.parsedResult.platform?this.parsedResult.platform:this.parsePlatform()},t.getPlatformType=function(e){void 0===e&&(e=!1);var t=this.getPlatform().type;return e?String(t).toLowerCase()||\"\":t||\"\"},t.parsePlatform=function(){var e=this;this.parsedResult.platform={};var t=o.default.find(s.default,(function(t){if(\"function\"==typeof t.test)return t.test(e);if(t.test instanceof Array)return t.test.some((function(t){return e.test(t)}));throw new Error(\"Browser's test function is not valid\")}));return t&&(this.parsedResult.platform=t.describe(this.getUA())),this.parsedResult.platform},t.getEngine=function(){return this.parsedResult.engine?this.parsedResult.engine:this.parseEngine()},t.getEngineName=function(e){return e?String(this.getEngine().name).toLowerCase()||\"\":this.getEngine().name||\"\"},t.parseEngine=function(){var e=this;this.parsedResult.engine={};var t=o.default.find(a.default,(function(t){if(\"function\"==typeof t.test)return t.test(e);if(t.test instanceof Array)return t.test.some((function(t){return e.test(t)}));throw new Error(\"Browser's test function is not valid\")}));return t&&(this.parsedResult.engine=t.describe(this.getUA())),this.parsedResult.engine},t.parse=function(){return this.parseBrowser(),this.parseOS(),this.parsePlatform(),this.parseEngine(),this},t.getResult=function(){return o.default.assign({},this.parsedResult)},t.satisfies=function(e){var t=this,r={},n=0,i={},s=0;if(Object.keys(e).forEach((function(t){var a=e[t];\"string\"==typeof a?(i[t]=a,s+=1):\"object\"==typeof a&&(r[t]=a,n+=1)})),n>0){var a=Object.keys(r),u=o.default.find(a,(function(e){return t.isOS(e)}));if(u){var d=this.satisfies(r[u]);if(void 0!==d)return d}var c=o.default.find(a,(function(e){return t.isPlatform(e)}));if(c){var f=this.satisfies(r[c]);if(void 0!==f)return f}}if(s>0){var l=Object.keys(i),h=o.default.find(l,(function(e){return t.isBrowser(e,!0)}));if(void 0!==h)return this.compareVersion(i[h])}},t.isBrowser=function(e,t){void 0===t&&(t=!1);var r=this.getBrowserName().toLowerCase(),n=e.toLowerCase(),i=o.default.getBrowserTypeByAlias(n);return t&&i&&(n=i.toLowerCase()),n===r},t.compareVersion=function(e){var t=[0],r=e,n=!1,i=this.getBrowserVersion();if(\"string\"==typeof i)return\">\"===e[0]||\"<\"===e[0]?(r=e.substr(1),\"=\"===e[1]?(n=!0,r=e.substr(2)):t=[],\">\"===e[0]?t.push(1):t.push(-1)):\"=\"===e[0]?r=e.substr(1):\"~\"===e[0]&&(n=!0,r=e.substr(1)),t.indexOf(o.default.compareVersions(i,r,n))>-1},t.isOS=function(e){return this.getOSName(!0)===String(e).toLowerCase()},t.isPlatform=function(e){return this.getPlatformType(!0)===String(e).toLowerCase()},t.isEngine=function(e){return this.getEngineName(!0)===String(e).toLowerCase()},t.is=function(e,t){return void 0===t&&(t=!1),this.isBrowser(e,t)||this.isOS(e)||this.isPlatform(e)},t.some=function(e){var t=this;return void 0===e&&(e=[]),e.some((function(e){return t.is(e)}))},e}();t.default=d,e.exports=t.default},92:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var n,i=(n=r(17))&&n.__esModule?n:{default:n};var s=/version\\/(\\d+(\\.?_?\\d+)+)/i,a=[{test:[/googlebot/i],describe:function(e){var t={name:\"Googlebot\"},r=i.default.getFirstMatch(/googlebot\\/(\\d+(\\.\\d+))/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/opera/i],describe:function(e){var t={name:\"Opera\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:opera)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/opr\\/|opios/i],describe:function(e){var t={name:\"Opera\"},r=i.default.getFirstMatch(/(?:opr|opios)[\\s/](\\S+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/SamsungBrowser/i],describe:function(e){var t={name:\"Samsung Internet for Android\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:SamsungBrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/Whale/i],describe:function(e){var t={name:\"NAVER Whale Browser\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:whale)[\\s/](\\d+(?:\\.\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/MZBrowser/i],describe:function(e){var t={name:\"MZ Browser\"},r=i.default.getFirstMatch(/(?:MZBrowser)[\\s/](\\d+(?:\\.\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/focus/i],describe:function(e){var t={name:\"Focus\"},r=i.default.getFirstMatch(/(?:focus)[\\s/](\\d+(?:\\.\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/swing/i],describe:function(e){var t={name:\"Swing\"},r=i.default.getFirstMatch(/(?:swing)[\\s/](\\d+(?:\\.\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/coast/i],describe:function(e){var t={name:\"Opera Coast\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:coast)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/opt\\/\\d+(?:.?_?\\d+)+/i],describe:function(e){var t={name:\"Opera Touch\"},r=i.default.getFirstMatch(/(?:opt)[\\s/](\\d+(\\.?_?\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/yabrowser/i],describe:function(e){var t={name:\"Yandex Browser\"},r=i.default.getFirstMatch(/(?:yabrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/ucbrowser/i],describe:function(e){var t={name:\"UC Browser\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:ucbrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/Maxthon|mxios/i],describe:function(e){var t={name:\"Maxthon\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:Maxthon|mxios)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/epiphany/i],describe:function(e){var t={name:\"Epiphany\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:epiphany)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/puffin/i],describe:function(e){var t={name:\"Puffin\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:puffin)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/sleipnir/i],describe:function(e){var t={name:\"Sleipnir\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:sleipnir)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/k-meleon/i],describe:function(e){var t={name:\"K-Meleon\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:k-meleon)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/micromessenger/i],describe:function(e){var t={name:\"WeChat\"},r=i.default.getFirstMatch(/(?:micromessenger)[\\s/](\\d+(\\.?_?\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/qqbrowser/i],describe:function(e){var t={name:/qqbrowserlite/i.test(e)?\"QQ Browser Lite\":\"QQ Browser\"},r=i.default.getFirstMatch(/(?:qqbrowserlite|qqbrowser)[/](\\d+(\\.?_?\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/msie|trident/i],describe:function(e){var t={name:\"Internet Explorer\"},r=i.default.getFirstMatch(/(?:msie |rv:)(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/\\sedg\\//i],describe:function(e){var t={name:\"Microsoft Edge\"},r=i.default.getFirstMatch(/\\sedg\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/edg([ea]|ios)/i],describe:function(e){var t={name:\"Microsoft Edge\"},r=i.default.getSecondMatch(/edg([ea]|ios)\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/vivaldi/i],describe:function(e){var t={name:\"Vivaldi\"},r=i.default.getFirstMatch(/vivaldi\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/seamonkey/i],describe:function(e){var t={name:\"SeaMonkey\"},r=i.default.getFirstMatch(/seamonkey\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/sailfish/i],describe:function(e){var t={name:\"Sailfish\"},r=i.default.getFirstMatch(/sailfish\\s?browser\\/(\\d+(\\.\\d+)?)/i,e);return r&&(t.version=r),t}},{test:[/silk/i],describe:function(e){var t={name:\"Amazon Silk\"},r=i.default.getFirstMatch(/silk\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/phantom/i],describe:function(e){var t={name:\"PhantomJS\"},r=i.default.getFirstMatch(/phantomjs\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/slimerjs/i],describe:function(e){var t={name:\"SlimerJS\"},r=i.default.getFirstMatch(/slimerjs\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/blackberry|\\bbb\\d+/i,/rim\\stablet/i],describe:function(e){var t={name:\"BlackBerry\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/blackberry[\\d]+\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/(web|hpw)[o0]s/i],describe:function(e){var t={name:\"WebOS Browser\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/w(?:eb)?[o0]sbrowser\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/bada/i],describe:function(e){var t={name:\"Bada\"},r=i.default.getFirstMatch(/dolfin\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/tizen/i],describe:function(e){var t={name:\"Tizen\"},r=i.default.getFirstMatch(/(?:tizen\\s?)?browser\\/(\\d+(\\.?_?\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/qupzilla/i],describe:function(e){var t={name:\"QupZilla\"},r=i.default.getFirstMatch(/(?:qupzilla)[\\s/](\\d+(\\.?_?\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/firefox|iceweasel|fxios/i],describe:function(e){var t={name:\"Firefox\"},r=i.default.getFirstMatch(/(?:firefox|iceweasel|fxios)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/electron/i],describe:function(e){var t={name:\"Electron\"},r=i.default.getFirstMatch(/(?:electron)\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/MiuiBrowser/i],describe:function(e){var t={name:\"Miui\"},r=i.default.getFirstMatch(/(?:MiuiBrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/chromium/i],describe:function(e){var t={name:\"Chromium\"},r=i.default.getFirstMatch(/(?:chromium)[\\s/](\\d+(\\.?_?\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/chrome|crios|crmo/i],describe:function(e){var t={name:\"Chrome\"},r=i.default.getFirstMatch(/(?:chrome|crios|crmo)\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/GSA/i],describe:function(e){var t={name:\"Google Search\"},r=i.default.getFirstMatch(/(?:GSA)\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:function(e){var t=!e.test(/like android/i),r=e.test(/android/i);return t&&r},describe:function(e){var t={name:\"Android Browser\"},r=i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/playstation 4/i],describe:function(e){var t={name:\"PlayStation 4\"},r=i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/safari|applewebkit/i],describe:function(e){var t={name:\"Safari\"},r=i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/.*/i],describe:function(e){var t=-1!==e.search(\"\\\\(\")?/^(.*)\\/(.*)[ \\t]\\((.*)/:/^(.*)\\/(.*) /;return{name:i.default.getFirstMatch(t,e),version:i.default.getSecondMatch(t,e)}}}];t.default=a,e.exports=t.default},93:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var n,i=(n=r(17))&&n.__esModule?n:{default:n},s=r(18);var a=[{test:[/Roku\\/DVP/],describe:function(e){var t=i.default.getFirstMatch(/Roku\\/DVP-(\\d+\\.\\d+)/i,e);return{name:s.OS_MAP.Roku,version:t}}},{test:[/windows phone/i],describe:function(e){var t=i.default.getFirstMatch(/windows phone (?:os)?\\s?(\\d+(\\.\\d+)*)/i,e);return{name:s.OS_MAP.WindowsPhone,version:t}}},{test:[/windows /i],describe:function(e){var t=i.default.getFirstMatch(/Windows ((NT|XP)( \\d\\d?.\\d)?)/i,e),r=i.default.getWindowsVersionName(t);return{name:s.OS_MAP.Windows,version:t,versionName:r}}},{test:[/Macintosh(.*?) FxiOS(.*?)\\//],describe:function(e){var t={name:s.OS_MAP.iOS},r=i.default.getSecondMatch(/(Version\\/)(\\d[\\d.]+)/,e);return r&&(t.version=r),t}},{test:[/macintosh/i],describe:function(e){var t=i.default.getFirstMatch(/mac os x (\\d+(\\.?_?\\d+)+)/i,e).replace(/[_\\s]/g,\".\"),r=i.default.getMacOSVersionName(t),n={name:s.OS_MAP.MacOS,version:t};return r&&(n.versionName=r),n}},{test:[/(ipod|iphone|ipad)/i],describe:function(e){var t=i.default.getFirstMatch(/os (\\d+([_\\s]\\d+)*) like mac os x/i,e).replace(/[_\\s]/g,\".\");return{name:s.OS_MAP.iOS,version:t}}},{test:function(e){var t=!e.test(/like android/i),r=e.test(/android/i);return t&&r},describe:function(e){var t=i.default.getFirstMatch(/android[\\s/-](\\d+(\\.\\d+)*)/i,e),r=i.default.getAndroidVersionName(t),n={name:s.OS_MAP.Android,version:t};return r&&(n.versionName=r),n}},{test:[/(web|hpw)[o0]s/i],describe:function(e){var t=i.default.getFirstMatch(/(?:web|hpw)[o0]s\\/(\\d+(\\.\\d+)*)/i,e),r={name:s.OS_MAP.WebOS};return t&&t.length&&(r.version=t),r}},{test:[/blackberry|\\bbb\\d+/i,/rim\\stablet/i],describe:function(e){var t=i.default.getFirstMatch(/rim\\stablet\\sos\\s(\\d+(\\.\\d+)*)/i,e)||i.default.getFirstMatch(/blackberry\\d+\\/(\\d+([_\\s]\\d+)*)/i,e)||i.default.getFirstMatch(/\\bbb(\\d+)/i,e);return{name:s.OS_MAP.BlackBerry,version:t}}},{test:[/bada/i],describe:function(e){var t=i.default.getFirstMatch(/bada\\/(\\d+(\\.\\d+)*)/i,e);return{name:s.OS_MAP.Bada,version:t}}},{test:[/tizen/i],describe:function(e){var t=i.default.getFirstMatch(/tizen[/\\s](\\d+(\\.\\d+)*)/i,e);return{name:s.OS_MAP.Tizen,version:t}}},{test:[/linux/i],describe:function(){return{name:s.OS_MAP.Linux}}},{test:[/CrOS/],describe:function(){return{name:s.OS_MAP.ChromeOS}}},{test:[/PlayStation 4/],describe:function(e){var t=i.default.getFirstMatch(/PlayStation 4[/\\s](\\d+(\\.\\d+)*)/i,e);return{name:s.OS_MAP.PlayStation4,version:t}}}];t.default=a,e.exports=t.default},94:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var n,i=(n=r(17))&&n.__esModule?n:{default:n},s=r(18);var a=[{test:[/googlebot/i],describe:function(){return{type:\"bot\",vendor:\"Google\"}}},{test:[/huawei/i],describe:function(e){var t=i.default.getFirstMatch(/(can-l01)/i,e)&&\"Nova\",r={type:s.PLATFORMS_MAP.mobile,vendor:\"Huawei\"};return t&&(r.model=t),r}},{test:[/nexus\\s*(?:7|8|9|10).*/i],describe:function(){return{type:s.PLATFORMS_MAP.tablet,vendor:\"Nexus\"}}},{test:[/ipad/i],describe:function(){return{type:s.PLATFORMS_MAP.tablet,vendor:\"Apple\",model:\"iPad\"}}},{test:[/Macintosh(.*?) FxiOS(.*?)\\//],describe:function(){return{type:s.PLATFORMS_MAP.tablet,vendor:\"Apple\",model:\"iPad\"}}},{test:[/kftt build/i],describe:function(){return{type:s.PLATFORMS_MAP.tablet,vendor:\"Amazon\",model:\"Kindle Fire HD 7\"}}},{test:[/silk/i],describe:function(){return{type:s.PLATFORMS_MAP.tablet,vendor:\"Amazon\"}}},{test:[/tablet(?! pc)/i],describe:function(){return{type:s.PLATFORMS_MAP.tablet}}},{test:function(e){var t=e.test(/ipod|iphone/i),r=e.test(/like (ipod|iphone)/i);return t&&!r},describe:function(e){var t=i.default.getFirstMatch(/(ipod|iphone)/i,e);return{type:s.PLATFORMS_MAP.mobile,vendor:\"Apple\",model:t}}},{test:[/nexus\\s*[0-6].*/i,/galaxy nexus/i],describe:function(){return{type:s.PLATFORMS_MAP.mobile,vendor:\"Nexus\"}}},{test:[/[^-]mobi/i],describe:function(){return{type:s.PLATFORMS_MAP.mobile}}},{test:function(e){return\"blackberry\"===e.getBrowserName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.mobile,vendor:\"BlackBerry\"}}},{test:function(e){return\"bada\"===e.getBrowserName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.mobile}}},{test:function(e){return\"windows phone\"===e.getBrowserName()},describe:function(){return{type:s.PLATFORMS_MAP.mobile,vendor:\"Microsoft\"}}},{test:function(e){var t=Number(String(e.getOSVersion()).split(\".\")[0]);return\"android\"===e.getOSName(!0)&&t>=3},describe:function(){return{type:s.PLATFORMS_MAP.tablet}}},{test:function(e){return\"android\"===e.getOSName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.mobile}}},{test:function(e){return\"macos\"===e.getOSName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.desktop,vendor:\"Apple\"}}},{test:function(e){return\"windows\"===e.getOSName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.desktop}}},{test:function(e){return\"linux\"===e.getOSName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.desktop}}},{test:function(e){return\"playstation 4\"===e.getOSName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.tv}}},{test:function(e){return\"roku\"===e.getOSName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.tv}}}];t.default=a,e.exports=t.default},95:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var n,i=(n=r(17))&&n.__esModule?n:{default:n},s=r(18);var a=[{test:function(e){return\"microsoft edge\"===e.getBrowserName(!0)},describe:function(e){if(/\\sedg\\//i.test(e))return{name:s.ENGINE_MAP.Blink};var t=i.default.getFirstMatch(/edge\\/(\\d+(\\.?_?\\d+)+)/i,e);return{name:s.ENGINE_MAP.EdgeHTML,version:t}}},{test:[/trident/i],describe:function(e){var t={name:s.ENGINE_MAP.Trident},r=i.default.getFirstMatch(/trident\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:function(e){return e.test(/presto/i)},describe:function(e){var t={name:s.ENGINE_MAP.Presto},r=i.default.getFirstMatch(/presto\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:function(e){var t=e.test(/gecko/i),r=e.test(/like gecko/i);return t&&!r},describe:function(e){var t={name:s.ENGINE_MAP.Gecko},r=i.default.getFirstMatch(/gecko\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/(apple)?webkit\\/537\\.36/i],describe:function(){return{name:s.ENGINE_MAP.Blink}}},{test:[/(apple)?webkit/i],describe:function(e){var t={name:s.ENGINE_MAP.WebKit},r=i.default.getFirstMatch(/webkit\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}}];t.default=a,e.exports=t.default}})}));","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nexports.parse = parse;\nexports.serialize = serialize;\n\n/**\n * Module variables.\n * @private\n */\n\nvar decode = decodeURIComponent;\nvar encode = encodeURIComponent;\nvar pairSplitRegExp = /; */;\n\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\n\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */\n\nfunction parse(str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n\n  var obj = {}\n  var opt = options || {};\n  var pairs = str.split(pairSplitRegExp);\n  var dec = opt.decode || decode;\n\n  for (var i = 0; i < pairs.length; i++) {\n    var pair = pairs[i];\n    var eq_idx = pair.indexOf('=');\n\n    // skip things that don't look like key=value\n    if (eq_idx < 0) {\n      continue;\n    }\n\n    var key = pair.substr(0, eq_idx).trim()\n    var val = pair.substr(++eq_idx, pair.length).trim();\n\n    // quoted values\n    if ('\"' == val[0]) {\n      val = val.slice(1, -1);\n    }\n\n    // only assign once\n    if (undefined == obj[key]) {\n      obj[key] = tryDecode(val, dec);\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */\n\nfunction serialize(name, val, options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  var value = enc(val);\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  var str = name + '=' + value;\n\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n\n    if (isNaN(maxAge) || !isFinite(maxAge)) {\n      throw new TypeError('option maxAge is invalid')\n    }\n\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    if (typeof opt.expires.toUTCString !== 'function') {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + opt.expires.toUTCString();\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string'\n      ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      case 'none':\n        str += '; SameSite=None';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}\n",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory();\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\troot.CryptoJS = factory();\n\t}\n}(this, function () {\n\n\t/**\n\t * CryptoJS core components.\n\t */\n\tvar CryptoJS = CryptoJS || (function (Math, undefined) {\n\t    /*\n\t     * Local polyfil of Object.create\n\t     */\n\t    var create = Object.create || (function () {\n\t        function F() {};\n\n\t        return function (obj) {\n\t            var subtype;\n\n\t            F.prototype = obj;\n\n\t            subtype = new F();\n\n\t            F.prototype = null;\n\n\t            return subtype;\n\t        };\n\t    }())\n\n\t    /**\n\t     * CryptoJS namespace.\n\t     */\n\t    var C = {};\n\n\t    /**\n\t     * Library namespace.\n\t     */\n\t    var C_lib = C.lib = {};\n\n\t    /**\n\t     * Base object for prototypal inheritance.\n\t     */\n\t    var Base = C_lib.Base = (function () {\n\n\n\t        return {\n\t            /**\n\t             * Creates a new object that inherits from this object.\n\t             *\n\t             * @param {Object} overrides Properties to copy into the new object.\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         field: 'value',\n\t             *\n\t             *         method: function () {\n\t             *         }\n\t             *     });\n\t             */\n\t            extend: function (overrides) {\n\t                // Spawn\n\t                var subtype = create(this);\n\n\t                // Augment\n\t                if (overrides) {\n\t                    subtype.mixIn(overrides);\n\t                }\n\n\t                // Create default initializer\n\t                if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {\n\t                    subtype.init = function () {\n\t                        subtype.$super.init.apply(this, arguments);\n\t                    };\n\t                }\n\n\t                // Initializer's prototype is the subtype object\n\t                subtype.init.prototype = subtype;\n\n\t                // Reference supertype\n\t                subtype.$super = this;\n\n\t                return subtype;\n\t            },\n\n\t            /**\n\t             * Extends this object and runs the init method.\n\t             * Arguments to create() will be passed to init().\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var instance = MyType.create();\n\t             */\n\t            create: function () {\n\t                var instance = this.extend();\n\t                instance.init.apply(instance, arguments);\n\n\t                return instance;\n\t            },\n\n\t            /**\n\t             * Initializes a newly created object.\n\t             * Override this method to add some logic when your objects are created.\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         init: function () {\n\t             *             // ...\n\t             *         }\n\t             *     });\n\t             */\n\t            init: function () {\n\t            },\n\n\t            /**\n\t             * Copies properties into this object.\n\t             *\n\t             * @param {Object} properties The properties to mix in.\n\t             *\n\t             * @example\n\t             *\n\t             *     MyType.mixIn({\n\t             *         field: 'value'\n\t             *     });\n\t             */\n\t            mixIn: function (properties) {\n\t                for (var propertyName in properties) {\n\t                    if (properties.hasOwnProperty(propertyName)) {\n\t                        this[propertyName] = properties[propertyName];\n\t                    }\n\t                }\n\n\t                // IE won't copy toString using the loop above\n\t                if (properties.hasOwnProperty('toString')) {\n\t                    this.toString = properties.toString;\n\t                }\n\t            },\n\n\t            /**\n\t             * Creates a copy of this object.\n\t             *\n\t             * @return {Object} The clone.\n\t             *\n\t             * @example\n\t             *\n\t             *     var clone = instance.clone();\n\t             */\n\t            clone: function () {\n\t                return this.init.prototype.extend(this);\n\t            }\n\t        };\n\t    }());\n\n\t    /**\n\t     * An array of 32-bit words.\n\t     *\n\t     * @property {Array} words The array of 32-bit words.\n\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t     */\n\t    var WordArray = C_lib.WordArray = Base.extend({\n\t        /**\n\t         * Initializes a newly created word array.\n\t         *\n\t         * @param {Array} words (Optional) An array of 32-bit words.\n\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.create();\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n\t         */\n\t        init: function (words, sigBytes) {\n\t            words = this.words = words || [];\n\n\t            if (sigBytes != undefined) {\n\t                this.sigBytes = sigBytes;\n\t            } else {\n\t                this.sigBytes = words.length * 4;\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts this word array to a string.\n\t         *\n\t         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n\t         *\n\t         * @return {string} The stringified word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = wordArray + '';\n\t         *     var string = wordArray.toString();\n\t         *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n\t         */\n\t        toString: function (encoder) {\n\t            return (encoder || Hex).stringify(this);\n\t        },\n\n\t        /**\n\t         * Concatenates a word array to this word array.\n\t         *\n\t         * @param {WordArray} wordArray The word array to append.\n\t         *\n\t         * @return {WordArray} This word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray1.concat(wordArray2);\n\t         */\n\t        concat: function (wordArray) {\n\t            // Shortcuts\n\t            var thisWords = this.words;\n\t            var thatWords = wordArray.words;\n\t            var thisSigBytes = this.sigBytes;\n\t            var thatSigBytes = wordArray.sigBytes;\n\n\t            // Clamp excess bits\n\t            this.clamp();\n\n\t            // Concat\n\t            if (thisSigBytes % 4) {\n\t                // Copy one byte at a time\n\t                for (var i = 0; i < thatSigBytes; i++) {\n\t                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n\t                }\n\t            } else {\n\t                // Copy one word at a time\n\t                for (var i = 0; i < thatSigBytes; i += 4) {\n\t                    thisWords[(thisSigBytes + i) >>> 2] = thatWords[i >>> 2];\n\t                }\n\t            }\n\t            this.sigBytes += thatSigBytes;\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Removes insignificant bits.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray.clamp();\n\t         */\n\t        clamp: function () {\n\t            // Shortcuts\n\t            var words = this.words;\n\t            var sigBytes = this.sigBytes;\n\n\t            // Clamp\n\t            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n\t            words.length = Math.ceil(sigBytes / 4);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this word array.\n\t         *\n\t         * @return {WordArray} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = wordArray.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone.words = this.words.slice(0);\n\n\t            return clone;\n\t        },\n\n\t        /**\n\t         * Creates a word array filled with random bytes.\n\t         *\n\t         * @param {number} nBytes The number of random bytes to generate.\n\t         *\n\t         * @return {WordArray} The random word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.random(16);\n\t         */\n\t        random: function (nBytes) {\n\t            var words = [];\n\n\t            var r = (function (m_w) {\n\t                var m_w = m_w;\n\t                var m_z = 0x3ade68b1;\n\t                var mask = 0xffffffff;\n\n\t                return function () {\n\t                    m_z = (0x9069 * (m_z & 0xFFFF) + (m_z >> 0x10)) & mask;\n\t                    m_w = (0x4650 * (m_w & 0xFFFF) + (m_w >> 0x10)) & mask;\n\t                    var result = ((m_z << 0x10) + m_w) & mask;\n\t                    result /= 0x100000000;\n\t                    result += 0.5;\n\t                    return result * (Math.random() > .5 ? 1 : -1);\n\t                }\n\t            });\n\n\t            for (var i = 0, rcache; i < nBytes; i += 4) {\n\t                var _r = r((rcache || Math.random()) * 0x100000000);\n\n\t                rcache = _r() * 0x3ade67b7;\n\t                words.push((_r() * 0x100000000) | 0);\n\t            }\n\n\t            return new WordArray.init(words, nBytes);\n\t        }\n\t    });\n\n\t    /**\n\t     * Encoder namespace.\n\t     */\n\t    var C_enc = C.enc = {};\n\n\t    /**\n\t     * Hex encoding strategy.\n\t     */\n\t    var Hex = C_enc.Hex = {\n\t        /**\n\t         * Converts a word array to a hex string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The hex string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var hexChars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                hexChars.push((bite >>> 4).toString(16));\n\t                hexChars.push((bite & 0x0f).toString(16));\n\t            }\n\n\t            return hexChars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a hex string to a word array.\n\t         *\n\t         * @param {string} hexStr The hex string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n\t         */\n\t        parse: function (hexStr) {\n\t            // Shortcut\n\t            var hexStrLength = hexStr.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < hexStrLength; i += 2) {\n\t                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n\t            }\n\n\t            return new WordArray.init(words, hexStrLength / 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * Latin1 encoding strategy.\n\t     */\n\t    var Latin1 = C_enc.Latin1 = {\n\t        /**\n\t         * Converts a word array to a Latin1 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Latin1 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var latin1Chars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                latin1Chars.push(String.fromCharCode(bite));\n\t            }\n\n\t            return latin1Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Latin1 string to a word array.\n\t         *\n\t         * @param {string} latin1Str The Latin1 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n\t         */\n\t        parse: function (latin1Str) {\n\t            // Shortcut\n\t            var latin1StrLength = latin1Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < latin1StrLength; i++) {\n\t                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n\t            }\n\n\t            return new WordArray.init(words, latin1StrLength);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-8 encoding strategy.\n\t     */\n\t    var Utf8 = C_enc.Utf8 = {\n\t        /**\n\t         * Converts a word array to a UTF-8 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-8 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            try {\n\t                return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n\t            } catch (e) {\n\t                throw new Error('Malformed UTF-8 data');\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts a UTF-8 string to a word array.\n\t         *\n\t         * @param {string} utf8Str The UTF-8 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n\t         */\n\t        parse: function (utf8Str) {\n\t            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract buffered block algorithm template.\n\t     *\n\t     * The property blockSize must be implemented in a concrete subtype.\n\t     *\n\t     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\n\t     */\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\n\t        /**\n\t         * Resets this block algorithm's data buffer to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm.reset();\n\t         */\n\t        reset: function () {\n\t            // Initial values\n\t            this._data = new WordArray.init();\n\t            this._nDataBytes = 0;\n\t        },\n\n\t        /**\n\t         * Adds new data to this block algorithm's buffer.\n\t         *\n\t         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm._append('data');\n\t         *     bufferedBlockAlgorithm._append(wordArray);\n\t         */\n\t        _append: function (data) {\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof data == 'string') {\n\t                data = Utf8.parse(data);\n\t            }\n\n\t            // Append\n\t            this._data.concat(data);\n\t            this._nDataBytes += data.sigBytes;\n\t        },\n\n\t        /**\n\t         * Processes available data blocks.\n\t         *\n\t         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n\t         *\n\t         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n\t         *\n\t         * @return {WordArray} The processed data.\n\t         *\n\t         * @example\n\t         *\n\t         *     var processedData = bufferedBlockAlgorithm._process();\n\t         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n\t         */\n\t        _process: function (doFlush) {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\t            var dataSigBytes = data.sigBytes;\n\t            var blockSize = this.blockSize;\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count blocks ready\n\t            var nBlocksReady = dataSigBytes / blockSizeBytes;\n\t            if (doFlush) {\n\t                // Round up to include partial blocks\n\t                nBlocksReady = Math.ceil(nBlocksReady);\n\t            } else {\n\t                // Round down to include only full blocks,\n\t                // less the number of blocks that must remain in the buffer\n\t                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n\t            }\n\n\t            // Count words ready\n\t            var nWordsReady = nBlocksReady * blockSize;\n\n\t            // Count bytes ready\n\t            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\n\t            // Process blocks\n\t            if (nWordsReady) {\n\t                for (var offset = 0; offset < nWordsReady; offset += blockSize) {\n\t                    // Perform concrete-algorithm logic\n\t                    this._doProcessBlock(dataWords, offset);\n\t                }\n\n\t                // Remove processed words\n\t                var processedWords = dataWords.splice(0, nWordsReady);\n\t                data.sigBytes -= nBytesReady;\n\t            }\n\n\t            // Return processed words\n\t            return new WordArray.init(processedWords, nBytesReady);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this object.\n\t         *\n\t         * @return {Object} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = bufferedBlockAlgorithm.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone._data = this._data.clone();\n\n\t            return clone;\n\t        },\n\n\t        _minBufferSize: 0\n\t    });\n\n\t    /**\n\t     * Abstract hasher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n\t     */\n\t    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Initializes a newly created hasher.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hasher = CryptoJS.algo.SHA256.create();\n\t         */\n\t        init: function (cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this hasher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-hasher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Updates this hasher with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {Hasher} This hasher.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.update('message');\n\t         *     hasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            // Append\n\t            this._append(messageUpdate);\n\n\t            // Update the hash\n\t            this._process();\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the hash computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The hash.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hash = hasher.finalize();\n\t         *     var hash = hasher.finalize('message');\n\t         *     var hash = hasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Final message update\n\t            if (messageUpdate) {\n\t                this._append(messageUpdate);\n\t            }\n\n\t            // Perform concrete-hasher logic\n\t            var hash = this._doFinalize();\n\n\t            return hash;\n\t        },\n\n\t        blockSize: 512/32,\n\n\t        /**\n\t         * Creates a shortcut function to a hasher's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to create a helper for.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHelper: function (hasher) {\n\t            return function (message, cfg) {\n\t                return new hasher.init(cfg).finalize(message);\n\t            };\n\t        },\n\n\t        /**\n\t         * Creates a shortcut function to the HMAC's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to use in this HMAC helper.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHmacHelper: function (hasher) {\n\t            return function (message, key) {\n\t                return new C_algo.HMAC.init(hasher, key).finalize(message);\n\t            };\n\t        }\n\t    });\n\n\t    /**\n\t     * Algorithm namespace.\n\t     */\n\t    var C_algo = C.algo = {};\n\n\t    return C;\n\t}(Math));\n\n\n\treturn CryptoJS;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_enc = C.enc;\n\n\t    /**\n\t     * Base64 encoding strategy.\n\t     */\n\t    var Base64 = C_enc.Base64 = {\n\t        /**\n\t         * Converts a word array to a Base64 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Base64 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\t            var map = this._map;\n\n\t            // Clamp excess bits\n\t            wordArray.clamp();\n\n\t            // Convert\n\t            var base64Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 3) {\n\t                var byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;\n\t                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\n\t                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\n\n\t                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;\n\n\t                for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {\n\t                    base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\n\t                }\n\t            }\n\n\t            // Add padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                while (base64Chars.length % 4) {\n\t                    base64Chars.push(paddingChar);\n\t                }\n\t            }\n\n\t            return base64Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Base64 string to a word array.\n\t         *\n\t         * @param {string} base64Str The Base64 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Base64.parse(base64String);\n\t         */\n\t        parse: function (base64Str) {\n\t            // Shortcuts\n\t            var base64StrLength = base64Str.length;\n\t            var map = this._map;\n\t            var reverseMap = this._reverseMap;\n\n\t            if (!reverseMap) {\n\t                    reverseMap = this._reverseMap = [];\n\t                    for (var j = 0; j < map.length; j++) {\n\t                        reverseMap[map.charCodeAt(j)] = j;\n\t                    }\n\t            }\n\n\t            // Ignore padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                var paddingIndex = base64Str.indexOf(paddingChar);\n\t                if (paddingIndex !== -1) {\n\t                    base64StrLength = paddingIndex;\n\t                }\n\t            }\n\n\t            // Convert\n\t            return parseLoop(base64Str, base64StrLength, reverseMap);\n\n\t        },\n\n\t        _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\n\t    };\n\n\t    function parseLoop(base64Str, base64StrLength, reverseMap) {\n\t      var words = [];\n\t      var nBytes = 0;\n\t      for (var i = 0; i < base64StrLength; i++) {\n\t          if (i % 4) {\n\t              var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);\n\t              var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);\n\t              words[nBytes >>> 2] |= (bits1 | bits2) << (24 - (nBytes % 4) * 8);\n\t              nBytes++;\n\t          }\n\t      }\n\t      return WordArray.create(words, nBytes);\n\t    }\n\t}());\n\n\n\treturn CryptoJS.enc.Base64;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./sha256\"), require(\"./hmac\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./sha256\", \"./hmac\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\treturn CryptoJS.HmacSHA256;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var C_enc = C.enc;\n\t    var Utf8 = C_enc.Utf8;\n\t    var C_algo = C.algo;\n\n\t    /**\n\t     * HMAC algorithm.\n\t     */\n\t    var HMAC = C_algo.HMAC = Base.extend({\n\t        /**\n\t         * Initializes a newly created HMAC.\n\t         *\n\t         * @param {Hasher} hasher The hash algorithm to use.\n\t         * @param {WordArray|string} key The secret key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);\n\t         */\n\t        init: function (hasher, key) {\n\t            // Init hasher\n\t            hasher = this._hasher = new hasher.init();\n\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof key == 'string') {\n\t                key = Utf8.parse(key);\n\t            }\n\n\t            // Shortcuts\n\t            var hasherBlockSize = hasher.blockSize;\n\t            var hasherBlockSizeBytes = hasherBlockSize * 4;\n\n\t            // Allow arbitrary length keys\n\t            if (key.sigBytes > hasherBlockSizeBytes) {\n\t                key = hasher.finalize(key);\n\t            }\n\n\t            // Clamp excess bits\n\t            key.clamp();\n\n\t            // Clone key for inner and outer pads\n\t            var oKey = this._oKey = key.clone();\n\t            var iKey = this._iKey = key.clone();\n\n\t            // Shortcuts\n\t            var oKeyWords = oKey.words;\n\t            var iKeyWords = iKey.words;\n\n\t            // XOR keys with pad constants\n\t            for (var i = 0; i < hasherBlockSize; i++) {\n\t                oKeyWords[i] ^= 0x5c5c5c5c;\n\t                iKeyWords[i] ^= 0x36363636;\n\t            }\n\t            oKey.sigBytes = iKey.sigBytes = hasherBlockSizeBytes;\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this HMAC to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hmacHasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Shortcut\n\t            var hasher = this._hasher;\n\n\t            // Reset\n\t            hasher.reset();\n\t            hasher.update(this._iKey);\n\t        },\n\n\t        /**\n\t         * Updates this HMAC with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {HMAC} This HMAC instance.\n\t         *\n\t         * @example\n\t         *\n\t         *     hmacHasher.update('message');\n\t         *     hmacHasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            this._hasher.update(messageUpdate);\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the HMAC computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The HMAC.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hmac = hmacHasher.finalize();\n\t         *     var hmac = hmacHasher.finalize('message');\n\t         *     var hmac = hmacHasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Shortcut\n\t            var hasher = this._hasher;\n\n\t            // Compute HMAC\n\t            var innerHash = hasher.finalize(messageUpdate);\n\t            hasher.reset();\n\t            var hmac = hasher.finalize(this._oKey.clone().concat(innerHash));\n\n\t            return hmac;\n\t        }\n\t    });\n\t}());\n\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Check if typed arrays are supported\n\t    if (typeof ArrayBuffer != 'function') {\n\t        return;\n\t    }\n\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\n\t    // Reference original init\n\t    var superInit = WordArray.init;\n\n\t    // Augment WordArray.init to handle typed arrays\n\t    var subInit = WordArray.init = function (typedArray) {\n\t        // Convert buffers to uint8\n\t        if (typedArray instanceof ArrayBuffer) {\n\t            typedArray = new Uint8Array(typedArray);\n\t        }\n\n\t        // Convert other array views to uint8\n\t        if (\n\t            typedArray instanceof Int8Array ||\n\t            (typeof Uint8ClampedArray !== \"undefined\" && typedArray instanceof Uint8ClampedArray) ||\n\t            typedArray instanceof Int16Array ||\n\t            typedArray instanceof Uint16Array ||\n\t            typedArray instanceof Int32Array ||\n\t            typedArray instanceof Uint32Array ||\n\t            typedArray instanceof Float32Array ||\n\t            typedArray instanceof Float64Array\n\t        ) {\n\t            typedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);\n\t        }\n\n\t        // Handle Uint8Array\n\t        if (typedArray instanceof Uint8Array) {\n\t            // Shortcut\n\t            var typedArrayByteLength = typedArray.byteLength;\n\n\t            // Extract bytes\n\t            var words = [];\n\t            for (var i = 0; i < typedArrayByteLength; i++) {\n\t                words[i >>> 2] |= typedArray[i] << (24 - (i % 4) * 8);\n\t            }\n\n\t            // Initialize this word array\n\t            superInit.call(this, words, typedArrayByteLength);\n\t        } else {\n\t            // Else call normal init\n\t            superInit.apply(this, arguments);\n\t        }\n\t    };\n\n\t    subInit.prototype = WordArray;\n\t}());\n\n\n\treturn CryptoJS.lib.WordArray;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Initialization and round constants tables\n\t    var H = [];\n\t    var K = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        function isPrime(n) {\n\t            var sqrtN = Math.sqrt(n);\n\t            for (var factor = 2; factor <= sqrtN; factor++) {\n\t                if (!(n % factor)) {\n\t                    return false;\n\t                }\n\t            }\n\n\t            return true;\n\t        }\n\n\t        function getFractionalBits(n) {\n\t            return ((n - (n | 0)) * 0x100000000) | 0;\n\t        }\n\n\t        var n = 2;\n\t        var nPrime = 0;\n\t        while (nPrime < 64) {\n\t            if (isPrime(n)) {\n\t                if (nPrime < 8) {\n\t                    H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));\n\t                }\n\t                K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));\n\n\t                nPrime++;\n\t            }\n\n\t            n++;\n\t        }\n\t    }());\n\n\t    // Reusable object\n\t    var W = [];\n\n\t    /**\n\t     * SHA-256 hash algorithm.\n\t     */\n\t    var SHA256 = C_algo.SHA256 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init(H.slice(0));\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var H = this._hash.words;\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\t            var e = H[4];\n\t            var f = H[5];\n\t            var g = H[6];\n\t            var h = H[7];\n\n\t            // Computation\n\t            for (var i = 0; i < 64; i++) {\n\t                if (i < 16) {\n\t                    W[i] = M[offset + i] | 0;\n\t                } else {\n\t                    var gamma0x = W[i - 15];\n\t                    var gamma0  = ((gamma0x << 25) | (gamma0x >>> 7))  ^\n\t                                  ((gamma0x << 14) | (gamma0x >>> 18)) ^\n\t                                   (gamma0x >>> 3);\n\n\t                    var gamma1x = W[i - 2];\n\t                    var gamma1  = ((gamma1x << 15) | (gamma1x >>> 17)) ^\n\t                                  ((gamma1x << 13) | (gamma1x >>> 19)) ^\n\t                                   (gamma1x >>> 10);\n\n\t                    W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\n\t                }\n\n\t                var ch  = (e & f) ^ (~e & g);\n\t                var maj = (a & b) ^ (a & c) ^ (b & c);\n\n\t                var sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));\n\t                var sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7)  | (e >>> 25));\n\n\t                var t1 = h + sigma1 + ch + K[i] + W[i];\n\t                var t2 = sigma0 + maj;\n\n\t                h = g;\n\t                g = f;\n\t                f = e;\n\t                e = (d + t1) | 0;\n\t                d = c;\n\t                c = b;\n\t                b = a;\n\t                a = (t1 + t2) | 0;\n\t            }\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t            H[4] = (H[4] + e) | 0;\n\t            H[5] = (H[5] + f) | 0;\n\t            H[6] = (H[6] + g) | 0;\n\t            H[7] = (H[7] + h) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Return final computed hash\n\t            return this._hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA256('message');\n\t     *     var hash = CryptoJS.SHA256(wordArray);\n\t     */\n\t    C.SHA256 = Hasher._createHelper(SHA256);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA256(message, key);\n\t     */\n\t    C.HmacSHA256 = Hasher._createHmacHelper(SHA256);\n\t}(Math));\n\n\n\treturn CryptoJS.SHA256;\n\n}));","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","module.exports = self.fetch || (self.fetch = require('unfetch').default || require('unfetch'));\n","/*!\n * JavaScript Cookie v2.2.1\n * https://github.com/js-cookie/js-cookie\n *\n * Copyright 2006, 2015 Klaus Hartl & Fagner Brack\n * Released under the MIT license\n */\n;(function (factory) {\n\tvar registeredInModuleLoader;\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine(factory);\n\t\tregisteredInModuleLoader = true;\n\t}\n\tif (typeof exports === 'object') {\n\t\tmodule.exports = factory();\n\t\tregisteredInModuleLoader = true;\n\t}\n\tif (!registeredInModuleLoader) {\n\t\tvar OldCookies = window.Cookies;\n\t\tvar api = window.Cookies = factory();\n\t\tapi.noConflict = function () {\n\t\t\twindow.Cookies = OldCookies;\n\t\t\treturn api;\n\t\t};\n\t}\n}(function () {\n\tfunction extend () {\n\t\tvar i = 0;\n\t\tvar result = {};\n\t\tfor (; i < arguments.length; i++) {\n\t\t\tvar attributes = arguments[ i ];\n\t\t\tfor (var key in attributes) {\n\t\t\t\tresult[key] = attributes[key];\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction decode (s) {\n\t\treturn s.replace(/(%[0-9A-Z]{2})+/g, decodeURIComponent);\n\t}\n\n\tfunction init (converter) {\n\t\tfunction api() {}\n\n\t\tfunction set (key, value, attributes) {\n\t\t\tif (typeof document === 'undefined') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tattributes = extend({\n\t\t\t\tpath: '/'\n\t\t\t}, api.defaults, attributes);\n\n\t\t\tif (typeof attributes.expires === 'number') {\n\t\t\t\tattributes.expires = new Date(new Date() * 1 + attributes.expires * 864e+5);\n\t\t\t}\n\n\t\t\t// We're using \"expires\" because \"max-age\" is not supported by IE\n\t\t\tattributes.expires = attributes.expires ? attributes.expires.toUTCString() : '';\n\n\t\t\ttry {\n\t\t\t\tvar result = JSON.stringify(value);\n\t\t\t\tif (/^[\\{\\[]/.test(result)) {\n\t\t\t\t\tvalue = result;\n\t\t\t\t}\n\t\t\t} catch (e) {}\n\n\t\t\tvalue = converter.write ?\n\t\t\t\tconverter.write(value, key) :\n\t\t\t\tencodeURIComponent(String(value))\n\t\t\t\t\t.replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent);\n\n\t\t\tkey = encodeURIComponent(String(key))\n\t\t\t\t.replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent)\n\t\t\t\t.replace(/[\\(\\)]/g, escape);\n\n\t\t\tvar stringifiedAttributes = '';\n\t\t\tfor (var attributeName in attributes) {\n\t\t\t\tif (!attributes[attributeName]) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tstringifiedAttributes += '; ' + attributeName;\n\t\t\t\tif (attributes[attributeName] === true) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Considers RFC 6265 section 5.2:\n\t\t\t\t// ...\n\t\t\t\t// 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n\t\t\t\t//     character:\n\t\t\t\t// Consume the characters of the unparsed-attributes up to,\n\t\t\t\t// not including, the first %x3B (\";\") character.\n\t\t\t\t// ...\n\t\t\t\tstringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n\t\t\t}\n\n\t\t\treturn (document.cookie = key + '=' + value + stringifiedAttributes);\n\t\t}\n\n\t\tfunction get (key, json) {\n\t\t\tif (typeof document === 'undefined') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar jar = {};\n\t\t\t// To prevent the for loop in the first place assign an empty array\n\t\t\t// in case there are no cookies at all.\n\t\t\tvar cookies = document.cookie ? document.cookie.split('; ') : [];\n\t\t\tvar i = 0;\n\n\t\t\tfor (; i < cookies.length; i++) {\n\t\t\t\tvar parts = cookies[i].split('=');\n\t\t\t\tvar cookie = parts.slice(1).join('=');\n\n\t\t\t\tif (!json && cookie.charAt(0) === '\"') {\n\t\t\t\t\tcookie = cookie.slice(1, -1);\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tvar name = decode(parts[0]);\n\t\t\t\t\tcookie = (converter.read || converter)(cookie, name) ||\n\t\t\t\t\t\tdecode(cookie);\n\n\t\t\t\t\tif (json) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tcookie = JSON.parse(cookie);\n\t\t\t\t\t\t} catch (e) {}\n\t\t\t\t\t}\n\n\t\t\t\t\tjar[name] = cookie;\n\n\t\t\t\t\tif (key === name) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {}\n\t\t\t}\n\n\t\t\treturn key ? jar[key] : jar;\n\t\t}\n\n\t\tapi.set = set;\n\t\tapi.get = function (key) {\n\t\t\treturn get(key, false /* read as raw */);\n\t\t};\n\t\tapi.getJSON = function (key) {\n\t\t\treturn get(key, true /* read as json */);\n\t\t};\n\t\tapi.remove = function (key, attributes) {\n\t\t\tset(key, '', extend(attributes, {\n\t\t\t\texpires: -1\n\t\t\t}));\n\t\t};\n\n\t\tapi.defaults = {};\n\n\t\tapi.withConverter = init;\n\n\t\treturn api;\n\t}\n\n\treturn init(function () {});\n}));\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","/*******************************************************************************\n * Copyright (c) 2013 IBM Corp.\n *\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * and Eclipse Distribution License v1.0 which accompany this distribution.\n *\n * The Eclipse Public License is available at\n *    http://www.eclipse.org/legal/epl-v10.html\n * and the Eclipse Distribution License is available at\n *   http://www.eclipse.org/org/documents/edl-v10.php.\n *\n * Contributors:\n *    Andrew Banks - initial API and implementation and initial documentation\n *******************************************************************************/\n\n\n// Only expose a single object name in the global namespace.\n// Everything must go through this module. Global Paho module\n// only has a single public function, client, which returns\n// a Paho client object given connection details.\n\n/**\n * Send and receive messages using web browsers.\n * <p>\n * This programming interface lets a JavaScript client application use the MQTT V3.1 or\n * V3.1.1 protocol to connect to an MQTT-supporting messaging server.\n *\n * The function supported includes:\n * <ol>\n * <li>Connecting to and disconnecting from a server. The server is identified by its host name and port number.\n * <li>Specifying options that relate to the communications link with the server,\n * for example the frequency of keep-alive heartbeats, and whether SSL/TLS is required.\n * <li>Subscribing to and receiving messages from MQTT Topics.\n * <li>Publishing messages to MQTT Topics.\n * </ol>\n * <p>\n * The API consists of two main objects:\n * <dl>\n * <dt><b>{@link Paho.Client}</b></dt>\n * <dd>This contains methods that provide the functionality of the API,\n * including provision of callbacks that notify the application when a message\n * arrives from or is delivered to the messaging server,\n * or when the status of its connection to the messaging server changes.</dd>\n * <dt><b>{@link Paho.Message}</b></dt>\n * <dd>This encapsulates the payload of the message along with various attributes\n * associated with its delivery, in particular the destination to which it has\n * been (or is about to be) sent.</dd>\n * </dl>\n * <p>\n * The programming interface validates parameters passed to it, and will throw\n * an Error containing an error message intended for developer use, if it detects\n * an error with any parameter.\n * <p>\n * Example:\n *\n * <code><pre>\nvar client = new Paho.MQTT.Client(location.hostname, Number(location.port), \"clientId\");\nclient.onConnectionLost = onConnectionLost;\nclient.onMessageArrived = onMessageArrived;\nclient.connect({onSuccess:onConnect});\n\nfunction onConnect() {\n  // Once a connection has been made, make a subscription and send a message.\n  console.log(\"onConnect\");\n  client.subscribe(\"/World\");\n  var message = new Paho.MQTT.Message(\"Hello\");\n  message.destinationName = \"/World\";\n  client.send(message);\n};\nfunction onConnectionLost(responseObject) {\n  if (responseObject.errorCode !== 0)\n\tconsole.log(\"onConnectionLost:\"+responseObject.errorMessage);\n};\nfunction onMessageArrived(message) {\n  console.log(\"onMessageArrived:\"+message.payloadString);\n  client.disconnect();\n};\n * </pre></code>\n * @namespace Paho\n */\n\n/* jshint shadow:true */\n(function ExportLibrary(root, factory) {\n\tif(typeof exports === \"object\" && typeof module === \"object\"){\n\t\tmodule.exports = factory();\n\t} else if (typeof define === \"function\" && define.amd){\n\t\tdefine(factory);\n\t} else if (typeof exports === \"object\"){\n\t\texports = factory();\n\t} else {\n\t\t//if (typeof root.Paho === \"undefined\"){\n\t\t//\troot.Paho = {};\n\t\t//}\n\t\troot.Paho = factory();\n\t}\n})(this, function LibraryFactory(){\n\n\n\tvar PahoMQTT = (function (global) {\n\n\t// Private variables below, these are only visible inside the function closure\n\t// which is used to define the module.\n\tvar version = \"@VERSION@-@BUILDLEVEL@\";\n\n\t/**\n\t * @private\n\t */\n\tvar localStorage = global.localStorage || (function () {\n\t\tvar data = {};\n\n\t\treturn {\n\t\t\tsetItem: function (key, item) { data[key] = item; },\n\t\t\tgetItem: function (key) { return data[key]; },\n\t\t\tremoveItem: function (key) { delete data[key]; },\n\t\t};\n\t})();\n\n\t\t/**\n\t * Unique message type identifiers, with associated\n\t * associated integer values.\n\t * @private\n\t */\n\t\tvar MESSAGE_TYPE = {\n\t\t\tCONNECT: 1,\n\t\t\tCONNACK: 2,\n\t\t\tPUBLISH: 3,\n\t\t\tPUBACK: 4,\n\t\t\tPUBREC: 5,\n\t\t\tPUBREL: 6,\n\t\t\tPUBCOMP: 7,\n\t\t\tSUBSCRIBE: 8,\n\t\t\tSUBACK: 9,\n\t\t\tUNSUBSCRIBE: 10,\n\t\t\tUNSUBACK: 11,\n\t\t\tPINGREQ: 12,\n\t\t\tPINGRESP: 13,\n\t\t\tDISCONNECT: 14\n\t\t};\n\n\t\t// Collection of utility methods used to simplify module code\n\t\t// and promote the DRY pattern.\n\n\t\t/**\n\t * Validate an object's parameter names to ensure they\n\t * match a list of expected variables name for this option\n\t * type. Used to ensure option object passed into the API don't\n\t * contain erroneous parameters.\n\t * @param {Object} obj - User options object\n\t * @param {Object} keys - valid keys and types that may exist in obj.\n\t * @throws {Error} Invalid option parameter found.\n\t * @private\n\t */\n\t\tvar validate = function(obj, keys) {\n\t\t\tfor (var key in obj) {\n\t\t\t\tif (obj.hasOwnProperty(key)) {\n\t\t\t\t\tif (keys.hasOwnProperty(key)) {\n\t\t\t\t\t\tif (typeof obj[key] !== keys[key])\n\t\t\t\t\t\t\tthrow new Error(format(ERROR.INVALID_TYPE, [typeof obj[key], key]));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar errorStr = \"Unknown property, \" + key + \". Valid properties are:\";\n\t\t\t\t\t\tfor (var validKey in keys)\n\t\t\t\t\t\t\tif (keys.hasOwnProperty(validKey))\n\t\t\t\t\t\t\t\terrorStr = errorStr+\" \"+validKey;\n\t\t\t\t\t\tthrow new Error(errorStr);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t * Return a new function which runs the user function bound\n\t * to a fixed scope.\n\t * @param {function} User function\n\t * @param {object} Function scope\n\t * @return {function} User function bound to another scope\n\t * @private\n\t */\n\t\tvar scope = function (f, scope) {\n\t\t\treturn function () {\n\t\t\t\treturn f.apply(scope, arguments);\n\t\t\t};\n\t\t};\n\n\t\t/**\n\t * Unique message type identifiers, with associated\n\t * associated integer values.\n\t * @private\n\t */\n\t\tvar ERROR = {\n\t\t\tOK: {code:0, text:\"AMQJSC0000I OK.\"},\n\t\t\tCONNECT_TIMEOUT: {code:1, text:\"AMQJSC0001E Connect timed out.\"},\n\t\t\tSUBSCRIBE_TIMEOUT: {code:2, text:\"AMQJS0002E Subscribe timed out.\"},\n\t\t\tUNSUBSCRIBE_TIMEOUT: {code:3, text:\"AMQJS0003E Unsubscribe timed out.\"},\n\t\t\tPING_TIMEOUT: {code:4, text:\"AMQJS0004E Ping timed out.\"},\n\t\t\tINTERNAL_ERROR: {code:5, text:\"AMQJS0005E Internal error. Error Message: {0}, Stack trace: {1}\"},\n\t\t\tCONNACK_RETURNCODE: {code:6, text:\"AMQJS0006E Bad Connack return code:{0} {1}.\"},\n\t\t\tSOCKET_ERROR: {code:7, text:\"AMQJS0007E Socket error:{0}.\"},\n\t\t\tSOCKET_CLOSE: {code:8, text:\"AMQJS0008I Socket closed.\"},\n\t\t\tMALFORMED_UTF: {code:9, text:\"AMQJS0009E Malformed UTF data:{0} {1} {2}.\"},\n\t\t\tUNSUPPORTED: {code:10, text:\"AMQJS0010E {0} is not supported by this browser.\"},\n\t\t\tINVALID_STATE: {code:11, text:\"AMQJS0011E Invalid state {0}.\"},\n\t\t\tINVALID_TYPE: {code:12, text:\"AMQJS0012E Invalid type {0} for {1}.\"},\n\t\t\tINVALID_ARGUMENT: {code:13, text:\"AMQJS0013E Invalid argument {0} for {1}.\"},\n\t\t\tUNSUPPORTED_OPERATION: {code:14, text:\"AMQJS0014E Unsupported operation.\"},\n\t\t\tINVALID_STORED_DATA: {code:15, text:\"AMQJS0015E Invalid data in local storage key={0} value={1}.\"},\n\t\t\tINVALID_MQTT_MESSAGE_TYPE: {code:16, text:\"AMQJS0016E Invalid MQTT message type {0}.\"},\n\t\t\tMALFORMED_UNICODE: {code:17, text:\"AMQJS0017E Malformed Unicode string:{0} {1}.\"},\n\t\t\tBUFFER_FULL: {code:18, text:\"AMQJS0018E Message buffer is full, maximum buffer size: {0}.\"},\n\t\t};\n\n\t\t/** CONNACK RC Meaning. */\n\t\tvar CONNACK_RC = {\n\t\t\t0:\"Connection Accepted\",\n\t\t\t1:\"Connection Refused: unacceptable protocol version\",\n\t\t\t2:\"Connection Refused: identifier rejected\",\n\t\t\t3:\"Connection Refused: server unavailable\",\n\t\t\t4:\"Connection Refused: bad user name or password\",\n\t\t\t5:\"Connection Refused: not authorized\"\n\t\t};\n\n\t/**\n\t * Format an error message text.\n\t * @private\n\t * @param {error} ERROR value above.\n\t * @param {substitutions} [array] substituted into the text.\n\t * @return the text with the substitutions made.\n\t */\n\t\tvar format = function(error, substitutions) {\n\t\t\tvar text = error.text;\n\t\t\tif (substitutions) {\n\t\t\t\tvar field,start;\n\t\t\t\tfor (var i=0; i<substitutions.length; i++) {\n\t\t\t\t\tfield = \"{\"+i+\"}\";\n\t\t\t\t\tstart = text.indexOf(field);\n\t\t\t\t\tif(start > 0) {\n\t\t\t\t\t\tvar part1 = text.substring(0,start);\n\t\t\t\t\t\tvar part2 = text.substring(start+field.length);\n\t\t\t\t\t\ttext = part1+substitutions[i]+part2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn text;\n\t\t};\n\n\t\t//MQTT protocol and version          6    M    Q    I    s    d    p    3\n\t\tvar MqttProtoIdentifierv3 = [0x00,0x06,0x4d,0x51,0x49,0x73,0x64,0x70,0x03];\n\t\t//MQTT proto/version for 311         4    M    Q    T    T    4\n\t\tvar MqttProtoIdentifierv4 = [0x00,0x04,0x4d,0x51,0x54,0x54,0x04];\n\n\t\t/**\n\t * Construct an MQTT wire protocol message.\n\t * @param type MQTT packet type.\n\t * @param options optional wire message attributes.\n\t *\n\t * Optional properties\n\t *\n\t * messageIdentifier: message ID in the range [0..65535]\n\t * payloadMessage:\tApplication Message - PUBLISH only\n\t * connectStrings:\tarray of 0 or more Strings to be put into the CONNECT payload\n\t * topics:\t\t\tarray of strings (SUBSCRIBE, UNSUBSCRIBE)\n\t * requestQoS:\t\tarray of QoS values [0..2]\n\t *\n\t * \"Flag\" properties\n\t * cleanSession:\ttrue if present / false if absent (CONNECT)\n\t * willMessage:  \ttrue if present / false if absent (CONNECT)\n\t * isRetained:\t\ttrue if present / false if absent (CONNECT)\n\t * userName:\t\ttrue if present / false if absent (CONNECT)\n\t * password:\t\ttrue if present / false if absent (CONNECT)\n\t * keepAliveInterval:\tinteger [0..65535]  (CONNECT)\n\t *\n\t * @private\n\t * @ignore\n\t */\n\t\tvar WireMessage = function (type, options) {\n\t\t\tthis.type = type;\n\t\t\tfor (var name in options) {\n\t\t\t\tif (options.hasOwnProperty(name)) {\n\t\t\t\t\tthis[name] = options[name];\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tWireMessage.prototype.encode = function() {\n\t\t// Compute the first byte of the fixed header\n\t\t\tvar first = ((this.type & 0x0f) << 4);\n\n\t\t\t/*\n\t\t * Now calculate the length of the variable header + payload by adding up the lengths\n\t\t * of all the component parts\n\t\t */\n\n\t\t\tvar remLength = 0;\n\t\t\tvar topicStrLength = [];\n\t\t\tvar destinationNameLength = 0;\n\t\t\tvar willMessagePayloadBytes;\n\n\t\t\t// if the message contains a messageIdentifier then we need two bytes for that\n\t\t\tif (this.messageIdentifier !== undefined)\n\t\t\t\tremLength += 2;\n\n\t\t\tswitch(this.type) {\n\t\t\t// If this a Connect then we need to include 12 bytes for its header\n\t\t\tcase MESSAGE_TYPE.CONNECT:\n\t\t\t\tswitch(this.mqttVersion) {\n\t\t\t\tcase 3:\n\t\t\t\t\tremLength += MqttProtoIdentifierv3.length + 3;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\tremLength += MqttProtoIdentifierv4.length + 3;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tremLength += UTF8Length(this.clientId) + 2;\n\t\t\t\tif (this.willMessage !== undefined) {\n\t\t\t\t\tremLength += UTF8Length(this.willMessage.destinationName) + 2;\n\t\t\t\t\t// Will message is always a string, sent as UTF-8 characters with a preceding length.\n\t\t\t\t\twillMessagePayloadBytes = this.willMessage.payloadBytes;\n\t\t\t\t\tif (!(willMessagePayloadBytes instanceof Uint8Array))\n\t\t\t\t\t\twillMessagePayloadBytes = new Uint8Array(payloadBytes);\n\t\t\t\t\tremLength += willMessagePayloadBytes.byteLength +2;\n\t\t\t\t}\n\t\t\t\tif (this.userName !== undefined)\n\t\t\t\t\tremLength += UTF8Length(this.userName) + 2;\n\t\t\t\tif (this.password !== undefined)\n\t\t\t\t\tremLength += UTF8Length(this.password) + 2;\n\t\t\t\tbreak;\n\n\t\t\t// Subscribe, Unsubscribe can both contain topic strings\n\t\t\tcase MESSAGE_TYPE.SUBSCRIBE:\n\t\t\t\tfirst |= 0x02; // Qos = 1;\n\t\t\t\tfor ( var i = 0; i < this.topics.length; i++) {\n\t\t\t\t\ttopicStrLength[i] = UTF8Length(this.topics[i]);\n\t\t\t\t\tremLength += topicStrLength[i] + 2;\n\t\t\t\t}\n\t\t\t\tremLength += this.requestedQos.length; // 1 byte for each topic's Qos\n\t\t\t\t// QoS on Subscribe only\n\t\t\t\tbreak;\n\n\t\t\tcase MESSAGE_TYPE.UNSUBSCRIBE:\n\t\t\t\tfirst |= 0x02; // Qos = 1;\n\t\t\t\tfor ( var i = 0; i < this.topics.length; i++) {\n\t\t\t\t\ttopicStrLength[i] = UTF8Length(this.topics[i]);\n\t\t\t\t\tremLength += topicStrLength[i] + 2;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase MESSAGE_TYPE.PUBREL:\n\t\t\t\tfirst |= 0x02; // Qos = 1;\n\t\t\t\tbreak;\n\n\t\t\tcase MESSAGE_TYPE.PUBLISH:\n\t\t\t\tif (this.payloadMessage.duplicate) first |= 0x08;\n\t\t\t\tfirst  = first |= (this.payloadMessage.qos << 1);\n\t\t\t\tif (this.payloadMessage.retained) first |= 0x01;\n\t\t\t\tdestinationNameLength = UTF8Length(this.payloadMessage.destinationName);\n\t\t\t\tremLength += destinationNameLength + 2;\n\t\t\t\tvar payloadBytes = this.payloadMessage.payloadBytes;\n\t\t\t\tremLength += payloadBytes.byteLength;\n\t\t\t\tif (payloadBytes instanceof ArrayBuffer)\n\t\t\t\t\tpayloadBytes = new Uint8Array(payloadBytes);\n\t\t\t\telse if (!(payloadBytes instanceof Uint8Array))\n\t\t\t\t\tpayloadBytes = new Uint8Array(payloadBytes.buffer);\n\t\t\t\tbreak;\n\n\t\t\tcase MESSAGE_TYPE.DISCONNECT:\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Now we can allocate a buffer for the message\n\n\t\t\tvar mbi = encodeMBI(remLength);  // Convert the length to MQTT MBI format\n\t\t\tvar pos = mbi.length + 1;        // Offset of start of variable header\n\t\t\tvar buffer = new ArrayBuffer(remLength + pos);\n\t\t\tvar byteStream = new Uint8Array(buffer);    // view it as a sequence of bytes\n\n\t\t\t//Write the fixed header into the buffer\n\t\t\tbyteStream[0] = first;\n\t\t\tbyteStream.set(mbi,1);\n\n\t\t\t// If this is a PUBLISH then the variable header starts with a topic\n\t\t\tif (this.type == MESSAGE_TYPE.PUBLISH)\n\t\t\t\tpos = writeString(this.payloadMessage.destinationName, destinationNameLength, byteStream, pos);\n\t\t\t// If this is a CONNECT then the variable header contains the protocol name/version, flags and keepalive time\n\n\t\t\telse if (this.type == MESSAGE_TYPE.CONNECT) {\n\t\t\t\tswitch (this.mqttVersion) {\n\t\t\t\tcase 3:\n\t\t\t\t\tbyteStream.set(MqttProtoIdentifierv3, pos);\n\t\t\t\t\tpos += MqttProtoIdentifierv3.length;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\tbyteStream.set(MqttProtoIdentifierv4, pos);\n\t\t\t\t\tpos += MqttProtoIdentifierv4.length;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tvar connectFlags = 0;\n\t\t\t\tif (this.cleanSession)\n\t\t\t\t\tconnectFlags = 0x02;\n\t\t\t\tif (this.willMessage !== undefined ) {\n\t\t\t\t\tconnectFlags |= 0x04;\n\t\t\t\t\tconnectFlags |= (this.willMessage.qos<<3);\n\t\t\t\t\tif (this.willMessage.retained) {\n\t\t\t\t\t\tconnectFlags |= 0x20;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.userName !== undefined)\n\t\t\t\t\tconnectFlags |= 0x80;\n\t\t\t\tif (this.password !== undefined)\n\t\t\t\t\tconnectFlags |= 0x40;\n\t\t\t\tbyteStream[pos++] = connectFlags;\n\t\t\t\tpos = writeUint16 (this.keepAliveInterval, byteStream, pos);\n\t\t\t}\n\n\t\t\t// Output the messageIdentifier - if there is one\n\t\t\tif (this.messageIdentifier !== undefined)\n\t\t\t\tpos = writeUint16 (this.messageIdentifier, byteStream, pos);\n\n\t\t\tswitch(this.type) {\n\t\t\tcase MESSAGE_TYPE.CONNECT:\n\t\t\t\tpos = writeString(this.clientId, UTF8Length(this.clientId), byteStream, pos);\n\t\t\t\tif (this.willMessage !== undefined) {\n\t\t\t\t\tpos = writeString(this.willMessage.destinationName, UTF8Length(this.willMessage.destinationName), byteStream, pos);\n\t\t\t\t\tpos = writeUint16(willMessagePayloadBytes.byteLength, byteStream, pos);\n\t\t\t\t\tbyteStream.set(willMessagePayloadBytes, pos);\n\t\t\t\t\tpos += willMessagePayloadBytes.byteLength;\n\n\t\t\t\t}\n\t\t\t\tif (this.userName !== undefined)\n\t\t\t\t\tpos = writeString(this.userName, UTF8Length(this.userName), byteStream, pos);\n\t\t\t\tif (this.password !== undefined)\n\t\t\t\t\tpos = writeString(this.password, UTF8Length(this.password), byteStream, pos);\n\t\t\t\tbreak;\n\n\t\t\tcase MESSAGE_TYPE.PUBLISH:\n\t\t\t\t// PUBLISH has a text or binary payload, if text do not add a 2 byte length field, just the UTF characters.\n\t\t\t\tbyteStream.set(payloadBytes, pos);\n\n\t\t\t\tbreak;\n\n\t\t\t\t//    \t    case MESSAGE_TYPE.PUBREC:\n\t\t\t\t//    \t    case MESSAGE_TYPE.PUBREL:\n\t\t\t\t//    \t    case MESSAGE_TYPE.PUBCOMP:\n\t\t\t\t//    \t    \tbreak;\n\n\t\t\tcase MESSAGE_TYPE.SUBSCRIBE:\n\t\t\t\t// SUBSCRIBE has a list of topic strings and request QoS\n\t\t\t\tfor (var i=0; i<this.topics.length; i++) {\n\t\t\t\t\tpos = writeString(this.topics[i], topicStrLength[i], byteStream, pos);\n\t\t\t\t\tbyteStream[pos++] = this.requestedQos[i];\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase MESSAGE_TYPE.UNSUBSCRIBE:\n\t\t\t\t// UNSUBSCRIBE has a list of topic strings\n\t\t\t\tfor (var i=0; i<this.topics.length; i++)\n\t\t\t\t\tpos = writeString(this.topics[i], topicStrLength[i], byteStream, pos);\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\t// Do nothing.\n\t\t\t}\n\n\t\t\treturn buffer;\n\t\t};\n\n\t\tfunction decodeMessage(input,pos) {\n\t\t\tvar startingPos = pos;\n\t\t\tvar first = input[pos];\n\t\t\tvar type = first >> 4;\n\t\t\tvar messageInfo = first &= 0x0f;\n\t\t\tpos += 1;\n\n\n\t\t\t// Decode the remaining length (MBI format)\n\n\t\t\tvar digit;\n\t\t\tvar remLength = 0;\n\t\t\tvar multiplier = 1;\n\t\t\tdo {\n\t\t\t\tif (pos == input.length) {\n\t\t\t\t\treturn [null,startingPos];\n\t\t\t\t}\n\t\t\t\tdigit = input[pos++];\n\t\t\t\tremLength += ((digit & 0x7F) * multiplier);\n\t\t\t\tmultiplier *= 128;\n\t\t\t} while ((digit & 0x80) !== 0);\n\n\t\t\tvar endPos = pos+remLength;\n\t\t\tif (endPos > input.length) {\n\t\t\t\treturn [null,startingPos];\n\t\t\t}\n\n\t\t\tvar wireMessage = new WireMessage(type);\n\t\t\tswitch(type) {\n\t\t\tcase MESSAGE_TYPE.CONNACK:\n\t\t\t\tvar connectAcknowledgeFlags = input[pos++];\n\t\t\t\tif (connectAcknowledgeFlags & 0x01)\n\t\t\t\t\twireMessage.sessionPresent = true;\n\t\t\t\twireMessage.returnCode = input[pos++];\n\t\t\t\tbreak;\n\n\t\t\tcase MESSAGE_TYPE.PUBLISH:\n\t\t\t\tvar qos = (messageInfo >> 1) & 0x03;\n\n\t\t\t\tvar len = readUint16(input, pos);\n\t\t\t\tpos += 2;\n\t\t\t\tvar topicName = parseUTF8(input, pos, len);\n\t\t\t\tpos += len;\n\t\t\t\t// If QoS 1 or 2 there will be a messageIdentifier\n\t\t\t\tif (qos > 0) {\n\t\t\t\t\twireMessage.messageIdentifier = readUint16(input, pos);\n\t\t\t\t\tpos += 2;\n\t\t\t\t}\n\n\t\t\t\tvar message = new Message(input.subarray(pos, endPos));\n\t\t\t\tif ((messageInfo & 0x01) == 0x01)\n\t\t\t\t\tmessage.retained = true;\n\t\t\t\tif ((messageInfo & 0x08) == 0x08)\n\t\t\t\t\tmessage.duplicate =  true;\n\t\t\t\tmessage.qos = qos;\n\t\t\t\tmessage.destinationName = topicName;\n\t\t\t\twireMessage.payloadMessage = message;\n\t\t\t\tbreak;\n\n\t\t\tcase  MESSAGE_TYPE.PUBACK:\n\t\t\tcase  MESSAGE_TYPE.PUBREC:\n\t\t\tcase  MESSAGE_TYPE.PUBREL:\n\t\t\tcase  MESSAGE_TYPE.PUBCOMP:\n\t\t\tcase  MESSAGE_TYPE.UNSUBACK:\n\t\t\t\twireMessage.messageIdentifier = readUint16(input, pos);\n\t\t\t\tbreak;\n\n\t\t\tcase  MESSAGE_TYPE.SUBACK:\n\t\t\t\twireMessage.messageIdentifier = readUint16(input, pos);\n\t\t\t\tpos += 2;\n\t\t\t\twireMessage.returnCode = input.subarray(pos, endPos);\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn [wireMessage,endPos];\n\t\t}\n\n\t\tfunction writeUint16(input, buffer, offset) {\n\t\t\tbuffer[offset++] = input >> 8;      //MSB\n\t\t\tbuffer[offset++] = input % 256;     //LSB\n\t\t\treturn offset;\n\t\t}\n\n\t\tfunction writeString(input, utf8Length, buffer, offset) {\n\t\t\toffset = writeUint16(utf8Length, buffer, offset);\n\t\t\tstringToUTF8(input, buffer, offset);\n\t\t\treturn offset + utf8Length;\n\t\t}\n\n\t\tfunction readUint16(buffer, offset) {\n\t\t\treturn 256*buffer[offset] + buffer[offset+1];\n\t\t}\n\n\t\t/**\n\t * Encodes an MQTT Multi-Byte Integer\n\t * @private\n\t */\n\t\tfunction encodeMBI(number) {\n\t\t\tvar output = new Array(1);\n\t\t\tvar numBytes = 0;\n\n\t\t\tdo {\n\t\t\t\tvar digit = number % 128;\n\t\t\t\tnumber = number >> 7;\n\t\t\t\tif (number > 0) {\n\t\t\t\t\tdigit |= 0x80;\n\t\t\t\t}\n\t\t\t\toutput[numBytes++] = digit;\n\t\t\t} while ( (number > 0) && (numBytes<4) );\n\n\t\t\treturn output;\n\t\t}\n\n\t\t/**\n\t * Takes a String and calculates its length in bytes when encoded in UTF8.\n\t * @private\n\t */\n\t\tfunction UTF8Length(input) {\n\t\t\tvar output = 0;\n\t\t\tfor (var i = 0; i<input.length; i++)\n\t\t\t{\n\t\t\t\tvar charCode = input.charCodeAt(i);\n\t\t\t\tif (charCode > 0x7FF)\n\t\t\t\t{\n\t\t\t\t\t// Surrogate pair means its a 4 byte character\n\t\t\t\t\tif (0xD800 <= charCode && charCode <= 0xDBFF)\n\t\t\t\t\t{\n\t\t\t\t\t\ti++;\n\t\t\t\t\t\toutput++;\n\t\t\t\t\t}\n\t\t\t\t\toutput +=3;\n\t\t\t\t}\n\t\t\t\telse if (charCode > 0x7F)\n\t\t\t\t\toutput +=2;\n\t\t\t\telse\n\t\t\t\t\toutput++;\n\t\t\t}\n\t\t\treturn output;\n\t\t}\n\n\t\t/**\n\t * Takes a String and writes it into an array as UTF8 encoded bytes.\n\t * @private\n\t */\n\t\tfunction stringToUTF8(input, output, start) {\n\t\t\tvar pos = start;\n\t\t\tfor (var i = 0; i<input.length; i++) {\n\t\t\t\tvar charCode = input.charCodeAt(i);\n\n\t\t\t\t// Check for a surrogate pair.\n\t\t\t\tif (0xD800 <= charCode && charCode <= 0xDBFF) {\n\t\t\t\t\tvar lowCharCode = input.charCodeAt(++i);\n\t\t\t\t\tif (isNaN(lowCharCode)) {\n\t\t\t\t\t\tthrow new Error(format(ERROR.MALFORMED_UNICODE, [charCode, lowCharCode]));\n\t\t\t\t\t}\n\t\t\t\t\tcharCode = ((charCode - 0xD800)<<10) + (lowCharCode - 0xDC00) + 0x10000;\n\n\t\t\t\t}\n\n\t\t\t\tif (charCode <= 0x7F) {\n\t\t\t\t\toutput[pos++] = charCode;\n\t\t\t\t} else if (charCode <= 0x7FF) {\n\t\t\t\t\toutput[pos++] = charCode>>6  & 0x1F | 0xC0;\n\t\t\t\t\toutput[pos++] = charCode     & 0x3F | 0x80;\n\t\t\t\t} else if (charCode <= 0xFFFF) {\n\t\t\t\t\toutput[pos++] = charCode>>12 & 0x0F | 0xE0;\n\t\t\t\t\toutput[pos++] = charCode>>6  & 0x3F | 0x80;\n\t\t\t\t\toutput[pos++] = charCode     & 0x3F | 0x80;\n\t\t\t\t} else {\n\t\t\t\t\toutput[pos++] = charCode>>18 & 0x07 | 0xF0;\n\t\t\t\t\toutput[pos++] = charCode>>12 & 0x3F | 0x80;\n\t\t\t\t\toutput[pos++] = charCode>>6  & 0x3F | 0x80;\n\t\t\t\t\toutput[pos++] = charCode     & 0x3F | 0x80;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn output;\n\t\t}\n\n\t\tfunction parseUTF8(input, offset, length) {\n\t\t\tvar output = \"\";\n\t\t\tvar utf16;\n\t\t\tvar pos = offset;\n\n\t\t\twhile (pos < offset+length)\n\t\t\t{\n\t\t\t\tvar byte1 = input[pos++];\n\t\t\t\tif (byte1 < 128)\n\t\t\t\t\tutf16 = byte1;\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar byte2 = input[pos++]-128;\n\t\t\t\t\tif (byte2 < 0)\n\t\t\t\t\t\tthrow new Error(format(ERROR.MALFORMED_UTF, [byte1.toString(16), byte2.toString(16),\"\"]));\n\t\t\t\t\tif (byte1 < 0xE0)             // 2 byte character\n\t\t\t\t\t\tutf16 = 64*(byte1-0xC0) + byte2;\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tvar byte3 = input[pos++]-128;\n\t\t\t\t\t\tif (byte3 < 0)\n\t\t\t\t\t\t\tthrow new Error(format(ERROR.MALFORMED_UTF, [byte1.toString(16), byte2.toString(16), byte3.toString(16)]));\n\t\t\t\t\t\tif (byte1 < 0xF0)        // 3 byte character\n\t\t\t\t\t\t\tutf16 = 4096*(byte1-0xE0) + 64*byte2 + byte3;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar byte4 = input[pos++]-128;\n\t\t\t\t\t\t\tif (byte4 < 0)\n\t\t\t\t\t\t\t\tthrow new Error(format(ERROR.MALFORMED_UTF, [byte1.toString(16), byte2.toString(16), byte3.toString(16), byte4.toString(16)]));\n\t\t\t\t\t\t\tif (byte1 < 0xF8)        // 4 byte character\n\t\t\t\t\t\t\t\tutf16 = 262144*(byte1-0xF0) + 4096*byte2 + 64*byte3 + byte4;\n\t\t\t\t\t\t\telse                     // longer encodings are not supported\n\t\t\t\t\t\t\t\tthrow new Error(format(ERROR.MALFORMED_UTF, [byte1.toString(16), byte2.toString(16), byte3.toString(16), byte4.toString(16)]));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (utf16 > 0xFFFF)   // 4 byte character - express as a surrogate pair\n\t\t\t\t{\n\t\t\t\t\tutf16 -= 0x10000;\n\t\t\t\t\toutput += String.fromCharCode(0xD800 + (utf16 >> 10)); // lead character\n\t\t\t\t\tutf16 = 0xDC00 + (utf16 & 0x3FF);  // trail character\n\t\t\t\t}\n\t\t\t\toutput += String.fromCharCode(utf16);\n\t\t\t}\n\t\t\treturn output;\n\t\t}\n\n\t\t/**\n\t * Repeat keepalive requests, monitor responses.\n\t * @ignore\n\t */\n\t\tvar Pinger = function(client, keepAliveInterval) {\n\t\t\tthis._client = client;\n\t\t\tthis._keepAliveInterval = keepAliveInterval*1000;\n\t\t\tthis.isReset = false;\n\n\t\t\tvar pingReq = new WireMessage(MESSAGE_TYPE.PINGREQ).encode();\n\n\t\t\tvar doTimeout = function (pinger) {\n\t\t\t\treturn function () {\n\t\t\t\t\treturn doPing.apply(pinger);\n\t\t\t\t};\n\t\t\t};\n\n\t\t\t/** @ignore */\n\t\t\tvar doPing = function() {\n\t\t\t\tif (!this.isReset) {\n\t\t\t\t\tthis._client._trace(\"Pinger.doPing\", \"Timed out\");\n\t\t\t\t\tthis._client._disconnected( ERROR.PING_TIMEOUT.code , format(ERROR.PING_TIMEOUT));\n\t\t\t\t} else {\n\t\t\t\t\tthis.isReset = false;\n\t\t\t\t\tthis._client._trace(\"Pinger.doPing\", \"send PINGREQ\");\n\t\t\t\t\tthis._client.socket.send(pingReq);\n\t\t\t\t\tthis.timeout = setTimeout(doTimeout(this), this._keepAliveInterval);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.reset = function() {\n\t\t\t\tthis.isReset = true;\n\t\t\t\tclearTimeout(this.timeout);\n\t\t\t\tif (this._keepAliveInterval > 0)\n\t\t\t\t\tthis.timeout = setTimeout(doTimeout(this), this._keepAliveInterval);\n\t\t\t};\n\n\t\t\tthis.cancel = function() {\n\t\t\t\tclearTimeout(this.timeout);\n\t\t\t};\n\t\t};\n\n\t\t/**\n\t * Monitor request completion.\n\t * @ignore\n\t */\n\t\tvar Timeout = function(client, timeoutSeconds, action, args) {\n\t\t\tif (!timeoutSeconds)\n\t\t\t\ttimeoutSeconds = 30;\n\n\t\t\tvar doTimeout = function (action, client, args) {\n\t\t\t\treturn function () {\n\t\t\t\t\treturn action.apply(client, args);\n\t\t\t\t};\n\t\t\t};\n\t\t\tthis.timeout = setTimeout(doTimeout(action, client, args), timeoutSeconds * 1000);\n\n\t\t\tthis.cancel = function() {\n\t\t\t\tclearTimeout(this.timeout);\n\t\t\t};\n\t\t};\n\n\t/**\n\t * Internal implementation of the Websockets MQTT V3.1 client.\n\t *\n\t * @name Paho.ClientImpl @constructor\n\t * @param {String} host the DNS nameof the webSocket host.\n\t * @param {Number} port the port number for that host.\n\t * @param {String} clientId the MQ client identifier.\n\t */\n\t\tvar ClientImpl = function (uri, host, port, path, clientId) {\n\t\t// Check dependencies are satisfied in this browser.\n\t\t\tif (!(\"WebSocket\" in global && global.WebSocket !== null)) {\n\t\t\t\tthrow new Error(format(ERROR.UNSUPPORTED, [\"WebSocket\"]));\n\t\t\t}\n\t\t\tif (!(\"ArrayBuffer\" in global && global.ArrayBuffer !== null)) {\n\t\t\t\tthrow new Error(format(ERROR.UNSUPPORTED, [\"ArrayBuffer\"]));\n\t\t\t}\n\t\t\tthis._trace(\"Paho.Client\", uri, host, port, path, clientId);\n\n\t\t\tthis.host = host;\n\t\t\tthis.port = port;\n\t\t\tthis.path = path;\n\t\t\tthis.uri = uri;\n\t\t\tthis.clientId = clientId;\n\t\t\tthis._wsuri = null;\n\n\t\t\t// Local storagekeys are qualified with the following string.\n\t\t\t// The conditional inclusion of path in the key is for backward\n\t\t\t// compatibility to when the path was not configurable and assumed to\n\t\t\t// be /mqtt\n\t\t\tthis._localKey=host+\":\"+port+(path!=\"/mqtt\"?\":\"+path:\"\")+\":\"+clientId+\":\";\n\n\t\t\t// Create private instance-only message queue\n\t\t\t// Internal queue of messages to be sent, in sending order.\n\t\t\tthis._msg_queue = [];\n\t\t\tthis._buffered_msg_queue = [];\n\n\t\t\t// Messages we have sent and are expecting a response for, indexed by their respective message ids.\n\t\t\tthis._sentMessages = {};\n\n\t\t\t// Messages we have received and acknowleged and are expecting a confirm message for\n\t\t\t// indexed by their respective message ids.\n\t\t\tthis._receivedMessages = {};\n\n\t\t\t// Internal list of callbacks to be executed when messages\n\t\t\t// have been successfully sent over web socket, e.g. disconnect\n\t\t\t// when it doesn't have to wait for ACK, just message is dispatched.\n\t\t\tthis._notify_msg_sent = {};\n\n\t\t\t// Unique identifier for SEND messages, incrementing\n\t\t\t// counter as messages are sent.\n\t\t\tthis._message_identifier = 1;\n\n\t\t\t// Used to determine the transmission sequence of stored sent messages.\n\t\t\tthis._sequence = 0;\n\n\n\t\t\t// Load the local state, if any, from the saved version, only restore state relevant to this client.\n\t\t\tfor (var key in localStorage)\n\t\t\t\tif (   key.indexOf(\"Sent:\"+this._localKey) === 0 || key.indexOf(\"Received:\"+this._localKey) === 0)\n\t\t\t\t\tthis.restore(key);\n\t\t};\n\n\t\t// Messaging Client public instance members.\n\t\tClientImpl.prototype.host = null;\n\t\tClientImpl.prototype.port = null;\n\t\tClientImpl.prototype.path = null;\n\t\tClientImpl.prototype.uri = null;\n\t\tClientImpl.prototype.clientId = null;\n\n\t\t// Messaging Client private instance members.\n\t\tClientImpl.prototype.socket = null;\n\t\t/* true once we have received an acknowledgement to a CONNECT packet. */\n\t\tClientImpl.prototype.connected = false;\n\t\t/* The largest message identifier allowed, may not be larger than 2**16 but\n\t\t * if set smaller reduces the maximum number of outbound messages allowed.\n\t\t */\n\t\tClientImpl.prototype.maxMessageIdentifier = 65536;\n\t\tClientImpl.prototype.connectOptions = null;\n\t\tClientImpl.prototype.hostIndex = null;\n\t\tClientImpl.prototype.onConnected = null;\n\t\tClientImpl.prototype.onConnectionLost = null;\n\t\tClientImpl.prototype.onMessageDelivered = null;\n\t\tClientImpl.prototype.onMessageArrived = null;\n\t\tClientImpl.prototype.traceFunction = null;\n\t\tClientImpl.prototype._msg_queue = null;\n\t\tClientImpl.prototype._buffered_msg_queue = null;\n\t\tClientImpl.prototype._connectTimeout = null;\n\t\t/* The sendPinger monitors how long we allow before we send data to prove to the server that we are alive. */\n\t\tClientImpl.prototype.sendPinger = null;\n\t\t/* The receivePinger monitors how long we allow before we require evidence that the server is alive. */\n\t\tClientImpl.prototype.receivePinger = null;\n\t\tClientImpl.prototype._reconnectInterval = 1; // Reconnect Delay, starts at 1 second\n\t\tClientImpl.prototype._reconnecting = false;\n\t\tClientImpl.prototype._reconnectTimeout = null;\n\t\tClientImpl.prototype.disconnectedPublishing = false;\n\t\tClientImpl.prototype.disconnectedBufferSize = 5000;\n\n\t\tClientImpl.prototype.receiveBuffer = null;\n\n\t\tClientImpl.prototype._traceBuffer = null;\n\t\tClientImpl.prototype._MAX_TRACE_ENTRIES = 100;\n\n\t\tClientImpl.prototype.connect = function (connectOptions) {\n\t\t\tvar connectOptionsMasked = this._traceMask(connectOptions, \"password\");\n\t\t\tthis._trace(\"Client.connect\", connectOptionsMasked, this.socket, this.connected);\n\n\t\t\tif (this.connected)\n\t\t\t\tthrow new Error(format(ERROR.INVALID_STATE, [\"already connected\"]));\n\t\t\tif (this.socket)\n\t\t\t\tthrow new Error(format(ERROR.INVALID_STATE, [\"already connected\"]));\n\n\t\t\tif (this._reconnecting) {\n\t\t\t// connect() function is called while reconnect is in progress.\n\t\t\t// Terminate the auto reconnect process to use new connect options.\n\t\t\t\tthis._reconnectTimeout.cancel();\n\t\t\t\tthis._reconnectTimeout = null;\n\t\t\t\tthis._reconnecting = false;\n\t\t\t}\n\n\t\t\tthis.connectOptions = connectOptions;\n\t\t\tthis._reconnectInterval = 1;\n\t\t\tthis._reconnecting = false;\n\t\t\tif (connectOptions.uris) {\n\t\t\t\tthis.hostIndex = 0;\n\t\t\t\tthis._doConnect(connectOptions.uris[0]);\n\t\t\t} else {\n\t\t\t\tthis._doConnect(this.uri);\n\t\t\t}\n\n\t\t};\n\n\t\tClientImpl.prototype.subscribe = function (filter, subscribeOptions) {\n\t\t\tthis._trace(\"Client.subscribe\", filter, subscribeOptions);\n\n\t\t\tif (!this.connected)\n\t\t\t\tthrow new Error(format(ERROR.INVALID_STATE, [\"not connected\"]));\n\n            var wireMessage = new WireMessage(MESSAGE_TYPE.SUBSCRIBE);\n            wireMessage.topics = filter.constructor === Array ? filter : [filter];\n            if (subscribeOptions.qos === undefined)\n                subscribeOptions.qos = 0;\n            wireMessage.requestedQos = [];\n            for (var i = 0; i < wireMessage.topics.length; i++)\n                wireMessage.requestedQos[i] = subscribeOptions.qos;\n\n\t\t\tif (subscribeOptions.onSuccess) {\n\t\t\t\twireMessage.onSuccess = function(grantedQos) {subscribeOptions.onSuccess({invocationContext:subscribeOptions.invocationContext,grantedQos:grantedQos});};\n\t\t\t}\n\n\t\t\tif (subscribeOptions.onFailure) {\n\t\t\t\twireMessage.onFailure = function(errorCode) {subscribeOptions.onFailure({invocationContext:subscribeOptions.invocationContext,errorCode:errorCode, errorMessage:format(errorCode)});};\n\t\t\t}\n\n\t\t\tif (subscribeOptions.timeout) {\n\t\t\t\twireMessage.timeOut = new Timeout(this, subscribeOptions.timeout, subscribeOptions.onFailure,\n\t\t\t\t\t[{invocationContext:subscribeOptions.invocationContext,\n\t\t\t\t\t\terrorCode:ERROR.SUBSCRIBE_TIMEOUT.code,\n\t\t\t\t\t\terrorMessage:format(ERROR.SUBSCRIBE_TIMEOUT)}]);\n\t\t\t}\n\n\t\t\t// All subscriptions return a SUBACK.\n\t\t\tthis._requires_ack(wireMessage);\n\t\t\tthis._schedule_message(wireMessage);\n\t\t};\n\n\t\t/** @ignore */\n\t\tClientImpl.prototype.unsubscribe = function(filter, unsubscribeOptions) {\n\t\t\tthis._trace(\"Client.unsubscribe\", filter, unsubscribeOptions);\n\n\t\t\tif (!this.connected)\n\t\t\t\tthrow new Error(format(ERROR.INVALID_STATE, [\"not connected\"]));\n\n            var wireMessage = new WireMessage(MESSAGE_TYPE.UNSUBSCRIBE);\n            wireMessage.topics = filter.constructor === Array ? filter : [filter];\n\n\t\t\tif (unsubscribeOptions.onSuccess) {\n\t\t\t\twireMessage.callback = function() {unsubscribeOptions.onSuccess({invocationContext:unsubscribeOptions.invocationContext});};\n\t\t\t}\n\t\t\tif (unsubscribeOptions.timeout) {\n\t\t\t\twireMessage.timeOut = new Timeout(this, unsubscribeOptions.timeout, unsubscribeOptions.onFailure,\n\t\t\t\t\t[{invocationContext:unsubscribeOptions.invocationContext,\n\t\t\t\t\t\terrorCode:ERROR.UNSUBSCRIBE_TIMEOUT.code,\n\t\t\t\t\t\terrorMessage:format(ERROR.UNSUBSCRIBE_TIMEOUT)}]);\n\t\t\t}\n\n\t\t\t// All unsubscribes return a SUBACK.\n\t\t\tthis._requires_ack(wireMessage);\n\t\t\tthis._schedule_message(wireMessage);\n\t\t};\n\n\t\tClientImpl.prototype.send = function (message) {\n\t\t\tthis._trace(\"Client.send\", message);\n\n\t\t\tvar wireMessage = new WireMessage(MESSAGE_TYPE.PUBLISH);\n\t\t\twireMessage.payloadMessage = message;\n\n\t\t\tif (this.connected) {\n\t\t\t// Mark qos 1 & 2 message as \"ACK required\"\n\t\t\t// For qos 0 message, invoke onMessageDelivered callback if there is one.\n\t\t\t// Then schedule the message.\n\t\t\t\tif (message.qos > 0) {\n\t\t\t\t\tthis._requires_ack(wireMessage);\n\t\t\t\t} else if (this.onMessageDelivered) {\n\t\t\t\t\tthis._notify_msg_sent[wireMessage] = this.onMessageDelivered(wireMessage.payloadMessage);\n\t\t\t\t}\n\t\t\t\tthis._schedule_message(wireMessage);\n\t\t\t} else {\n\t\t\t// Currently disconnected, will not schedule this message\n\t\t\t// Check if reconnecting is in progress and disconnected publish is enabled.\n\t\t\t\tif (this._reconnecting && this.disconnectedPublishing) {\n\t\t\t\t// Check the limit which include the \"required ACK\" messages\n\t\t\t\t\tvar messageCount = Object.keys(this._sentMessages).length + this._buffered_msg_queue.length;\n\t\t\t\t\tif (messageCount > this.disconnectedBufferSize) {\n\t\t\t\t\t\tthrow new Error(format(ERROR.BUFFER_FULL, [this.disconnectedBufferSize]));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (message.qos > 0) {\n\t\t\t\t\t\t// Mark this message as \"ACK required\"\n\t\t\t\t\t\t\tthis._requires_ack(wireMessage);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\twireMessage.sequence = ++this._sequence;\n\t\t\t\t\t\t\t// Add messages in fifo order to array, by adding to start\n\t\t\t\t\t\t\tthis._buffered_msg_queue.unshift(wireMessage);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(format(ERROR.INVALID_STATE, [\"not connected\"]));\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tClientImpl.prototype.disconnect = function () {\n\t\t\tthis._trace(\"Client.disconnect\");\n\n\t\t\tif (this._reconnecting) {\n\t\t\t// disconnect() function is called while reconnect is in progress.\n\t\t\t// Terminate the auto reconnect process.\n\t\t\t\tthis._reconnectTimeout.cancel();\n\t\t\t\tthis._reconnectTimeout = null;\n\t\t\t\tthis._reconnecting = false;\n\t\t\t}\n\n\t\t\tif (!this.socket)\n\t\t\t\tthrow new Error(format(ERROR.INVALID_STATE, [\"not connecting or connected\"]));\n\n\t\t\tvar wireMessage = new WireMessage(MESSAGE_TYPE.DISCONNECT);\n\n\t\t\t// Run the disconnected call back as soon as the message has been sent,\n\t\t\t// in case of a failure later on in the disconnect processing.\n\t\t\t// as a consequence, the _disconected call back may be run several times.\n\t\t\tthis._notify_msg_sent[wireMessage] = scope(this._disconnected, this);\n\n\t\t\tthis._schedule_message(wireMessage);\n\t\t};\n\n\t\tClientImpl.prototype.getTraceLog = function () {\n\t\t\tif ( this._traceBuffer !== null ) {\n\t\t\t\tthis._trace(\"Client.getTraceLog\", new Date());\n\t\t\t\tthis._trace(\"Client.getTraceLog in flight messages\", this._sentMessages.length);\n\t\t\t\tfor (var key in this._sentMessages)\n\t\t\t\t\tthis._trace(\"_sentMessages \",key, this._sentMessages[key]);\n\t\t\t\tfor (var key in this._receivedMessages)\n\t\t\t\t\tthis._trace(\"_receivedMessages \",key, this._receivedMessages[key]);\n\n\t\t\t\treturn this._traceBuffer;\n\t\t\t}\n\t\t};\n\n\t\tClientImpl.prototype.startTrace = function () {\n\t\t\tif ( this._traceBuffer === null ) {\n\t\t\t\tthis._traceBuffer = [];\n\t\t\t}\n\t\t\tthis._trace(\"Client.startTrace\", new Date(), version);\n\t\t};\n\n\t\tClientImpl.prototype.stopTrace = function () {\n\t\t\tdelete this._traceBuffer;\n\t\t};\n\n\t\tClientImpl.prototype._doConnect = function (wsurl) {\n\t\t// When the socket is open, this client will send the CONNECT WireMessage using the saved parameters.\n\t\t\tif (this.connectOptions.useSSL) {\n\t\t\t\tvar uriParts = wsurl.split(\":\");\n\t\t\t\turiParts[0] = \"wss\";\n\t\t\t\twsurl = uriParts.join(\":\");\n\t\t\t}\n\t\t\tthis._wsuri = wsurl;\n\t\t\tthis.connected = false;\n\n\n\n\t\t\tif (this.connectOptions.mqttVersion < 4) {\n\t\t\t\tthis.socket = new WebSocket(wsurl, [\"mqttv3.1\"]);\n\t\t\t} else {\n\t\t\t\tthis.socket = new WebSocket(wsurl, [\"mqtt\"]);\n\t\t\t}\n\t\t\tthis.socket.binaryType = \"arraybuffer\";\n\t\t\tthis.socket.onopen = scope(this._on_socket_open, this);\n\t\t\tthis.socket.onmessage = scope(this._on_socket_message, this);\n\t\t\tthis.socket.onerror = scope(this._on_socket_error, this);\n\t\t\tthis.socket.onclose = scope(this._on_socket_close, this);\n\n\t\t\tthis.sendPinger = new Pinger(this, this.connectOptions.keepAliveInterval);\n\t\t\tthis.receivePinger = new Pinger(this, this.connectOptions.keepAliveInterval);\n\t\t\tif (this._connectTimeout) {\n\t\t\t\tthis._connectTimeout.cancel();\n\t\t\t\tthis._connectTimeout = null;\n\t\t\t}\n\t\t\tthis._connectTimeout = new Timeout(this, this.connectOptions.timeout, this._disconnected,  [ERROR.CONNECT_TIMEOUT.code, format(ERROR.CONNECT_TIMEOUT)]);\n\t\t};\n\n\n\t\t// Schedule a new message to be sent over the WebSockets\n\t\t// connection. CONNECT messages cause WebSocket connection\n\t\t// to be started. All other messages are queued internally\n\t\t// until this has happened. When WS connection starts, process\n\t\t// all outstanding messages.\n\t\tClientImpl.prototype._schedule_message = function (message) {\n\t\t\t// Add messages in fifo order to array, by adding to start\n\t\t\tthis._msg_queue.unshift(message);\n\t\t\t// Process outstanding messages in the queue if we have an  open socket, and have received CONNACK.\n\t\t\tif (this.connected) {\n\t\t\t\tthis._process_queue();\n\t\t\t}\n\t\t};\n\n\t\tClientImpl.prototype.store = function(prefix, wireMessage) {\n\t\t\tvar storedMessage = {type:wireMessage.type, messageIdentifier:wireMessage.messageIdentifier, version:1};\n\n\t\t\tswitch(wireMessage.type) {\n\t\t\tcase MESSAGE_TYPE.PUBLISH:\n\t\t\t\tif(wireMessage.pubRecReceived)\n\t\t\t\t\tstoredMessage.pubRecReceived = true;\n\n\t\t\t\t// Convert the payload to a hex string.\n\t\t\t\tstoredMessage.payloadMessage = {};\n\t\t\t\tvar hex = \"\";\n\t\t\t\tvar messageBytes = wireMessage.payloadMessage.payloadBytes;\n\t\t\t\tfor (var i=0; i<messageBytes.length; i++) {\n\t\t\t\t\tif (messageBytes[i] <= 0xF)\n\t\t\t\t\t\thex = hex+\"0\"+messageBytes[i].toString(16);\n\t\t\t\t\telse\n\t\t\t\t\t\thex = hex+messageBytes[i].toString(16);\n\t\t\t\t}\n\t\t\t\tstoredMessage.payloadMessage.payloadHex = hex;\n\n\t\t\t\tstoredMessage.payloadMessage.qos = wireMessage.payloadMessage.qos;\n\t\t\t\tstoredMessage.payloadMessage.destinationName = wireMessage.payloadMessage.destinationName;\n\t\t\t\tif (wireMessage.payloadMessage.duplicate)\n\t\t\t\t\tstoredMessage.payloadMessage.duplicate = true;\n\t\t\t\tif (wireMessage.payloadMessage.retained)\n\t\t\t\t\tstoredMessage.payloadMessage.retained = true;\n\n\t\t\t\t// Add a sequence number to sent messages.\n\t\t\t\tif ( prefix.indexOf(\"Sent:\") === 0 ) {\n\t\t\t\t\tif ( wireMessage.sequence === undefined )\n\t\t\t\t\t\twireMessage.sequence = ++this._sequence;\n\t\t\t\t\tstoredMessage.sequence = wireMessage.sequence;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthrow Error(format(ERROR.INVALID_STORED_DATA, [prefix+this._localKey+wireMessage.messageIdentifier, storedMessage]));\n\t\t\t}\n\t\t\tlocalStorage.setItem(prefix+this._localKey+wireMessage.messageIdentifier, JSON.stringify(storedMessage));\n\t\t};\n\n\t\tClientImpl.prototype.restore = function(key) {\n\t\t\tvar value = localStorage.getItem(key);\n\t\t\tvar storedMessage = JSON.parse(value);\n\n\t\t\tvar wireMessage = new WireMessage(storedMessage.type, storedMessage);\n\n\t\t\tswitch(storedMessage.type) {\n\t\t\tcase MESSAGE_TYPE.PUBLISH:\n\t\t\t\t// Replace the payload message with a Message object.\n\t\t\t\tvar hex = storedMessage.payloadMessage.payloadHex;\n\t\t\t\tvar buffer = new ArrayBuffer((hex.length)/2);\n\t\t\t\tvar byteStream = new Uint8Array(buffer);\n\t\t\t\tvar i = 0;\n\t\t\t\twhile (hex.length >= 2) {\n\t\t\t\t\tvar x = parseInt(hex.substring(0, 2), 16);\n\t\t\t\t\thex = hex.substring(2, hex.length);\n\t\t\t\t\tbyteStream[i++] = x;\n\t\t\t\t}\n\t\t\t\tvar payloadMessage = new Message(byteStream);\n\n\t\t\t\tpayloadMessage.qos = storedMessage.payloadMessage.qos;\n\t\t\t\tpayloadMessage.destinationName = storedMessage.payloadMessage.destinationName;\n\t\t\t\tif (storedMessage.payloadMessage.duplicate)\n\t\t\t\t\tpayloadMessage.duplicate = true;\n\t\t\t\tif (storedMessage.payloadMessage.retained)\n\t\t\t\t\tpayloadMessage.retained = true;\n\t\t\t\twireMessage.payloadMessage = payloadMessage;\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthrow Error(format(ERROR.INVALID_STORED_DATA, [key, value]));\n\t\t\t}\n\n\t\t\tif (key.indexOf(\"Sent:\"+this._localKey) === 0) {\n\t\t\t\twireMessage.payloadMessage.duplicate = true;\n\t\t\t\tthis._sentMessages[wireMessage.messageIdentifier] = wireMessage;\n\t\t\t} else if (key.indexOf(\"Received:\"+this._localKey) === 0) {\n\t\t\t\tthis._receivedMessages[wireMessage.messageIdentifier] = wireMessage;\n\t\t\t}\n\t\t};\n\n\t\tClientImpl.prototype._process_queue = function () {\n\t\t\tvar message = null;\n\n\t\t\t// Send all queued messages down socket connection\n\t\t\twhile ((message = this._msg_queue.pop())) {\n\t\t\t\tthis._socket_send(message);\n\t\t\t\t// Notify listeners that message was successfully sent\n\t\t\t\tif (this._notify_msg_sent[message]) {\n\t\t\t\t\tthis._notify_msg_sent[message]();\n\t\t\t\t\tdelete this._notify_msg_sent[message];\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t * Expect an ACK response for this message. Add message to the set of in progress\n\t * messages and set an unused identifier in this message.\n\t * @ignore\n\t */\n\t\tClientImpl.prototype._requires_ack = function (wireMessage) {\n\t\t\tvar messageCount = Object.keys(this._sentMessages).length;\n\t\t\tif (messageCount > this.maxMessageIdentifier)\n\t\t\t\tthrow Error (\"Too many messages:\"+messageCount);\n\n\t\t\twhile(this._sentMessages[this._message_identifier] !== undefined) {\n\t\t\t\tthis._message_identifier++;\n\t\t\t}\n\t\t\twireMessage.messageIdentifier = this._message_identifier;\n\t\t\tthis._sentMessages[wireMessage.messageIdentifier] = wireMessage;\n\t\t\tif (wireMessage.type === MESSAGE_TYPE.PUBLISH) {\n\t\t\t\tthis.store(\"Sent:\", wireMessage);\n\t\t\t}\n\t\t\tif (this._message_identifier === this.maxMessageIdentifier) {\n\t\t\t\tthis._message_identifier = 1;\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t * Called when the underlying websocket has been opened.\n\t * @ignore\n\t */\n\t\tClientImpl.prototype._on_socket_open = function () {\n\t\t// Create the CONNECT message object.\n\t\t\tvar wireMessage = new WireMessage(MESSAGE_TYPE.CONNECT, this.connectOptions);\n\t\t\twireMessage.clientId = this.clientId;\n\t\t\tthis._socket_send(wireMessage);\n\t\t};\n\n\t\t/**\n\t * Called when the underlying websocket has received a complete packet.\n\t * @ignore\n\t */\n\t\tClientImpl.prototype._on_socket_message = function (event) {\n\t\t\tthis._trace(\"Client._on_socket_message\", event.data);\n\t\t\tvar messages = this._deframeMessages(event.data);\n\t\t\tfor (var i = 0; i < messages.length; i+=1) {\n\t\t\t\tthis._handleMessage(messages[i]);\n\t\t\t}\n\t\t};\n\n\t\tClientImpl.prototype._deframeMessages = function(data) {\n\t\t\tvar byteArray = new Uint8Array(data);\n\t\t\tvar messages = [];\n\t\t\tif (this.receiveBuffer) {\n\t\t\t\tvar newData = new Uint8Array(this.receiveBuffer.length+byteArray.length);\n\t\t\t\tnewData.set(this.receiveBuffer);\n\t\t\t\tnewData.set(byteArray,this.receiveBuffer.length);\n\t\t\t\tbyteArray = newData;\n\t\t\t\tdelete this.receiveBuffer;\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tvar offset = 0;\n\t\t\t\twhile(offset < byteArray.length) {\n\t\t\t\t\tvar result = decodeMessage(byteArray,offset);\n\t\t\t\t\tvar wireMessage = result[0];\n\t\t\t\t\toffset = result[1];\n\t\t\t\t\tif (wireMessage !== null) {\n\t\t\t\t\t\tmessages.push(wireMessage);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (offset < byteArray.length) {\n\t\t\t\t\tthis.receiveBuffer = byteArray.subarray(offset);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tvar errorStack = ((error.hasOwnProperty(\"stack\") == \"undefined\") ? error.stack.toString() : \"No Error Stack Available\");\n\t\t\t\tthis._disconnected(ERROR.INTERNAL_ERROR.code , format(ERROR.INTERNAL_ERROR, [error.message,errorStack]));\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treturn messages;\n\t\t};\n\n\t\tClientImpl.prototype._handleMessage = function(wireMessage) {\n\n\t\t\tthis._trace(\"Client._handleMessage\", wireMessage);\n\n\t\t\ttry {\n\t\t\t\tswitch(wireMessage.type) {\n\t\t\t\tcase MESSAGE_TYPE.CONNACK:\n\t\t\t\t\tthis._connectTimeout.cancel();\n\t\t\t\t\tif (this._reconnectTimeout)\n\t\t\t\t\t\tthis._reconnectTimeout.cancel();\n\n\t\t\t\t\t// If we have started using clean session then clear up the local state.\n\t\t\t\t\tif (this.connectOptions.cleanSession) {\n\t\t\t\t\t\tfor (var key in this._sentMessages) {\n\t\t\t\t\t\t\tvar sentMessage = this._sentMessages[key];\n\t\t\t\t\t\t\tlocalStorage.removeItem(\"Sent:\"+this._localKey+sentMessage.messageIdentifier);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._sentMessages = {};\n\n\t\t\t\t\t\tfor (var key in this._receivedMessages) {\n\t\t\t\t\t\t\tvar receivedMessage = this._receivedMessages[key];\n\t\t\t\t\t\t\tlocalStorage.removeItem(\"Received:\"+this._localKey+receivedMessage.messageIdentifier);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._receivedMessages = {};\n\t\t\t\t\t}\n\t\t\t\t\t// Client connected and ready for business.\n\t\t\t\t\tif (wireMessage.returnCode === 0) {\n\n\t\t\t\t\t\tthis.connected = true;\n\t\t\t\t\t\t// Jump to the end of the list of uris and stop looking for a good host.\n\n\t\t\t\t\t\tif (this.connectOptions.uris)\n\t\t\t\t\t\t\tthis.hostIndex = this.connectOptions.uris.length;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._disconnected(ERROR.CONNACK_RETURNCODE.code , format(ERROR.CONNACK_RETURNCODE, [wireMessage.returnCode, CONNACK_RC[wireMessage.returnCode]]));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Resend messages.\n\t\t\t\t\tvar sequencedMessages = [];\n\t\t\t\t\tfor (var msgId in this._sentMessages) {\n\t\t\t\t\t\tif (this._sentMessages.hasOwnProperty(msgId))\n\t\t\t\t\t\t\tsequencedMessages.push(this._sentMessages[msgId]);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Also schedule qos 0 buffered messages if any\n\t\t\t\t\tif (this._buffered_msg_queue.length > 0) {\n\t\t\t\t\t\tvar msg = null;\n\t\t\t\t\t\twhile ((msg = this._buffered_msg_queue.pop())) {\n\t\t\t\t\t\t\tsequencedMessages.push(msg);\n\t\t\t\t\t\t\tif (this.onMessageDelivered)\n\t\t\t\t\t\t\t\tthis._notify_msg_sent[msg] = this.onMessageDelivered(msg.payloadMessage);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Sort sentMessages into the original sent order.\n\t\t\t\t\tvar sequencedMessages = sequencedMessages.sort(function(a,b) {return a.sequence - b.sequence;} );\n\t\t\t\t\tfor (var i=0, len=sequencedMessages.length; i<len; i++) {\n\t\t\t\t\t\tvar sentMessage = sequencedMessages[i];\n\t\t\t\t\t\tif (sentMessage.type == MESSAGE_TYPE.PUBLISH && sentMessage.pubRecReceived) {\n\t\t\t\t\t\t\tvar pubRelMessage = new WireMessage(MESSAGE_TYPE.PUBREL, {messageIdentifier:sentMessage.messageIdentifier});\n\t\t\t\t\t\t\tthis._schedule_message(pubRelMessage);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis._schedule_message(sentMessage);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Execute the connectOptions.onSuccess callback if there is one.\n\t\t\t\t\t// Will also now return if this connection was the result of an automatic\n\t\t\t\t\t// reconnect and which URI was successfully connected to.\n\t\t\t\t\tif (this.connectOptions.onSuccess) {\n\t\t\t\t\t\tthis.connectOptions.onSuccess({invocationContext:this.connectOptions.invocationContext});\n\t\t\t\t\t}\n\n\t\t\t\t\tvar reconnected = false;\n\t\t\t\t\tif (this._reconnecting) {\n\t\t\t\t\t\treconnected = true;\n\t\t\t\t\t\tthis._reconnectInterval = 1;\n\t\t\t\t\t\tthis._reconnecting = false;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Execute the onConnected callback if there is one.\n\t\t\t\t\tthis._connected(reconnected, this._wsuri);\n\n\t\t\t\t\t// Process all queued messages now that the connection is established.\n\t\t\t\t\tthis._process_queue();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MESSAGE_TYPE.PUBLISH:\n\t\t\t\t\tthis._receivePublish(wireMessage);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MESSAGE_TYPE.PUBACK:\n\t\t\t\t\tvar sentMessage = this._sentMessages[wireMessage.messageIdentifier];\n\t\t\t\t\t// If this is a re flow of a PUBACK after we have restarted receivedMessage will not exist.\n\t\t\t\t\tif (sentMessage) {\n\t\t\t\t\t\tdelete this._sentMessages[wireMessage.messageIdentifier];\n\t\t\t\t\t\tlocalStorage.removeItem(\"Sent:\"+this._localKey+wireMessage.messageIdentifier);\n\t\t\t\t\t\tif (this.onMessageDelivered)\n\t\t\t\t\t\t\tthis.onMessageDelivered(sentMessage.payloadMessage);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MESSAGE_TYPE.PUBREC:\n\t\t\t\t\tvar sentMessage = this._sentMessages[wireMessage.messageIdentifier];\n\t\t\t\t\t// If this is a re flow of a PUBREC after we have restarted receivedMessage will not exist.\n\t\t\t\t\tif (sentMessage) {\n\t\t\t\t\t\tsentMessage.pubRecReceived = true;\n\t\t\t\t\t\tvar pubRelMessage = new WireMessage(MESSAGE_TYPE.PUBREL, {messageIdentifier:wireMessage.messageIdentifier});\n\t\t\t\t\t\tthis.store(\"Sent:\", sentMessage);\n\t\t\t\t\t\tthis._schedule_message(pubRelMessage);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MESSAGE_TYPE.PUBREL:\n\t\t\t\t\tvar receivedMessage = this._receivedMessages[wireMessage.messageIdentifier];\n\t\t\t\t\tlocalStorage.removeItem(\"Received:\"+this._localKey+wireMessage.messageIdentifier);\n\t\t\t\t\t// If this is a re flow of a PUBREL after we have restarted receivedMessage will not exist.\n\t\t\t\t\tif (receivedMessage) {\n\t\t\t\t\t\tthis._receiveMessage(receivedMessage);\n\t\t\t\t\t\tdelete this._receivedMessages[wireMessage.messageIdentifier];\n\t\t\t\t\t}\n\t\t\t\t\t// Always flow PubComp, we may have previously flowed PubComp but the server lost it and restarted.\n\t\t\t\t\tvar pubCompMessage = new WireMessage(MESSAGE_TYPE.PUBCOMP, {messageIdentifier:wireMessage.messageIdentifier});\n\t\t\t\t\tthis._schedule_message(pubCompMessage);\n\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MESSAGE_TYPE.PUBCOMP:\n\t\t\t\t\tvar sentMessage = this._sentMessages[wireMessage.messageIdentifier];\n\t\t\t\t\tdelete this._sentMessages[wireMessage.messageIdentifier];\n\t\t\t\t\tlocalStorage.removeItem(\"Sent:\"+this._localKey+wireMessage.messageIdentifier);\n\t\t\t\t\tif (this.onMessageDelivered)\n\t\t\t\t\t\tthis.onMessageDelivered(sentMessage.payloadMessage);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MESSAGE_TYPE.SUBACK:\n\t\t\t\t\tvar sentMessage = this._sentMessages[wireMessage.messageIdentifier];\n\t\t\t\t\tif (sentMessage) {\n\t\t\t\t\t\tif(sentMessage.timeOut)\n\t\t\t\t\t\t\tsentMessage.timeOut.cancel();\n\t\t\t\t\t\t// This will need to be fixed when we add multiple topic support\n\t\t\t\t\t\tif (wireMessage.returnCode[0] === 0x80) {\n\t\t\t\t\t\t\tif (sentMessage.onFailure) {\n\t\t\t\t\t\t\t\tsentMessage.onFailure(wireMessage.returnCode);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (sentMessage.onSuccess) {\n\t\t\t\t\t\t\tsentMessage.onSuccess(wireMessage.returnCode);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdelete this._sentMessages[wireMessage.messageIdentifier];\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MESSAGE_TYPE.UNSUBACK:\n\t\t\t\t\tvar sentMessage = this._sentMessages[wireMessage.messageIdentifier];\n\t\t\t\t\tif (sentMessage) {\n\t\t\t\t\t\tif (sentMessage.timeOut)\n\t\t\t\t\t\t\tsentMessage.timeOut.cancel();\n\t\t\t\t\t\tif (sentMessage.callback) {\n\t\t\t\t\t\t\tsentMessage.callback();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdelete this._sentMessages[wireMessage.messageIdentifier];\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MESSAGE_TYPE.PINGRESP:\n\t\t\t\t/* The sendPinger or receivePinger may have sent a ping, the receivePinger has already been reset. */\n\t\t\t\t\tthis.sendPinger.reset();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MESSAGE_TYPE.DISCONNECT:\n\t\t\t\t// Clients do not expect to receive disconnect packets.\n\t\t\t\t\tthis._disconnected(ERROR.INVALID_MQTT_MESSAGE_TYPE.code , format(ERROR.INVALID_MQTT_MESSAGE_TYPE, [wireMessage.type]));\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthis._disconnected(ERROR.INVALID_MQTT_MESSAGE_TYPE.code , format(ERROR.INVALID_MQTT_MESSAGE_TYPE, [wireMessage.type]));\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tvar errorStack = ((error.hasOwnProperty(\"stack\") == \"undefined\") ? error.stack.toString() : \"No Error Stack Available\");\n\t\t\t\tthis._disconnected(ERROR.INTERNAL_ERROR.code , format(ERROR.INTERNAL_ERROR, [error.message,errorStack]));\n\t\t\t\treturn;\n\t\t\t}\n\t\t};\n\n\t\t/** @ignore */\n\t\tClientImpl.prototype._on_socket_error = function (error) {\n\t\t\tif (!this._reconnecting) {\n\t\t\t\tthis._disconnected(ERROR.SOCKET_ERROR.code , format(ERROR.SOCKET_ERROR, [error.data]));\n\t\t\t}\n\t\t};\n\n\t\t/** @ignore */\n\t\tClientImpl.prototype._on_socket_close = function () {\n\t\t\tif (!this._reconnecting) {\n\t\t\t\tthis._disconnected(ERROR.SOCKET_CLOSE.code , format(ERROR.SOCKET_CLOSE));\n\t\t\t}\n\t\t};\n\n\t\t/** @ignore */\n\t\tClientImpl.prototype._socket_send = function (wireMessage) {\n\n\t\t\tif (wireMessage.type == 1) {\n\t\t\t\tvar wireMessageMasked = this._traceMask(wireMessage, \"password\");\n\t\t\t\tthis._trace(\"Client._socket_send\", wireMessageMasked);\n\t\t\t}\n\t\t\telse this._trace(\"Client._socket_send\", wireMessage);\n\n\t\t\tthis.socket.send(wireMessage.encode());\n\t\t\t/* We have proved to the server we are alive. */\n\t\t\tthis.sendPinger.reset();\n\t\t};\n\n\t\t/** @ignore */\n\t\tClientImpl.prototype._receivePublish = function (wireMessage) {\n\t\t\tswitch(wireMessage.payloadMessage.qos) {\n\t\t\tcase \"undefined\":\n\t\t\tcase 0:\n\t\t\t\tthis._receiveMessage(wireMessage);\n\t\t\t\tbreak;\n\n\t\t\tcase 1:\n\t\t\t\tvar pubAckMessage = new WireMessage(MESSAGE_TYPE.PUBACK, {messageIdentifier:wireMessage.messageIdentifier});\n\t\t\t\tthis._schedule_message(pubAckMessage);\n\t\t\t\tthis._receiveMessage(wireMessage);\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\t\t\t\tthis._receivedMessages[wireMessage.messageIdentifier] = wireMessage;\n\t\t\t\tthis.store(\"Received:\", wireMessage);\n\t\t\t\tvar pubRecMessage = new WireMessage(MESSAGE_TYPE.PUBREC, {messageIdentifier:wireMessage.messageIdentifier});\n\t\t\t\tthis._schedule_message(pubRecMessage);\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthrow Error(\"Invaild qos=\" + wireMessage.payloadMessage.qos);\n\t\t\t}\n\t\t};\n\n\t\t/** @ignore */\n\t\tClientImpl.prototype._receiveMessage = function (wireMessage) {\n\t\t\tif (this.onMessageArrived) {\n\t\t\t\tthis.onMessageArrived(wireMessage.payloadMessage);\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t * Client has connected.\n\t * @param {reconnect} [boolean] indicate if this was a result of reconnect operation.\n\t * @param {uri} [string] fully qualified WebSocket URI of the server.\n\t */\n\t\tClientImpl.prototype._connected = function (reconnect, uri) {\n\t\t// Execute the onConnected callback if there is one.\n\t\t\tif (this.onConnected)\n\t\t\t\tthis.onConnected(reconnect, uri);\n\t\t};\n\n\t\t/**\n\t * Attempts to reconnect the client to the server.\n   * For each reconnect attempt, will double the reconnect interval\n   * up to 128 seconds.\n\t */\n\t\tClientImpl.prototype._reconnect = function () {\n\t\t\tthis._trace(\"Client._reconnect\");\n\t\t\tif (!this.connected) {\n\t\t\t\tthis._reconnecting = true;\n\t\t\t\tthis.sendPinger.cancel();\n\t\t\t\tthis.receivePinger.cancel();\n\t\t\t\tif (this._reconnectInterval < 128)\n\t\t\t\t\tthis._reconnectInterval = this._reconnectInterval * 2;\n\t\t\t\tif (this.connectOptions.uris) {\n\t\t\t\t\tthis.hostIndex = 0;\n\t\t\t\t\tthis._doConnect(this.connectOptions.uris[0]);\n\t\t\t\t} else {\n\t\t\t\t\tthis._doConnect(this.uri);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t * Client has disconnected either at its own request or because the server\n\t * or network disconnected it. Remove all non-durable state.\n\t * @param {errorCode} [number] the error number.\n\t * @param {errorText} [string] the error text.\n\t * @ignore\n\t */\n\t\tClientImpl.prototype._disconnected = function (errorCode, errorText) {\n\t\t\tthis._trace(\"Client._disconnected\", errorCode, errorText);\n\n\t\t\tif (errorCode !== undefined && this._reconnecting) {\n\t\t\t\t//Continue automatic reconnect process\n\t\t\t\tthis._reconnectTimeout = new Timeout(this, this._reconnectInterval, this._reconnect);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.sendPinger.cancel();\n\t\t\tthis.receivePinger.cancel();\n\t\t\tif (this._connectTimeout) {\n\t\t\t\tthis._connectTimeout.cancel();\n\t\t\t\tthis._connectTimeout = null;\n\t\t\t}\n\n\t\t\t// Clear message buffers.\n\t\t\tthis._msg_queue = [];\n\t\t\tthis._buffered_msg_queue = [];\n\t\t\tthis._notify_msg_sent = {};\n\n\t\t\tif (this.socket) {\n\t\t\t// Cancel all socket callbacks so that they cannot be driven again by this socket.\n\t\t\t\tthis.socket.onopen = null;\n\t\t\t\tthis.socket.onmessage = null;\n\t\t\t\tthis.socket.onerror = null;\n\t\t\t\tthis.socket.onclose = null;\n\t\t\t\tif (this.socket.readyState === 1)\n\t\t\t\t\tthis.socket.close();\n\t\t\t\tdelete this.socket;\n\t\t\t}\n\n\t\t\tif (this.connectOptions.uris && this.hostIndex < this.connectOptions.uris.length-1) {\n\t\t\t// Try the next host.\n\t\t\t\tthis.hostIndex++;\n\t\t\t\tthis._doConnect(this.connectOptions.uris[this.hostIndex]);\n\t\t\t} else {\n\n\t\t\t\tif (errorCode === undefined) {\n\t\t\t\t\terrorCode = ERROR.OK.code;\n\t\t\t\t\terrorText = format(ERROR.OK);\n\t\t\t\t}\n\n\t\t\t\t// Run any application callbacks last as they may attempt to reconnect and hence create a new socket.\n\t\t\t\tif (this.connected) {\n\t\t\t\t\tthis.connected = false;\n\t\t\t\t\t// Execute the connectionLostCallback if there is one, and we were connected.\n\t\t\t\t\tif (this.onConnectionLost) {\n\t\t\t\t\t\tthis.onConnectionLost({errorCode:errorCode, errorMessage:errorText, reconnect:this.connectOptions.reconnect, uri:this._wsuri});\n\t\t\t\t\t}\n\t\t\t\t\tif (errorCode !== ERROR.OK.code && this.connectOptions.reconnect) {\n\t\t\t\t\t// Start automatic reconnect process for the very first time since last successful connect.\n\t\t\t\t\t\tthis._reconnectInterval = 1;\n\t\t\t\t\t\tthis._reconnect();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t// Otherwise we never had a connection, so indicate that the connect has failed.\n\t\t\t\t\tif (this.connectOptions.mqttVersion === 4 && this.connectOptions.mqttVersionExplicit === false) {\n\t\t\t\t\t\tthis._trace(\"Failed to connect V4, dropping back to V3\");\n\t\t\t\t\t\tthis.connectOptions.mqttVersion = 3;\n\t\t\t\t\t\tif (this.connectOptions.uris) {\n\t\t\t\t\t\t\tthis.hostIndex = 0;\n\t\t\t\t\t\t\tthis._doConnect(this.connectOptions.uris[0]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis._doConnect(this.uri);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if(this.connectOptions.onFailure) {\n\t\t\t\t\t\tthis.connectOptions.onFailure({invocationContext:this.connectOptions.invocationContext, errorCode:errorCode, errorMessage:errorText});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t/** @ignore */\n\t\tClientImpl.prototype._trace = function () {\n\t\t// Pass trace message back to client's callback function\n\t\t\tif (this.traceFunction) {\n\t\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\t\t\tfor (var i in args)\n\t\t\t\t{\n\t\t\t\t\tif (typeof args[i] !== \"undefined\")\n\t\t\t\t\t\targs.splice(i, 1, JSON.stringify(args[i]));\n\t\t\t\t}\n\t\t\t\tvar record = args.join(\"\");\n\t\t\t\tthis.traceFunction ({severity: \"Debug\", message: record\t});\n\t\t\t}\n\n\t\t\t//buffer style trace\n\t\t\tif ( this._traceBuffer !== null ) {\n\t\t\t\tfor (var i = 0, max = arguments.length; i < max; i++) {\n\t\t\t\t\tif ( this._traceBuffer.length == this._MAX_TRACE_ENTRIES ) {\n\t\t\t\t\t\tthis._traceBuffer.shift();\n\t\t\t\t\t}\n\t\t\t\t\tif (i === 0) this._traceBuffer.push(arguments[i]);\n\t\t\t\t\telse if (typeof arguments[i] === \"undefined\" ) this._traceBuffer.push(arguments[i]);\n\t\t\t\t\telse this._traceBuffer.push(\"  \"+JSON.stringify(arguments[i]));\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t/** @ignore */\n\t\tClientImpl.prototype._traceMask = function (traceObject, masked) {\n\t\t\tvar traceObjectMasked = {};\n\t\t\tfor (var attr in traceObject) {\n\t\t\t\tif (traceObject.hasOwnProperty(attr)) {\n\t\t\t\t\tif (attr == masked)\n\t\t\t\t\t\ttraceObjectMasked[attr] = \"******\";\n\t\t\t\t\telse\n\t\t\t\t\t\ttraceObjectMasked[attr] = traceObject[attr];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn traceObjectMasked;\n\t\t};\n\n\t\t// ------------------------------------------------------------------------\n\t\t// Public Programming interface.\n\t\t// ------------------------------------------------------------------------\n\n\t\t/**\n\t * The JavaScript application communicates to the server using a {@link Paho.Client} object.\n\t * <p>\n\t * Most applications will create just one Client object and then call its connect() method,\n\t * however applications can create more than one Client object if they wish.\n\t * In this case the combination of host, port and clientId attributes must be different for each Client object.\n\t * <p>\n\t * The send, subscribe and unsubscribe methods are implemented as asynchronous JavaScript methods\n\t * (even though the underlying protocol exchange might be synchronous in nature).\n\t * This means they signal their completion by calling back to the application,\n\t * via Success or Failure callback functions provided by the application on the method in question.\n\t * Such callbacks are called at most once per method invocation and do not persist beyond the lifetime\n\t * of the script that made the invocation.\n\t * <p>\n\t * In contrast there are some callback functions, most notably <i>onMessageArrived</i>,\n\t * that are defined on the {@link Paho.Client} object.\n\t * These may get called multiple times, and aren't directly related to specific method invocations made by the client.\n\t *\n\t * @name Paho.Client\n\t *\n\t * @constructor\n\t *\n\t * @param {string} host - the address of the messaging server, as a fully qualified WebSocket URI, as a DNS name or dotted decimal IP address.\n\t * @param {number} port - the port number to connect to - only required if host is not a URI\n\t * @param {string} path - the path on the host to connect to - only used if host is not a URI. Default: '/mqtt'.\n\t * @param {string} clientId - the Messaging client identifier, between 1 and 23 characters in length.\n\t *\n\t * @property {string} host - <i>read only</i> the server's DNS hostname or dotted decimal IP address.\n\t * @property {number} port - <i>read only</i> the server's port.\n\t * @property {string} path - <i>read only</i> the server's path.\n\t * @property {string} clientId - <i>read only</i> used when connecting to the server.\n\t * @property {function} onConnectionLost - called when a connection has been lost.\n\t *                            after a connect() method has succeeded.\n\t *                            Establish the call back used when a connection has been lost. The connection may be\n\t *                            lost because the client initiates a disconnect or because the server or network\n\t *                            cause the client to be disconnected. The disconnect call back may be called without\n\t *                            the connectionComplete call back being invoked if, for example the client fails to\n\t *                            connect.\n\t *                            A single response object parameter is passed to the onConnectionLost callback containing the following fields:\n\t *                            <ol>\n\t *                            <li>errorCode\n\t *                            <li>errorMessage\n\t *                            </ol>\n\t * @property {function} onMessageDelivered - called when a message has been delivered.\n\t *                            All processing that this Client will ever do has been completed. So, for example,\n\t *                            in the case of a Qos=2 message sent by this client, the PubComp flow has been received from the server\n\t *                            and the message has been removed from persistent storage before this callback is invoked.\n\t *                            Parameters passed to the onMessageDelivered callback are:\n\t *                            <ol>\n\t *                            <li>{@link Paho.Message} that was delivered.\n\t *                            </ol>\n\t * @property {function} onMessageArrived - called when a message has arrived in this Paho.client.\n\t *                            Parameters passed to the onMessageArrived callback are:\n\t *                            <ol>\n\t *                            <li>{@link Paho.Message} that has arrived.\n\t *                            </ol>\n\t * @property {function} onConnected - called when a connection is successfully made to the server.\n\t *                                  after a connect() method.\n\t *                                  Parameters passed to the onConnected callback are:\n\t *                                  <ol>\n\t *                                  <li>reconnect (boolean) - If true, the connection was the result of a reconnect.</li>\n\t *                                  <li>URI (string) - The URI used to connect to the server.</li>\n\t *                                  </ol>\n\t * @property {boolean} disconnectedPublishing - if set, will enable disconnected publishing in\n\t *                                            in the event that the connection to the server is lost.\n\t * @property {number} disconnectedBufferSize - Used to set the maximum number of messages that the disconnected\n\t *                                             buffer will hold before rejecting new messages. Default size: 5000 messages\n\t * @property {function} trace - called whenever trace is called. TODO\n\t */\n\t\tvar Client = function (host, port, path, clientId) {\n\n\t\t\tvar uri;\n\n\t\t\tif (typeof host !== \"string\")\n\t\t\t\tthrow new Error(format(ERROR.INVALID_TYPE, [typeof host, \"host\"]));\n\n\t\t\tif (arguments.length == 2) {\n\t\t\t// host: must be full ws:// uri\n\t\t\t// port: clientId\n\t\t\t\tclientId = port;\n\t\t\t\turi = host;\n\t\t\t\tvar match = uri.match(/^(wss?):\\/\\/((\\[(.+)\\])|([^\\/]+?))(:(\\d+))?(\\/.*)$/);\n\t\t\t\tif (match) {\n\t\t\t\t\thost = match[4]||match[2];\n\t\t\t\t\tport = parseInt(match[7]);\n\t\t\t\t\tpath = match[8];\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(format(ERROR.INVALID_ARGUMENT,[host,\"host\"]));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (arguments.length == 3) {\n\t\t\t\t\tclientId = path;\n\t\t\t\t\tpath = \"/mqtt\";\n\t\t\t\t}\n\t\t\t\tif (typeof port !== \"number\" || port < 0)\n\t\t\t\t\tthrow new Error(format(ERROR.INVALID_TYPE, [typeof port, \"port\"]));\n\t\t\t\tif (typeof path !== \"string\")\n\t\t\t\t\tthrow new Error(format(ERROR.INVALID_TYPE, [typeof path, \"path\"]));\n\n\t\t\t\tvar ipv6AddSBracket = (host.indexOf(\":\") !== -1 && host.slice(0,1) !== \"[\" && host.slice(-1) !== \"]\");\n\t\t\t\turi = \"ws://\"+(ipv6AddSBracket?\"[\"+host+\"]\":host)+\":\"+port+path;\n\t\t\t}\n\n\t\t\tvar clientIdLength = 0;\n\t\t\tfor (var i = 0; i<clientId.length; i++) {\n\t\t\t\tvar charCode = clientId.charCodeAt(i);\n\t\t\t\tif (0xD800 <= charCode && charCode <= 0xDBFF)  {\n\t\t\t\t\ti++; // Surrogate pair.\n\t\t\t\t}\n\t\t\t\tclientIdLength++;\n\t\t\t}\n\t\t\tif (typeof clientId !== \"string\" || clientIdLength > 65535)\n\t\t\t\tthrow new Error(format(ERROR.INVALID_ARGUMENT, [clientId, \"clientId\"]));\n\n\t\t\tvar client = new ClientImpl(uri, host, port, path, clientId);\n\n\t\t\t//Public Properties\n\t\t\tObject.defineProperties(this,{\n\t\t\t\t\"host\":{\n\t\t\t\t\tget: function() { return host; },\n\t\t\t\t\tset: function() { throw new Error(format(ERROR.UNSUPPORTED_OPERATION)); }\n\t\t\t\t},\n\t\t\t\t\"port\":{\n\t\t\t\t\tget: function() { return port; },\n\t\t\t\t\tset: function() { throw new Error(format(ERROR.UNSUPPORTED_OPERATION)); }\n\t\t\t\t},\n\t\t\t\t\"path\":{\n\t\t\t\t\tget: function() { return path; },\n\t\t\t\t\tset: function() { throw new Error(format(ERROR.UNSUPPORTED_OPERATION)); }\n\t\t\t\t},\n\t\t\t\t\"uri\":{\n\t\t\t\t\tget: function() { return uri; },\n\t\t\t\t\tset: function() { throw new Error(format(ERROR.UNSUPPORTED_OPERATION)); }\n\t\t\t\t},\n\t\t\t\t\"clientId\":{\n\t\t\t\t\tget: function() { return client.clientId; },\n\t\t\t\t\tset: function() { throw new Error(format(ERROR.UNSUPPORTED_OPERATION)); }\n\t\t\t\t},\n\t\t\t\t\"onConnected\":{\n\t\t\t\t\tget: function() { return client.onConnected; },\n\t\t\t\t\tset: function(newOnConnected) {\n\t\t\t\t\t\tif (typeof newOnConnected === \"function\")\n\t\t\t\t\t\t\tclient.onConnected = newOnConnected;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tthrow new Error(format(ERROR.INVALID_TYPE, [typeof newOnConnected, \"onConnected\"]));\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"disconnectedPublishing\":{\n\t\t\t\t\tget: function() { return client.disconnectedPublishing; },\n\t\t\t\t\tset: function(newDisconnectedPublishing) {\n\t\t\t\t\t\tclient.disconnectedPublishing = newDisconnectedPublishing;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"disconnectedBufferSize\":{\n\t\t\t\t\tget: function() { return client.disconnectedBufferSize; },\n\t\t\t\t\tset: function(newDisconnectedBufferSize) {\n\t\t\t\t\t\tclient.disconnectedBufferSize = newDisconnectedBufferSize;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"onConnectionLost\":{\n\t\t\t\t\tget: function() { return client.onConnectionLost; },\n\t\t\t\t\tset: function(newOnConnectionLost) {\n\t\t\t\t\t\tif (typeof newOnConnectionLost === \"function\")\n\t\t\t\t\t\t\tclient.onConnectionLost = newOnConnectionLost;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tthrow new Error(format(ERROR.INVALID_TYPE, [typeof newOnConnectionLost, \"onConnectionLost\"]));\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"onMessageDelivered\":{\n\t\t\t\t\tget: function() { return client.onMessageDelivered; },\n\t\t\t\t\tset: function(newOnMessageDelivered) {\n\t\t\t\t\t\tif (typeof newOnMessageDelivered === \"function\")\n\t\t\t\t\t\t\tclient.onMessageDelivered = newOnMessageDelivered;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tthrow new Error(format(ERROR.INVALID_TYPE, [typeof newOnMessageDelivered, \"onMessageDelivered\"]));\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"onMessageArrived\":{\n\t\t\t\t\tget: function() { return client.onMessageArrived; },\n\t\t\t\t\tset: function(newOnMessageArrived) {\n\t\t\t\t\t\tif (typeof newOnMessageArrived === \"function\")\n\t\t\t\t\t\t\tclient.onMessageArrived = newOnMessageArrived;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tthrow new Error(format(ERROR.INVALID_TYPE, [typeof newOnMessageArrived, \"onMessageArrived\"]));\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"trace\":{\n\t\t\t\t\tget: function() { return client.traceFunction; },\n\t\t\t\t\tset: function(trace) {\n\t\t\t\t\t\tif(typeof trace === \"function\"){\n\t\t\t\t\t\t\tclient.traceFunction = trace;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tthrow new Error(format(ERROR.INVALID_TYPE, [typeof trace, \"onTrace\"]));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t});\n\n\t\t\t/**\n\t\t * Connect this Messaging client to its server.\n\t\t *\n\t\t * @name Paho.Client#connect\n\t\t * @function\n\t\t * @param {object} connectOptions - Attributes used with the connection.\n\t\t * @param {number} connectOptions.timeout - If the connect has not succeeded within this\n\t\t *                    number of seconds, it is deemed to have failed.\n\t\t *                    The default is 30 seconds.\n\t\t * @param {string} connectOptions.userName - Authentication username for this connection.\n\t\t * @param {string} connectOptions.password - Authentication password for this connection.\n\t\t * @param {Paho.Message} connectOptions.willMessage - sent by the server when the client\n\t\t *                    disconnects abnormally.\n\t\t * @param {number} connectOptions.keepAliveInterval - the server disconnects this client if\n\t\t *                    there is no activity for this number of seconds.\n\t\t *                    The default value of 60 seconds is assumed if not set.\n\t\t * @param {boolean} connectOptions.cleanSession - if true(default) the client and server\n\t\t *                    persistent state is deleted on successful connect.\n\t\t * @param {boolean} connectOptions.useSSL - if present and true, use an SSL Websocket connection.\n\t\t * @param {object} connectOptions.invocationContext - passed to the onSuccess callback or onFailure callback.\n\t\t * @param {function} connectOptions.onSuccess - called when the connect acknowledgement\n\t\t *                    has been received from the server.\n\t\t * A single response object parameter is passed to the onSuccess callback containing the following fields:\n\t\t * <ol>\n\t\t * <li>invocationContext as passed in to the onSuccess method in the connectOptions.\n\t\t * </ol>\n\t * @param {function} connectOptions.onFailure - called when the connect request has failed or timed out.\n\t\t * A single response object parameter is passed to the onFailure callback containing the following fields:\n\t\t * <ol>\n\t\t * <li>invocationContext as passed in to the onFailure method in the connectOptions.\n\t\t * <li>errorCode a number indicating the nature of the error.\n\t\t * <li>errorMessage text describing the error.\n\t\t * </ol>\n\t * @param {array} connectOptions.hosts - If present this contains either a set of hostnames or fully qualified\n\t\t * WebSocket URIs (ws://iot.eclipse.org:80/ws), that are tried in order in place\n\t\t * of the host and port paramater on the construtor. The hosts are tried one at at time in order until\n\t\t * one of then succeeds.\n\t * @param {array} connectOptions.ports - If present the set of ports matching the hosts. If hosts contains URIs, this property\n\t\t * is not used.\n\t * @param {boolean} connectOptions.reconnect - Sets whether the client will automatically attempt to reconnect\n\t * to the server if the connection is lost.\n\t *<ul>\n\t *<li>If set to false, the client will not attempt to automatically reconnect to the server in the event that the\n\t * connection is lost.</li>\n\t *<li>If set to true, in the event that the connection is lost, the client will attempt to reconnect to the server.\n\t * It will initially wait 1 second before it attempts to reconnect, for every failed reconnect attempt, the delay\n\t * will double until it is at 2 minutes at which point the delay will stay at 2 minutes.</li>\n\t *</ul>\n\t * @param {number} connectOptions.mqttVersion - The version of MQTT to use to connect to the MQTT Broker.\n\t *<ul>\n\t *<li>3 - MQTT V3.1</li>\n\t *<li>4 - MQTT V3.1.1</li>\n\t *</ul>\n\t * @param {boolean} connectOptions.mqttVersionExplicit - If set to true, will force the connection to use the\n\t * selected MQTT Version or will fail to connect.\n\t * @param {array} connectOptions.uris - If present, should contain a list of fully qualified WebSocket uris\n\t * (e.g. ws://iot.eclipse.org:80/ws), that are tried in order in place of the host and port parameter of the construtor.\n\t * The uris are tried one at a time in order until one of them succeeds. Do not use this in conjunction with hosts as\n\t * the hosts array will be converted to uris and will overwrite this property.\n\t\t * @throws {InvalidState} If the client is not in disconnected state. The client must have received connectionLost\n\t\t * or disconnected before calling connect for a second or subsequent time.\n\t\t */\n\t\t\tthis.connect = function (connectOptions) {\n\t\t\t\tconnectOptions = connectOptions || {} ;\n\t\t\t\tvalidate(connectOptions,  {timeout:\"number\",\n\t\t\t\t\tuserName:\"string\",\n\t\t\t\t\tpassword:\"string\",\n\t\t\t\t\twillMessage:\"object\",\n\t\t\t\t\tkeepAliveInterval:\"number\",\n\t\t\t\t\tcleanSession:\"boolean\",\n\t\t\t\t\tuseSSL:\"boolean\",\n\t\t\t\t\tinvocationContext:\"object\",\n\t\t\t\t\tonSuccess:\"function\",\n\t\t\t\t\tonFailure:\"function\",\n\t\t\t\t\thosts:\"object\",\n\t\t\t\t\tports:\"object\",\n\t\t\t\t\treconnect:\"boolean\",\n\t\t\t\t\tmqttVersion:\"number\",\n\t\t\t\t\tmqttVersionExplicit:\"boolean\",\n\t\t\t\t\turis: \"object\"});\n\n\t\t\t\t// If no keep alive interval is set, assume 60 seconds.\n\t\t\t\tif (connectOptions.keepAliveInterval === undefined)\n\t\t\t\t\tconnectOptions.keepAliveInterval = 60;\n\n\t\t\t\tif (connectOptions.mqttVersion > 4 || connectOptions.mqttVersion < 3) {\n\t\t\t\t\tthrow new Error(format(ERROR.INVALID_ARGUMENT, [connectOptions.mqttVersion, \"connectOptions.mqttVersion\"]));\n\t\t\t\t}\n\n\t\t\t\tif (connectOptions.mqttVersion === undefined) {\n\t\t\t\t\tconnectOptions.mqttVersionExplicit = false;\n\t\t\t\t\tconnectOptions.mqttVersion = 4;\n\t\t\t\t} else {\n\t\t\t\t\tconnectOptions.mqttVersionExplicit = true;\n\t\t\t\t}\n\n\t\t\t\t//Check that if password is set, so is username\n\t\t\t\tif (connectOptions.password !== undefined && connectOptions.userName === undefined)\n\t\t\t\t\tthrow new Error(format(ERROR.INVALID_ARGUMENT, [connectOptions.password, \"connectOptions.password\"]));\n\n\t\t\t\tif (connectOptions.willMessage) {\n\t\t\t\t\tif (!(connectOptions.willMessage instanceof Message))\n\t\t\t\t\t\tthrow new Error(format(ERROR.INVALID_TYPE, [connectOptions.willMessage, \"connectOptions.willMessage\"]));\n\t\t\t\t\t// The will message must have a payload that can be represented as a string.\n\t\t\t\t\t// Cause the willMessage to throw an exception if this is not the case.\n\t\t\t\t\tconnectOptions.willMessage.stringPayload = null;\n\n\t\t\t\t\tif (typeof connectOptions.willMessage.destinationName === \"undefined\")\n\t\t\t\t\t\tthrow new Error(format(ERROR.INVALID_TYPE, [typeof connectOptions.willMessage.destinationName, \"connectOptions.willMessage.destinationName\"]));\n\t\t\t\t}\n\t\t\t\tif (typeof connectOptions.cleanSession === \"undefined\")\n\t\t\t\t\tconnectOptions.cleanSession = true;\n\t\t\t\tif (connectOptions.hosts) {\n\n\t\t\t\t\tif (!(connectOptions.hosts instanceof Array) )\n\t\t\t\t\t\tthrow new Error(format(ERROR.INVALID_ARGUMENT, [connectOptions.hosts, \"connectOptions.hosts\"]));\n\t\t\t\t\tif (connectOptions.hosts.length <1 )\n\t\t\t\t\t\tthrow new Error(format(ERROR.INVALID_ARGUMENT, [connectOptions.hosts, \"connectOptions.hosts\"]));\n\n\t\t\t\t\tvar usingURIs = false;\n\t\t\t\t\tfor (var i = 0; i<connectOptions.hosts.length; i++) {\n\t\t\t\t\t\tif (typeof connectOptions.hosts[i] !== \"string\")\n\t\t\t\t\t\t\tthrow new Error(format(ERROR.INVALID_TYPE, [typeof connectOptions.hosts[i], \"connectOptions.hosts[\"+i+\"]\"]));\n\t\t\t\t\t\tif (/^(wss?):\\/\\/((\\[(.+)\\])|([^\\/]+?))(:(\\d+))?(\\/.*)$/.test(connectOptions.hosts[i])) {\n\t\t\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\t\t\tusingURIs = true;\n\t\t\t\t\t\t\t} else if (!usingURIs) {\n\t\t\t\t\t\t\t\tthrow new Error(format(ERROR.INVALID_ARGUMENT, [connectOptions.hosts[i], \"connectOptions.hosts[\"+i+\"]\"]));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (usingURIs) {\n\t\t\t\t\t\t\tthrow new Error(format(ERROR.INVALID_ARGUMENT, [connectOptions.hosts[i], \"connectOptions.hosts[\"+i+\"]\"]));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!usingURIs) {\n\t\t\t\t\t\tif (!connectOptions.ports)\n\t\t\t\t\t\t\tthrow new Error(format(ERROR.INVALID_ARGUMENT, [connectOptions.ports, \"connectOptions.ports\"]));\n\t\t\t\t\t\tif (!(connectOptions.ports instanceof Array) )\n\t\t\t\t\t\t\tthrow new Error(format(ERROR.INVALID_ARGUMENT, [connectOptions.ports, \"connectOptions.ports\"]));\n\t\t\t\t\t\tif (connectOptions.hosts.length !== connectOptions.ports.length)\n\t\t\t\t\t\t\tthrow new Error(format(ERROR.INVALID_ARGUMENT, [connectOptions.ports, \"connectOptions.ports\"]));\n\n\t\t\t\t\t\tconnectOptions.uris = [];\n\n\t\t\t\t\t\tfor (var i = 0; i<connectOptions.hosts.length; i++) {\n\t\t\t\t\t\t\tif (typeof connectOptions.ports[i] !== \"number\" || connectOptions.ports[i] < 0)\n\t\t\t\t\t\t\t\tthrow new Error(format(ERROR.INVALID_TYPE, [typeof connectOptions.ports[i], \"connectOptions.ports[\"+i+\"]\"]));\n\t\t\t\t\t\t\tvar host = connectOptions.hosts[i];\n\t\t\t\t\t\t\tvar port = connectOptions.ports[i];\n\n\t\t\t\t\t\t\tvar ipv6 = (host.indexOf(\":\") !== -1);\n\t\t\t\t\t\t\turi = \"ws://\"+(ipv6?\"[\"+host+\"]\":host)+\":\"+port+path;\n\t\t\t\t\t\t\tconnectOptions.uris.push(uri);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconnectOptions.uris = connectOptions.hosts;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tclient.connect(connectOptions);\n\t\t\t};\n\n\t\t\t/**\n\t\t * Subscribe for messages, request receipt of a copy of messages sent to the destinations described by the filter.\n\t\t *\n\t\t * @name Paho.Client#subscribe\n\t\t * @function\n\t\t * @param {string} filter describing the destinations to receive messages from.\n\t\t * <br>\n\t\t * @param {object} subscribeOptions - used to control the subscription\n\t\t *\n\t\t * @param {number} subscribeOptions.qos - the maximum qos of any publications sent\n\t\t *                                  as a result of making this subscription.\n\t\t * @param {object} subscribeOptions.invocationContext - passed to the onSuccess callback\n\t\t *                                  or onFailure callback.\n\t\t * @param {function} subscribeOptions.onSuccess - called when the subscribe acknowledgement\n\t\t *                                  has been received from the server.\n\t\t *                                  A single response object parameter is passed to the onSuccess callback containing the following fields:\n\t\t *                                  <ol>\n\t\t *                                  <li>invocationContext if set in the subscribeOptions.\n\t\t *                                  </ol>\n\t\t * @param {function} subscribeOptions.onFailure - called when the subscribe request has failed or timed out.\n\t\t *                                  A single response object parameter is passed to the onFailure callback containing the following fields:\n\t\t *                                  <ol>\n\t\t *                                  <li>invocationContext - if set in the subscribeOptions.\n\t\t *                                  <li>errorCode - a number indicating the nature of the error.\n\t\t *                                  <li>errorMessage - text describing the error.\n\t\t *                                  </ol>\n\t\t * @param {number} subscribeOptions.timeout - which, if present, determines the number of\n\t\t *                                  seconds after which the onFailure calback is called.\n\t\t *                                  The presence of a timeout does not prevent the onSuccess\n\t\t *                                  callback from being called when the subscribe completes.\n\t\t * @throws {InvalidState} if the client is not in connected state.\n\t\t */\n\t\t\tthis.subscribe = function (filter, subscribeOptions) {\n\t\t\t\tif (typeof filter !== \"string\" && filter.constructor !== Array)\n\t\t\t\t\tthrow new Error(\"Invalid argument:\"+filter);\n\t\t\t\tsubscribeOptions = subscribeOptions || {} ;\n\t\t\t\tvalidate(subscribeOptions,  {qos:\"number\",\n\t\t\t\t\tinvocationContext:\"object\",\n\t\t\t\t\tonSuccess:\"function\",\n\t\t\t\t\tonFailure:\"function\",\n\t\t\t\t\ttimeout:\"number\"\n\t\t\t\t});\n\t\t\t\tif (subscribeOptions.timeout && !subscribeOptions.onFailure)\n\t\t\t\t\tthrow new Error(\"subscribeOptions.timeout specified with no onFailure callback.\");\n\t\t\t\tif (typeof subscribeOptions.qos !== \"undefined\" && !(subscribeOptions.qos === 0 || subscribeOptions.qos === 1 || subscribeOptions.qos === 2 ))\n\t\t\t\t\tthrow new Error(format(ERROR.INVALID_ARGUMENT, [subscribeOptions.qos, \"subscribeOptions.qos\"]));\n\t\t\t\tclient.subscribe(filter, subscribeOptions);\n\t\t\t};\n\n\t\t/**\n\t\t * Unsubscribe for messages, stop receiving messages sent to destinations described by the filter.\n\t\t *\n\t\t * @name Paho.Client#unsubscribe\n\t\t * @function\n\t\t * @param {string} filter - describing the destinations to receive messages from.\n\t\t * @param {object} unsubscribeOptions - used to control the subscription\n\t\t * @param {object} unsubscribeOptions.invocationContext - passed to the onSuccess callback\n\t\t\t\t\t\t\t\t\t\t\t  or onFailure callback.\n\t\t * @param {function} unsubscribeOptions.onSuccess - called when the unsubscribe acknowledgement has been received from the server.\n\t\t *                                    A single response object parameter is passed to the\n\t\t *                                    onSuccess callback containing the following fields:\n\t\t *                                    <ol>\n\t\t *                                    <li>invocationContext - if set in the unsubscribeOptions.\n\t\t *                                    </ol>\n\t\t * @param {function} unsubscribeOptions.onFailure called when the unsubscribe request has failed or timed out.\n\t\t *                                    A single response object parameter is passed to the onFailure callback containing the following fields:\n\t\t *                                    <ol>\n\t\t *                                    <li>invocationContext - if set in the unsubscribeOptions.\n\t\t *                                    <li>errorCode - a number indicating the nature of the error.\n\t\t *                                    <li>errorMessage - text describing the error.\n\t\t *                                    </ol>\n\t\t * @param {number} unsubscribeOptions.timeout - which, if present, determines the number of seconds\n\t\t *                                    after which the onFailure callback is called. The presence of\n\t\t *                                    a timeout does not prevent the onSuccess callback from being\n\t\t *                                    called when the unsubscribe completes\n\t\t * @throws {InvalidState} if the client is not in connected state.\n\t\t */\n\t\t\tthis.unsubscribe = function (filter, unsubscribeOptions) {\n\t\t\t\tif (typeof filter !== \"string\" && filter.constructor !== Array)\n\t\t\t\t\tthrow new Error(\"Invalid argument:\"+filter);\n\t\t\t\tunsubscribeOptions = unsubscribeOptions || {} ;\n\t\t\t\tvalidate(unsubscribeOptions,  {invocationContext:\"object\",\n\t\t\t\t\tonSuccess:\"function\",\n\t\t\t\t\tonFailure:\"function\",\n\t\t\t\t\ttimeout:\"number\"\n\t\t\t\t});\n\t\t\t\tif (unsubscribeOptions.timeout && !unsubscribeOptions.onFailure)\n\t\t\t\t\tthrow new Error(\"unsubscribeOptions.timeout specified with no onFailure callback.\");\n\t\t\t\tclient.unsubscribe(filter, unsubscribeOptions);\n\t\t\t};\n\n\t\t\t/**\n\t\t * Send a message to the consumers of the destination in the Message.\n\t\t *\n\t\t * @name Paho.Client#send\n\t\t * @function\n\t\t * @param {string|Paho.Message} topic - <b>mandatory</b> The name of the destination to which the message is to be sent.\n\t\t * \t\t\t\t\t   - If it is the only parameter, used as Paho.Message object.\n\t\t * @param {String|ArrayBuffer} payload - The message data to be sent.\n\t\t * @param {number} qos The Quality of Service used to deliver the message.\n\t\t * \t\t<dl>\n\t\t * \t\t\t<dt>0 Best effort (default).\n\t\t *     \t\t\t<dt>1 At least once.\n\t\t *     \t\t\t<dt>2 Exactly once.\n\t\t * \t\t</dl>\n\t\t * @param {Boolean} retained If true, the message is to be retained by the server and delivered\n\t\t *                     to both current and future subscriptions.\n\t\t *                     If false the server only delivers the message to current subscribers, this is the default for new Messages.\n\t\t *                     A received message has the retained boolean set to true if the message was published\n\t\t *                     with the retained boolean set to true\n\t\t *                     and the subscrption was made after the message has been published.\n\t\t * @throws {InvalidState} if the client is not connected.\n\t\t */\n\t\t\tthis.send = function (topic,payload,qos,retained) {\n\t\t\t\tvar message ;\n\n\t\t\t\tif(arguments.length === 0){\n\t\t\t\t\tthrow new Error(\"Invalid argument.\"+\"length\");\n\n\t\t\t\t}else if(arguments.length == 1) {\n\n\t\t\t\t\tif (!(topic instanceof Message) && (typeof topic !== \"string\"))\n\t\t\t\t\t\tthrow new Error(\"Invalid argument:\"+ typeof topic);\n\n\t\t\t\t\tmessage = topic;\n\t\t\t\t\tif (typeof message.destinationName === \"undefined\")\n\t\t\t\t\t\tthrow new Error(format(ERROR.INVALID_ARGUMENT,[message.destinationName,\"Message.destinationName\"]));\n\t\t\t\t\tclient.send(message);\n\n\t\t\t\t}else {\n\t\t\t\t//parameter checking in Message object\n\t\t\t\t\tmessage = new Message(payload);\n\t\t\t\t\tmessage.destinationName = topic;\n\t\t\t\t\tif(arguments.length >= 3)\n\t\t\t\t\t\tmessage.qos = qos;\n\t\t\t\t\tif(arguments.length >= 4)\n\t\t\t\t\t\tmessage.retained = retained;\n\t\t\t\t\tclient.send(message);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t/**\n\t\t * Publish a message to the consumers of the destination in the Message.\n\t\t * Synonym for Paho.Mqtt.Client#send\n\t\t *\n\t\t * @name Paho.Client#publish\n\t\t * @function\n\t\t * @param {string|Paho.Message} topic - <b>mandatory</b> The name of the topic to which the message is to be published.\n\t\t * \t\t\t\t\t   - If it is the only parameter, used as Paho.Message object.\n\t\t * @param {String|ArrayBuffer} payload - The message data to be published.\n\t\t * @param {number} qos The Quality of Service used to deliver the message.\n\t\t * \t\t<dl>\n\t\t * \t\t\t<dt>0 Best effort (default).\n\t\t *     \t\t\t<dt>1 At least once.\n\t\t *     \t\t\t<dt>2 Exactly once.\n\t\t * \t\t</dl>\n\t\t * @param {Boolean} retained If true, the message is to be retained by the server and delivered\n\t\t *                     to both current and future subscriptions.\n\t\t *                     If false the server only delivers the message to current subscribers, this is the default for new Messages.\n\t\t *                     A received message has the retained boolean set to true if the message was published\n\t\t *                     with the retained boolean set to true\n\t\t *                     and the subscrption was made after the message has been published.\n\t\t * @throws {InvalidState} if the client is not connected.\n\t\t */\n\t\t\tthis.publish = function(topic,payload,qos,retained) {\n\t\t\t\tvar message ;\n\n\t\t\t\tif(arguments.length === 0){\n\t\t\t\t\tthrow new Error(\"Invalid argument.\"+\"length\");\n\n\t\t\t\t}else if(arguments.length == 1) {\n\n\t\t\t\t\tif (!(topic instanceof Message) && (typeof topic !== \"string\"))\n\t\t\t\t\t\tthrow new Error(\"Invalid argument:\"+ typeof topic);\n\n\t\t\t\t\tmessage = topic;\n\t\t\t\t\tif (typeof message.destinationName === \"undefined\")\n\t\t\t\t\t\tthrow new Error(format(ERROR.INVALID_ARGUMENT,[message.destinationName,\"Message.destinationName\"]));\n\t\t\t\t\tclient.send(message);\n\n\t\t\t\t}else {\n\t\t\t\t\t//parameter checking in Message object\n\t\t\t\t\tmessage = new Message(payload);\n\t\t\t\t\tmessage.destinationName = topic;\n\t\t\t\t\tif(arguments.length >= 3)\n\t\t\t\t\t\tmessage.qos = qos;\n\t\t\t\t\tif(arguments.length >= 4)\n\t\t\t\t\t\tmessage.retained = retained;\n\t\t\t\t\tclient.send(message);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t/**\n\t\t * Normal disconnect of this Messaging client from its server.\n\t\t *\n\t\t * @name Paho.Client#disconnect\n\t\t * @function\n\t\t * @throws {InvalidState} if the client is already disconnected.\n\t\t */\n\t\t\tthis.disconnect = function () {\n\t\t\t\tclient.disconnect();\n\t\t\t};\n\n\t\t\t/**\n\t\t * Get the contents of the trace log.\n\t\t *\n\t\t * @name Paho.Client#getTraceLog\n\t\t * @function\n\t\t * @return {Object[]} tracebuffer containing the time ordered trace records.\n\t\t */\n\t\t\tthis.getTraceLog = function () {\n\t\t\t\treturn client.getTraceLog();\n\t\t\t};\n\n\t\t\t/**\n\t\t * Start tracing.\n\t\t *\n\t\t * @name Paho.Client#startTrace\n\t\t * @function\n\t\t */\n\t\t\tthis.startTrace = function () {\n\t\t\t\tclient.startTrace();\n\t\t\t};\n\n\t\t\t/**\n\t\t * Stop tracing.\n\t\t *\n\t\t * @name Paho.Client#stopTrace\n\t\t * @function\n\t\t */\n\t\t\tthis.stopTrace = function () {\n\t\t\t\tclient.stopTrace();\n\t\t\t};\n\n\t\t\tthis.isConnected = function() {\n\t\t\t\treturn client.connected;\n\t\t\t};\n\t\t};\n\n\t\t/**\n\t * An application message, sent or received.\n\t * <p>\n\t * All attributes may be null, which implies the default values.\n\t *\n\t * @name Paho.Message\n\t * @constructor\n\t * @param {String|ArrayBuffer} payload The message data to be sent.\n\t * <p>\n\t * @property {string} payloadString <i>read only</i> The payload as a string if the payload consists of valid UTF-8 characters.\n\t * @property {ArrayBuffer} payloadBytes <i>read only</i> The payload as an ArrayBuffer.\n\t * <p>\n\t * @property {string} destinationName <b>mandatory</b> The name of the destination to which the message is to be sent\n\t *                    (for messages about to be sent) or the name of the destination from which the message has been received.\n\t *                    (for messages received by the onMessage function).\n\t * <p>\n\t * @property {number} qos The Quality of Service used to deliver the message.\n\t * <dl>\n\t *     <dt>0 Best effort (default).\n\t *     <dt>1 At least once.\n\t *     <dt>2 Exactly once.\n\t * </dl>\n\t * <p>\n\t * @property {Boolean} retained If true, the message is to be retained by the server and delivered\n\t *                     to both current and future subscriptions.\n\t *                     If false the server only delivers the message to current subscribers, this is the default for new Messages.\n\t *                     A received message has the retained boolean set to true if the message was published\n\t *                     with the retained boolean set to true\n\t *                     and the subscrption was made after the message has been published.\n\t * <p>\n\t * @property {Boolean} duplicate <i>read only</i> If true, this message might be a duplicate of one which has already been received.\n\t *                     This is only set on messages received from the server.\n\t *\n\t */\n\t\tvar Message = function (newPayload) {\n\t\t\tvar payload;\n\t\t\tif (   typeof newPayload === \"string\" ||\n\t\tnewPayload instanceof ArrayBuffer ||\n\t\t(ArrayBuffer.isView(newPayload) && !(newPayload instanceof DataView))\n\t\t\t) {\n\t\t\t\tpayload = newPayload;\n\t\t\t} else {\n\t\t\t\tthrow (format(ERROR.INVALID_ARGUMENT, [newPayload, \"newPayload\"]));\n\t\t\t}\n\n\t\t\tvar destinationName;\n\t\t\tvar qos = 0;\n\t\t\tvar retained = false;\n\t\t\tvar duplicate = false;\n\n\t\t\tObject.defineProperties(this,{\n\t\t\t\t\"payloadString\":{\n\t\t\t\t\tenumerable : true,\n\t\t\t\t\tget : function () {\n\t\t\t\t\t\tif (typeof payload === \"string\")\n\t\t\t\t\t\t\treturn payload;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\treturn parseUTF8(payload, 0, payload.length);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"payloadBytes\":{\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tget: function() {\n\t\t\t\t\t\tif (typeof payload === \"string\") {\n\t\t\t\t\t\t\tvar buffer = new ArrayBuffer(UTF8Length(payload));\n\t\t\t\t\t\t\tvar byteStream = new Uint8Array(buffer);\n\t\t\t\t\t\t\tstringToUTF8(payload, byteStream, 0);\n\n\t\t\t\t\t\t\treturn byteStream;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn payload;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"destinationName\":{\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tget: function() { return destinationName; },\n\t\t\t\t\tset: function(newDestinationName) {\n\t\t\t\t\t\tif (typeof newDestinationName === \"string\")\n\t\t\t\t\t\t\tdestinationName = newDestinationName;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tthrow new Error(format(ERROR.INVALID_ARGUMENT, [newDestinationName, \"newDestinationName\"]));\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"qos\":{\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tget: function() { return qos; },\n\t\t\t\t\tset: function(newQos) {\n\t\t\t\t\t\tif (newQos === 0 || newQos === 1 || newQos === 2 )\n\t\t\t\t\t\t\tqos = newQos;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tthrow new Error(\"Invalid argument:\"+newQos);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"retained\":{\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tget: function() { return retained; },\n\t\t\t\t\tset: function(newRetained) {\n\t\t\t\t\t\tif (typeof newRetained === \"boolean\")\n\t\t\t\t\t\t\tretained = newRetained;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tthrow new Error(format(ERROR.INVALID_ARGUMENT, [newRetained, \"newRetained\"]));\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"topic\":{\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tget: function() { return destinationName; },\n\t\t\t\t\tset: function(newTopic) {destinationName=newTopic;}\n\t\t\t\t},\n\t\t\t\t\"duplicate\":{\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tget: function() { return duplicate; },\n\t\t\t\t\tset: function(newDuplicate) {duplicate=newDuplicate;}\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// Module contents.\n\t\treturn {\n\t\t\tClient: Client,\n\t\t\tMessage: Message\n\t\t};\n\t// eslint-disable-next-line no-nested-ternary\n\t})(typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {});\n\treturn PahoMQTT;\n});\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (Array.isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return Object.keys(obj).map(function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (Array.isArray(obj[k])) {\n        return obj[k].map(function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n","/** @license React v17.0.2\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=require(\"object-assign\"),n=60103,p=60106;exports.Fragment=60107;exports.StrictMode=60108;exports.Profiler=60114;var q=60109,r=60110,t=60112;exports.Suspense=60113;var u=60115,v=60116;\nif(\"function\"===typeof Symbol&&Symbol.for){var w=Symbol.for;n=w(\"react.element\");p=w(\"react.portal\");exports.Fragment=w(\"react.fragment\");exports.StrictMode=w(\"react.strict_mode\");exports.Profiler=w(\"react.profiler\");q=w(\"react.provider\");r=w(\"react.context\");t=w(\"react.forward_ref\");exports.Suspense=w(\"react.suspense\");u=w(\"react.memo\");v=w(\"react.lazy\")}var x=\"function\"===typeof Symbol&&Symbol.iterator;\nfunction y(a){if(null===a||\"object\"!==typeof a)return null;a=x&&a[x]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}function z(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}\nvar A={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},B={};function C(a,b,c){this.props=a;this.context=b;this.refs=B;this.updater=c||A}C.prototype.isReactComponent={};C.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(z(85));this.updater.enqueueSetState(this,a,b,\"setState\")};C.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};\nfunction D(){}D.prototype=C.prototype;function E(a,b,c){this.props=a;this.context=b;this.refs=B;this.updater=c||A}var F=E.prototype=new D;F.constructor=E;l(F,C.prototype);F.isPureReactComponent=!0;var G={current:null},H=Object.prototype.hasOwnProperty,I={key:!0,ref:!0,__self:!0,__source:!0};\nfunction J(a,b,c){var e,d={},k=null,h=null;if(null!=b)for(e in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)H.call(b,e)&&!I.hasOwnProperty(e)&&(d[e]=b[e]);var g=arguments.length-2;if(1===g)d.children=c;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];d.children=f}if(a&&a.defaultProps)for(e in g=a.defaultProps,g)void 0===d[e]&&(d[e]=g[e]);return{$$typeof:n,type:a,key:k,ref:h,props:d,_owner:G.current}}\nfunction K(a,b){return{$$typeof:n,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function L(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===n}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var M=/\\/+/g;function N(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction O(a,b,c,e,d){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case n:case p:h=!0}}if(h)return h=a,d=d(h),a=\"\"===e?\".\"+N(h,0):e,Array.isArray(d)?(c=\"\",null!=a&&(c=a.replace(M,\"$&/\")+\"/\"),O(d,b,c,\"\",function(a){return a})):null!=d&&(L(d)&&(d=K(d,c+(!d.key||h&&h.key===d.key?\"\":(\"\"+d.key).replace(M,\"$&/\")+\"/\")+a)),b.push(d)),1;h=0;e=\"\"===e?\".\":e+\":\";if(Array.isArray(a))for(var g=\n0;g<a.length;g++){k=a[g];var f=e+N(k,g);h+=O(k,b,c,f,d)}else if(f=y(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=e+N(k,g++),h+=O(k,b,c,f,d);else if(\"object\"===k)throw b=\"\"+a,Error(z(31,\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b));return h}function P(a,b,c){if(null==a)return a;var e=[],d=0;O(a,e,\"\",\"\",function(a){return b.call(c,a,d++)});return e}\nfunction Q(a){if(-1===a._status){var b=a._result;b=b();a._status=0;a._result=b;b.then(function(b){0===a._status&&(b=b.default,a._status=1,a._result=b)},function(b){0===a._status&&(a._status=2,a._result=b)})}if(1===a._status)return a._result;throw a._result;}var R={current:null};function S(){var a=R.current;if(null===a)throw Error(z(321));return a}var T={ReactCurrentDispatcher:R,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:G,IsSomeRendererActing:{current:!1},assign:l};\nexports.Children={map:P,forEach:function(a,b,c){P(a,function(){b.apply(this,arguments)},c)},count:function(a){var b=0;P(a,function(){b++});return b},toArray:function(a){return P(a,function(a){return a})||[]},only:function(a){if(!L(a))throw Error(z(143));return a}};exports.Component=C;exports.PureComponent=E;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=T;\nexports.cloneElement=function(a,b,c){if(null===a||void 0===a)throw Error(z(267,a));var e=l({},a.props),d=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=G.current);void 0!==b.key&&(d=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)H.call(b,f)&&!I.hasOwnProperty(f)&&(e[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)e.children=c;else if(1<f){g=Array(f);for(var m=0;m<f;m++)g[m]=arguments[m+2];e.children=g}return{$$typeof:n,type:a.type,\nkey:d,ref:k,props:e,_owner:h}};exports.createContext=function(a,b){void 0===b&&(b=null);a={$$typeof:r,_calculateChangedBits:b,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:q,_context:a};return a.Consumer=a};exports.createElement=J;exports.createFactory=function(a){var b=J.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};exports.forwardRef=function(a){return{$$typeof:t,render:a}};exports.isValidElement=L;\nexports.lazy=function(a){return{$$typeof:v,_payload:{_status:-1,_result:a},_init:Q}};exports.memo=function(a,b){return{$$typeof:u,type:a,compare:void 0===b?null:b}};exports.useCallback=function(a,b){return S().useCallback(a,b)};exports.useContext=function(a,b){return S().useContext(a,b)};exports.useDebugValue=function(){};exports.useEffect=function(a,b){return S().useEffect(a,b)};exports.useImperativeHandle=function(a,b,c){return S().useImperativeHandle(a,b,c)};\nexports.useLayoutEffect=function(a,b){return S().useLayoutEffect(a,b)};exports.useMemo=function(a,b){return S().useMemo(a,b)};exports.useReducer=function(a,b,c){return S().useReducer(a,b,c)};exports.useRef=function(a){return S().useRef(a)};exports.useState=function(a){return S().useState(a)};exports.version=\"17.0.2\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","'use strict';\n\n\n// Load rules\nvar Trie = require('./lib/suffix-trie.js');\nvar allRules = Trie.fromJson(require('./rules.json'));\n\n// Internals\nvar extractHostname = require('./lib/clean-host.js');\nvar getDomain = require('./lib/domain.js');\nvar getPublicSuffix = require('./lib/public-suffix.js');\nvar getSubdomain = require('./lib/subdomain.js');\nvar isValid = require('./lib/is-valid.js');\nvar isIp = require('./lib/is-ip.js');\nvar tldExists = require('./lib/tld-exists.js');\n\n\n// Flags representing steps in the `parse` function. They are used to implement\n// a early stop mechanism (simulating some form of laziness) to avoid doing more\n// work than necessary to perform a given action (e.g.: we don't need to extract\n// the domain and subdomain if we are only interested in public suffix).\nvar TLD_EXISTS = 1;\nvar PUBLIC_SUFFIX = 2;\nvar DOMAIN = 3;\nvar SUB_DOMAIN = 4;\nvar ALL = 5;\n\n\n/**\n * Creates a new instance of tldjs\n * @param  {Object.<rules,validHosts>} options [description]\n * @return {tldjs|Object}                      [description]\n */\nfunction factory(options) {\n  var rules = options.rules || allRules || {};\n  var validHosts = options.validHosts || [];\n  var _extractHostname = options.extractHostname || extractHostname;\n\n  /**\n   * Process a given url and extract all information. This is a higher level API\n   * around private functions of `tld.js`. It allows to remove duplication (only\n   * extract hostname from url once for all operations) and implement some early\n   * termination mechanism to not pay the price of what we don't need (this\n   * simulates laziness at a lower cost).\n   *\n   * @param {string} url\n   * @param {number|undefined} _step - where should we stop processing\n   * @return {object}\n   */\n  function parse(url, _step) {\n    var step = _step || ALL;\n    var result = {\n      hostname: _extractHostname(url),\n      isValid: null,\n      isIp: null,\n      tldExists: false,\n      publicSuffix: null,\n      domain: null,\n      subdomain: null,\n    };\n\n    if (result.hostname === null) {\n      result.isIp = false;\n      result.isValid = false;\n      return result;\n    }\n\n    // Check if `hostname` is a valid ip address\n    result.isIp = isIp(result.hostname);\n    if (result.isIp) {\n      result.isValid = true;\n      return result;\n    }\n\n    // Check if `hostname` is valid\n    result.isValid = isValid(result.hostname);\n    if (result.isValid === false) return result;\n\n    // Check if tld exists\n    if (step === ALL || step === TLD_EXISTS) {\n      result.tldExists = tldExists(rules, result.hostname);\n    }\n    if (step === TLD_EXISTS) return result;\n\n    // Extract public suffix\n    result.publicSuffix = getPublicSuffix(rules, result.hostname);\n    if (step === PUBLIC_SUFFIX) return result;\n\n    // Extract domain\n    result.domain = getDomain(validHosts, result.publicSuffix, result.hostname);\n    if (step === DOMAIN) return result;\n\n    // Extract subdomain\n    result.subdomain = getSubdomain(result.hostname, result.domain);\n\n    return result;\n  }\n\n\n  return {\n    extractHostname: _extractHostname,\n    isValid: isValid,\n    parse: parse,\n    tldExists: function (url) {\n      return parse(url, TLD_EXISTS).tldExists;\n    },\n    getPublicSuffix: function (url) {\n      return parse(url, PUBLIC_SUFFIX).publicSuffix;\n    },\n    getDomain: function (url) {\n      return parse(url, DOMAIN).domain;\n    },\n    getSubdomain: function (url) {\n      return parse(url, SUB_DOMAIN).subdomain;\n    },\n    fromUserSettings: factory\n  };\n}\n\n\nmodule.exports = factory({});\n","\nvar URL = require('url');\nvar isValid = require('./is-valid.js');\n\n\n/**\n * Utility to cleanup the base host value. Also removes url fragments.\n *\n * Works for:\n * - hostname\n * - //hostname\n * - scheme://hostname\n * - scheme+scheme://hostname\n *\n * @param {string} value\n * @return {String}\n */\n\n// scheme      = ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\nvar hasPrefixRE = /^(([a-z][a-z0-9+.-]*)?:)?\\/\\//;\n\n\n/**\n * @see https://github.com/oncletom/tld.js/issues/95\n *\n * @param {string} value\n */\nfunction trimTrailingDots(value) {\n  if (value[value.length - 1] === '.') {\n    return value.substr(0, value.length - 1);\n  }\n  return value;\n}\n\n\n/**\n * Fast check to avoid calling `trim` when not needed.\n *\n * @param {string} value\n */\nfunction checkTrimmingNeeded(value) {\n  return (\n    value.length > 0 && (\n      value.charCodeAt(0) <= 32 ||\n      value.charCodeAt(value.length - 1) <= 32\n    )\n  );\n}\n\n\n/**\n * Fast check to avoid calling `toLowerCase` when not needed.\n *\n * @param {string} value\n */\nfunction checkLowerCaseNeeded(value) {\n  for (var i = 0; i < value.length; i += 1) {\n    var code = value.charCodeAt(i);\n    if (code >= 65 && code <= 90) { // [A-Z]\n      return true;\n    }\n  }\n\n  return false;\n}\n\n\nmodule.exports = function extractHostname(value) {\n  // First check if `value` is already a valid hostname.\n  if (isValid(value)) {\n    return trimTrailingDots(value);\n  }\n\n  var url = value;\n\n  if (typeof url !== 'string') {\n    url = '' + url;\n  }\n\n  var needsTrimming = checkTrimmingNeeded(url);\n  if (needsTrimming) {\n    url = url.trim();\n  }\n\n  var needsLowerCase = checkLowerCaseNeeded(url);\n  if (needsLowerCase) {\n    url = url.toLowerCase();\n  }\n\n  // Try again after `url` has been transformed to lowercase and trimmed.\n  if ((needsLowerCase || needsTrimming) && isValid(url)) {\n    return trimTrailingDots(url);\n  }\n\n  // Proceed with heavier url parsing to extract the hostname.\n  if (!hasPrefixRE.test(url)) {\n    url = '//' + url;\n  }\n\n  var parts = URL.parse(url, null, true);\n\n  if (parts.hostname) {\n    return trimTrailingDots(parts.hostname);\n  }\n\n  return null;\n};\n","'use strict';\n\n\n/**\n * Polyfill for `endsWith`\n *\n * @param {string} str\n * @param {string} pattern\n * @return {boolean}\n */\nfunction endsWith(str, pattern) {\n  return (\n    str.lastIndexOf(pattern) === (str.length - pattern.length)\n  );\n}\n\n\n/**\n * Check if `vhost` is a valid suffix of `hostname` (top-domain)\n *\n * It means that `vhost` needs to be a suffix of `hostname` and we then need to\n * make sure that: either they are equal, or the character preceding `vhost` in\n * `hostname` is a '.' (it should not be a partial label).\n *\n * * hostname = 'not.evil.com' and vhost = 'vil.com'      => not ok\n * * hostname = 'not.evil.com' and vhost = 'evil.com'     => ok\n * * hostname = 'not.evil.com' and vhost = 'not.evil.com' => ok\n *\n * @param {string} hostname\n * @param {string} vhost\n * @return {boolean}\n */\nfunction shareSameDomainSuffix(hostname, vhost) {\n  if (endsWith(hostname, vhost)) {\n    return (\n      hostname.length === vhost.length ||\n      hostname[hostname.length - vhost.length - 1] === '.'\n    );\n  }\n\n  return false;\n}\n\n\n/**\n * Given a hostname and its public suffix, extract the general domain.\n *\n *  @param {string} hostname\n *  @param {string} publicSuffix\n *  @return {string}\n */\nfunction extractDomainWithSuffix(hostname, publicSuffix) {\n  // Locate the index of the last '.' in the part of the `hostname` preceding\n  // the public suffix.\n  //\n  // examples:\n  //   1. not.evil.co.uk  => evil.co.uk\n  //         ^    ^\n  //         |    | start of public suffix\n  //         | index of the last dot\n  //\n  //   2. example.co.uk   => example.co.uk\n  //     ^       ^\n  //     |       | start of public suffix\n  //     |\n  //     | (-1) no dot found before the public suffix\n  var publicSuffixIndex = hostname.length - publicSuffix.length - 2;\n  var lastDotBeforeSuffixIndex = hostname.lastIndexOf('.', publicSuffixIndex);\n\n  // No '.' found, then `hostname` is the general domain (no sub-domain)\n  if (lastDotBeforeSuffixIndex === -1) {\n    return hostname;\n  }\n\n  // Extract the part between the last '.'\n  return hostname.substr(lastDotBeforeSuffixIndex + 1);\n}\n\n\n/**\n * Detects the domain based on rules and upon and a host string\n *\n * @api\n * @param {string} host\n * @return {String}\n */\nmodule.exports = function getDomain(validHosts, suffix, hostname) {\n  // Check if `hostname` ends with a member of `validHosts`.\n  for (var i = 0; i < validHosts.length; i += 1) {\n    var vhost = validHosts[i];\n    if (shareSameDomainSuffix(hostname, vhost)) {\n      return vhost;\n    }\n  }\n\n  // If there is no suffix, there is no hostname\n  if (suffix === null) {\n    return null;\n  }\n\n  // If `hostname` is a valid public suffix, then there is no domain to return.\n  // Since we already know that `getPublicSuffix` returns a suffix of `hostname`\n  // there is no need to perform a string comparison and we only compare the\n  // size.\n  if (suffix.length === hostname.length) {\n    return null;\n  }\n\n  // To extract the general domain, we start by identifying the public suffix\n  // (if any), then consider the domain to be the public suffix with one added\n  // level of depth. (e.g.: if hostname is `not.evil.co.uk` and public suffix:\n  // `co.uk`, then we take one more level: `evil`, giving the final result:\n  // `evil.co.uk`).\n  return extractDomainWithSuffix(hostname, suffix);\n};\n","\"use strict\";\n\n/**\n * Utility to extract the TLD from a hostname string\n *\n * @param {string} host\n * @return {String}\n */\nmodule.exports = function extractTldFromHost(hostname) {\n  var lastDotIndex = hostname.lastIndexOf('.');\n  if (lastDotIndex === -1) {\n    return null;\n  }\n\n  return hostname.substr(lastDotIndex + 1);\n};\n","'use strict';\n\n\n/**\n * Check if a hostname is an IP. You should be aware that this only works\n * because `hostname` is already garanteed to be a valid hostname!\n *\n * @param {string} hostname\n * @return {boolean}\n */\nfunction isProbablyIpv4(hostname) {\n  var numberOfDots = 0;\n\n  for (var i = 0; i < hostname.length; i += 1) {\n    var code = hostname.charCodeAt(i);\n\n    if (code === 46) { // '.'\n      numberOfDots += 1;\n    } else if (code < 48 || code > 57) {\n      // 48 => '0'\n      // 57 => '9'\n      return false;\n    }\n  }\n\n  return (\n    numberOfDots === 3  &&\n    hostname[0] !== '.' &&\n    hostname[hostname.length - 1] !== '.'\n  );\n}\n\n\n/**\n * Similar to isProbablyIpv4.\n *\n * @param {string} hostname\n * @return {boolean}\n */\nfunction isProbablyIpv6(hostname) {\n  var hasColon = false;\n\n  for (var i = 0; i < hostname.length; i += 1) {\n    var code = hostname.charCodeAt(i);\n\n    if (code === 58) { // ':'\n      hasColon = true;\n    } else if (!(\n      (code >= 48 && code <= 57) || // 0-9\n      (code >= 97 && code <= 102)   // a-f\n    )) {\n      return false;\n    }\n  }\n\n  return hasColon;\n}\n\n\n/**\n * Check if `hostname` is *probably* a valid ip addr (either ipv6 or ipv4).\n * This *will not* work on any string. We need `hostname` to be a valid\n * hostname.\n *\n * @param {string} hostname\n * @return {boolean}\n */\nmodule.exports = function isIp(hostname) {\n  if (typeof hostname !== 'string') {\n    return false;\n  }\n\n  if (hostname.length === 0) {\n    return false;\n  }\n\n  return (isProbablyIpv6(hostname) || isProbablyIpv4(hostname));\n};\n","\"use strict\";\n\n\n/**\n * Check if the code point is a digit [0-9]\n *\n * @param {number} code\n * @return boolean\n */\nfunction isDigit(code) {\n  // 48 == '0'\n  // 57 == '9'\n  return code >= 48 && code <= 57;\n}\n\n\n/**\n * Check if the code point is a letter [a-zA-Z]\n *\n * @param {number} code\n * @return boolean\n */\nfunction isAlpha(code) {\n  // 97 === 'a'\n  // 122 == 'z'\n  return code >= 97 && code <= 122;\n}\n\n\n/**\n * Check if a hostname string is valid (according to RFC). It's usually a\n * preliminary check before trying to use getDomain or anything else.\n *\n * Beware: it does not check if the TLD exists.\n *\n * @api\n * @param {string} hostname\n * @return {boolean}\n */\nmodule.exports = function isValid(hostname) {\n  if (typeof hostname !== 'string') {\n    return false;\n  }\n\n  if (hostname.length > 255) {\n    return false;\n  }\n\n  if (hostname.length === 0) {\n    return false;\n  }\n\n  // Check first character: [a-zA-Z0-9]\n  var firstCharCode = hostname.charCodeAt(0);\n  if (!(isAlpha(firstCharCode) || isDigit(firstCharCode))) {\n    return false;\n  }\n\n  // Validate hostname according to RFC\n  var lastDotIndex = -1;\n  var lastCharCode;\n  var code;\n  var len = hostname.length;\n\n  for (var i = 0; i < len; i += 1) {\n    code = hostname.charCodeAt(i);\n\n    if (code === 46) { // '.'\n      if (\n        // Check that previous label is < 63 bytes long (64 = 63 + '.')\n        (i - lastDotIndex) > 64 ||\n        // Check that previous character was not already a '.'\n        lastCharCode === 46 ||\n        // Check that the previous label does not end with a '-'\n        lastCharCode === 45\n      ) {\n        return false;\n      }\n\n      lastDotIndex = i;\n    } else if (!(isAlpha(code) || isDigit(code) || code === 45)) {\n      // Check if there is a forbidden character in the label: [^a-zA-Z0-9-]\n      return false;\n    }\n\n    lastCharCode = code;\n  }\n\n  return (\n    // Check that last label is shorter than 63 chars\n    (len - lastDotIndex - 1) <= 63 &&\n    // Check that the last character is an allowed trailing label character.\n    // Since we already checked that the char is a valid hostname character,\n    // we only need to check that it's different from '-'.\n    lastCharCode !== 45\n  );\n};\n","'use strict';\n\n\nvar extractTldFromHost = require('./from-host.js');\n\n\n/**\n * Returns the public suffix (including exact matches)\n *\n * @api\n * @since 1.5\n * @param {string} hostname\n * @return {string}\n */\nmodule.exports = function getPublicSuffix(rules, hostname) {\n  // First check if `hostname` is already a valid top-level Domain.\n  if (rules.hasTld(hostname)) {\n    return hostname;\n  }\n\n  var candidate = rules.suffixLookup(hostname);\n  if (candidate === null) {\n    // Prevailing rule is '*' so we consider the top-level domain to be the\n    // public suffix of `hostname` (e.g.: 'example.org' => 'org').\n    return extractTldFromHost(hostname);\n  }\n\n  return candidate;\n};\n","'use strict';\n\n\n/**\n * Returns the subdomain of a hostname string\n *\n * @api\n * @param {string} hostname\n * @param {string} domain - the root domain of the hostname\n * @return {string|null} a subdomain string if any, blank string if subdomain\n *  is empty, otherwise null.\n */\nmodule.exports = function getSubdomain(hostname, domain) {\n  // No domain found? Just abort, abort!\n  if (domain === null) {\n    return null;\n  }\n\n  return hostname.substr(0, hostname.length - domain.length - 1);\n};\n","\"use strict\";\n\nvar VALID_HOSTNAME_VALUE = 0;\n\n\n/**\n * Return min(a, b), handling possible `null` values.\n *\n * @param {number|null} a\n * @param {number|null} b\n * @return {number|null}\n */\nfunction minIndex(a, b) {\n  if (a === null) {\n    return b;\n  } else if (b === null) {\n    return a;\n  }\n\n  return a < b ? a : b;\n}\n\n\n/**\n * Insert a public suffix rule in the `trie`.\n *\n * @param {object} rule\n * @param {object} trie\n * @return {object} trie (updated)\n */\nfunction insertInTrie(rule, trie) {\n  var parts = rule.parts;\n  var node = trie;\n\n  for (var i = 0; i < parts.length; i += 1) {\n    var part = parts[i];\n    var nextNode = node[part];\n    if (nextNode === undefined) {\n      nextNode = Object.create(null);\n      node[part] = nextNode;\n    }\n\n    node = nextNode;\n  }\n\n  node.$ = VALID_HOSTNAME_VALUE;\n\n  return trie;\n}\n\n\n/**\n * Recursive lookup of `parts` (starting at `index`) in the tree.\n *\n * @param {array} parts\n * @param {object} trie\n * @param {number} index - when to start in `parts` (initially: length - 1)\n * @return {number} size of the suffix found (in number of parts matched)\n */\nfunction lookupInTrie(parts, trie, index) {\n  var part;\n  var nextNode;\n  var publicSuffixIndex = null;\n\n  // We have a match!\n  if (trie.$ !== undefined) {\n    publicSuffixIndex = index + 1;\n  }\n\n  // No more `parts` to look for\n  if (index === -1) {\n    return publicSuffixIndex;\n  }\n\n  part = parts[index];\n\n  // Check branch corresponding to next part of hostname\n  nextNode = trie[part];\n  if (nextNode !== undefined) {\n    publicSuffixIndex = minIndex(\n      publicSuffixIndex,\n      lookupInTrie(parts, nextNode, index - 1)\n    );\n  }\n\n  // Check wildcard branch\n  nextNode = trie['*'];\n  if (nextNode !== undefined) {\n    publicSuffixIndex = minIndex(\n      publicSuffixIndex,\n      lookupInTrie(parts, nextNode, index - 1)\n    );\n  }\n\n  return publicSuffixIndex;\n}\n\n\n/**\n * Contains the public suffix ruleset as a Trie for efficient look-up.\n *\n * @constructor\n */\nfunction SuffixTrie(rules) {\n  this.exceptions = Object.create(null);\n  this.rules = Object.create(null);\n\n  if (rules) {\n    for (var i = 0; i < rules.length; i += 1) {\n      var rule = rules[i];\n      if (rule.exception) {\n        insertInTrie(rule, this.exceptions);\n      } else {\n        insertInTrie(rule, this.rules);\n      }\n    }\n  }\n}\n\n\n/**\n * Load the trie from JSON (as serialized by JSON.stringify).\n */\nSuffixTrie.fromJson = function (json) {\n  var trie = new SuffixTrie();\n\n  trie.exceptions = json.exceptions;\n  trie.rules = json.rules;\n\n  return trie;\n};\n\n\n/**\n * Check if `value` is a valid TLD.\n */\nSuffixTrie.prototype.hasTld = function (value) {\n  // All TLDs are at the root of the Trie.\n  return this.rules[value] !== undefined;\n};\n\n\n/**\n * Check if `hostname` has a valid public suffix in `trie`.\n *\n * @param {string} hostname\n * @return {string|null} public suffix\n */\nSuffixTrie.prototype.suffixLookup = function (hostname) {\n  var parts = hostname.split('.');\n\n  // Look for a match in rules\n  var publicSuffixIndex = lookupInTrie(\n    parts,\n    this.rules,\n    parts.length - 1\n  );\n\n  if (publicSuffixIndex === null) {\n    return null;\n  }\n\n  // Look for exceptions\n  var exceptionIndex = lookupInTrie(\n    parts,\n    this.exceptions,\n    parts.length - 1\n  );\n\n  if (exceptionIndex !== null) {\n    return parts.slice(exceptionIndex + 1).join('.');\n  }\n\n  return parts.slice(publicSuffixIndex).join('.');\n};\n\n\nmodule.exports = SuffixTrie;\n","'use strict';\n\n\nvar extractTldFromHost = require('./from-host.js');\n\n\n/**\n * Checks if the TLD exists for a given hostname\n *\n * @api\n * @param {string} rules\n * @param {string} hostname\n * @return {boolean}\n */\nmodule.exports = function tldExists(rules, hostname) {\n  // Easy case, it's a TLD\n  if (rules.hasTld(hostname)) {\n    return true;\n  }\n\n  // Popping only the TLD of the hostname\n  var hostTld = extractTldFromHost(hostname);\n  if (hostTld === null) {\n    return false;\n  }\n\n  return rules.hasTld(hostTld);\n};\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/*!@license\n * UAParser.js v0.7.28\n * Lightweight JavaScript-based User-Agent string parser\n * https://github.com/faisalman/ua-parser-js\n *\n * Copyright © 2012-2021 Faisal Salman <f@faisalman.com>\n * Licensed under MIT License\n */\n\n(function (window, undefined) {\n\n    'use strict';\n\n    //////////////\n    // Constants\n    /////////////\n\n\n    var LIBVERSION  = '0.7.28',\n        EMPTY       = '',\n        UNKNOWN     = '?',\n        FUNC_TYPE   = 'function',\n        UNDEF_TYPE  = 'undefined',\n        OBJ_TYPE    = 'object',\n        STR_TYPE    = 'string',\n        MAJOR       = 'major', // deprecated\n        MODEL       = 'model',\n        NAME        = 'name',\n        TYPE        = 'type',\n        VENDOR      = 'vendor',\n        VERSION     = 'version',\n        ARCHITECTURE= 'architecture',\n        CONSOLE     = 'console',\n        MOBILE      = 'mobile',\n        TABLET      = 'tablet',\n        SMARTTV     = 'smarttv',\n        WEARABLE    = 'wearable',\n        EMBEDDED    = 'embedded',\n        UA_MAX_LENGTH = 255;\n\n\n    ///////////\n    // Helper\n    //////////\n\n\n    var util = {\n        extend : function (regexes, extensions) {\n            var mergedRegexes = {};\n            for (var i in regexes) {\n                if (extensions[i] && extensions[i].length % 2 === 0) {\n                    mergedRegexes[i] = extensions[i].concat(regexes[i]);\n                } else {\n                    mergedRegexes[i] = regexes[i];\n                }\n            }\n            return mergedRegexes;\n        },\n        has : function (str1, str2) {\n            return typeof str1 === STR_TYPE ? str2.toLowerCase().indexOf(str1.toLowerCase()) !== -1 : false;\n        },\n        lowerize : function (str) {\n            return str.toLowerCase();\n        },\n        major : function (version) {\n            return typeof(version) === STR_TYPE ? version.replace(/[^\\d\\.]/g,'').split(\".\")[0] : undefined;\n        },\n        trim : function (str, len) {\n            str = str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n            return typeof(len) === UNDEF_TYPE ? str : str.substring(0, UA_MAX_LENGTH);\n        }\n    };\n\n\n    ///////////////\n    // Map helper\n    //////////////\n\n\n    var mapper = {\n\n        rgx : function (ua, arrays) {\n\n            var i = 0, j, k, p, q, matches, match;\n\n            // loop through all regexes maps\n            while (i < arrays.length && !matches) {\n\n                var regex = arrays[i],       // even sequence (0,2,4,..)\n                    props = arrays[i + 1];   // odd sequence (1,3,5,..)\n                j = k = 0;\n\n                // try matching uastring with regexes\n                while (j < regex.length && !matches) {\n\n                    matches = regex[j++].exec(ua);\n\n                    if (!!matches) {\n                        for (p = 0; p < props.length; p++) {\n                            match = matches[++k];\n                            q = props[p];\n                            // check if given property is actually array\n                            if (typeof q === OBJ_TYPE && q.length > 0) {\n                                if (q.length == 2) {\n                                    if (typeof q[1] == FUNC_TYPE) {\n                                        // assign modified match\n                                        this[q[0]] = q[1].call(this, match);\n                                    } else {\n                                        // assign given value, ignore regex match\n                                        this[q[0]] = q[1];\n                                    }\n                                } else if (q.length == 3) {\n                                    // check whether function or regex\n                                    if (typeof q[1] === FUNC_TYPE && !(q[1].exec && q[1].test)) {\n                                        // call function (usually string mapper)\n                                        this[q[0]] = match ? q[1].call(this, match, q[2]) : undefined;\n                                    } else {\n                                        // sanitize match using given regex\n                                        this[q[0]] = match ? match.replace(q[1], q[2]) : undefined;\n                                    }\n                                } else if (q.length == 4) {\n                                        this[q[0]] = match ? q[3].call(this, match.replace(q[1], q[2])) : undefined;\n                                }\n                            } else {\n                                this[q] = match ? match : undefined;\n                            }\n                        }\n                    }\n                }\n                i += 2;\n            }\n        },\n\n        str : function (str, map) {\n\n            for (var i in map) {\n                // check if array\n                if (typeof map[i] === OBJ_TYPE && map[i].length > 0) {\n                    for (var j = 0; j < map[i].length; j++) {\n                        if (util.has(map[i][j], str)) {\n                            return (i === UNKNOWN) ? undefined : i;\n                        }\n                    }\n                } else if (util.has(map[i], str)) {\n                    return (i === UNKNOWN) ? undefined : i;\n                }\n            }\n            return str;\n        }\n    };\n\n\n    ///////////////\n    // String map\n    //////////////\n\n\n    var maps = {\n\n        browser : {\n            // Safari < 3.0\n            oldSafari : {\n                version : {\n                    '1.0'   : '/8',\n                    '1.2'   : '/1',\n                    '1.3'   : '/3',\n                    '2.0'   : '/412',\n                    '2.0.2' : '/416',\n                    '2.0.3' : '/417',\n                    '2.0.4' : '/419',\n                    '?'     : '/'\n                }\n            },\n            oldEdge : {\n                version : {\n                    '0.1'   : '12.',\n                    '21'    : '13.',\n                    '31'    : '14.',\n                    '39'    : '15.',\n                    '41'    : '16.',\n                    '42'    : '17.',\n                    '44'    : '18.'\n                }\n            }\n        },\n\n        os : {\n            windows : {\n                version : {\n                    'ME'        : '4.90',\n                    'NT 3.11'   : 'NT3.51',\n                    'NT 4.0'    : 'NT4.0',\n                    '2000'      : 'NT 5.0',\n                    'XP'        : ['NT 5.1', 'NT 5.2'],\n                    'Vista'     : 'NT 6.0',\n                    '7'         : 'NT 6.1',\n                    '8'         : 'NT 6.2',\n                    '8.1'       : 'NT 6.3',\n                    '10'        : ['NT 6.4', 'NT 10.0'],\n                    'RT'        : 'ARM'\n                }\n            }\n        }\n    };\n\n\n    //////////////\n    // Regex map\n    /////////////\n\n\n    var regexes = {\n\n        browser : [[\n\n            /\\b(?:crmo|crios)\\/([\\w\\.]+)/i                                      // Chrome for Android/iOS\n            ], [VERSION, [NAME, 'Chrome']], [\n            /edg(?:e|ios|a)?\\/([\\w\\.]+)/i                                       // Microsoft Edge\n            ], [VERSION, [NAME, 'Edge']], [\n            // breaking change (reserved for next major release):\n            ///edge\\/([\\w\\.]+)/i                                                  // Old Edge (Trident)\n            //], [[VERSION, mapper.str, maps.browser.oldEdge.version], [NAME, 'Edge']], [\n\n            // Presto based\n            /(opera\\smini)\\/([\\w\\.-]+)/i,                                       // Opera Mini\n            /(opera\\s[mobiletab]{3,6})\\b.+version\\/([\\w\\.-]+)/i,                // Opera Mobi/Tablet\n            /(opera)(?:.+version\\/|[\\/\\s]+)([\\w\\.]+)/i,                         // Opera\n            ], [NAME, VERSION], [\n            /opios[\\/\\s]+([\\w\\.]+)/i                                            // Opera mini on iphone >= 8.0\n            ], [VERSION, [NAME, 'Opera Mini']], [\n            /\\sopr\\/([\\w\\.]+)/i                                                 // Opera Webkit\n            ], [VERSION, [NAME, 'Opera']], [\n\n            // Mixed\n            /(kindle)\\/([\\w\\.]+)/i,                                             // Kindle\n            /(lunascape|maxthon|netfront|jasmine|blazer)[\\/\\s]?([\\w\\.]*)/i,     // Lunascape/Maxthon/Netfront/Jasmine/Blazer\n            // Trident based\n            /(avant\\s|iemobile|slim)(?:browser)?[\\/\\s]?([\\w\\.]*)/i,             // Avant/IEMobile/SlimBrowser\n            /(ba?idubrowser)[\\/\\s]?([\\w\\.]+)/i,                                 // Baidu Browser\n            /(?:ms|\\()(ie)\\s([\\w\\.]+)/i,                                        // Internet Explorer\n\n            // Webkit/KHTML based\n            /(flock|rockmelt|midori|epiphany|silk|skyfire|ovibrowser|bolt|iron|vivaldi|iridium|phantomjs|bowser|quark|qupzilla|falkon)\\/([\\w\\.-]+)/i,\n                                                                                // Flock/RockMelt/Midori/Epiphany/Silk/Skyfire/Bolt/Iron/Iridium/PhantomJS/Bowser/QupZilla/Falkon\n            /(rekonq|puffin|brave|whale|qqbrowserlite|qq)\\/([\\w\\.]+)/i,         // Rekonq/Puffin/Brave/Whale/QQBrowserLite/QQ, aka ShouQ\n            /(weibo)__([\\d\\.]+)/i                                               // Weibo\n            ], [NAME, VERSION], [\n            /(?:[\\s\\/]uc?\\s?browser|(?:juc.+)ucweb)[\\/\\s]?([\\w\\.]+)/i           // UCBrowser\n            ], [VERSION, [NAME, 'UCBrowser']], [\n            /(?:windowswechat)?\\sqbcore\\/([\\w\\.]+)\\b.*(?:windowswechat)?/i      // WeChat Desktop for Windows Built-in Browser\n            ], [VERSION, [NAME, 'WeChat(Win) Desktop']], [\n            /micromessenger\\/([\\w\\.]+)/i                                        // WeChat\n            ], [VERSION, [NAME, 'WeChat']], [\n            /konqueror\\/([\\w\\.]+)/i                                             // Konqueror\n            ], [VERSION, [NAME, 'Konqueror']], [\n            /trident.+rv[:\\s]([\\w\\.]{1,9})\\b.+like\\sgecko/i                     // IE11\n            ], [VERSION, [NAME, 'IE']], [\n            /yabrowser\\/([\\w\\.]+)/i                                             // Yandex\n            ], [VERSION, [NAME, 'Yandex']], [\n            /(avast|avg)\\/([\\w\\.]+)/i                                           // Avast/AVG Secure Browser\n            ], [[NAME, /(.+)/, '$1 Secure Browser'], VERSION], [\n            /focus\\/([\\w\\.]+)/i                                                 // Firefox Focus\n            ], [VERSION, [NAME, 'Firefox Focus']], [\n            /opt\\/([\\w\\.]+)/i                                                   // Opera Touch\n            ], [VERSION, [NAME, 'Opera Touch']], [\n            /coc_coc_browser\\/([\\w\\.]+)/i                                       // Coc Coc Browser\n            ], [VERSION, [NAME, 'Coc Coc']], [\n            /dolfin\\/([\\w\\.]+)/i                                                // Dolphin\n            ], [VERSION, [NAME, 'Dolphin']], [\n            /coast\\/([\\w\\.]+)/i                                                 // Opera Coast\n            ], [VERSION, [NAME, 'Opera Coast']],\n            [/xiaomi\\/miuibrowser\\/([\\w\\.]+)/i                                  // MIUI Browser\n            ], [VERSION, [NAME, 'MIUI Browser']], [\n            /fxios\\/([\\w\\.-]+)/i                                                // Firefox for iOS\n            ], [VERSION, [NAME, 'Firefox']], [\n            /(qihu|qhbrowser|qihoobrowser|360browser)/i                         // 360\n            ], [[NAME, '360 Browser']], [\n            /(oculus|samsung|sailfish)browser\\/([\\w\\.]+)/i\n            ], [[NAME, /(.+)/, '$1 Browser'], VERSION], [                       // Oculus/Samsung/Sailfish Browser\n            /(comodo_dragon)\\/([\\w\\.]+)/i                                       // Comodo Dragon\n            ], [[NAME, /_/g, ' '], VERSION], [\n            /\\s(electron)\\/([\\w\\.]+)\\ssafari/i,                                 // Electron-based App\n            /(tesla)(?:\\sqtcarbrowser|\\/(20[12]\\d\\.[\\w\\.-]+))/i,                // Tesla\n            /m?(qqbrowser|baiduboxapp|2345Explorer)[\\/\\s]?([\\w\\.]+)/i           // QQBrowser/Baidu App/2345 Browser\n            ], [NAME, VERSION], [\n            /(MetaSr)[\\/\\s]?([\\w\\.]+)/i,                                        // SouGouBrowser\n            /(LBBROWSER)/i                                                      // LieBao Browser\n            ], [NAME], [\n\n            // WebView\n            /;fbav\\/([\\w\\.]+);/i                                                // Facebook App for iOS & Android with version\n            ], [VERSION, [NAME, 'Facebook']], [\n            /FBAN\\/FBIOS|FB_IAB\\/FB4A/i                                         // Facebook App for iOS & Android without version\n            ], [[NAME, 'Facebook']], [\n            /safari\\s(line)\\/([\\w\\.]+)/i,                                       // Line App for iOS\n            /\\b(line)\\/([\\w\\.]+)\\/iab/i,                                        // Line App for Android\n            /(chromium|instagram)[\\/\\s]([\\w\\.-]+)/i                             // Chromium/Instagram\n            ], [NAME, VERSION], [\n            /\\bgsa\\/([\\w\\.]+)\\s.*safari\\//i                                     // Google Search Appliance on iOS\n            ], [VERSION, [NAME, 'GSA']], [\n\n            /headlesschrome(?:\\/([\\w\\.]+)|\\s)/i                                 // Chrome Headless\n            ], [VERSION, [NAME, 'Chrome Headless']], [\n\n            /\\swv\\).+(chrome)\\/([\\w\\.]+)/i                                      // Chrome WebView\n            ], [[NAME, 'Chrome WebView'], VERSION], [\n\n            /droid.+\\sversion\\/([\\w\\.]+)\\b.+(?:mobile\\ssafari|safari)/i         // Android Browser\n            ], [VERSION, [NAME, 'Android Browser']], [\n\n            /(chrome|omniweb|arora|[tizenoka]{5}\\s?browser)\\/v?([\\w\\.]+)/i      // Chrome/OmniWeb/Arora/Tizen/Nokia\n            ], [NAME, VERSION], [\n\n            /version\\/([\\w\\.]+)\\s.*mobile\\/\\w+\\s(safari)/i                      // Mobile Safari\n            ], [VERSION, [NAME, 'Mobile Safari']], [\n            /version\\/([\\w\\.]+)\\s.*(mobile\\s?safari|safari)/i                   // Safari & Safari Mobile\n            ], [VERSION, NAME], [\n            /webkit.+?(mobile\\s?safari|safari)(\\/[\\w\\.]+)/i                     // Safari < 3.0\n            ], [NAME, [VERSION, mapper.str, maps.browser.oldSafari.version]], [\n\n            /(webkit|khtml)\\/([\\w\\.]+)/i\n            ], [NAME, VERSION], [\n\n            // Gecko based\n            /(navigator|netscape)\\/([\\w\\.-]+)/i                                 // Netscape\n            ], [[NAME, 'Netscape'], VERSION], [\n            /ile\\svr;\\srv:([\\w\\.]+)\\).+firefox/i                                // Firefox Reality\n            ], [VERSION, [NAME, 'Firefox Reality']], [\n            /ekiohf.+(flow)\\/([\\w\\.]+)/i,                                       // Flow\n            /(swiftfox)/i,                                                      // Swiftfox\n            /(icedragon|iceweasel|camino|chimera|fennec|maemo\\sbrowser|minimo|conkeror)[\\/\\s]?([\\w\\.\\+]+)/i,\n                                                                                // IceDragon/Iceweasel/Camino/Chimera/Fennec/Maemo/Minimo/Conkeror\n            /(firefox|seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\\/([\\w\\.-]+)$/i,\n                                                                                // Firefox/SeaMonkey/K-Meleon/IceCat/IceApe/Firebird/Phoenix\n            /(firefox)\\/([\\w\\.]+)\\s[\\w\\s\\-]+\\/[\\w\\.]+$/i,                       // Other Firefox-based\n            /(mozilla)\\/([\\w\\.]+)\\s.+rv\\:.+gecko\\/\\d+/i,                        // Mozilla\n\n            // Other\n            /(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|sleipnir)[\\/\\s]?([\\w\\.]+)/i,\n                                                                                // Polaris/Lynx/Dillo/iCab/Doris/Amaya/w3m/NetSurf/Sleipnir\n            /(links)\\s\\(([\\w\\.]+)/i,                                            // Links\n            /(gobrowser)\\/?([\\w\\.]*)/i,                                         // GoBrowser\n            /(ice\\s?browser)\\/v?([\\w\\._]+)/i,                                   // ICE Browser\n            /(mosaic)[\\/\\s]([\\w\\.]+)/i                                          // Mosaic\n            ], [NAME, VERSION]\n        ],\n\n        cpu : [[\n\n            /(?:(amd|x(?:(?:86|64)[_-])?|wow|win)64)[;\\)]/i                     // AMD64 (x64)\n            ], [[ARCHITECTURE, 'amd64']], [\n\n            /(ia32(?=;))/i                                                      // IA32 (quicktime)\n            ], [[ARCHITECTURE, util.lowerize]], [\n\n            /((?:i[346]|x)86)[;\\)]/i                                            // IA32 (x86)\n            ], [[ARCHITECTURE, 'ia32']], [\n\n            /\\b(aarch64|armv?8e?l?)\\b/i                                         // ARM64\n            ], [[ARCHITECTURE, 'arm64']], [\n\n            /\\b(arm(?:v[67])?ht?n?[fl]p?)\\b/i                                   // ARMHF\n            ], [[ARCHITECTURE, 'armhf']], [\n\n            // PocketPC mistakenly identified as PowerPC\n            /windows\\s(ce|mobile);\\sppc;/i\n            ], [[ARCHITECTURE, 'arm']], [\n\n            /((?:ppc|powerpc)(?:64)?)(?:\\smac|;|\\))/i                           // PowerPC\n            ], [[ARCHITECTURE, /ower/, '', util.lowerize]], [\n\n            /(sun4\\w)[;\\)]/i                                                    // SPARC\n            ], [[ARCHITECTURE, 'sparc']], [\n\n            /((?:avr32|ia64(?=;))|68k(?=\\))|\\barm(?:64|(?=v(?:[1-7]|[5-7]1)l?|;|eabi))|(?=atmel\\s)avr|(?:irix|mips|sparc)(?:64)?\\b|pa-risc)/i\n                                                                                // IA64, 68K, ARM/64, AVR/32, IRIX/64, MIPS/64, SPARC/64, PA-RISC\n            ], [[ARCHITECTURE, util.lowerize]]\n        ],\n\n        device : [[\n\n            //////////////////////////\n            // MOBILES & TABLETS\n            // Ordered by popularity\n            /////////////////////////\n\n            // Samsung\n            /\\b(sch-i[89]0\\d|shw-m380s|sm-[pt]\\w{2,4}|gt-[pn]\\d{2,4}|sgh-t8[56]9|nexus\\s10)/i\n            ], [MODEL, [VENDOR, 'Samsung'], [TYPE, TABLET]], [\n            /\\b((?:s[cgp]h|gt|sm)-\\w+|galaxy\\snexus)/i,\n            /\\ssamsung[\\s-]([\\w-]+)/i,\n            /sec-(sgh\\w+)/i\n            ], [MODEL, [VENDOR, 'Samsung'], [TYPE, MOBILE]], [\n\n            // Apple\n            /\\((ip(?:hone|od)[\\s\\w]*);/i                                        // iPod/iPhone\n            ], [MODEL, [VENDOR, 'Apple'], [TYPE, MOBILE]], [\n            /\\((ipad);[\\w\\s\\),;-]+apple/i,                                      // iPad\n            /applecoremedia\\/[\\w\\.]+\\s\\((ipad)/i,\n            /\\b(ipad)\\d\\d?,\\d\\d?[;\\]].+ios/i\n            ], [MODEL, [VENDOR, 'Apple'], [TYPE, TABLET]], [\n\n            // Huawei\n            /\\b((?:agr|ags[23]|bah2?|sht?)-a?[lw]\\d{2})/i,\n            ], [MODEL, [VENDOR, 'Huawei'], [TYPE, TABLET]], [\n            /d\\/huawei([\\w\\s-]+)[;\\)]/i,\n            /\\b(nexus\\s6p|vog-[at]?l\\d\\d|ane-[at]?l[x\\d]\\d|eml-a?l\\d\\da?|lya-[at]?l\\d[\\dc]|clt-a?l\\d\\di?|ele-l\\d\\d)/i,\n            /\\b(\\w{2,4}-[atu][ln][01259][019])[;\\)\\s]/i\n            ], [MODEL, [VENDOR, 'Huawei'], [TYPE, MOBILE]], [\n\n            // Xiaomi\n            /\\b(poco[\\s\\w]+)(?:\\sbuild|\\))/i,                                   // Xiaomi POCO\n            /\\b;\\s(\\w+)\\sbuild\\/hm\\1/i,                                         // Xiaomi Hongmi 'numeric' models\n            /\\b(hm[\\s\\-_]?note?[\\s_]?(?:\\d\\w)?)\\sbuild/i,                       // Xiaomi Hongmi\n            /\\b(redmi[\\s\\-_]?(?:note|k)?[\\w\\s_]+)(?:\\sbuild|\\))/i,              // Xiaomi Redmi\n            /\\b(mi[\\s\\-_]?(?:a\\d|one|one[\\s_]plus|note lte)?[\\s_]?(?:\\d?\\w?)[\\s_]?(?:plus)?)\\sbuild/i  // Xiaomi Mi\n            ], [[MODEL, /_/g, ' '], [VENDOR, 'Xiaomi'], [TYPE, MOBILE]], [\n            /\\b(mi[\\s\\-_]?(?:pad)(?:[\\w\\s_]+))(?:\\sbuild|\\))/i                  // Mi Pad tablets\n            ],[[MODEL, /_/g, ' '], [VENDOR, 'Xiaomi'], [TYPE, TABLET]], [\n\n            // OPPO\n            /;\\s(\\w+)\\sbuild.+\\soppo/i,\n            /\\s(cph[12]\\d{3}|p(?:af|c[al]|d\\w|e[ar])[mt]\\d0|x9007)\\b/i\n            ], [MODEL, [VENDOR, 'OPPO'], [TYPE, MOBILE]], [\n\n            // Vivo\n            /\\svivo\\s(\\w+)(?:\\sbuild|\\))/i,\n            /\\s(v[12]\\d{3}\\w?[at])(?:\\sbuild|;)/i\n            ], [MODEL, [VENDOR, 'Vivo'], [TYPE, MOBILE]], [\n\n            // Realme\n            /\\s(rmx[12]\\d{3})(?:\\sbuild|;)/i\n            ], [MODEL, [VENDOR, 'Realme'], [TYPE, MOBILE]], [\n\n            // Motorola\n            /\\s(milestone|droid(?:[2-4x]|\\s(?:bionic|x2|pro|razr))?:?(\\s4g)?)\\b[\\w\\s]+build\\//i,\n            /\\smot(?:orola)?[\\s-](\\w*)/i,\n            /((?:moto[\\s\\w\\(\\)]+|xt\\d{3,4}|nexus\\s6)(?=\\sbuild|\\)))/i\n            ], [MODEL, [VENDOR, 'Motorola'], [TYPE, MOBILE]], [\n            /\\s(mz60\\d|xoom[\\s2]{0,2})\\sbuild\\//i\n            ], [MODEL, [VENDOR, 'Motorola'], [TYPE, TABLET]], [\n\n            // LG\n            /((?=lg)?[vl]k\\-?\\d{3})\\sbuild|\\s3\\.[\\s\\w;-]{10}lg?-([06cv9]{3,4})/i\n            ], [MODEL, [VENDOR, 'LG'], [TYPE, TABLET]], [\n            /(lm-?f100[nv]?|nexus\\s[45])/i,\n            /lg[e;\\s\\/-]+((?!browser|netcast)\\w+)/i,\n            /\\blg(\\-?[\\d\\w]+)\\sbuild/i\n            ], [MODEL, [VENDOR, 'LG'], [TYPE, MOBILE]], [\n\n            // Lenovo\n            /(ideatab[\\w\\-\\s]+)/i,\n            /lenovo\\s?(s(?:5000|6000)(?:[\\w-]+)|tab(?:[\\s\\w]+)|yt[\\d\\w-]{6}|tb[\\d\\w-]{6})/i        // Lenovo tablets\n            ], [MODEL, [VENDOR, 'Lenovo'], [TYPE, TABLET]], [\n\n            // Nokia\n            /(?:maemo|nokia).*(n900|lumia\\s\\d+)/i,\n            /nokia[\\s_-]?([\\w\\.-]*)/i\n            ], [[MODEL, /_/g, ' '], [VENDOR, 'Nokia'], [TYPE, MOBILE]], [\n\n            // Google\n            /droid.+;\\s(pixel\\sc)[\\s)]/i                                        // Google Pixel C\n            ], [MODEL, [VENDOR, 'Google'], [TYPE, TABLET]], [\n            /droid.+;\\s(pixel[\\s\\daxl]{0,6})(?:\\sbuild|\\))/i                    // Google Pixel\n            ], [MODEL, [VENDOR, 'Google'], [TYPE, MOBILE]], [\n\n            // Sony\n            /droid.+\\s([c-g]\\d{4}|so[-l]\\w+|xq-a\\w[4-7][12])(?=\\sbuild\\/|\\).+chrome\\/(?![1-6]{0,1}\\d\\.))/i\n            ], [MODEL, [VENDOR, 'Sony'], [TYPE, MOBILE]], [\n            /sony\\stablet\\s[ps]\\sbuild\\//i,\n            /(?:sony)?sgp\\w+(?:\\sbuild\\/|\\))/i\n            ], [[MODEL, 'Xperia Tablet'], [VENDOR, 'Sony'], [TYPE, TABLET]], [\n\n            // OnePlus\n            /\\s(kb2005|in20[12]5|be20[12][59])\\b/i,\n            /\\ba000(1)\\sbuild/i,                                                // OnePlus\n            /\\boneplus\\s(a\\d{4})[\\s)]/i\n            ], [MODEL, [VENDOR, 'OnePlus'], [TYPE, MOBILE]], [\n\n            // Amazon\n            /(alexa)webm/i,\n            /(kf[a-z]{2}wi)(\\sbuild\\/|\\))/i,                                    // Kindle Fire without Silk\n            /(kf[a-z]+)(\\sbuild\\/|\\)).+silk\\//i                                 // Kindle Fire HD\n            ], [MODEL, [VENDOR, 'Amazon'], [TYPE, TABLET]], [\n            /(sd|kf)[0349hijorstuw]+(\\sbuild\\/|\\)).+silk\\//i                    // Fire Phone\n            ], [[MODEL, 'Fire Phone'], [VENDOR, 'Amazon'], [TYPE, MOBILE]], [\n\n            // BlackBerry\n            /\\((playbook);[\\w\\s\\),;-]+(rim)/i                                   // BlackBerry PlayBook\n            ], [MODEL, VENDOR, [TYPE, TABLET]], [\n            /((?:bb[a-f]|st[hv])100-\\d)/i,\n            /\\(bb10;\\s(\\w+)/i                                                   // BlackBerry 10\n            ], [MODEL, [VENDOR, 'BlackBerry'], [TYPE, MOBILE]], [\n\n            // Asus\n            /(?:\\b|asus_)(transfo[prime\\s]{4,10}\\s\\w+|eeepc|slider\\s\\w+|nexus\\s7|padfone|p00[cj])/i\n            ], [MODEL, [VENDOR, 'ASUS'], [TYPE, TABLET]], [\n            /\\s(z[es]6[027][01][km][ls]|zenfone\\s\\d\\w?)\\b/i\n            ], [MODEL, [VENDOR, 'ASUS'], [TYPE, MOBILE]], [\n\n            // HTC\n            /(nexus\\s9)/i                                                       // HTC Nexus 9\n            ], [MODEL, [VENDOR, 'HTC'], [TYPE, TABLET]], [\n            /(htc)[;_\\s-]{1,2}([\\w\\s]+(?=\\)|\\sbuild)|\\w+)/i,                    // HTC\n\n            // ZTE\n            /(zte)-(\\w*)/i,\n            /(alcatel|geeksphone|nexian|panasonic|(?=;\\s)sony)[_\\s-]?([\\w-]*)/i // Alcatel/GeeksPhone/Nexian/Panasonic/Sony\n            ], [VENDOR, [MODEL, /_/g, ' '], [TYPE, MOBILE]], [\n\n            // Acer\n            /droid[x\\d\\.\\s;]+\\s([ab][1-7]\\-?[0178a]\\d\\d?)/i\n            ], [MODEL, [VENDOR, 'Acer'], [TYPE, TABLET]], [\n\n            // Meizu\n            /droid.+;\\s(m[1-5]\\snote)\\sbuild/i,\n            /\\bmz-([\\w-]{2,})/i\n            ], [MODEL, [VENDOR, 'Meizu'], [TYPE, MOBILE]], [\n\n            // MIXED\n            /(blackberry|benq|palm(?=\\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron)[\\s_-]?([\\w-]*)/i,\n                                                                                // BlackBerry/BenQ/Palm/Sony-Ericsson/Acer/Asus/Dell/Meizu/Motorola/Polytron\n            /(hp)\\s([\\w\\s]+\\w)/i,                                               // HP iPAQ\n            /(asus)-?(\\w+)/i,                                                   // Asus\n            /(microsoft);\\s(lumia[\\s\\w]+)/i,                                    // Microsoft Lumia\n            /(lenovo)[_\\s-]?([\\w-]+)/i,                                         // Lenovo\n            /linux;.+(jolla);/i,                                                // Jolla\n            /droid.+;\\s(oppo)\\s?([\\w\\s]+)\\sbuild/i                              // OPPO\n            ], [VENDOR, MODEL, [TYPE, MOBILE]], [\n\n            /(archos)\\s(gamepad2?)/i,                                           // Archos\n            /(hp).+(touchpad(?!.+tablet)|tablet)/i,                             // HP TouchPad\n            /(kindle)\\/([\\w\\.]+)/i,                                             // Kindle\n            /\\s(nook)[\\w\\s]+build\\/(\\w+)/i,                                     // Nook\n            /(dell)\\s(strea[kpr\\s\\d]*[\\dko])/i,                                 // Dell Streak\n            /[;\\/]\\s?(le[\\s\\-]+pan)[\\s\\-]+(\\w{1,9})\\sbuild/i,                   // Le Pan Tablets\n            /[;\\/]\\s?(trinity)[\\-\\s]*(t\\d{3})\\sbuild/i,                         // Trinity Tablets\n            /\\b(gigaset)[\\s\\-]+(q\\w{1,9})\\sbuild/i,                             // Gigaset Tablets\n            /\\b(vodafone)\\s([\\w\\s]+)(?:\\)|\\sbuild)/i                            // Vodafone\n            ], [VENDOR, MODEL, [TYPE, TABLET]], [\n\n            /\\s(surface\\sduo)\\s/i                                               // Surface Duo\n            ], [MODEL, [VENDOR, 'Microsoft'], [TYPE, TABLET]], [\n            /droid\\s[\\d\\.]+;\\s(fp\\du?)\\sbuild/i\n            ], [MODEL, [VENDOR, 'Fairphone'], [TYPE, MOBILE]], [\n            /\\s(u304aa)\\sbuild/i                                                // AT&T\n            ], [MODEL, [VENDOR, 'AT&T'], [TYPE, MOBILE]], [\n            /sie-(\\w*)/i                                                        // Siemens\n            ], [MODEL, [VENDOR, 'Siemens'], [TYPE, MOBILE]], [\n            /[;\\/]\\s?(rct\\w+)\\sbuild/i                                          // RCA Tablets\n            ], [MODEL, [VENDOR, 'RCA'], [TYPE, TABLET]], [\n            /[;\\/\\s](venue[\\d\\s]{2,7})\\sbuild/i                                 // Dell Venue Tablets\n            ], [MODEL, [VENDOR, 'Dell'], [TYPE, TABLET]], [\n            /[;\\/]\\s?(q(?:mv|ta)\\w+)\\sbuild/i                                   // Verizon Tablet\n            ], [MODEL, [VENDOR, 'Verizon'], [TYPE, TABLET]], [\n            /[;\\/]\\s(?:barnes[&\\s]+noble\\s|bn[rt])([\\w\\s\\+]*)\\sbuild/i          // Barnes & Noble Tablet\n            ], [MODEL, [VENDOR, 'Barnes & Noble'], [TYPE, TABLET]], [\n            /[;\\/]\\s(tm\\d{3}\\w+)\\sbuild/i\n            ], [MODEL, [VENDOR, 'NuVision'], [TYPE, TABLET]], [\n            /;\\s(k88)\\sbuild/i                                                  // ZTE K Series Tablet\n            ], [MODEL, [VENDOR, 'ZTE'], [TYPE, TABLET]], [\n            /;\\s(nx\\d{3}j)\\sbuild/i                                             // ZTE Nubia\n            ], [MODEL, [VENDOR, 'ZTE'], [TYPE, MOBILE]], [\n            /[;\\/]\\s?(gen\\d{3})\\sbuild.*49h/i                                   // Swiss GEN Mobile\n            ], [MODEL, [VENDOR, 'Swiss'], [TYPE, MOBILE]], [\n            /[;\\/]\\s?(zur\\d{3})\\sbuild/i                                        // Swiss ZUR Tablet\n            ], [MODEL, [VENDOR, 'Swiss'], [TYPE, TABLET]], [\n            /[;\\/]\\s?((zeki)?tb.*\\b)\\sbuild/i                                   // Zeki Tablets\n            ], [MODEL, [VENDOR, 'Zeki'], [TYPE, TABLET]], [\n            /[;\\/]\\s([yr]\\d{2})\\sbuild/i,\n            /[;\\/]\\s(dragon[\\-\\s]+touch\\s|dt)(\\w{5})\\sbuild/i                   // Dragon Touch Tablet\n            ], [[VENDOR, 'Dragon Touch'], MODEL, [TYPE, TABLET]], [\n            /[;\\/]\\s?(ns-?\\w{0,9})\\sbuild/i                                     // Insignia Tablets\n            ], [MODEL, [VENDOR, 'Insignia'], [TYPE, TABLET]], [\n            /[;\\/]\\s?((nxa|Next)-?\\w{0,9})\\sbuild/i                             // NextBook Tablets\n            ], [MODEL, [VENDOR, 'NextBook'], [TYPE, TABLET]], [\n            /[;\\/]\\s?(xtreme\\_)?(v(1[045]|2[015]|[3469]0|7[05]))\\sbuild/i\n            ], [[VENDOR, 'Voice'], MODEL, [TYPE, MOBILE]], [                    // Voice Xtreme Phones\n            /[;\\/]\\s?(lvtel\\-)?(v1[12])\\sbuild/i                                // LvTel Phones\n            ], [[VENDOR, 'LvTel'], MODEL, [TYPE, MOBILE]], [\n            /;\\s(ph-1)\\s/i\n            ], [MODEL, [VENDOR, 'Essential'], [TYPE, MOBILE]], [                // Essential PH-1\n            /[;\\/]\\s?(v(100md|700na|7011|917g).*\\b)\\sbuild/i                    // Envizen Tablets\n            ], [MODEL, [VENDOR, 'Envizen'], [TYPE, TABLET]], [\n            /[;\\/]\\s?(trio[\\s\\w\\-\\.]+)\\sbuild/i                                 // MachSpeed Tablets\n            ], [MODEL, [VENDOR, 'MachSpeed'], [TYPE, TABLET]], [\n            /[;\\/]\\s?tu_(1491)\\sbuild/i                                         // Rotor Tablets\n            ], [MODEL, [VENDOR, 'Rotor'], [TYPE, TABLET]], [\n            /(shield[\\w\\s]+)\\sbuild/i                                           // Nvidia Shield Tablets\n            ], [MODEL, [VENDOR, 'Nvidia'], [TYPE, TABLET]], [\n            /(sprint)\\s(\\w+)/i                                                  // Sprint Phones\n            ], [VENDOR, MODEL, [TYPE, MOBILE]], [\n            /(kin\\.[onetw]{3})/i                                                // Microsoft Kin\n            ], [[MODEL, /\\./g, ' '], [VENDOR, 'Microsoft'], [TYPE, MOBILE]], [\n            /droid\\s[\\d\\.]+;\\s(cc6666?|et5[16]|mc[239][23]x?|vc8[03]x?)\\)/i     // Zebra\n            ], [MODEL, [VENDOR, 'Zebra'], [TYPE, TABLET]], [\n            /droid\\s[\\d\\.]+;\\s(ec30|ps20|tc[2-8]\\d[kx])\\)/i\n            ], [MODEL, [VENDOR, 'Zebra'], [TYPE, MOBILE]], [\n\n            ///////////////////\n            // CONSOLES\n            ///////////////////\n\n            /\\s(ouya)\\s/i,                                                      // Ouya\n            /(nintendo)\\s([wids3utch]+)/i                                       // Nintendo\n            ], [VENDOR, MODEL, [TYPE, CONSOLE]], [\n            /droid.+;\\s(shield)\\sbuild/i                                        // Nvidia\n            ], [MODEL, [VENDOR, 'Nvidia'], [TYPE, CONSOLE]], [\n            /(playstation\\s[345portablevi]+)/i                                  // Playstation\n            ], [MODEL, [VENDOR, 'Sony'], [TYPE, CONSOLE]], [\n            /[\\s\\(;](xbox(?:\\sone)?(?!;\\sxbox))[\\s\\);]/i                        // Microsoft Xbox\n            ], [MODEL, [VENDOR, 'Microsoft'], [TYPE, CONSOLE]], [\n\n            ///////////////////\n            // SMARTTVS\n            ///////////////////\n\n            /smart-tv.+(samsung)/i                                              // Samsung\n            ], [VENDOR, [TYPE, SMARTTV]], [\n            /hbbtv.+maple;(\\d+)/i\n            ], [[MODEL, /^/, 'SmartTV'], [VENDOR, 'Samsung'], [TYPE, SMARTTV]], [\n            /(?:linux;\\snetcast.+smarttv|lg\\snetcast\\.tv-201\\d)/i,              // LG SmartTV\n            ], [[VENDOR, 'LG'], [TYPE, SMARTTV]], [\n            /(apple)\\s?tv/i                                                     // Apple TV\n            ], [VENDOR, [MODEL, 'Apple TV'], [TYPE, SMARTTV]], [\n            /crkey/i                                                            // Google Chromecast\n            ], [[MODEL, 'Chromecast'], [VENDOR, 'Google'], [TYPE, SMARTTV]], [\n            /droid.+aft([\\w])(\\sbuild\\/|\\))/i                                   // Fire TV\n            ], [MODEL, [VENDOR, 'Amazon'], [TYPE, SMARTTV]], [\n            /\\(dtv[\\);].+(aquos)/i                                              // Sharp\n            ], [MODEL, [VENDOR, 'Sharp'], [TYPE, SMARTTV]], [\n            /hbbtv\\/\\d+\\.\\d+\\.\\d+\\s+\\([\\w\\s]*;\\s*(\\w[^;]*);([^;]*)/i            // HbbTV devices\n            ], [[VENDOR, util.trim], [MODEL, util.trim], [TYPE, SMARTTV]], [\n            /[\\s\\/\\(](android\\s|smart[-\\s]?|opera\\s)tv[;\\)\\s]/i                 // SmartTV from Unidentified Vendors\n            ], [[TYPE, SMARTTV]], [\n\n            ///////////////////\n            // WEARABLES\n            ///////////////////\n\n            /((pebble))app\\/[\\d\\.]+\\s/i                                         // Pebble\n            ], [VENDOR, MODEL, [TYPE, WEARABLE]], [\n            /droid.+;\\s(glass)\\s\\d/i                                            // Google Glass\n            ], [MODEL, [VENDOR, 'Google'], [TYPE, WEARABLE]], [\n            /droid\\s[\\d\\.]+;\\s(wt63?0{2,3})\\)/i\n            ], [MODEL, [VENDOR, 'Zebra'], [TYPE, WEARABLE]], [\n\n            ///////////////////\n            // EMBEDDED\n            ///////////////////\n\n            /(tesla)(?:\\sqtcarbrowser|\\/20[12]\\d\\.[\\w\\.-]+)/i                   // Tesla\n            ], [VENDOR, [TYPE, EMBEDDED]], [\n\n            ////////////////////\n            // MIXED (GENERIC)\n            ///////////////////\n\n            /droid .+?; ([^;]+?)(?: build|\\) applewebkit).+? mobile safari/i    // Android Phones from Unidentified Vendors\n            ], [MODEL, [TYPE, MOBILE]], [\n            /droid .+?;\\s([^;]+?)(?: build|\\) applewebkit).+?(?! mobile) safari/i  // Android Tablets from Unidentified Vendors\n            ], [MODEL, [TYPE, TABLET]], [\n            /\\s(tablet|tab)[;\\/]/i,                                             // Unidentifiable Tablet\n            /\\s(mobile)(?:[;\\/]|\\ssafari)/i                                     // Unidentifiable Mobile\n            ], [[TYPE, util.lowerize]], [\n            /(android[\\w\\.\\s\\-]{0,9});.+build/i                                 // Generic Android Device\n            ], [MODEL, [VENDOR, 'Generic']], [\n            /(phone)/i\n            ], [[TYPE, MOBILE]]\n        ],\n\n        engine : [[\n\n            /windows.+\\sedge\\/([\\w\\.]+)/i                                       // EdgeHTML\n            ], [VERSION, [NAME, 'EdgeHTML']], [\n\n            /webkit\\/537\\.36.+chrome\\/(?!27)([\\w\\.]+)/i                         // Blink\n            ], [VERSION, [NAME, 'Blink']], [\n\n            /(presto)\\/([\\w\\.]+)/i,                                             // Presto\n            /(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna)\\/([\\w\\.]+)/i, // WebKit/Trident/NetFront/NetSurf/Amaya/Lynx/w3m/Goanna\n            /ekioh(flow)\\/([\\w\\.]+)/i,                                          // Flow\n            /(khtml|tasman|links)[\\/\\s]\\(?([\\w\\.]+)/i,                          // KHTML/Tasman/Links\n            /(icab)[\\/\\s]([23]\\.[\\d\\.]+)/i                                      // iCab\n            ], [NAME, VERSION], [\n\n            /rv\\:([\\w\\.]{1,9})\\b.+(gecko)/i                                     // Gecko\n            ], [VERSION, NAME]\n        ],\n\n        os : [[\n\n            // Windows\n            /microsoft\\s(windows)\\s(vista|xp)/i                                 // Windows (iTunes)\n            ], [NAME, VERSION], [\n            /(windows)\\snt\\s6\\.2;\\s(arm)/i,                                     // Windows RT\n            /(windows\\sphone(?:\\sos)*)[\\s\\/]?([\\d\\.\\s\\w]*)/i,                   // Windows Phone\n            /(windows\\smobile|windows)[\\s\\/]?([ntce\\d\\.\\s]+\\w)(?!.+xbox)/i\n            ], [NAME, [VERSION, mapper.str, maps.os.windows.version]], [\n            /(win(?=3|9|n)|win\\s9x\\s)([nt\\d\\.]+)/i\n            ], [[NAME, 'Windows'], [VERSION, mapper.str, maps.os.windows.version]], [\n\n            // iOS/macOS\n            /ip[honead]{2,4}\\b(?:.*os\\s([\\w]+)\\slike\\smac|;\\sopera)/i,          // iOS\n            /cfnetwork\\/.+darwin/i\n            ], [[VERSION, /_/g, '.'], [NAME, 'iOS']], [\n            /(mac\\sos\\sx)\\s?([\\w\\s\\.]*)/i,\n            /(macintosh|mac(?=_powerpc)\\s)(?!.+haiku)/i                         // Mac OS\n            ], [[NAME, 'Mac OS'], [VERSION, /_/g, '.']], [\n\n            // Mobile OSes                                                      // Android/WebOS/Palm/QNX/Bada/RIM/MeeGo/Contiki/Sailfish OS\n            /(android|webos|palm\\sos|qnx|bada|rim\\stablet\\sos|meego|sailfish|contiki)[\\/\\s-]?([\\w\\.]*)/i,\n            /(blackberry)\\w*\\/([\\w\\.]*)/i,                                      // Blackberry\n            /(tizen|kaios)[\\/\\s]([\\w\\.]+)/i,                                    // Tizen/KaiOS\n            /\\((series40);/i                                                    // Series 40\n            ], [NAME, VERSION], [\n            /\\(bb(10);/i                                                        // BlackBerry 10\n            ], [VERSION, [NAME, 'BlackBerry']], [\n            /(?:symbian\\s?os|symbos|s60(?=;)|series60)[\\/\\s-]?([\\w\\.]*)/i       // Symbian\n            ], [VERSION, [NAME, 'Symbian']], [\n            /mozilla.+\\(mobile;.+gecko.+firefox/i                               // Firefox OS\n            ], [[NAME, 'Firefox OS']], [\n            /web0s;.+rt(tv)/i,\n            /\\b(?:hp)?wos(?:browser)?\\/([\\w\\.]+)/i                              // WebOS\n            ], [VERSION, [NAME, 'webOS']], [\n\n            // Google Chromecast\n            /crkey\\/([\\d\\.]+)/i                                                 // Google Chromecast\n            ], [VERSION, [NAME, 'Chromecast']], [\n            /(cros)\\s[\\w]+\\s([\\w\\.]+\\w)/i                                       // Chromium OS\n            ], [[NAME, 'Chromium OS'], VERSION],[\n\n            // Console\n            /(nintendo|playstation)\\s([wids345portablevuch]+)/i,                // Nintendo/Playstation\n            /(xbox);\\s+xbox\\s([^\\);]+)/i,                                       // Microsoft Xbox (360, One, X, S, Series X, Series S)\n\n            // GNU/Linux based\n            /(mint)[\\/\\s\\(\\)]?(\\w*)/i,                                          // Mint\n            /(mageia|vectorlinux)[;\\s]/i,                                       // Mageia/VectorLinux\n            /(joli|[kxln]?ubuntu|debian|suse|opensuse|gentoo|arch(?=\\slinux)|slackware|fedora|mandriva|centos|pclinuxos|redhat|zenwalk|linpus|raspbian)(?:\\sgnu\\/linux)?(?:\\slinux)?[\\/\\s-]?(?!chrom|package)([\\w\\.-]*)/i,\n                                                                                // Joli/Ubuntu/Debian/SUSE/Gentoo/Arch/Slackware\n                                                                                // Fedora/Mandriva/CentOS/PCLinuxOS/RedHat/Zenwalk/Linpus\n            /(hurd|linux)\\s?([\\w\\.]*)/i,                                        // Hurd/Linux\n            /(gnu)\\s?([\\w\\.]*)/i,                                               // GNU\n\n            // BSD based\n            /\\s([frentopc-]{0,4}bsd|dragonfly)\\s?(?!amd|[ix346]{1,2}86)([\\w\\.]*)/i,  // FreeBSD/NetBSD/OpenBSD/PC-BSD/DragonFly\n            /(haiku)\\s(\\w+)/i                                                   // Haiku\n            ], [NAME, VERSION], [\n\n            // Other\n            /(sunos)\\s?([\\w\\.\\d]*)/i                                            // Solaris\n            ], [[NAME, 'Solaris'], VERSION], [\n            /((?:open)?solaris)[\\/\\s-]?([\\w\\.]*)/i,                             // Solaris\n            /(aix)\\s((\\d)(?=\\.|\\)|\\s)[\\w\\.])*/i,                                // AIX\n            /(plan\\s9|minix|beos|os\\/2|amigaos|morphos|risc\\sos|openvms|fuchsia)/i,  // Plan9/Minix/BeOS/OS2/AmigaOS/MorphOS/RISCOS/OpenVMS/Fuchsia\n            /(unix)\\s?([\\w\\.]*)/i                                               // UNIX\n            ], [NAME, VERSION]\n        ]\n    };\n\n\n    /////////////////\n    // Constructor\n    ////////////////\n    var UAParser = function (ua, extensions) {\n\n        if (typeof ua === 'object') {\n            extensions = ua;\n            ua = undefined;\n        }\n\n        if (!(this instanceof UAParser)) {\n            return new UAParser(ua, extensions).getResult();\n        }\n\n        var _ua = ua || ((typeof window !== 'undefined' && window.navigator && window.navigator.userAgent) ? window.navigator.userAgent : EMPTY);\n        var _rgxmap = extensions ? util.extend(regexes, extensions) : regexes;\n\n        this.getBrowser = function () {\n            var _browser = { name: undefined, version: undefined };\n            mapper.rgx.call(_browser, _ua, _rgxmap.browser);\n            _browser.major = util.major(_browser.version); // deprecated\n            return _browser;\n        };\n        this.getCPU = function () {\n            var _cpu = { architecture: undefined };\n            mapper.rgx.call(_cpu, _ua, _rgxmap.cpu);\n            return _cpu;\n        };\n        this.getDevice = function () {\n            var _device = { vendor: undefined, model: undefined, type: undefined };\n            mapper.rgx.call(_device, _ua, _rgxmap.device);\n            return _device;\n        };\n        this.getEngine = function () {\n            var _engine = { name: undefined, version: undefined };\n            mapper.rgx.call(_engine, _ua, _rgxmap.engine);\n            return _engine;\n        };\n        this.getOS = function () {\n            var _os = { name: undefined, version: undefined };\n            mapper.rgx.call(_os, _ua, _rgxmap.os);\n            return _os;\n        };\n        this.getResult = function () {\n            return {\n                ua      : this.getUA(),\n                browser : this.getBrowser(),\n                engine  : this.getEngine(),\n                os      : this.getOS(),\n                device  : this.getDevice(),\n                cpu     : this.getCPU()\n            };\n        };\n        this.getUA = function () {\n            return _ua;\n        };\n        this.setUA = function (ua) {\n            _ua = (typeof ua === STR_TYPE && ua.length > UA_MAX_LENGTH) ? util.trim(ua, UA_MAX_LENGTH) : ua;\n            return this;\n        };\n        this.setUA(_ua);\n        return this;\n    };\n\n    UAParser.VERSION = LIBVERSION;\n    UAParser.BROWSER = {\n        NAME    : NAME,\n        MAJOR   : MAJOR, // deprecated\n        VERSION : VERSION\n    };\n    UAParser.CPU = {\n        ARCHITECTURE : ARCHITECTURE\n    };\n    UAParser.DEVICE = {\n        MODEL   : MODEL,\n        VENDOR  : VENDOR,\n        TYPE    : TYPE,\n        CONSOLE : CONSOLE,\n        MOBILE  : MOBILE,\n        SMARTTV : SMARTTV,\n        TABLET  : TABLET,\n        WEARABLE: WEARABLE,\n        EMBEDDED: EMBEDDED\n    };\n    UAParser.ENGINE = {\n        NAME    : NAME,\n        VERSION : VERSION\n    };\n    UAParser.OS = {\n        NAME    : NAME,\n        VERSION : VERSION\n    };\n\n    ///////////\n    // Export\n    //////////\n\n\n    // check js environment\n    if (typeof(exports) !== UNDEF_TYPE) {\n        // nodejs env\n        if (typeof module !== UNDEF_TYPE && module.exports) {\n            exports = module.exports = UAParser;\n        }\n        exports.UAParser = UAParser;\n    } else {\n        // requirejs env (optional)\n        if (typeof(define) === 'function' && define.amd) {\n            define(function () {\n                return UAParser;\n            });\n        } else if (typeof window !== 'undefined') {\n            // browser env\n            window.UAParser = UAParser;\n        }\n    }\n\n    // jQuery/Zepto specific (optional)\n    // Note:\n    //   In AMD env the global scope should be kept clean, but jQuery is an exception.\n    //   jQuery always exports to global scope, unless jQuery.noConflict(true) is used,\n    //   and we should catch that.\n    var $ = typeof window !== 'undefined' && (window.jQuery || window.Zepto);\n    if ($ && !$.ua) {\n        var parser = new UAParser();\n        $.ua = parser.getResult();\n        $.ua.get = function () {\n            return parser.getUA();\n        };\n        $.ua.set = function (uastring) {\n            parser.setUA(uastring);\n            var result = parser.getResult();\n            for (var prop in result) {\n                $.ua[prop] = result[prop];\n            }\n        };\n    }\n\n})(typeof window === 'object' ? window : this);\n","export default function(url, options) {\n\toptions = options || {};\n\treturn new Promise( (resolve, reject) => {\n\t\tconst request = new XMLHttpRequest();\n\t\tconst keys = [];\n\t\tconst all = [];\n\t\tconst headers = {};\n\n\t\tconst response = () => ({\n\t\t\tok: (request.status/100|0) == 2,\t\t// 200-299\n\t\t\tstatusText: request.statusText,\n\t\t\tstatus: request.status,\n\t\t\turl: request.responseURL,\n\t\t\ttext: () => Promise.resolve(request.responseText),\n\t\t\tjson: () => Promise.resolve(request.responseText).then(JSON.parse),\n\t\t\tblob: () => Promise.resolve(new Blob([request.response])),\n\t\t\tclone: response,\n\t\t\theaders: {\n\t\t\t\tkeys: () => keys,\n\t\t\t\tentries: () => all,\n\t\t\t\tget: n => headers[n.toLowerCase()],\n\t\t\t\thas: n => n.toLowerCase() in headers\n\t\t\t}\n\t\t});\n\n\t\trequest.open(options.method || 'get', url, true);\n\n\t\trequest.onload = () => {\n\t\t\trequest.getAllResponseHeaders().replace(/^(.*?):[^\\S\\n]*([\\s\\S]*?)$/gm, (m, key, value) => {\n\t\t\t\tkeys.push(key = key.toLowerCase());\n\t\t\t\tall.push([key, value]);\n\t\t\t\theaders[key] = headers[key] ? `${headers[key]},${value}` : value;\n\t\t\t});\n\t\t\tresolve(response());\n\t\t};\n\n\t\trequest.onerror = reject;\n\n\t\trequest.withCredentials = options.credentials=='include';\n\n\t\tfor (const i in options.headers) {\n\t\t\trequest.setRequestHeader(i, options.headers[i]);\n\t\t}\n\n\t\trequest.send(options.body || null);\n\t});\n}\n","/*! https://mths.be/punycode v1.3.2 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * http://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.3.2',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar punycode = require('punycode');\nvar util = require('./util');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n      splitter =\n          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      util.isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host || srcPath.length > 1) &&\n      (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n","'use strict';\n\nmodule.exports = {\n  isString: function(arg) {\n    return typeof(arg) === 'string';\n  },\n  isObject: function(arg) {\n    return typeof(arg) === 'object' && arg !== null;\n  },\n  isNull: function(arg) {\n    return arg === null;\n  },\n  isNullOrUndefined: function(arg) {\n    return arg == null;\n  }\n};\n","module.exports = require('./lib/Observable.js').Observable;\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Observable = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n// === Symbol Support ===\nvar hasSymbols = function () {\n  return typeof Symbol === 'function';\n};\n\nvar hasSymbol = function (name) {\n  return hasSymbols() && Boolean(Symbol[name]);\n};\n\nvar getSymbol = function (name) {\n  return hasSymbol(name) ? Symbol[name] : '@@' + name;\n};\n\nif (hasSymbols() && !hasSymbol('observable')) {\n  Symbol.observable = Symbol('observable');\n}\n\nvar SymbolIterator = getSymbol('iterator');\nvar SymbolObservable = getSymbol('observable');\nvar SymbolSpecies = getSymbol('species'); // === Abstract Operations ===\n\nfunction getMethod(obj, key) {\n  var value = obj[key];\n  if (value == null) return undefined;\n  if (typeof value !== 'function') throw new TypeError(value + ' is not a function');\n  return value;\n}\n\nfunction getSpecies(obj) {\n  var ctor = obj.constructor;\n\n  if (ctor !== undefined) {\n    ctor = ctor[SymbolSpecies];\n\n    if (ctor === null) {\n      ctor = undefined;\n    }\n  }\n\n  return ctor !== undefined ? ctor : Observable;\n}\n\nfunction isObservable(x) {\n  return x instanceof Observable; // SPEC: Brand check\n}\n\nfunction hostReportError(e) {\n  if (hostReportError.log) {\n    hostReportError.log(e);\n  } else {\n    setTimeout(function () {\n      throw e;\n    });\n  }\n}\n\nfunction enqueue(fn) {\n  Promise.resolve().then(function () {\n    try {\n      fn();\n    } catch (e) {\n      hostReportError(e);\n    }\n  });\n}\n\nfunction cleanupSubscription(subscription) {\n  var cleanup = subscription._cleanup;\n  if (cleanup === undefined) return;\n  subscription._cleanup = undefined;\n\n  if (!cleanup) {\n    return;\n  }\n\n  try {\n    if (typeof cleanup === 'function') {\n      cleanup();\n    } else {\n      var unsubscribe = getMethod(cleanup, 'unsubscribe');\n\n      if (unsubscribe) {\n        unsubscribe.call(cleanup);\n      }\n    }\n  } catch (e) {\n    hostReportError(e);\n  }\n}\n\nfunction closeSubscription(subscription) {\n  subscription._observer = undefined;\n  subscription._queue = undefined;\n  subscription._state = 'closed';\n}\n\nfunction flushSubscription(subscription) {\n  var queue = subscription._queue;\n\n  if (!queue) {\n    return;\n  }\n\n  subscription._queue = undefined;\n  subscription._state = 'ready';\n\n  for (var i = 0; i < queue.length; ++i) {\n    notifySubscription(subscription, queue[i].type, queue[i].value);\n    if (subscription._state === 'closed') break;\n  }\n}\n\nfunction notifySubscription(subscription, type, value) {\n  subscription._state = 'running';\n  var observer = subscription._observer;\n\n  try {\n    var m = getMethod(observer, type);\n\n    switch (type) {\n      case 'next':\n        if (m) m.call(observer, value);\n        break;\n\n      case 'error':\n        closeSubscription(subscription);\n        if (m) m.call(observer, value);else throw value;\n        break;\n\n      case 'complete':\n        closeSubscription(subscription);\n        if (m) m.call(observer);\n        break;\n    }\n  } catch (e) {\n    hostReportError(e);\n  }\n\n  if (subscription._state === 'closed') cleanupSubscription(subscription);else if (subscription._state === 'running') subscription._state = 'ready';\n}\n\nfunction onNotify(subscription, type, value) {\n  if (subscription._state === 'closed') return;\n\n  if (subscription._state === 'buffering') {\n    subscription._queue.push({\n      type: type,\n      value: value\n    });\n\n    return;\n  }\n\n  if (subscription._state !== 'ready') {\n    subscription._state = 'buffering';\n    subscription._queue = [{\n      type: type,\n      value: value\n    }];\n    enqueue(function () {\n      return flushSubscription(subscription);\n    });\n    return;\n  }\n\n  notifySubscription(subscription, type, value);\n}\n\nvar Subscription =\n/*#__PURE__*/\nfunction () {\n  function Subscription(observer, subscriber) {\n    _classCallCheck(this, Subscription);\n\n    // ASSERT: observer is an object\n    // ASSERT: subscriber is callable\n    this._cleanup = undefined;\n    this._observer = observer;\n    this._queue = undefined;\n    this._state = 'initializing';\n    var subscriptionObserver = new SubscriptionObserver(this);\n\n    try {\n      this._cleanup = subscriber.call(undefined, subscriptionObserver);\n    } catch (e) {\n      subscriptionObserver.error(e);\n    }\n\n    if (this._state === 'initializing') this._state = 'ready';\n  }\n\n  _createClass(Subscription, [{\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      if (this._state !== 'closed') {\n        closeSubscription(this);\n        cleanupSubscription(this);\n      }\n    }\n  }, {\n    key: \"closed\",\n    get: function () {\n      return this._state === 'closed';\n    }\n  }]);\n\n  return Subscription;\n}();\n\nvar SubscriptionObserver =\n/*#__PURE__*/\nfunction () {\n  function SubscriptionObserver(subscription) {\n    _classCallCheck(this, SubscriptionObserver);\n\n    this._subscription = subscription;\n  }\n\n  _createClass(SubscriptionObserver, [{\n    key: \"next\",\n    value: function next(value) {\n      onNotify(this._subscription, 'next', value);\n    }\n  }, {\n    key: \"error\",\n    value: function error(value) {\n      onNotify(this._subscription, 'error', value);\n    }\n  }, {\n    key: \"complete\",\n    value: function complete() {\n      onNotify(this._subscription, 'complete');\n    }\n  }, {\n    key: \"closed\",\n    get: function () {\n      return this._subscription._state === 'closed';\n    }\n  }]);\n\n  return SubscriptionObserver;\n}();\n\nvar Observable =\n/*#__PURE__*/\nfunction () {\n  function Observable(subscriber) {\n    _classCallCheck(this, Observable);\n\n    if (!(this instanceof Observable)) throw new TypeError('Observable cannot be called as a function');\n    if (typeof subscriber !== 'function') throw new TypeError('Observable initializer must be a function');\n    this._subscriber = subscriber;\n  }\n\n  _createClass(Observable, [{\n    key: \"subscribe\",\n    value: function subscribe(observer) {\n      if (typeof observer !== 'object' || observer === null) {\n        observer = {\n          next: observer,\n          error: arguments[1],\n          complete: arguments[2]\n        };\n      }\n\n      return new Subscription(observer, this._subscriber);\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(fn) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        if (typeof fn !== 'function') {\n          reject(new TypeError(fn + ' is not a function'));\n          return;\n        }\n\n        function done() {\n          subscription.unsubscribe();\n          resolve();\n        }\n\n        var subscription = _this.subscribe({\n          next: function (value) {\n            try {\n              fn(value, done);\n            } catch (e) {\n              reject(e);\n              subscription.unsubscribe();\n            }\n          },\n          error: reject,\n          complete: resolve\n        });\n      });\n    }\n  }, {\n    key: \"map\",\n    value: function map(fn) {\n      var _this2 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n      var C = getSpecies(this);\n      return new C(function (observer) {\n        return _this2.subscribe({\n          next: function (value) {\n            try {\n              value = fn(value);\n            } catch (e) {\n              return observer.error(e);\n            }\n\n            observer.next(value);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: \"filter\",\n    value: function filter(fn) {\n      var _this3 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n      var C = getSpecies(this);\n      return new C(function (observer) {\n        return _this3.subscribe({\n          next: function (value) {\n            try {\n              if (!fn(value)) return;\n            } catch (e) {\n              return observer.error(e);\n            }\n\n            observer.next(value);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: \"reduce\",\n    value: function reduce(fn) {\n      var _this4 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n      var C = getSpecies(this);\n      var hasSeed = arguments.length > 1;\n      var hasValue = false;\n      var seed = arguments[1];\n      var acc = seed;\n      return new C(function (observer) {\n        return _this4.subscribe({\n          next: function (value) {\n            var first = !hasValue;\n            hasValue = true;\n\n            if (!first || hasSeed) {\n              try {\n                acc = fn(acc, value);\n              } catch (e) {\n                return observer.error(e);\n              }\n            } else {\n              acc = value;\n            }\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            if (!hasValue && !hasSeed) return observer.error(new TypeError('Cannot reduce an empty sequence'));\n            observer.next(acc);\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: \"concat\",\n    value: function concat() {\n      var _this5 = this;\n\n      for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n        sources[_key] = arguments[_key];\n      }\n\n      var C = getSpecies(this);\n      return new C(function (observer) {\n        var subscription;\n        var index = 0;\n\n        function startNext(next) {\n          subscription = next.subscribe({\n            next: function (v) {\n              observer.next(v);\n            },\n            error: function (e) {\n              observer.error(e);\n            },\n            complete: function () {\n              if (index === sources.length) {\n                subscription = undefined;\n                observer.complete();\n              } else {\n                startNext(C.from(sources[index++]));\n              }\n            }\n          });\n        }\n\n        startNext(_this5);\n        return function () {\n          if (subscription) {\n            subscription.unsubscribe();\n            subscription = undefined;\n          }\n        };\n      });\n    }\n  }, {\n    key: \"flatMap\",\n    value: function flatMap(fn) {\n      var _this6 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n      var C = getSpecies(this);\n      return new C(function (observer) {\n        var subscriptions = [];\n\n        var outer = _this6.subscribe({\n          next: function (value) {\n            if (fn) {\n              try {\n                value = fn(value);\n              } catch (e) {\n                return observer.error(e);\n              }\n            }\n\n            var inner = C.from(value).subscribe({\n              next: function (value) {\n                observer.next(value);\n              },\n              error: function (e) {\n                observer.error(e);\n              },\n              complete: function () {\n                var i = subscriptions.indexOf(inner);\n                if (i >= 0) subscriptions.splice(i, 1);\n                completeIfDone();\n              }\n            });\n            subscriptions.push(inner);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            completeIfDone();\n          }\n        });\n\n        function completeIfDone() {\n          if (outer.closed && subscriptions.length === 0) observer.complete();\n        }\n\n        return function () {\n          subscriptions.forEach(function (s) {\n            return s.unsubscribe();\n          });\n          outer.unsubscribe();\n        };\n      });\n    }\n  }, {\n    key: SymbolObservable,\n    value: function () {\n      return this;\n    }\n  }], [{\n    key: \"from\",\n    value: function from(x) {\n      var C = typeof this === 'function' ? this : Observable;\n      if (x == null) throw new TypeError(x + ' is not an object');\n      var method = getMethod(x, SymbolObservable);\n\n      if (method) {\n        var observable = method.call(x);\n        if (Object(observable) !== observable) throw new TypeError(observable + ' is not an object');\n        if (isObservable(observable) && observable.constructor === C) return observable;\n        return new C(function (observer) {\n          return observable.subscribe(observer);\n        });\n      }\n\n      if (hasSymbol('iterator')) {\n        method = getMethod(x, SymbolIterator);\n\n        if (method) {\n          return new C(function (observer) {\n            enqueue(function () {\n              if (observer.closed) return;\n              var _iteratorNormalCompletion = true;\n              var _didIteratorError = false;\n              var _iteratorError = undefined;\n\n              try {\n                for (var _iterator = method.call(x)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                  var _item = _step.value;\n                  observer.next(_item);\n                  if (observer.closed) return;\n                }\n              } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion && _iterator.return != null) {\n                    _iterator.return();\n                  }\n                } finally {\n                  if (_didIteratorError) {\n                    throw _iteratorError;\n                  }\n                }\n              }\n\n              observer.complete();\n            });\n          });\n        }\n      }\n\n      if (Array.isArray(x)) {\n        return new C(function (observer) {\n          enqueue(function () {\n            if (observer.closed) return;\n\n            for (var i = 0; i < x.length; ++i) {\n              observer.next(x[i]);\n              if (observer.closed) return;\n            }\n\n            observer.complete();\n          });\n        });\n      }\n\n      throw new TypeError(x + ' is not observable');\n    }\n  }, {\n    key: \"of\",\n    value: function of() {\n      for (var _len2 = arguments.length, items = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        items[_key2] = arguments[_key2];\n      }\n\n      var C = typeof this === 'function' ? this : Observable;\n      return new C(function (observer) {\n        enqueue(function () {\n          if (observer.closed) return;\n\n          for (var i = 0; i < items.length; ++i) {\n            observer.next(items[i]);\n            if (observer.closed) return;\n          }\n\n          observer.complete();\n        });\n      });\n    }\n  }, {\n    key: SymbolSpecies,\n    get: function () {\n      return this;\n    }\n  }]);\n\n  return Observable;\n}();\n\nexports.Observable = Observable;\n\nif (hasSymbols()) {\n  Object.defineProperty(Observable, Symbol('extensions'), {\n    value: {\n      symbol: SymbolObservable,\n      hostReportError: hostReportError\n    },\n    configurable: true\n  });\n}","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return e;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var t,\n    e = {},\n    r = Object.prototype,\n    n = r.hasOwnProperty,\n    o = Object.defineProperty || function (t, e, r) {\n      t[e] = r.value;\n    },\n    i = \"function\" == typeof Symbol ? Symbol : {},\n    a = i.iterator || \"@@iterator\",\n    c = i.asyncIterator || \"@@asyncIterator\",\n    u = i.toStringTag || \"@@toStringTag\";\n  function define(t, e, r) {\n    return Object.defineProperty(t, e, {\n      value: r,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), t[e];\n  }\n  try {\n    define({}, \"\");\n  } catch (t) {\n    define = function define(t, e, r) {\n      return t[e] = r;\n    };\n  }\n  function wrap(t, e, r, n) {\n    var i = e && e.prototype instanceof Generator ? e : Generator,\n      a = Object.create(i.prototype),\n      c = new Context(n || []);\n    return o(a, \"_invoke\", {\n      value: makeInvokeMethod(t, r, c)\n    }), a;\n  }\n  function tryCatch(t, e, r) {\n    try {\n      return {\n        type: \"normal\",\n        arg: t.call(e, r)\n      };\n    } catch (t) {\n      return {\n        type: \"throw\",\n        arg: t\n      };\n    }\n  }\n  e.wrap = wrap;\n  var h = \"suspendedStart\",\n    l = \"suspendedYield\",\n    f = \"executing\",\n    s = \"completed\",\n    y = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var p = {};\n  define(p, a, function () {\n    return this;\n  });\n  var d = Object.getPrototypeOf,\n    v = d && d(d(values([])));\n  v && v !== r && n.call(v, a) && (p = v);\n  var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);\n  function defineIteratorMethods(t) {\n    [\"next\", \"throw\", \"return\"].forEach(function (e) {\n      define(t, e, function (t) {\n        return this._invoke(e, t);\n      });\n    });\n  }\n  function AsyncIterator(t, e) {\n    function invoke(r, o, i, a) {\n      var c = tryCatch(t[r], t, o);\n      if (\"throw\" !== c.type) {\n        var u = c.arg,\n          h = u.value;\n        return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) {\n          invoke(\"next\", t, i, a);\n        }, function (t) {\n          invoke(\"throw\", t, i, a);\n        }) : e.resolve(h).then(function (t) {\n          u.value = t, i(u);\n        }, function (t) {\n          return invoke(\"throw\", t, i, a);\n        });\n      }\n      a(c.arg);\n    }\n    var r;\n    o(this, \"_invoke\", {\n      value: function value(t, n) {\n        function callInvokeWithMethodAndArg() {\n          return new e(function (e, r) {\n            invoke(t, n, e, r);\n          });\n        }\n        return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(e, r, n) {\n    var o = h;\n    return function (i, a) {\n      if (o === f) throw new Error(\"Generator is already running\");\n      if (o === s) {\n        if (\"throw\" === i) throw a;\n        return {\n          value: t,\n          done: !0\n        };\n      }\n      for (n.method = i, n.arg = a;;) {\n        var c = n.delegate;\n        if (c) {\n          var u = maybeInvokeDelegate(c, n);\n          if (u) {\n            if (u === y) continue;\n            return u;\n          }\n        }\n        if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) {\n          if (o === h) throw o = s, n.arg;\n          n.dispatchException(n.arg);\n        } else \"return\" === n.method && n.abrupt(\"return\", n.arg);\n        o = f;\n        var p = tryCatch(e, r, n);\n        if (\"normal\" === p.type) {\n          if (o = n.done ? s : l, p.arg === y) continue;\n          return {\n            value: p.arg,\n            done: n.done\n          };\n        }\n        \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(e, r) {\n    var n = r.method,\n      o = e.iterator[n];\n    if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y;\n    var i = tryCatch(o, e.iterator, r.arg);\n    if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y;\n    var a = i.arg;\n    return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y);\n  }\n  function pushTryEntry(t) {\n    var e = {\n      tryLoc: t[0]\n    };\n    1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);\n  }\n  function resetTryEntry(t) {\n    var e = t.completion || {};\n    e.type = \"normal\", delete e.arg, t.completion = e;\n  }\n  function Context(t) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], t.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(e) {\n    if (e || \"\" === e) {\n      var r = e[a];\n      if (r) return r.call(e);\n      if (\"function\" == typeof e.next) return e;\n      if (!isNaN(e.length)) {\n        var o = -1,\n          i = function next() {\n            for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next;\n            return next.value = t, next.done = !0, next;\n          };\n        return i.next = i;\n      }\n    }\n    throw new TypeError(_typeof(e) + \" is not iterable\");\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), o(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) {\n    var e = \"function\" == typeof t && t.constructor;\n    return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name));\n  }, e.mark = function (t) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t;\n  }, e.awrap = function (t) {\n    return {\n      __await: t\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () {\n    return this;\n  }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) {\n    void 0 === i && (i = Promise);\n    var a = new AsyncIterator(wrap(t, r, n, o), i);\n    return e.isGeneratorFunction(r) ? a : a.next().then(function (t) {\n      return t.done ? t.value : a.next();\n    });\n  }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () {\n    return this;\n  }), define(g, \"toString\", function () {\n    return \"[object Generator]\";\n  }), e.keys = function (t) {\n    var e = Object(t),\n      r = [];\n    for (var n in e) r.push(n);\n    return r.reverse(), function next() {\n      for (; r.length;) {\n        var t = r.pop();\n        if (t in e) return next.value = t, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, e.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(e) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var t = this.tryEntries[0].completion;\n      if (\"throw\" === t.type) throw t.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(e) {\n      if (this.done) throw e;\n      var r = this;\n      function handle(n, o) {\n        return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o;\n      }\n      for (var o = this.tryEntries.length - 1; o >= 0; --o) {\n        var i = this.tryEntries[o],\n          a = i.completion;\n        if (\"root\" === i.tryLoc) return handle(\"end\");\n        if (i.tryLoc <= this.prev) {\n          var c = n.call(i, \"catchLoc\"),\n            u = n.call(i, \"finallyLoc\");\n          if (c && u) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          } else if (c) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n          } else {\n            if (!u) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(t, e) {\n      for (var r = this.tryEntries.length - 1; r >= 0; --r) {\n        var o = this.tryEntries[r];\n        if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) {\n          var i = o;\n          break;\n        }\n      }\n      i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);\n      var a = i ? i.completion : {};\n      return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a);\n    },\n    complete: function complete(t, e) {\n      if (\"throw\" === t.type) throw t.arg;\n      return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y;\n    },\n    finish: function finish(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;\n      }\n    },\n    \"catch\": function _catch(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.tryLoc === t) {\n          var n = r.completion;\n          if (\"throw\" === n.type) {\n            var o = n.arg;\n            resetTryEntry(r);\n          }\n          return o;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(e, r, n) {\n      return this.delegate = {\n        iterator: values(e),\n        resultName: r,\n        nextLoc: n\n      }, \"next\" === this.method && (this.arg = t), y;\n    }\n  }, e;\n}\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// TODO(Babel 8): Remove this file.\n\nvar runtime = require(\"../helpers/regeneratorRuntime\")();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// startup\n// Load entry module and return exports\n// This entry module doesn't tell about it's top-level declarations so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(55);\n"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","_classCallCheck","instance","Constructor","TypeError","_typeof","o","Symbol","iterator","constructor","prototype","_toPropertyKey","input","hint","prim","toPrimitive","res","call","String","Number","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","_createClass","protoProps","staticProps","ResponseValues","Response","status","payload","message","_arrayLikeToArray","arr","len","arr2","Array","_unsupportedIterableToArray","minLen","n","toString","slice","name","from","test","_createForOfIteratorHelper","allowArrayLike","it","isArray","F","s","e","_e","f","normalCompletion","didErr","step","next","_e2","LOG_TYPE","Detector","dom","detectors","timeoutMs","race","map","guess","Tools","providerExists","all","elementReady","elementsReady","LOG_LEVELS","VERBOSE","DEBUG","INFO","WARN","ERROR","level","_pluggables","_padding","_ts","dt","Date","getMinutes","getSeconds","join","getMilliseconds","configure","config","_config","_log","type","logger_level_name","ConsoleLogger","LOG_LEVEL","window","logger_level","type_level","log","console","bind","warn","prefix","msg","obj","plugin","logEvent","timestamp","now","pushLogs","debug","verbose","addPluggable","pluggable","getCategoryName","push","listPluggables","env","awsconfig","ms","setTimeout","raw","top","Logger","stringArray","stringToTest","RegExp","filterWords","text","stringMatches","split","toLowerCase","trim","root","timeout","timer","querySelector","detector","clearTimeout","observer","MutationObserver","mutationRecords","disconnect","observe","documentElement","childList","subtree","Error","selector","el","element","querySelectorAll","elements","document","style","opacity","display","property","provider","ignoreVisibility","node","getComputedStyle","visibility","ignoreOffsetHeight","offsetHeight","userPreferences","background","hideBackground","b","hideElement","cookieName","cookie","includes","url","tldjs","hostname","domain","executionResults","timeDiffThreshold","updateTime","getTime","debugLog","findProvider","providerDetectors","detectTimeout","detectProvider","findExistingProviders","detectProviders","providers","getRandomValues","Request","action","parameters","JSON","stringify","chrome","runtime","sendMessage","response","code","isOk","isError","tabId","tabs","Messages","OpenSignIn","OpenSignUp","OpenForgotPassword","AuthenticateUser","SignInFromExtension","BuildUserSession","SignOut","CheckAuth","ChangeUserPassword","DeleteUser","ContentScriptStarted","GetVersion","ExtensionIsWorking","AppOpen","PopupOpen","CheckDEK","DeleteDEK","GenerateDEK","GetUserKeys","SetMasterPassword","GetLogs","DeleteLogs","DeleteAllLogs","GetLoggingPreferences","UpdatePreferences","GetUsageMetrics","GetProviderDetectors","GetProviderInfo","GetCurrentTab","GetActiveTab","TabFinished","TabNoEntitlement","GetExecutionResults","UpdateExecutionResults","ClearExecutionResults","NotifyActiveTabIsBlocked","GetUserPreferences","SetUserPreferences","GetDisabledHostnames","SaveDisabledHostnames","HostnameIsBlocked","UpdateHostnameState","GetUserEntitlement","IncrementCounter","GetCurrentEntitlement","GetCounter","SubscriptionVerificationNotification","GetPopupShownAt","ShowPopup","GetCategories","Dom","GetDocument","URLHelper","addEventListener","event","data","location","href","source","postMessage","getCurrentUrl","_","possibleUrl","referrer","m","parse","rnds8","Uint8Array","rng","crypto","msCrypto","uuid","REGEX","byteToHex","substr","offset","validate","options","buf","rnds","random","Comm","channel","uuidv4","script","existingScript","parentNode","removeChild","createElement","setAttribute","textContent","appendChild","AuthHelper","_defineProperty","_slicedToArray","r","l","t","u","a","sendCredentialsToBackground","credentials","fromOptions","fromOnboard","sendSessionToBackground","session","injectAuthScript","comm","injectScript","getChannel","detail","messageType","messageHandler","Errors","DomTools","fixedElements","position","elText","innerText","lowercasedFilterWords","word","elementsToFilter","children","buttonText","elementsFound","Steps","Step","currentDom","clickCount","cookieItems","finishExecution","findPositionFixed","domNavigate","click","hideCurrent","setContext","hideParent","closeWindow","clickChildFilter","findButtonClick","expandElements","getCookieItems","detectSelectors","forEach","findElements","filter","findChildren","parentElement","hideNode","bg","detectSelector","buttonClickDetector","buttonClick","eventDispatch","dispatchEvent","Event","newDom","shadowRoot","steps","delay","ConsentSteps","Consent","item","itemCategory","checkedClick","dataChecked","checkboxMouseClick","ariaChecked","checkbox","setSliderValue","sliderClick","objectionButton","select","yesNo","yesNoFind","className","classOn","classOff","filterYes","filterNo","stepDetector","no","yes","selectedIndex","noIndex","yesIndex","temCategory","checked","getAttribute","consentSteps","consentType","CookieItemSteps","CookieItem","cookieItem","itemList","consentResults","consentCookieItem","decideCategory","getElement","consentCategory","goToParent","goToChild","consent","executeConsent","update","elementsDetector","results","sendRequest","result","categories","guessCategory","Actions","Outcomes","Action","outcome","userPreferencesEntries","entries","cookieKeys","some","stepResults","runActionSteps","rejectAll","acceptNecessary","acceptDefault","saveSettings","autoConsent","genericAction","startingDom","consentCookieItems","canRejectAll","executeStep","actions","RulesEngine","p","actionResults","executeAction","totalClicks","OUTCOMES","RunStatus","Run","run","rulesEngine","execute","catch","runForURL","rootDomain","isEligible","main","runForProviders","executedOnce","isHidden","executeProviderRules","missingProviders","filteredProviders","executedProviders","providerToRun","CognitoHostedUIIdentityProvider","AuthErrorTypes","Notifications","ExpirationDateOption","ExpirationDates","option","expirationDateFor","expirationDate","time","expirationTimeFor","setMinutes","isExpired","installedAt","isEntitled","isRCIdSynced","themeColors","Theme","osDark","matchMedia","matches","browser","theme","getCurrent","firefoxDark","colors","getFirefoxTheme","BrowserHelper","userAgent","browserName","navigator","maxTouchPoints","UAParser","setUA","getResult","os","isFederatedSignInOptions","find","k","hasOwnProperty","isCognitoHostedOpts","oauth","redirectSignIn","logger","AMPLIFY_SYMBOL","for","listeners","patterns","protectedChannels","remove","listener","pattern","x","holder","callback","dispatch","ampSymbol","indexOf","capsule","patternInfo","_toListeners","listen","listenerName","cb","onHubCapsule","isLegacyCallback","match","dispatchingCapsule","groups","Hub","HubClass","dataMemory","setItem","getItem","removeItem","clear","storageWindow","localStorage","exception","MemoryStorage","getStorage","MIME_MAP","ext","isEmpty","keys","sortByField","list","field","dir","sort","dirX","a_val","b_val","objectLessAttributes","less","ret","assign","attr","filenameToContentType","filename","defVal","filtered","mime","endsWith","isTextFile","contentType","startsWith","generateRandomString","chars","Math","floor","makeQuerablePromise","promise","isResolved","isPending","isRejected","isFullfilled","isWebWorker","selfContext","WorkerGlobalScope","browserOrNode","isBrowser","isNode","process","versions","transferKeyToLowerCase","whiteListForItself","whiteListForChildren","isStrictObject","transferKeyToUpperCase","toUpperCase","Function","Boolean","nonRetryable","retry","functionToRetry","delayFn","attempt","jitteredExponentialRetry","maxDelayMs","jitteredBackoff","waitForInit","rej","auth2","initialized","refreshGoogleToken","_refreshGoogleTokenImpl","ga","getAuthInstance","googleAuth","NonRetryableError","googleUser","currentUser","get","isSignedIn","reloadAuthResponse","authResponse","id_token","expires_at","token","refreshFacebookToken","_refreshFacebookTokenImpl","fb","errorMessage","getLoginStatus","fbResponse","accessToken","expiresIn","scope","GoogleOAuth","FacebookOAuth","BASE_USER_AGENT","Platform","product","isReactNative","getAmplifyUserAgent","_components","_modules","Auth","Analytics","API","Credentials","Storage","I18n","Cache","PubSub","Interactions","Pushnotification","UI","XR","Predictions","DataStore","Geo","ServiceWorker","register","comp","getModuleName","extendStatics","d","setPrototypeOf","__proto__","__extends","__","create","__assign","__awaiter","thisArg","_arguments","P","generator","fulfilled","rejected","__generator","body","y","g","label","sent","trys","ops","verb","v","op","pop","__read","ar","AmbiguousRoleResolutionType","CognitoIdentityProvider","CreateIdentityPoolInput","IdentityPool","InternalErrorException","InvalidParameterException","LimitExceededException","NotAuthorizedException","ResourceConflictException","TooManyRequestsException","DeleteIdentitiesInput","ErrorCode","UnprocessedIdentityId","DeleteIdentitiesResponse","DeleteIdentityPoolInput","ResourceNotFoundException","DescribeIdentityInput","IdentityDescription","DescribeIdentityPoolInput","ExternalServiceException","GetCredentialsForIdentityInput","GetCredentialsForIdentityResponse","InvalidIdentityPoolConfigurationException","GetIdInput","GetIdResponse","GetIdentityPoolRolesInput","MappingRuleMatchType","MappingRule","RulesConfigurationType","RoleMappingType","RoleMapping","GetIdentityPoolRolesResponse","GetOpenIdTokenInput","GetOpenIdTokenResponse","DeveloperUserAlreadyRegisteredException","GetOpenIdTokenForDeveloperIdentityInput","GetOpenIdTokenForDeveloperIdentityResponse","ListIdentitiesInput","ListIdentitiesResponse","ListIdentityPoolsInput","IdentityPoolShortDescription","ListIdentityPoolsResponse","ListTagsForResourceInput","ListTagsForResourceResponse","LookupDeveloperIdentityInput","LookupDeveloperIdentityResponse","MergeDeveloperIdentitiesInput","MergeDeveloperIdentitiesResponse","ConcurrentModificationException","SetIdentityPoolRolesInput","TagResourceInput","TagResourceResponse","UnlinkDeveloperIdentityInput","UnlinkIdentityInput","UntagResourceInput","UntagResourceResponse","filterSensitiveLog","statusCode","headers","isInstance","resp","method","port","query","protocol","path","charAt","request","req","clone","cloned","HttpRequest","reduce","carry","paramName","param","deserializeAws_json1_1GetCredentialsForIdentityCommandError","output","context","parseBody","parsedOutput","errorCode","loadRestJsonErrorCode","deserializeAws_json1_1ExternalServiceExceptionResponse","$metadata","deserializeMetadata","deserializeAws_json1_1InternalErrorExceptionResponse","deserializeAws_json1_1InvalidIdentityPoolConfigurationExceptionResponse","deserializeAws_json1_1InvalidParameterExceptionResponse","deserializeAws_json1_1NotAuthorizedExceptionResponse","deserializeAws_json1_1ResourceConflictExceptionResponse","deserializeAws_json1_1ResourceNotFoundExceptionResponse","deserializeAws_json1_1TooManyRequestsExceptionResponse","parsedBody","Code","Message","$fault","deserializeAws_json1_1GetIdCommandError","deserializeAws_json1_1LimitExceededExceptionResponse","deserialized","deserializeAws_json1_1ExternalServiceException","deserializeAws_json1_1InternalErrorException","deserializeAws_json1_1InvalidIdentityPoolConfigurationException","deserializeAws_json1_1InvalidParameterException","deserializeAws_json1_1LimitExceededException","deserializeAws_json1_1NotAuthorizedException","deserializeAws_json1_1ResourceConflictException","deserializeAws_json1_1ResourceNotFoundException","deserializeAws_json1_1TooManyRequestsException","serializeAws_json1_1GetCredentialsForIdentityInput","CustomRoleArn","IdentityId","Logins","serializeAws_json1_1LoginsMap","serializeAws_json1_1GetIdInput","AccountId","IdentityPoolId","acc","deserializeAws_json1_1Credentials","AccessKeyId","Expiration","round","SecretKey","SessionToken","deserializeAws_json1_1GetCredentialsForIdentityResponse","deserializeAws_json1_1GetIdResponse","httpStatusCode","requestId","extendedRequestId","cfId","collectBody","streamBody","streamCollector","buildHttpRpcRequest","resolvedHostname","endpoint","contents","utf8Encoder","collectBodyString","encoded","object","sanitizeErrorCode","rawValue","cleanValue","headerKey","deserializerMiddlewareOption","tags","override","serializerMiddlewareOption","getSerdePlugin","serializer","deserializer","applyToStack","commandStack","add","parsed","deserializerMiddleware","serializerMiddleware","constructStack","absoluteEntries","relativeEntries","entriesNameSet","Set","cloneTo","toStack","entry","middleware","addRelativeTo","expandRelativeMiddlewareList","expandedMiddlewareList","before","after","reverse","getMiddlewareList","normalizedAbsoluteEntries","normalizedRelativeEntries","normalizedEntriesNameMap","normalizedEntry","toMiddleware","relation","stepWeights","priorityWeights","priority","wholeList","expendedMiddlewareList","stack","has","toOverrideIndex","findIndex","toOverride","splice","use","toRemove","isRemoved","filterCb","delete","removeByName","removeByReference","removeByTag","concat","handler","initialize","serialize","build","finalizeRequest","deserialize","high","normal","low","middlewareStack","send","command","optionsOrCb","resolveMiddleware","destroy","requestHandler","extendedEncodeURIComponent","str","encodeURIComponent","replace","c","charCodeAt","StringWrapper","Class","getPrototypeOf","deserializeJSON","toJSON","fromObject","LazyJsonString","clientStack","configuration","handlerExecutionContext","clientName","commandName","inputFilterSensitiveLog","outputFilterSensitiveLog","handle","serializeAws_json1_1GetCredentialsForIdentityCommand","deserializeAws_json1_1GetCredentialsForIdentityCommand","tryNextLink","resolveLogins","logins","tokenOrProvider","resolvedPairs","fromCognitoIdentity","client","GetCredentialsForIdentityCommand","customRoleArn","identityId","throwOnMissingCredentials","throwOnMissingAccessKeyId","throwOnMissingSecretKey","accessKeyId","secretAccessKey","sessionToken","expiration","serializeAws_json1_1GetIdCommand","deserializeAws_json1_1GetIdCommand","STORE_NAME","dbName","withObjectStore","store","onerror","onsuccess","id","put","getDb","openDbRequest","indexedDB","open","onblocked","onupgradeneeded","db","createObjectStore","keyPath","mode","tx","transaction","oncomplete","objectStore","close","inMemoryStorage","InMemoryStorage","fromCognitoIdentityPool","accountId","cache","IndexedDbStorage","identityPoolId","userIdentifier","cacheKey","GetIdCommand","throwOnMissingId","escapeUri","uri","hexEncode","requestTimeout","abortSignal","requestTimeoutInMs","aborted","abortError","queryString","parts","iLen","qsEntry","buildQueryString","requestOptions","Headers","AbortController","timeoutInMs","fetchRequest","raceOfPromises","fetch","fetchHeaders","transformedHeaders","pair","HttpResponse","blob","timeoutError","onabort","alphabetByEncoding","alphabetByValue","start","limit","fromCharCode","index","fromBase64","totalByteLength","out","ArrayBuffer","dataView","DataView","bits","bitLength","j","chunkOffset","byteLength","setUint8","toBase64","min","bitClusterCount","ceil","stream","Blob","readToBase64","base64","arrayBuffer","collectBlob","reader","getReader","isDone","read","prior","set","collectStream","FileReader","onloadend","readyState","commaIndex","dataOffset","substring","readAsDataURL","invalidProvider","retryMiddlewareOptions","getRetryPlugin","retryStrategy","retryMiddleware","CLOCK_SKEW_ERROR_CODES","THROTTLING_ERROR_CODES","TRANSIENT_ERROR_CODES","TRANSIENT_ERROR_STATUS_CODES","isThrottlingError","$retryable","throttling","defaultDelayDecider","delayBase","attempts","defaultRetryDecider","isRetryableByTrait","isClockSkewError","isTransientError","DEFAULT_RETRY_MODE","maxAttemptsProvider","retryDecider","delayDecider","retryQuota","initialRetryTokens","MAX_CAPACITY","availableCapacity","getCapacityAmount","hasRetryTokens","freeze","retrieveRetryTokens","capacityAmount","releaseRetryTokens","capacityReleaseAmount","getDefaultRetryQuota","shouldRetry","maxAttempts","getMaxAttempts","totalDelay","v4","retryTokenAmount","totalRetryDelay","resolveRetryConfig","normalizeMaxAttempts","StandardRetryStrategy","calculateBodyLength","size","defaultUserAgent","serviceId","clientVersion","parsedUA","sections","version","AWS_TEMPLATE","AWS_REGIONS","AWS_CN_REGIONS","AWS_ISO_REGIONS","AWS_ISO_B_REGIONS","AWS_US_GOV_REGIONS","parseUrl","URL","pathname","search","querystring","decodeURIComponent","parseQueryString","parseInt","ClientSharedValues","apiVersion","disableHostPrefix","regionInfoProvider","region","regionInfo","partition","signingRegion","signingService","urlParser","ClientDefaultValues","base64Decoder","base64Encoder","bodyLengthChecker","credentialDefaultProvider","defaultUserAgentProvider","FetchHttpHandler","sha256","Sha256","utf8Decoder","fromUtf8","toUtf8","resolveEndpointsConfig","tls","normalizeEndpoint","getEndPointFromRegion","isCustomEndpoint","resolveRegionConfig","normalizeRegion","CONTENT_LENGTH_HEADER","contentLengthMiddlewareOptions","getContentLengthPlugin","contentLengthMiddleware","hostHeaderMiddlewareOptions","getHostHeaderPlugin","metadata","hostHeaderMiddleware","loggerMiddlewareOptions","getLoggerPlugin","outputWithoutMetadata","SHORT_TO_HEX","HEX_TO_SHORT","encodedByte","toHex","bytes","AMZ_DATE_QUERY_PARAM","SIGNATURE_QUERY_PARAM","TOKEN_QUERY_PARAM","AUTH_HEADER","AMZ_DATE_HEADER","GENERATED_HEADERS","SIGNATURE_HEADER","SHA256_HEADER","TOKEN_HEADER","ALWAYS_UNSIGNABLE_HEADERS","authorization","connection","expect","pragma","referer","te","trailer","upgrade","PROXY_HEADER_PATTERN","SEC_HEADER_PATTERN","ALGORITHM_IDENTIFIER","EVENT_ALGORITHM_IDENTIFIER","KEY_TYPE_IDENTIFIER","signingKeyCache","cacheQueue","createScope","shortDate","service","hmac","ctor","secret","hash","digest","getCanonicalHeaders","unsignableHeaders","signableHeaders","canonical","headerName","canonicalHeaderName","getPayloadHash","hashConstructor","isView","hashCtor","cloneRequest","rest","prepareRequest","iso8601","toDate","toISOString","applyChecksum","uriEscapePath","regionProvider","normalizeRegionProvider","credentialProvider","normalizeCredentialsProvider","presign","originalRequest","signingDate","unhoistableHeaders","formatDate","longDate","lname","moveHeadersToQuery","canonicalHeaders","getCanonicalHeaderList","getSignature","getSigningKey","createCanonicalRequest","sign","toSign","signString","signEvent","signRequest","priorSignature","hashedPayload","hashedHeaders","stringToSign","requestToSign","payloadHash","soughtHeader","hasHeader","signature","sortedHeaders","getCanonicalPath","serialized","getCanonicalQuery","createStringToSign","credentialScope","canonicalRequest","hashedRequest","keyPromise","sha256Constructor","credsHash","shift","signable","resolveAwsAuthConfig","signer","normalizedCreds","normalizeProvider","signingEscapePath","systemClockOffset","signingName","SignatureV4","getSkewCorrectedDate","awsAuthMiddleware","dateHeader","date","serverTime","newServerTime","abs","awsAuthMiddlewareOptions","resolveUserAgentConfig","customUserAgent","USER_AGENT","UA_ESCAPE_REGEX","escapeUserAgent","prefixSeparatorIndex","uaName","getUserAgentMiddlewareOptions","getUserAgentPlugin","normalUAValue","section","_config_0","_config_1","_config_3","_config_6","_gettingCredPromise","_refreshHandlers","getCredSource","_credentials_source","refreshHandlers","_storage","storage","StorageHelper","_storageSync","_pickupCredentials","_getCognitoIdentityIdStorageKey","_keepAlive","cred","_credentials","_isExpired","_isPastTTL","currentUserCredentials","currentUserPoolUser","currentSession","refreshToken","refreshSession","refreshFederatedToken","federatedInfo","user","identity_id","getFullYear","that","_setCredentialsFromFederation","_providerRefreshWithRetry","refreshHandler","lastIndexOf","ts","_nextCredentialsRefresh","_setCredentialsForGuest","_getGuestIdentityId","_identityId","cognitoClient","CognitoIdentityClient","credentialsProvider","credentialsFromCognitoIdentity","_loadCredentials","_removeGuestIdentityId","params","google","facebook","amazon","developer","_setCredentialsFromSession","idToken","getIdToken","getJwtToken","userPoolId","guestIdentityId","generatedOrRetrievedIdentityId","primaryIdentityId","authenticated","_setGuestIdentityId","shear","CredentialsClass","parseMobileHubConfig","storageConfig","amplifyConfig","AWSPinpoint","appId","userPoolWebClientId","identityPoolRegion","mandatorySignIn","AWSS3","bucket","dangerouslyConnectToHttpEndpointForTesting","Logging","geo","AmazonLocationService","parseMobilehubConfig","readCookie","cleanupCookieValue","doNotParse","isParsingCookie","Cookies","cookies","_this","changeListeners","HAS_DOCUMENT_COOKIE","parseCookies","_updateBrowserValues","parseOptions","_emitChange","getAll","name_1","_a","finalOptions","expires","maxAge","addChangeListener","removeChangeListener","idx","getLocalItem","getUniversalItem","removeLocalItem","removeUniversalItem","setLocalItem","setUniversalItem","sameSite","secure","AuthenticationDetails","_ref","ValidationData","Username","Password","AuthParameters","ClientMetadata","validationData","authParameters","clientMetadata","username","password","_proto","getUsername","getPassword","getValidationData","getAuthParameters","getClientMetadata","cryptoSecureRandomInt","Uint32Array","randomBytes","readInt32LE","dbits","WordArray","words","sigBytes","nBytes","wordArray","hexChars","bite","hexStringify","BigInteger","fromString","nbi","inBrowser","appName","am","w","xl","xh","h","DB","DM","DV","FV","pow","F1","F2","rr","vv","BI_RC","int2char","intAt","nbv","fromInt","nbits","Montgomery","mp","invDigit","mpl","mph","um","mt2","Buffer","convert","dlShiftTo","divRemTo","compareTo","ZERO","subTo","revert","copyTo","u0","clamp","drShiftTo","mulTo","multiplyTo","sqrTo","squareTo","mi","sh","max","lShiftTo","bs","cbs","bm","ds","rShiftTo","q","pm","pt","nsh","ys","y0","yt","d1","d2","ONE","qd","addTo","negate","km","mod","equals","subtract","multiply","divide","modPow","z","k1","g2","is1","r2","HEX_MSB_REGEX","AuthenticationHelper","PoolName","N","hexHash","padHex","smallAValue","generateRandomSmallA","getLargeAValue","infoBits","poolName","getSmallAValue","largeAValue","calculateA","hexRandom","getRandomPassword","randomPassword","getSaltDevices","SaltToHashDevices","getVerifierDevices","verifierDevices","generateHashDevice","deviceGroupKey","_this2","combinedString","hashedString","verifierDevicesNotPadded","_this3","A","calculateU","B","UHexHash","CryptoJS","hashHex","SHA256","hexStr","computehkdf","ikm","salt","infoBitsWordArray","ikmWordArray","saltWordArray","prk","HmacSHA256","getPasswordAuthenticationKey","serverBValue","_this4","UValue","usernamePassword","usernamePasswordHash","xValue","calculateS","sValue","hkdf","_this5","gModPowXN","err2","getNewPasswordRequiredChallengeUserAttributePrefix","bigInt","isNegative","invertedNibbles","invertedNibble","CognitoJwtToken","jwtToken","decodePayload","getExpiration","exp","getIssuedAt","iat","_setPrototypeOf","CognitoAccessToken","_CognitoJwtToken","subClass","superClass","_temp","AccessToken","CognitoIdToken","IdToken","CognitoRefreshToken","RefreshToken","getToken","CognitoUserSession","ClockDrift","clockDrift","calculateClockDrift","getRefreshToken","getAccessToken","getClockDrift","isValid","adjusted","monthNames","weekNames","DateHelper","getNowString","weekDay","getUTCDay","month","getUTCMonth","day","getUTCDate","hours","getUTCHours","minutes","getUTCMinutes","seconds","getUTCSeconds","getUTCFullYear","CognitoUserAttribute","Name","Value","getValue","setValue","getName","setName","CognitoUser","Pool","pool","Session","signInUserSession","authenticationFlowType","keyPrefix","getClientId","userDataKey","setSignInUserSession","clearCachedUserData","cacheTokens","getSignInUserSession","getAuthenticationFlowType","setAuthenticationFlowType","initiateAuth","authDetails","USERNAME","clientMetaData","jsonReq","AuthFlow","ClientId","getUserContextData","UserContextData","onFailure","challengeName","ChallengeName","challengeParameters","ChallengeParameters","customChallenge","getCognitoUserSession","AuthenticationResult","onSuccess","authenticateUser","authenticateUserPlainUsernamePassword","authenticateUserDefaultAuth","authenticationHelper","getUserPoolId","dateHelper","deviceKey","DEVICE_KEY","errOnAValue","aValue","SRP_A","CHALLENGE_NAME","USER_ID_FOR_SRP","SRP_B","SALT","getCachedDeviceKeyAndPassword","errOnHkdf","dateNow","SECRET_BLOCK","signatureString","Base64","challengeResponses","PASSWORD_CLAIM_SECRET_BLOCK","TIMESTAMP","PASSWORD_CLAIM_SIGNATURE","jsonReqResp","ChallengeResponses","respondToAuthChallenge","challenge","challengeCallback","errChallenge","dataChallenge","clearCachedDeviceKeyAndPassword","errAuthenticate","dataAuthenticate","authenticateUserInternal","PASSWORD","authResult","mfaRequired","selectMFAType","mfaSetup","totpRequired","userAttributes","rawRequiredAttributes","requiredAttributes","userAttributesPrefix","newPasswordRequired","getDeviceResponse","newDeviceMetadata","NewDeviceMetadata","DeviceGroupKey","DeviceKey","errGenHash","deviceSecretVerifierConfig","Salt","PasswordVerifier","DeviceSecretVerifierConfig","DeviceName","errConfirm","dataConfirm","cacheDeviceKeyAndPassword","UserConfirmationNecessary","completeNewPasswordChallenge","newPassword","requiredAttributeData","finalUserAttributes","NEW_PASSWORD","_this6","errAValue","errHkdf","confirmRegistration","confirmationCode","forceAliasCreation","ConfirmationCode","ForceAliasCreation","sendCustomChallengeAnswer","answerChallenge","_this7","ANSWER","sendMFACode","mfaType","_this8","SMS_MFA_CODE","mfaTypeSelection","SOFTWARE_TOKEN_MFA_CODE","changePassword","oldUserPassword","newUserPassword","PreviousPassword","ProposedPassword","enableMFA","mfaOptions","DeliveryMedium","AttributeName","MFAOptions","setUserMfaPreference","smsMfaSettings","softwareTokenMfaSettings","SMSMfaSettings","SoftwareTokenMfaSettings","disableMFA","deleteUser","_this9","clearCachedUser","updateAttributes","attributes","_this10","UserAttributes","getUserData","bypassCache","getUserAttributes","userData","attributeList","attribute","userAttribute","getMFAOptions","createGetUserRequest","promisifyRequest","refreshSessionIfPossible","_this11","refresh","_this12","getUserDataFromCache","isFetchUserDataAndTokenRequired","fetchUserData","_ref$bypassCache","_this13","cacheUserData","deleteAttributes","_this14","UserAttributeNames","resendConfirmationCode","getSession","idTokenKey","accessTokenKey","refreshTokenKey","clockDriftKey","cachedSession","_this15","wrappedCallback","wrapRefreshSessionCallback","REFRESH_TOKEN","lastUserKey","deviceKeyKey","authenticationResult","clearCachedTokens","randomPasswordKey","deviceGroupKeyKey","forgotPassword","inputVerificationCode","confirmPassword","getAttributeVerificationCode","attributeName","verifyAttribute","getDevice","forgetSpecificDevice","forgetDevice","_this16","setDeviceStatusRemembered","DeviceRememberedStatus","setDeviceStatusNotRemembered","listDevices","paginationToken","requestParams","Limit","PaginationToken","globalSignOut","_this17","signOut","revokeTokenCallback","_this18","_session","revokeTokens","cleanClientData","isSessionRevocable","revokeToken","origin_jti","_ref2","requestWithRetry","Token","sendMFASelectionAnswer","_this19","associateSoftwareToken","_this20","associateSecretCode","SecretCode","verifySoftwareToken","totpCode","friendlyDeviceName","_this21","UserCode","FriendlyDeviceName","errRespond","dataRespond","UserAgent","_inheritsLoose","_wrapNativeSuper","_cache","Map","Wrapper","_construct","_getPrototypeOf","Parent","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","valueOf","CognitoError","_Error","Client","fetchOptions","operation","MAX_DELAY_MS","BASE_TIME_MS","JITTER_FACTOR","json","ok","__type","ex","retryIn","AuthErrorStrings","CognitoUserPool","UserPoolId","AdvancedSecurityDataCollectionFlag","clientId","advancedSecurityDataCollectionFlag","signUp","cognitoUser","returnData","userConfirmed","UserConfirmed","userSub","UserSub","codeDeliveryDetails","CodeDeliveryDetails","getCurrentUser","lastAuthUser","AmazonCognitoAdvancedSecurityData","amazonCognitoAdvancedSecurityDataConst","advancedSecurityData","getData","EncodedData","CookieStorage","numKeys","launchUri","windowProxy","dispatchAuthEvent","cognitoClientId","scopes","_urlOpener","urlOpener","_cognitoClientId","isValidScopes","_scopes","every","oauthSignIn","responseType","customState","Cognito","generatedState","_generateState","state","char","padStart","sessionStorage","private_key","pkce_key","_generateRandom","code_challenge","_generateChallenge","scopesString","redirect_uri","response_type","client_id","identity_provider","code_challenge_method","_handleCodeFlow","currentUrl","pairings","accum","currentUrlPathname","redirectSignInPathname","oAuthTokenEndpoint","clientID","redirectUri","code_verifier","ouath_pkce_key","oAuthTokenBody","grant_type","access_token","refresh_token","_handleImplicitFlow","handleAuthResponse","urlParams","error_description","_validateState","savedState","oauth_state","returnedState","oAuthLogoutEndpoint","signout_uri","redirectSignOut","returnTo","logout_uri","oAuth","_base64URL","string","buffer","_bufferToString","CHARSET","AuthError","NoUserPoolError","authErrorMessages","noConfig","DEFAULT_MSG","missingAuthConfig","emptyUsername","EMPTY_USERNAME","invalidUsername","INVALID_USERNAME","emptyPassword","EMPTY_PASSWORD","emptyCode","EMPTY_CODE","signUpError","SIGN_UP_ERROR","noMFA","NO_MFA","invalidMFA","INVALID_MFA","emptyChallengeResponse","EMPTY_CHALLENGE","noUserSession","NO_USER_SESSION","deviceConfig","DEVICE_CONFIG","networkError","NETWORK_ERROR","default","USER_ADMIN_SCOPE","userPool","oAuthFlowInProgress","currentCredentials","conf","Parser","cookieStorage","_isValidAuthStorage","ssr","UniversalStorage","userPoolData","cognitoHostedUIConfig","awsCognito","cognitoAuthParams","_oAuthHandler","JS","urlListener","_handleAuthResponse","rejectNoUserPool","restOfAttrs","email","phone_number","rejectAuthError","SignUpError","EmptyPassword","EmptyUsername","confirmSignUp","EmptyCode","createCognitoUser","resendSignUp","signIn","usernameOrSignInOpts","pw","InvalidUsername","signInWithPassword","signInWithoutPassword","authCallbacks","challengeParam","pendingSignIn","getPreferredMFA","_getMfaTypeFromUserData","preferredMFA","PreferredMfaSetting","mfaList","UserMFASettingList","_getUserData","setPreferredMFA","mfaMethod","totpMfaSettings","PreferredMfa","Enabled","currentMFAType","InvalidMFA","NoMFA","disableSMS","enableSMS","setupTOTP","secretCode","verifyTotpToken","challengeAnswer","confirmSignIn","completeNewPassword","EmptyChallengeResponse","deleteUserAttributes","attributeNames","userSession","isSignedInHostedUI","cleanCachedItems","oAuthSignOutRedirect","updateUserAttributes","verifiedContact","attrs","attributesToObject","unverified","verified","isOAuthInProgress","timeoutId","hostedUISignCallback","currentAuthenticatedUser","federatedUser","NoUserSession","verifyUserAttribute","success","verifyUserAttributeSubmit","verifyCurrentUserAttribute","verifyCurrentUserAttributeSubmit","cognitoIdentitySignOut","opts","global","oAuthSignOutRedirectOrReject","oAuthSignOutAndResolve","oldPassword","forgotPasswordSubmit","currentUserInfo","userAttrs","federatedSignIn","providerOrOptions","hasCustomState","customProvider","loggedInUser","hasCodeOrError","hasTokenOrError","isCustomStateIncluded","history","replaceState","essentialCredentials","isTruthyString","noUserPoolErrorHandler","NoConfig","MissingAuthConfig","rememberDevice","currUser","DeviceConfig","NetworkError","fetchDevices","deviceList","Devices","device","deviceName","DeviceAttributes","AuthClass","defaultConfig","capacityInBytes","itemMaxSize","defaultTTL","defaultPriority","warningThreshold","getByteLength","charCode","getCurrTime","isInteger","isFinite","_isInteger","cacheCurSizeKey","checkConfig","fillCacheItem","visitedTime","byteSize","cacheConfig","_decreaseCurSizeInBytes","amount","curSize","getCacheCurSize","_increaseCurSizeInBytes","_refreshItem","prefixedKey","_removeItem","itemSize","_setItem","setItemErr","_sizeToPop","spaceItemNeed","cacheThresholdSpace","_isCacheFull","_findValidKeys","keyInCache","_popOutItems","sizeToPop","items","remainedSize","val","cacheItemOptions","validKeys","keysToRemove","getAllKeys","createInstance","BrowserStorageCacheClass","StorageCache","BrowserStorageCache","DateUtils","clockOffset","getDateWithClockOffset","getClockOffset","getHeaderStringFromDate","getDateFromHeaderString","header","year","hour","minute","second","UTC","isClockSkewed","serverDate","setClockOffset","DEFAULT_ALGORITHM","encrypt","src","digestSync","signed_headers","canonical_request","url_info","key_val","reencoded_val","key_a","key_b","parse_service_info","host","credential_scope","d_str","string_to_sign","algorithm","dt_str","get_signing_key","secret_key","service_info","k_date","k_region","k_service","get_signature","signing_key","str_to_sign","access_info","session_token","request_str","serviceInfo","authorization_header","access_key","get_authorization_header","signUrl","urlOrRequest","accessInfo","urlToSign","today","signedHeaders","sessionTokenRequired","queryParams","format","parsedUrl","additionalQueryParams","slashes","_region","_service","_custom_header","_cancelTokenMap","_options","WeakMap","ajax","urlOrApiInfo","init","custom_header","parsed_url","_parseUrl","cancelToken","libraryHeaders","initParams","isAllResponse","FormData","withCredentials","cancellableToken","signerServiceInfo","custom_header_obj","queryStringParameters","_request","_signed","responseDate","requestDate","patch","post","del","head","cancel","isCancel","getCancellableToken","updateRequestToBeCancellable","cancelTokenSource","apiName","cloud_logic_array","endpoints","endpoint_region","endpoint_service","creds","endpointInfo","signerServiceInfoParams","signed_params","Signer","otherParams","_api","opt","otherOptions","custom","RestClient","apiInfo","getEndpointInfo","responsePromise","apiConfig","api","RestAPI","RestAPIClass","asyncIterator","SYMBOL_TO_STRING_TAG","toStringTag","getLocation","lineRegexp","line","column","exec","printLocation","printSourceLocation","sourceLocation","firstLineColumnOffset","locationOffset","whitespace","lineIndex","lineOffset","lineNum","columnOffset","columnNum","locationStr","lines","locationLine","subLineIndex","subLineColumnNum","subLines","printPrefixedLines","subLine","existingLines","padLen","_ref3","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","GraphQLError","_inherits","_super","Derived","hasNativeReflectConstruct","Super","NewTarget","_createSuper","nodes","positions","originalError","extensions","_nodeLocations","_nodeLocations2","_nodeLocations3","undefinedIfEmpty","nodeLocations","_i2","_this$nodes","loc","locations","pos","originalExtensions","getOwnPropertyDescriptors","defineProperties","_objectSpread","captureStackTrace","_i4","_error$nodes2","_i6","_error$locations2","printError","array","syntaxError","description","Kind","NAME","DOCUMENT","OPERATION_DEFINITION","VARIABLE_DEFINITION","SELECTION_SET","FIELD","ARGUMENT","FRAGMENT_SPREAD","INLINE_FRAGMENT","FRAGMENT_DEFINITION","VARIABLE","INT","FLOAT","STRING","BOOLEAN","NULL","ENUM","LIST","OBJECT","OBJECT_FIELD","DIRECTIVE","NAMED_TYPE","LIST_TYPE","NON_NULL_TYPE","SCHEMA_DEFINITION","OPERATION_TYPE_DEFINITION","SCALAR_TYPE_DEFINITION","OBJECT_TYPE_DEFINITION","FIELD_DEFINITION","INPUT_VALUE_DEFINITION","INTERFACE_TYPE_DEFINITION","UNION_TYPE_DEFINITION","ENUM_TYPE_DEFINITION","ENUM_VALUE_DEFINITION","INPUT_OBJECT_TYPE_DEFINITION","DIRECTIVE_DEFINITION","SCHEMA_EXTENSION","SCALAR_TYPE_EXTENSION","OBJECT_TYPE_EXTENSION","INTERFACE_TYPE_EXTENSION","UNION_TYPE_EXTENSION","ENUM_TYPE_EXTENSION","INPUT_OBJECT_TYPE_EXTENSION","defineInspect","classObject","condition","invariant","inspect","nodejsCustomInspectSymbol","Location","startToken","endToken","end","kind","prev","maybeNode","TokenKind","SOF","EOF","BANG","DOLLAR","AMP","PAREN_L","PAREN_R","SPREAD","COLON","EQUALS","AT","BRACKET_L","BRACKET_R","BRACE_L","PIPE","BRACE_R","BLOCK_STRING","COMMENT","formatValue","seenValues","previouslySeenValues","customInspectFn","getCustomFn","customValue","remaining","formatArray","tag","getObjectTag","properties","formatObject","formatObjectValue","devAssert","Source","DirectiveLocation","QUERY","MUTATION","SUBSCRIPTION","SCHEMA","SCALAR","ARGUMENT_DEFINITION","INTERFACE","UNION","ENUM_VALUE","INPUT_OBJECT","INPUT_FIELD_DEFINITION","dedentBlockStringValue","rawString","commonIndent","_commonIndent","isFirstLine","isEmptyLine","indent","getBlockStringIndentation","startLine","isBlank","endLine","Lexer","startOfFileToken","lastToken","lineStart","advance","lookahead","_token$next","readToken","printCharCode","isNaN","lexer","bodyLength","_line","_col","readComment","readBlockString","readString","readNumber","readName","unexpectedCharacterMessage","col","firstCode","isFloat","readDigits","isNameStart","chunkStart","char2hex","invalidSequence","parseDocument","sourceObj","instanceOf","isSource","_lexer","parseName","expectToken","definitions","many","parseDefinition","peek","parseOperationDefinition","parseFragmentDefinition","parseTypeSystemDefinition","parseTypeSystemExtension","peekDescription","unexpected","variableDefinitions","directives","selectionSet","parseSelectionSet","parseOperationType","parseVariableDefinitions","parseDirectives","operationToken","optionalMany","parseVariableDefinition","variable","parseVariable","parseTypeReference","defaultValue","expectOptionalToken","parseValueLiteral","selections","parseSelection","parseFragment","parseField","alias","nameOrAlias","parseArguments","isConst","parseConstArgument","parseArgument","hasTypeCondition","expectOptionalKeyword","parseFragmentName","typeCondition","parseNamedType","_this$_options","expectKeyword","experimentalFragmentVariables","parseList","parseObject","parseStringLiteral","block","values","any","fields","parseObjectField","parseDirective","keywordToken","parseSchemaDefinition","parseScalarTypeDefinition","parseObjectTypeDefinition","parseInterfaceTypeDefinition","parseUnionTypeDefinition","parseEnumTypeDefinition","parseInputObjectTypeDefinition","parseDirectiveDefinition","parseDescription","operationTypes","parseOperationTypeDefinition","interfaces","parseImplementsInterfaces","parseFieldsDefinition","_this$_options2","allowLegacySDLImplementsInterfaces","types","delimitedMany","_this$_options3","allowLegacySDLEmptyFields","parseFieldDefinition","parseArgumentDefs","parseInputValueDef","parseUnionMemberTypes","parseEnumValuesDefinition","parseEnumValueDefinition","parseInputFieldsDefinition","parseSchemaExtension","parseScalarTypeExtension","parseObjectTypeExtension","parseInterfaceTypeExtension","parseUnionTypeExtension","parseEnumTypeExtension","parseInputObjectTypeExtension","repeatable","parseDirectiveLocations","parseDirectiveLocation","_this$_options4","noLocation","getTokenKindDesc","getTokenDesc","atToken","openKind","parseFn","closeKind","delimiterKind","isPunctuatorTokenKind","QueryDocumentKeys","Document","OperationDefinition","VariableDefinition","Variable","SelectionSet","Field","Argument","FragmentSpread","InlineFragment","FragmentDefinition","IntValue","FloatValue","StringValue","BooleanValue","NullValue","EnumValue","ListValue","ObjectValue","ObjectField","Directive","NamedType","ListType","NonNullType","SchemaDefinition","OperationTypeDefinition","ScalarTypeDefinition","ObjectTypeDefinition","FieldDefinition","InputValueDefinition","InterfaceTypeDefinition","UnionTypeDefinition","EnumTypeDefinition","EnumValueDefinition","InputObjectTypeDefinition","DirectiveDefinition","SchemaExtension","ScalarTypeExtension","ObjectTypeExtension","InterfaceTypeExtension","UnionTypeExtension","EnumTypeExtension","InputObjectTypeExtension","BREAK","getVisitFn","visitor","isLeaving","kindVisitor","kindSpecificVisitor","leave","enter","specificVisitor","specificKindVisitor","print","ast","visitorKeys","inArray","edits","parent","ancestors","newRoot","isEdited","_Object$keys2","editOffset","ii","editKey","editValue","_visitorKeys$node$kin","visitFn","visit","printDocASTReducer","varDefs","wrap","argsLine","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","indentation","preferMultipleLines","isSingleLine","hasLeadingSpace","hasTrailingQuote","hasTrailingSlash","printAsMultipleLines","printBlockString","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","addDescription","_ref20","_ref21","_ref22","_ref23","_ref24","hasMultilineItems","_ref25","_ref26","_ref27","_ref28","_ref29","_ref30","_ref31","_ref32","_ref33","_ref34","_ref35","_ref36","_ref37","_ref38","maybeArray","_maybeArray$filter$jo","separator","maybeString","isMultiline","_lang","_dict","language","setLanguage","lang","getByLanguage","lang_dict","putVocabulariesForLanguage","vocabularies","putVocabularies","_i18n","Constants","hasSymbol","INTERNAL_AWS_APPSYNC_PUBSUB_PROVIDER","INTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER","getProviderName","getCategory","MESSAGE_TYPES","SUBSCRIPTION_STATUS","SOCKET_STATUS","promises","clientFactory","topicSymbol","_clientsQueue","ClientsQueue","_topicObservers","_clientIdObservers","aws_pubsub_endpoint","aws_appsync_dangerously_connect_to_http_endpoint_for_testing","getTopicForValue","onDisconnect","clientIdObservers","observerForTopic","observerTopic","topic","newClient","onMessageArrived","destinationName","payloadString","_onMessage","onConnectionLost","connect","useSSL","isSSLEnabled","mqttVersion","clientsQueue","isConnected","publish","topics","targetTopics","filterArray","topicArray","left","right","mqttTopicMatch","observersForTopic","subscribe","observersForClientId","unsubscribe","AbstractPubSubProvider","_topicClient","_topicAlias","_cleanUp","_cleanUpForTopic","topicsForClient","obs","closed","mqttConnections","newSubscriptions","newAliases","elem","connectionInfoForTopic","complete","origKey","MqttOverWSProvider","NON_RETRYABLE_CODES","CONTROL_MSG","AWS_APPSYNC_REALTIME_HEADERS","accept","DEFAULT_KEEP_ALIVE_TIMEOUT","standardDomainPattern","socketStatus","CLOSED","keepAliveTimeout","subscriptionObserverMap","promiseArray","_topics","_msg","isCustomDomain","appSyncGraphqlEndpoint","_startSubscriptionWithAWSAppSyncRealTime","subscriptionId","errors","REALTIME_SUBSCRIPTION_INIT_ERROR","_waitForSubscriptionToBeConnected","subscriptionState","CONNECTED","_sendUnsubscriptionMessage","_removeSubscriptionObserver","authenticationType","variables","apiKey","graphql_headers","additionalHeaders","PENDING","startAckTimeoutId","dataString","_awsRealTimeHeaderBasedAuth","canonicalUri","headerObj","subscriptionMessage","GQL_START","stringToAWSRealTime","_initializeWebSocketConnection","CONNECTION_FAILED","subscriptionFailedCallback","subscriptionReadyCallback","_timeoutStartSubscriptionAck","awsRealTimeSocket","WebSocket","OPEN","READY","unsubscribeMessage","GQL_STOP","_closeSocketIfRequired","bufferedAmount","keepAliveTimeoutId","tempSocket","onclose","_handleIncomingSubscriptionMessage","GQL_DATA","GQL_START_ACK","GQL_CONNECTION_KEEP_ALIVE","_errorDisconnect","TIMEOUT_DISCONNECT","GQL_ERROR","FAILED","dispatchApiEvent","SUBSCRIPTION_ACK","CONNECTING","headerString","headerQs","payloadQs","discoverableEndpoint","awsRealTimeUrl","_initializeRetryableHandshake","_initializeHandshake","newSocket","onopen","ackOk","reason","onmessage","connectionTimeoutMs","GQL_CONNECTION_ACK","CONNECTION_CLOSED","GQL_CONNECTION_ERROR","errorType","gqlInit","GQL_CONNECTION_INIT","headerHandler","API_KEY","_awsRealTimeApiKeyHeader","AWS_IAM","_awsRealTimeIAMHeader","OPENID_CONNECT","_awsRealTimeOPENIDHeader","AMAZON_COGNITO_USER_POOLS","_awsRealTimeCUPHeader","AWS_LAMBDA","_customAuthHeader","Authorization","dtStr","_ensureCredentials","_awsAppSyncProvider","AWSAppSyncProvider","_awsAppSyncRealTimeProvider","AWSAppSyncRealTimeProvider","removePluggable","providerName","getProviderByName","awsAppSyncProvider","awsAppSyncRealTimeProvider","getProviders","observables","observable","subscriptions","subscription","PubSubClass","GRAPHQL_AUTH_MODE","GraphQLAuthError","graphqlOperation","authToken","_headerBasedAuth","defaultAuthenticationType","aws_appsync_authenticationType","NO_API_KEY","NO_CREDENTIALS","NO_FEDERATED_JWT","NO_CURRENT_USER","NO_AUTH_TOKEN","getGraphqlOperationType","graphql","authMode","paramQuery","operationType","_graphql","_graphqlSubscribe","customGraphqlEndpoint","customEndpointRegion","aws_appsync_region","aws_appsync_graphqlEndpoint","aws_appsync_apiKey","GraphQLAPI","GraphQLAPIClass","_restApi","_graphqlApi","restAPIConfig","graphQLAPIConfig","APIClass","BrowserStorage","shouldReject","local","clearKey","lastError","startingKey","Prefixes","StorageKeys","UserID","LastDailyExecution","LastWeeklyExecution","LastMonthlyExecution","KeyManager","DEK","UserKeys","Preferences","Logs","Backlog","UsageMetrics","Provider","ProviderDetectors","Rules","ProviderRulesPrefix","Report","ReportedSites","Tab","TabPrefix","UserPreferences","Whitelist","Update","ExtensionUpdated","Entitlement","HasEntitlement","IsRCIdSynced","NumberOfRuns","LastReminder","HaveEverReminded","InstalledAt","PopupShownAt","Categories","List","getUserPreferences","NativeMessaging","InvalidCharacterError","handleNativeMessageResponse","handleNativeMessageError","sendHelloMessage","sendNativeMessageIfPossible","containsPermissions","sendNativeMessage","sendNativeMessageIfPossibleWithResponse","sendNativeMessageWithResponse","permissions","contains","atob","bc","InvalidTokenError","base64_url_decode","_error","TokenStorage","setKey","syncPromise","_objectSpread2","Crypto","iterations","subtle","importKey","keyMaterial","deriveKey","pbkdf2Key","KEK","generateKey","exportKey","exportedDEK","iv","b64","cipher","ciphertext","decrypt","decryptedP","consoleLogger","concreteLogger","bool","_len","_key","forward","_len2","_key2","_len3","_key3","_len4","_key4","lvl","debugOnly","moduleName","baseLogger","EventEmitter","observers","events","_cloned","defer","makeString","copy","getLastOfPath","Empty","cleanKey","canNotTraverseDeeper","setPath","newValue","_getLastOfPath","getPath","_getLastOfPath3","getPathWithDefaults","defaultData","deepExtend","overwrite","prop","regexEscape","_entityMap","escape","isIE10","deepFind","keySeparator","paths","current","mix","joinedPath","ResourceStore","_EventEmitter","ns","defaultNS","ignoreJSONStructure","lng","silent","addNamespaces","emit","resources","addResource","deep","pack","hasResourceBundle","removeNamespaces","getResource","compatibilityAPI","postProcessor","processors","addPostProcessor","module","translator","processor","checkedLoadedFor","Translator","services","interpolation","resolved","nsSeparator","namespaces","interpolator","nestingRegexp","lastKey","overloadTranslationOptionHandler","_this$extractFromKey","extractFromKey","namespace","appendNamespaceToCIMode","resUsedKey","usedKey","resExactUsedKey","exactUsedKey","resType","noObject","joinArrays","handleAsObjectInI18nFormat","i18nFormat","handleAsObject","returnObjects","returnedObjectHandler","resTypeIsArray","newKeyToUse","deepKey","translate","extendTranslation","usedDefault","needsPluralHandling","count","hasDefaultValue","defaultValueSuffix","pluralResolver","getSuffix","isValidLookup","updateMissing","fk","lngs","fallbackLngs","languageUtils","getFallbackCodes","fallbackLng","saveMissingTo","toResolveHierarchy","fallbackValue","missingKeyHandler","backendConnector","saveMissing","saveMissingPlurals","getSuffixes","suffix","appendNamespaceToMissingKey","parseMissingKeyHandler","usedLng","usedNS","skipInterpolation","nestBef","skipOnVariables","nb","defaultVariables","interpolate","na","nest","reset","postProcess","postProcessorNames","applyPostProcessor","postProcessPassResolved","i18nResolved","found","extracted","fallbackNS","needsContextHandling","codes","utils","hasLoadedNamespace","pluralSuffix","possibleKey","finalKey","finalKeys","addLookupKeys","contextSeparator","returnNull","returnEmptyString","resourceStore","capitalize","LanguageUtil","whitelist","supportedLngs","formatLanguageCode","specialCases","lowerCaseLng","part","cleanCode","deprecate","isSupportedCode","load","nonExplicitSupportedLngs","getLanguagePartFromCode","cleanedLng","lngOnly","supportedLng","fallbacks","getScriptPartFromCode","fallbackCode","fallbackCodes","addCode","fc","sets","nr","_rulesPluralsTypes","createRules","rules","numbers","plurals","PluralResolver","rule","getRule","number","noAbs","simplifyPluralSuffix","returnSuffix","prepend","compatibilityJSON","Interpolator","escapeValue","iOpts","useRawValueToEscape","prefixEscaped","suffixEscaped","formatSeparator","unescapePrefix","unescapeSuffix","nestingPrefix","nestingPrefixEscaped","nestingSuffix","nestingSuffixEscaped","nestingOptionsSeparator","maxReplaces","alwaysFormat","resetRegExp","regexpStr","regexp","regexpUnescapeStr","regexpUnescape","nestingRegexpStr","replaces","regexSafe","handleFormat","interpolationkey","missingInterpolationHandler","regex","safeValue","todo","temp","lastIndex","clonedOptions","handleHasOptions","inheritedOptions","sep","optionsString","formatters","doReduce","Connector","backend","queue","languages","toLoad","pending","toLoadLanguages","toLoadNamespaces","hasAllNamespaces","reload","loaded","addResourceBundle","_getLastOfPath2","pushPath","what","fcName","tried","wait","queueLoad","loadOne","prepareLoading","isUpdate","initImmediate","nonExplicitWhitelist","preload","pluralSeparator","partialBundledLanguages","tDescription","_format","transformOptions","noop","modules","external","isInitialized","isClone","createClassOnDemand","ClassOrObject","lu","on","languageDetector","detection","storeApi","_this2$store","storeApiChained","_this2$store2","deferred","finish","changeLanguage","usedCallback","append","isLanguageChangingTo","setLng","getBestMatchFromCodes","cacheUserLanguage","loadResources","async","detect","fixedT","_this$translator","_this$translator2","exists","lastLng","loadNotPending","loadState","precheck","preResult","preloaded","newLngs","mergedOptions","membersToCopy","FormatDate","someDate","yesterday","setDate","getDate","areEqual","dayOfYear","otherDate","getMonth","isToday","i18next","isYesterday","toLocaleDateString","getTimezoneOffset","onMessage","addListener","sender","sendResponse","messages","getLogs","deleteLogs","deleteAllLogs","getLoggingPreferences","updateLoggingPreferences","getUsageMetrics","SAAuth","isLoggedIn","logs","logList","preferences","logging","metrics","processMessage","getKey","myInit","preferencesAreValid","setDefaultPreferences","getDefaultPreferences","defaultPreferences","preferencesObject","expirationDateInStringFor","enabled","retention","hasLogs","loggingEnabled","createPreferences","getPreferences","cc","ws","calculateTimeSaved","updateUsageMetrics","DateFormat","canWriteLog","writeLog","logDate","getDEK","decryptedLogs","dc","TextDecoder","encryptedLog","decrypted","logBuffer","decode","pk","sk","dateTime","cachedLogs","updatedLogs","unshift","deleteAllLogsFromCache","deleteLogsFromCache","timeSaved","inputLog","parseLog","writeLogToCache","checkDEK","ec","TextEncoder","encode","commitLog","existingMetrics","updatedMetrics","newMetrics","clearMetricsAndLogs","hostnameIsEmpty","haveLogToday","hereToday","loggingPreferences","deleteDEK","generateDEK","getUserKeys","setMasterPassword","dek","userKeys","generateKEK","edek","saveDEK","clearDEK","EDEK","commitEDEK","newEDEK","oldKEK","defaultOptions","bindI18n","bindI18nStore","transEmptyNodeValue","transSupportBasicHtmlNodes","transKeepBasicHtmlNodesFor","useSuspense","React","ReportNamespaces","usedNamespaces","initReactI18next","setDefaults","react","setI18n","each","defaults","fieldContentRegExp","serializeCookie","toUTCString","httpOnly","cookieOptions","setTime","nameEQ","ca","cookie$1","lookup","lookupCookie","cookieMinutes","cookieDomain","lookupQuerystring","hasLocalStorageSupport","localStorageAvailable","testKey","lookupLocalStorage","hasSessionStorageSupport","sessionStorageAvailable","lookupSessionStorage","navigator$1","userLanguage","htmlTag","lookupFromPathIndex","subdomain","lookupFromSubdomainIndex","Browser","i18nOptions","order","caches","excludeCacheFor","lookupFromUrlIndex","addDetector","detectionOrder","detected","detectorName","cacheName","en","translation","translationEN","translationPT","de","translationDE","es","translationES","ru","translationRU","nl","translationNL","translationIT","fr","translationFR","i18n","LanguageDetector","getDisabledHostnames","saveDisabledHostnames","hostnameIsBlocked","updateHostnameState","disabledHostnames","isBlocked","disabledHostname","hostnames","getUserEntitlement","incrementCounter","getCurrentEntitlement","getCounter","getVerifyPopupShownAt","showVerifyPopup","hasEntitlement","getIsRCIdSynced","getRCIdInstalledAt","counter","getPopupShownAt","popupShownAt","getURL","setPopupShownAt","signInWindow","EntitlementConstants","setHours","isMobileSafari","SARefreshable","BackgroundTools","showSubscribe","getTodayString","numberOfRuns","clearAllWithPrefix","RCIdInstalledAt","isSubscribedButNotSynced","setInstalledAt","refreshUserPreferences","currentLanguage","setUserEntitlement","setUserIsRCIdSynced","setRCIdExpiration","OpenAccountPage","isDev","awsconfigdev","openSignIn","tab","openSignUp","openForgotPassword","buildUserSession","signInFromExtension","checkAuth","changeUserPassword","openOptionsPage","buildUserSessionFromSession","logoutUser","changeMasterPassword","authPort","performLogout","onLine","onConnect","expirationTime","jwt_decode","isTokenExpired","checkAuthenticatedUser","sendAuthMessage","clearAllExceptWithStartingKey","performLogin","hasSomeUpdate","refreshCurrentLanguage","refreshWhitelist","appAuthKeys","requestRefreshIfNeeded","updateDEK","shouldPerformLogout","extensionSession","buildUserSessionFromAppSession","shouldPerformSignIn","didSignInThroughApp","idTokenString","accessTokenString","refreshTokenString","sessionData","setUserPreferences","clientInfo","nav","platform","vendor","operaMatch","ieMatch","cfMatch","sMatch","awkMatch","anyMatch","browserType","timezone","tzMatch","browserTimezone","make","model","appVersion","browserClientInfo","dimension","width","height","innerWidth","innerHeight","GetJourneyDateRangeKpiRequest","JourneyDateRangeKpiResponse","GetJourneyDateRangeKpiResponse","GetJourneyExecutionActivityMetricsRequest","JourneyExecutionActivityMetricsResponse","GetJourneyExecutionActivityMetricsResponse","GetJourneyExecutionMetricsRequest","JourneyExecutionMetricsResponse","GetJourneyExecutionMetricsResponse","GetPushTemplateRequest","PushNotificationTemplateResponse","GetPushTemplateResponse","GetRecommenderConfigurationRequest","GetRecommenderConfigurationResponse","GetRecommenderConfigurationsRequest","ListRecommenderConfigurationsResponse","GetRecommenderConfigurationsResponse","GetSegmentRequest","GetSegmentResponse","GetSegmentExportJobsRequest","GetSegmentExportJobsResponse","GetSegmentImportJobsRequest","GetSegmentImportJobsResponse","GetSegmentsRequest","SegmentsResponse","GetSegmentsResponse","GetSegmentVersionRequest","GetSegmentVersionResponse","GetSegmentVersionsRequest","GetSegmentVersionsResponse","GetSmsChannelRequest","GetSmsChannelResponse","GetSmsTemplateRequest","SMSTemplateResponse","GetSmsTemplateResponse","GetUserEndpointsRequest","GetUserEndpointsResponse","GetVoiceChannelRequest","GetVoiceChannelResponse","GetVoiceTemplateRequest","VoiceTemplateResponse","GetVoiceTemplateResponse","JourneysResponse","JourneyStateRequest","ListJourneysRequest","ListJourneysResponse","TemplateResponse","TemplateVersionResponse","ListTagsForResourceRequest","TagsModel","ListTemplatesRequest","TemplatesResponse","ListTemplatesResponse","ListTemplateVersionsRequest","TemplateVersionsResponse","ListTemplateVersionsResponse","MessageResult","MessageRequest","MessageResponse","NumberValidateRequest","NumberValidateResponse","PhoneNumberValidateRequest","PhoneNumberValidateResponse","PutEventsRequest","PutEventsResponse","WriteEventStream","PutEventStreamRequest","PutEventStreamResponse","UpdateAttributesRequest","RemoveAttributesRequest","RemoveAttributesResponse","SendMessagesRequest","SendMessagesResponse","SendUsersMessageRequest","SendUsersMessagesRequest","SendUsersMessageResponse","SendUsersMessagesResponse","TagResourceRequest","UntagResourceRequest","UpdateAdmChannelRequest","UpdateAdmChannelResponse","UpdateApnsChannelRequest","UpdateApnsChannelResponse","UpdateApnsSandboxChannelRequest","UpdateApnsSandboxChannelResponse","UpdateApnsVoipChannelRequest","UpdateApnsVoipChannelResponse","UpdateApnsVoipSandboxChannelRequest","UpdateApnsVoipSandboxChannelResponse","WriteApplicationSettingsRequest","UpdateApplicationSettingsRequest","UpdateApplicationSettingsResponse","UpdateBaiduChannelRequest","UpdateBaiduChannelResponse","UpdateCampaignRequest","UpdateCampaignResponse","UpdateEmailChannelRequest","UpdateEmailChannelResponse","UpdateEmailTemplateRequest","UpdateEmailTemplateResponse","UpdateEndpointRequest","UpdateEndpointResponse","UpdateEndpointsBatchRequest","UpdateEndpointsBatchResponse","UpdateGcmChannelRequest","UpdateGcmChannelResponse","UpdateJourneyRequest","UpdateJourneyResponse","UpdateJourneyStateRequest","UpdateJourneyStateResponse","UpdatePushTemplateRequest","UpdatePushTemplateResponse","UpdateRecommenderConfigurationShape","UpdateRecommenderConfigurationRequest","UpdateRecommenderConfigurationResponse","UpdateSegmentRequest","UpdateSegmentResponse","SMSChannelRequest","UpdateSmsChannelRequest","UpdateSmsChannelResponse","UpdateSmsTemplateRequest","UpdateSmsTemplateResponse","TemplateActiveVersionRequest","UpdateTemplateActiveVersionRequest","UpdateTemplateActiveVersionResponse","VoiceChannelRequest","UpdateVoiceChannelRequest","UpdateVoiceChannelResponse","UpdateVoiceTemplateRequest","UpdateVoiceTemplateResponse","deserializeAws_restJson1PutEventsCommandError","deserializeAws_restJson1BadRequestExceptionResponse","deserializeAws_restJson1ForbiddenExceptionResponse","deserializeAws_restJson1InternalServerErrorExceptionResponse","deserializeAws_restJson1MethodNotAllowedExceptionResponse","deserializeAws_restJson1NotFoundExceptionResponse","deserializeAws_restJson1PayloadTooLargeExceptionResponse","deserializeAws_restJson1TooManyRequestsExceptionResponse","deserializeAws_restJson1UpdateEndpointCommandError","RequestID","serializeAws_restJson1EndpointDemographic","AppVersion","Locale","Make","Model","ModelVersion","PlatformVersion","Timezone","serializeAws_restJson1EndpointLocation","City","Country","Latitude","Longitude","PostalCode","Region","serializeAws_restJson1EndpointRequest","Address","Attributes","serializeAws_restJson1MapOfListOf__string","ChannelType","Demographic","EffectiveDate","EndpointStatus","Metrics","serializeAws_restJson1MapOf__double","OptOut","RequestId","User","serializeAws_restJson1EndpointUser","UserId","serializeAws_restJson1EventsRequest","BatchItem","serializeAws_restJson1MapOfEventsBatch","serializeAws_restJson1ListOf__string","serializeAws_restJson1MapOf__string","serializeAws_restJson1MapOfEvent","AppPackageName","AppTitle","AppVersionCode","ClientSdkVersion","EventType","SdkName","serializeAws_restJson1Session","Timestamp","serializeAws_restJson1Event","Endpoint","serializeAws_restJson1PublicEndpoint","Events","serializeAws_restJson1EventsBatch","Duration","Id","StartTimestamp","StopTimestamp","deserializeAws_restJson1EndpointItemResponse","StatusCode","deserializeAws_restJson1EventsResponse","Results","deserializeAws_restJson1MapOfItemResponse","deserializeAws_restJson1MapOfEventItemResponse","deserializeAws_restJson1EventItemResponse","EndpointItemResponse","EventsItemResponse","deserializeAws_restJson1ItemResponse","deserializeAws_restJson1MessageBody","resolvedPath","ApplicationId","labelValue","EventsRequest","serializeAws_restJson1PutEventsCommand","EventsResponse","deserializeAws_restJson1PutEventsCommand","EndpointId","EndpointRequest","serializeAws_restJson1UpdateEndpointCommand","MessageBody","deserializeAws_restJson1UpdateEndpointCommand","RETRYABLE_CODES","ACCEPTED_CODES","_pause","_flush","_buffer","_client","_sendBatch","_startLoop","bufferSize","handlers","bufferElement","eventId","pause","resume","updateClient","flush","_interval","clearInterval","flushInterval","setInterval","bufferLength","flushSize","batchSize","bufferSubset","_putEvents","eventMap","_bufferToMap","batchEventParams","_generateBatchEventParams","PutEventsCommand","_processPutEventsSuccessResponse","_handlePutEventsFailure","endpointId","batchItem","retryableEvents","_retry","responses","eventObject","eligibleEvents","resendLimit","curVal","dispatchAnalyticsEvent","UPDATE_ENDPOINT","SESSION_STOP","BEACON_SUPPORTED","sendBeacon","_endpointGenerating","_endpointUpdateInProgress","_endpointBuffer","_clientInfo","ClientDevice","AWSPinpointProvider","category","disabled","_getEndpointId","_flushBuffer","record","_getCredentials","_initClients","_generateSession","immediate","_send","_putToBuffer","_sendEndpointUpdate","endpointObject","_updateEndpoint","_sessionId","_sessionStartTimestamp","stopTimestamp","_pinpointSendStopSession","_pinpointPutEvents","_generateBatchItemContext","eventParams","endpointObj","pinpointClient","_eventError","requestUrl","eventName","_endpointRequest","update_params","UpdateEndpointCommand","_resumeBuffer","failureData","_handleEndpointUpdateFailure","_handleEndpointUpdateForbidden","_retryEndpointUpdate","retryable","exponential","PinpointClient","_bufferExists","_updateBufferClient","_initBuffer","_customizePinpointClientReq","clientContext","defaultEndpointConfig","demographicByClientInfo","modelVersion","appTitle","appVersionName","appVersionCode","appPackageName","channelType","address","tmp","effectiveDate","demographic","demographicByClientContext","userId","lists","methodName","_originalMethod","methodOverride","getInstance","MethodEmbed","PREV_URL_KEY","defaultOpts","enable","getUrl","origin","tracker","_tracker","_hasEnabled","_trackFunc","_pageViewTrackSPA","_pageViewTrackDefault","_isSameUrl","customAttrs","pushState","removeEventListener","proto","nativeMatches","matchesSelector","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","nodeType","delegate","ancestor","eventType","delegateTarget","composedPath","shouldCheckSelf","parentElements","ele","parents","closest","selectorPrefix","_delegates","evt","composed","useCapture","defaultAttrs","localName","initialEventSent","_trackBeforeUnload","_envCheck","hidden","_hidden","_visibilityChange","visibilityState","_sendInitialEvent","trackers","pageView","_instance","_disabled","_trackers","providerConfig","autoSessionRecord","getPluggable","disable","startSession","_sendEvent","stopSession","updateEndpoint","autoTrack","trackerType","endpointUpdated","authConfigured","analyticsConfigured","authEvent","storageEvent","analyticsEvent","recordAuthEvent","sendEvents","AnalyticsClass","AsyncLock","queues","taskFn","nextTask","storageLock","SAAnalytics","generateUuid","acquire","getUserID","getManifest","streamName","amplitudeConfig","recordEvent","pageName","page","defaultUserPreferences","advertising","performance","functional","other","enableFilters","analyticsOptIn","showUpdateNotifications","queries","appPreferences","didSetCookiePreferences","recordSaveUserPreferences","rootDomainForURL","setDisabledIcon","isDarkTheme","isDark","browserAction","setIcon","setIfDisabledIcon","getIconPath","iconPath","themeName","showNotification","lastOpened","when","timeDiffInMs","recordSubscriptionTabShown","isExpiredSubscriptionVerificationPopup","initDomListener","getDocument","documentHtml","outerHTML","getTabId","setup","notifyContentScriptStarted","currentURL","currentExecutionResults","checkAutoRefresh","notifyTabFinished","getEligibility","entitlementResult","isVerifiedSubscriber","showSubscriptionVerificationNotification","startProcess","hostnameForURL","isBlockedResults","runStatus","notifyNoEntitlement","startContentScript","v1","require","exports","bth","_nodeId","_clockseq","bytesToUuid","_lastMSecs","_lastNSecs","clockseq","seedBytes","msecs","nsecs","tl","tmh","globalThis","subtype","C","C_lib","lib","Base","extend","overrides","mixIn","$super","propertyName","encoder","Hex","thisWords","thatWords","thisSigBytes","thatSigBytes","thatByte","C_enc","enc","hexStrLength","Latin1","latin1Chars","latin1Str","latin1StrLength","Utf8","utf8Str","unescape","BufferedBlockAlgorithm","_data","_nDataBytes","_append","_process","doFlush","processedWords","dataWords","dataSigBytes","blockSize","nBlocksReady","nWordsReady","_minBufferSize","nBytesReady","_doProcessBlock","C_algo","Hasher","cfg","_doReset","messageUpdate","finalize","_doFinalize","_createHelper","hasher","_createHmacHelper","HMAC","algo","factory","parseLoop","base64Str","base64StrLength","reverseMap","bitsCombined","_map","base64Chars","triplet","paddingChar","_reverseMap","paddingIndex","undef","_hasher","hasherBlockSize","hasherBlockSizeBytes","oKey","_oKey","iKey","_iKey","oKeyWords","iKeyWords","innerHash","superInit","subInit","typedArray","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Float32Array","Float64Array","byteOffset","typedArrayByteLength","H","K","isPrime","sqrtN","sqrt","factor","getFractionalBits","nPrime","W","_hash","M","gamma0x","gamma0","gamma1x","gamma1","maj","sigma0","t1","nBitsTotal","nBitsLeft","msSubtleCryptoMethods","quacksLikeAnMsWindow","SHA_256_HASH","SHA_256_HMAC_ALGO","EMPTY_DATA_SHA_256","supportsWebCrypto","locateWindow","isMsWindow","encoding","keyOperation","toArrayBufferView","getKeyPromise","keyData","toHash","isEmptyData","BYTES_PER_ELEMENT","convertToBuffer","INIT","bytesHashed","finished","MAX_HASHABLE_LENGTH","BLOCK_SIZE","hashBuffer","bitsHashed","bufferView","undecoratedLength","setUint32","DIGEST_LENGTH","state0","state1","state2","state3","state4","state5","state6","state7","KEY","t2","RawSha256","outer","inner","bufferHash","bufferFromSecret","surrogatePair","decoded","byte","nextByte","byteValue","subtleCryptoMethods","supportsSecureRandom","supportsSubtleCrypto","additionalData","tagLength","numToUint8","uint32ArrayFrom","num","a_lookUpTable","return_array","fallbackWindow","settle","buildURL","buildFullPath","parseHeaders","isURLSameOrigin","createError","requestData","requestHeaders","isFormData","XMLHttpRequest","auth","btoa","fullPath","baseURL","responseHeaders","getAllResponseHeaders","responseText","statusText","paramsSerializer","onreadystatechange","responseURL","ontimeout","timeoutErrorMessage","transitional","clarifyTimeoutError","isStandardBrowserEnv","xsrfValue","xsrfCookieName","xsrfHeaderName","setRequestHeader","isUndefined","onDownloadProgress","onUploadProgress","upload","abort","Axios","mergeConfig","axios","instanceConfig","Cancel","CancelToken","spread","isAxiosError","__CANCEL__","executor","resolvePromise","throwIfRequested","InterceptorManager","dispatchRequest","validator","validators","interceptors","assertOptions","silentJSONParsing","boolean","forcedJSONParsing","requestInterceptorChain","synchronousRequestInterceptors","interceptor","runWhen","synchronous","responseInterceptorChain","chain","newConfig","onFulfilled","onRejected","getUri","eject","isAbsoluteURL","combineURLs","requestedURL","enhanceError","transformData","throwIfCancellationRequested","transformRequest","merge","common","adapter","transformResponse","fileName","lineNumber","columnNumber","config1","config2","valueFromConfig2Keys","mergeDeepPropertiesKeys","defaultToConfig2Keys","directMergeKeys","getMergedValue","isPlainObject","mergeDeepProperties","axiosKeys","otherKeys","validateStatus","fns","normalizeHeaderName","DEFAULT_CONTENT_TYPE","setContentTypeIfUnset","getDefaultAdapter","isArrayBuffer","isBuffer","isStream","isFile","isBlob","isArrayBufferView","isURLSearchParams","isObject","parser","isString","stringifySafely","strictJSONParsing","maxContentLength","maxBodyLength","serializedParams","isDate","hashmarkIndex","relativeURL","write","isNumber","toGMTString","originURL","msie","urlParsingNode","resolveURL","requestURL","normalizedName","ignoreDuplicateOf","pkg","thing","deprecatedWarnings","currentVerArr","isOlderVersion","thanVersion","pkgVersionArr","destVer","isDeprecated","formatMessage","desc","schema","allowUnknown","isFunction","pipe","URLSearchParams","assignValue","stripBOM","content","arraybuffer","encoded1","encoded2","encoded3","encoded4","lens","getLens","validLen","placeHoldersLen","toByteArray","Arr","_byteLength","curByte","revLookup","fromByteArray","uint8","extraBytes","maxChunkLength","len2","encodeChunk","__esModule","getFirstMatch","getSecondMatch","matchAndReturnConst","getWindowsVersionName","getMacOSVersionName","getAndroidVersionName","getVersionPrecision","compareVersions","getBrowserAlias","BROWSER_ALIASES_MAP","getBrowserTypeByAlias","BROWSER_MAP","ENGINE_MAP","OS_MAP","PLATFORMS_MAP","Bada","BlackBerry","Chrome","Chromium","Electron","Epiphany","Firefox","Focus","Generic","Googlebot","Maxthon","Opera","PhantomJS","Puffin","QupZilla","QQ","QQLite","Safari","Sailfish","SeaMonkey","Sleipnir","Swing","Tizen","Vivaldi","WeChat","Roku","amazon_silk","android","bada","blackberry","chromium","electron","epiphany","firefox","focus","generic","googlebot","google_search","ie","k_meleon","maxthon","edge","mz","naver","opera","opera_coast","phantomjs","puffin","qupzilla","qq","qqlite","safari","sailfish","samsung_internet","seamonkey","sleipnir","swing","tizen","uc","vivaldi","webos","wechat","yandex","tablet","mobile","desktop","tv","WindowsPhone","Windows","MacOS","iOS","Android","WebOS","Linux","ChromeOS","PlayStation4","EdgeHTML","Blink","Trident","Presto","Gecko","WebKit","getParser","_ua","parsedResult","getUA","parseBrowser","describe","getBrowser","getBrowserName","getBrowserVersion","getOS","parseOS","getOSName","getOSVersion","getPlatform","parsePlatform","getPlatformType","getEngine","engine","parseEngine","getEngineName","satisfies","isOS","isPlatform","compareVersion","isEngine","is","versionName","ieee754","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","RangeError","encodingOrOffset","allocUnsafe","fromArrayLike","fromArrayBuffer","isEncoding","actual","assertSize","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","arrayIndexOf","indexSize","arrLength","valLength","readUInt16BE","foundIndex","hexWrite","strLen","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","decodeCodePointsArray","foo","subarray","typedArraySupport","poolSize","_augment","species","alloc","fill","allocUnsafeSlow","_isBuffer","compare","swap16","swap32","swap64","thisStart","thisEnd","thisCopy","targetCopy","_arr","checkOffset","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","INVALID_BASE64_RE","Infinity","leadSurrogate","stringtrim","base64clean","dst","pairs","pairSplitRegExp","dec","eq_idx","tryDecode","rcache","m_w","m_z","mask","_r","bits1","bits2","isLE","mLen","eLen","eMax","eBias","nBits","NaN","rt","LN2","define","OldCookies","noConflict","converter","stringifiedAttributes","jar","getJSON","withConverter","propIsEnumerable","propertyIsEnumerable","toObject","test1","getOwnPropertyNames","test2","test3","letter","shouldUseNative","to","PahoMQTT","MESSAGE_TYPE","errorStr","validKey","INVALID_TYPE","OK","CONNECT_TIMEOUT","SUBSCRIBE_TIMEOUT","UNSUBSCRIBE_TIMEOUT","PING_TIMEOUT","INTERNAL_ERROR","CONNACK_RETURNCODE","SOCKET_ERROR","SOCKET_CLOSE","MALFORMED_UTF","UNSUPPORTED","INVALID_STATE","INVALID_ARGUMENT","UNSUPPORTED_OPERATION","INVALID_STORED_DATA","INVALID_MQTT_MESSAGE_TYPE","MALFORMED_UNICODE","BUFFER_FULL","CONNACK_RC","substitutions","part1","part2","MqttProtoIdentifierv3","MqttProtoIdentifierv4","WireMessage","decodeMessage","digit","startingPos","first","messageInfo","remLength","multiplier","endPos","wireMessage","sessionPresent","returnCode","qos","readUint16","topicName","parseUTF8","messageIdentifier","retained","duplicate","payloadMessage","writeUint16","writeString","utf8Length","stringToUTF8","UTF8Length","lowCharCode","utf16","byte1","byte2","byte3","byte4","willMessagePayloadBytes","topicStrLength","destinationNameLength","willMessage","payloadBytes","userName","requestedQos","mbi","numBytes","encodeMBI","byteStream","connectFlags","cleanSession","keepAliveInterval","Pinger","_keepAliveInterval","isReset","pingReq","doTimeout","pinger","doPing","_trace","socket","_disconnected","Timeout","timeoutSeconds","ClientImpl","_wsuri","_localKey","_msg_queue","_buffered_msg_queue","_sentMessages","_receivedMessages","_notify_msg_sent","_message_identifier","_sequence","restore","connected","maxMessageIdentifier","connectOptions","hostIndex","onConnected","onMessageDelivered","traceFunction","_connectTimeout","sendPinger","receivePinger","_reconnectInterval","_reconnecting","_reconnectTimeout","disconnectedPublishing","disconnectedBufferSize","receiveBuffer","_traceBuffer","_MAX_TRACE_ENTRIES","connectOptionsMasked","_traceMask","uris","_doConnect","subscribeOptions","grantedQos","invocationContext","timeOut","_requires_ack","_schedule_message","unsubscribeOptions","sequence","getTraceLog","startTrace","stopTrace","wsurl","uriParts","binaryType","_on_socket_open","_on_socket_message","_on_socket_error","_on_socket_close","_process_queue","storedMessage","pubRecReceived","hex","messageBytes","payloadHex","_socket_send","messageCount","_deframeMessages","_handleMessage","newData","errorStack","sentMessage","receivedMessage","sequencedMessages","msgId","pubRelMessage","reconnected","_connected","_receivePublish","_receiveMessage","pubCompMessage","wireMessageMasked","pubAckMessage","pubRecMessage","reconnect","_reconnect","errorText","mqttVersionExplicit","severity","traceObject","masked","traceObjectMasked","newPayload","newDestinationName","newQos","newRetained","newTopic","newDuplicate","ipv6AddSBracket","clientIdLength","newOnConnected","newDisconnectedPublishing","newDisconnectedBufferSize","newOnConnectionLost","newOnMessageDelivered","newOnMessageArrived","trace","hosts","ports","stringPayload","usingURIs","ipv6","qs","eq","maxKeys","kstr","vstr","stringifyPrimitive","ks","Fragment","StrictMode","Profiler","Suspense","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","refs","updater","D","E","isReactComponent","setState","forceUpdate","isPureReactComponent","G","I","ref","__self","__source","J","defaultProps","$$typeof","_owner","L","O","Q","_status","_result","R","S","T","ReactCurrentDispatcher","ReactCurrentBatchConfig","transition","ReactCurrentOwner","IsSomeRendererActing","Children","toArray","only","Component","PureComponent","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","cloneElement","createContext","_calculateChangedBits","_currentValue","_currentValue2","_threadCount","Consumer","_context","createFactory","createRef","forwardRef","render","isValidElement","lazy","_payload","_init","memo","useCallback","useContext","useDebugValue","useEffect","useImperativeHandle","useLayoutEffect","useMemo","useReducer","useRef","useState","allRules","fromJson","extractHostname","getDomain","getPublicSuffix","getSubdomain","isIp","tldExists","validHosts","_extractHostname","_step","publicSuffix","fromUserSettings","hasPrefixRE","trimTrailingDots","needsTrimming","checkTrimmingNeeded","needsLowerCase","checkLowerCaseNeeded","shareSameDomainSuffix","vhost","publicSuffixIndex","lastDotBeforeSuffixIndex","extractDomainWithSuffix","lastDotIndex","hasColon","isProbablyIpv6","numberOfDots","isProbablyIpv4","isDigit","isAlpha","firstCharCode","lastCharCode","extractTldFromHost","hasTld","candidate","suffixLookup","minIndex","insertInTrie","trie","nextNode","$","lookupInTrie","SuffixTrie","exceptions","exceptionIndex","hostTld","__rest","__decorate","decorators","decorate","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","__createBinding","k2","__exportStar","__values","__spread","__spreadArrays","il","jl","__await","__asyncGenerator","fulfill","__asyncDelegator","__asyncValues","__makeTemplateObject","cooked","__importStar","__importDefault","__classPrivateFieldGet","receiver","privateMap","__classPrivateFieldSet","FUNC_TYPE","UNDEF_TYPE","OBJ_TYPE","STR_TYPE","MODEL","TYPE","VENDOR","VERSION","ARCHITECTURE","CONSOLE","MOBILE","TABLET","SMARTTV","WEARABLE","EMBEDDED","util","regexes","mergedRegexes","str1","str2","lowerize","major","mapper","rgx","ua","arrays","maps","oldSafari","oldEdge","windows","cpu","_rgxmap","_browser","getCPU","_cpu","architecture","_device","_engine","_os","BROWSER","MAJOR","CPU","DEVICE","ENGINE","OS","jQuery","Zepto","uastring","const","onload","freeGlobal","punycode","maxInt","base","regexPunycode","regexNonASCII","regexSeparators","stringFromCharCode","mapDomain","ucs2decode","extra","ucs2encode","digitToBasic","flag","adapt","delta","numPoints","firstTime","baseMinusTMin","basic","oldi","baseMinusT","inputLength","bias","handledCPCount","basicLength","currentValue","handledCPCountPlusOne","qMinusT","Url","urlParse","relative","resolveObject","protocolPattern","portPattern","simplePathPattern","unwise","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","unsafeProtocol","hostlessProtocol","slashedProtocol","slashesDenoteHost","queryIndex","splitter","uSplit","simplePath","lowerProto","atSign","hostEnd","hec","parseHost","ipv6Hostname","hostparts","newpart","validParts","notHost","bit","toASCII","ae","esc","qm","rel","tkeys","tk","tkey","rkeys","rk","rkey","relPath","isSourceAbs","isRelAbs","mustEndAbs","removeAllDots","srcPath","psychotic","isNullOrUndefined","authInHost","isNull","last","up","isAbsolute","Observable","hasSymbols","getSymbol","SymbolIterator","SymbolObservable","SymbolSpecies","getMethod","getSpecies","isObservable","hostReportError","enqueue","cleanupSubscription","cleanup","_cleanup","closeSubscription","_observer","_queue","_state","notifySubscription","onNotify","flushSubscription","Subscription","subscriber","subscriptionObserver","SubscriptionObserver","_subscription","_subscriber","hasSeed","hasValue","seed","sources","startNext","completeIfDone","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_item","return","symbol","_regeneratorRuntime","Generator","Context","makeInvokeMethod","tryCatch","GeneratorFunction","GeneratorFunctionPrototype","defineIteratorMethods","_invoke","AsyncIterator","invoke","callInvokeWithMethodAndArg","maybeInvokeDelegate","_sent","dispatchException","abrupt","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","displayName","isGeneratorFunction","mark","awrap","stop","rval","delegateYield","regeneratorRuntime","accidentalStrictMode","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","definition","nmd"],"sourceRoot":""}